{"version":3,"file":"static/js/580.b74f88c5.js","mappings":"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","sources":["webpack://wasm-boids/./src/wasm/build/wasm_boids.js","webpack://wasm-boids/webpack/bootstrap","webpack://wasm-boids/webpack/runtime/get javascript chunk filename","webpack://wasm-boids/webpack/runtime/hasOwnProperty shorthand","webpack://wasm-boids/webpack/runtime/publicPath","webpack://wasm-boids/webpack/runtime/importScripts chunk loading","webpack://wasm-boids/webpack/startup"],"sourcesContent":["var createBoidsModule = (() => {\r\n  \r\n  return (\r\nasync function(moduleArg = {}) {\r\n  var moduleRtn;\r\n\r\n// include: shell.js\r\n// The Module object: Our interface to the outside world. We import\r\n// and export values on it. There are various ways Module can be used:\r\n// 1. Not defined. We create it here\r\n// 2. A function parameter, function(moduleArg) => Promise<Module>\r\n// 3. pre-run appended it, var Module = {}; ..generated code..\r\n// 4. External script tag defines var Module.\r\n// We need to check if Module already exists (e.g. case 3 above).\r\n// Substitution will be replaced with actual code on later stage of the build,\r\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\r\n// Note that if you want to run closure, and also to use Module\r\n// after the generated code, you will need to define   var Module = {};\r\n// before the code. Then that object will be used in the code, and you\r\n// can continue to use Module afterwards as well.\r\nvar Module = moduleArg;\r\n\r\n// Set up the promise that indicates the Module is initialized\r\nvar readyPromiseResolve, readyPromiseReject;\r\n\r\nvar readyPromise = new Promise((resolve, reject) => {\r\n  readyPromiseResolve = resolve;\r\n  readyPromiseReject = reject;\r\n});\r\n\r\n// Determine the runtime environment we are in. You can customize this by\r\n// setting the ENVIRONMENT setting at compile time (see settings.js).\r\n// Attempt to auto-detect the environment\r\nvar ENVIRONMENT_IS_WEB = typeof window == \"object\";\r\n\r\nvar ENVIRONMENT_IS_WORKER = typeof WorkerGlobalScope != \"undefined\";\r\n\r\n// N.b. Electron.js environment is simultaneously a NODE-environment, but\r\n// also a web environment.\r\nvar ENVIRONMENT_IS_NODE = typeof process == \"object\" && typeof process.versions == \"object\" && typeof process.versions.node == \"string\" && process.type != \"renderer\";\r\n\r\nvar ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\r\n\r\n// Three configurations we can be running in:\r\n// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)\r\n// 2) We could be the application main() thread proxied to worker. (with Emscripten -sPROXY_TO_WORKER) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)\r\n// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)\r\n// The way we signal to a worker that it is hosting a pthread is to construct\r\n// it with a specific name.\r\nvar ENVIRONMENT_IS_PTHREAD = ENVIRONMENT_IS_WORKER && self.name?.startsWith(\"em-pthread\");\r\n\r\nif (ENVIRONMENT_IS_PTHREAD) {\r\n  assert(!globalThis.moduleLoaded, \"module should only be loaded once on each pthread worker\");\r\n  globalThis.moduleLoaded = true;\r\n}\r\n\r\n// --pre-jses are emitted after the Module integration code, so that they can\r\n// refer to Module (if they choose; they can also define Module)\r\nvar arguments_ = [];\r\n\r\nvar thisProgram = \"./this.program\";\r\n\r\nvar quit_ = (status, toThrow) => {\r\n  throw toThrow;\r\n};\r\n\r\nvar _scriptName = import.meta.url;\r\n\r\n// `/` should be present at the end if `scriptDirectory` is not empty\r\nvar scriptDirectory = \"\";\r\n\r\nfunction locateFile(path) {\r\n  if (Module[\"locateFile\"]) {\r\n    return Module[\"locateFile\"](path, scriptDirectory);\r\n  }\r\n  return scriptDirectory + path;\r\n}\r\n\r\n// Hooks that are implemented differently in different runtime environments.\r\nvar readAsync, readBinary;\r\n\r\nif (ENVIRONMENT_IS_SHELL) {\r\n  if ((typeof process == \"object\" && typeof require === \"function\") || typeof window == \"object\" || typeof WorkerGlobalScope != \"undefined\") throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");\r\n} else // Note that this includes Node.js workers when relevant (pthreads is enabled).\r\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\r\n// ENVIRONMENT_IS_NODE.\r\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\r\n  try {\r\n    scriptDirectory = new URL(\".\", _scriptName).href;\r\n  } catch {}\r\n  if (!(typeof window == \"object\" || typeof WorkerGlobalScope != \"undefined\")) throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");\r\n  {\r\n    // include: web_or_worker_shell_read.js\r\n    if (ENVIRONMENT_IS_WORKER) {\r\n      readBinary = url => {\r\n        var xhr = new XMLHttpRequest;\r\n        xhr.open(\"GET\", url, false);\r\n        xhr.responseType = \"arraybuffer\";\r\n        xhr.send(null);\r\n        return new Uint8Array(/** @type{!ArrayBuffer} */ (xhr.response));\r\n      };\r\n    }\r\n    readAsync = async url => {\r\n      assert(!isFileURI(url), \"readAsync does not work with file:// URLs\");\r\n      var response = await fetch(url, {\r\n        credentials: \"same-origin\"\r\n      });\r\n      if (response.ok) {\r\n        return response.arrayBuffer();\r\n      }\r\n      throw new Error(response.status + \" : \" + response.url);\r\n    };\r\n  }\r\n} else {\r\n  throw new Error(\"environment detection error\");\r\n}\r\n\r\nvar out = console.log.bind(console);\r\n\r\nvar err = console.error.bind(console);\r\n\r\nvar IDBFS = \"IDBFS is no longer included by default; build with -lidbfs.js\";\r\n\r\nvar PROXYFS = \"PROXYFS is no longer included by default; build with -lproxyfs.js\";\r\n\r\nvar WORKERFS = \"WORKERFS is no longer included by default; build with -lworkerfs.js\";\r\n\r\nvar FETCHFS = \"FETCHFS is no longer included by default; build with -lfetchfs.js\";\r\n\r\nvar ICASEFS = \"ICASEFS is no longer included by default; build with -licasefs.js\";\r\n\r\nvar JSFILEFS = \"JSFILEFS is no longer included by default; build with -ljsfilefs.js\";\r\n\r\nvar OPFS = \"OPFS is no longer included by default; build with -lopfs.js\";\r\n\r\nvar NODEFS = \"NODEFS is no longer included by default; build with -lnodefs.js\";\r\n\r\n// perform assertions in shell.js after we set up out() and err(), as otherwise\r\n// if an assertion fails it cannot print the message\r\nassert(ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER || ENVIRONMENT_IS_NODE, \"Pthreads do not work in this environment yet (need Web Workers, or an alternative to them)\");\r\n\r\nassert(!ENVIRONMENT_IS_NODE, \"node environment detected but not enabled at build time.  Add `node` to `-sENVIRONMENT` to enable.\");\r\n\r\nassert(!ENVIRONMENT_IS_SHELL, \"shell environment detected but not enabled at build time.  Add `shell` to `-sENVIRONMENT` to enable.\");\r\n\r\n// end include: shell.js\r\n// include: preamble.js\r\n// === Preamble library stuff ===\r\n// Documentation for the public APIs defined in this file must be updated in:\r\n//    site/source/docs/api_reference/preamble.js.rst\r\n// A prebuilt local version of the documentation is available at:\r\n//    site/build/text/docs/api_reference/preamble.js.txt\r\n// You can also build docs locally as HTML or other formats in site/\r\n// An online HTML version (which may be of a different version of Emscripten)\r\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\r\nvar wasmBinary;\r\n\r\nif (typeof WebAssembly != \"object\") {\r\n  err(\"no native wasm support detected\");\r\n}\r\n\r\n// Wasm globals\r\nvar wasmMemory;\r\n\r\n// For sending to workers.\r\nvar wasmModule;\r\n\r\n//========================================\r\n// Runtime essentials\r\n//========================================\r\n// whether we are quitting the application. no code should run after this.\r\n// set in exit() and abort()\r\nvar ABORT = false;\r\n\r\n// set by exit() and abort().  Passed to 'onExit' handler.\r\n// NOTE: This is also used as the process return code code in shell environments\r\n// but only when noExitRuntime is false.\r\nvar EXITSTATUS;\r\n\r\n// In STRICT mode, we only define assert() when ASSERTIONS is set.  i.e. we\r\n// don't define it at all in release modes.  This matches the behaviour of\r\n// MINIMAL_RUNTIME.\r\n// TODO(sbc): Make this the default even without STRICT enabled.\r\n/** @type {function(*, string=)} */ function assert(condition, text) {\r\n  if (!condition) {\r\n    abort(\"Assertion failed\" + (text ? \": \" + text : \"\"));\r\n  }\r\n}\r\n\r\n// We used to include malloc/free by default in the past. Show a helpful error in\r\n// builds with assertions.\r\n// Memory management\r\nvar HEAP, /** @type {!Int8Array} */ HEAP8, /** @type {!Uint8Array} */ HEAPU8, /** @type {!Int16Array} */ HEAP16, /** @type {!Uint16Array} */ HEAPU16, /** @type {!Int32Array} */ HEAP32, /** @type {!Uint32Array} */ HEAPU32, /** @type {!Float32Array} */ HEAPF32, /* BigInt64Array type is not correctly defined in closure\r\n/** not-@type {!BigInt64Array} */ HEAP64, /* BigUint64Array type is not correctly defined in closure\r\n/** not-t@type {!BigUint64Array} */ HEAPU64, /** @type {!Float64Array} */ HEAPF64;\r\n\r\nvar runtimeInitialized = false;\r\n\r\n/**\r\n * Indicates whether filename is delivered via file protocol (as opposed to http/https)\r\n * @noinline\r\n */ var isFileURI = filename => filename.startsWith(\"file://\");\r\n\r\n// include: runtime_shared.js\r\n// include: runtime_stack_check.js\r\n// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\r\nfunction writeStackCookie() {\r\n  var max = _emscripten_stack_get_end();\r\n  assert((max & 3) == 0);\r\n  // If the stack ends at address zero we write our cookies 4 bytes into the\r\n  // stack.  This prevents interference with SAFE_HEAP and ASAN which also\r\n  // monitor writes to address zero.\r\n  if (max == 0) {\r\n    max += 4;\r\n  }\r\n  // The stack grow downwards towards _emscripten_stack_get_end.\r\n  // We write cookies to the final two words in the stack and detect if they are\r\n  // ever overwritten.\r\n  GROWABLE_HEAP_U32()[((max) >> 2)] = 34821223;\r\n  GROWABLE_HEAP_U32()[(((max) + (4)) >> 2)] = 2310721022;\r\n  // Also test the global address 0 for integrity.\r\n  GROWABLE_HEAP_U32()[((0) >> 2)] = 1668509029;\r\n}\r\n\r\nfunction checkStackCookie() {\r\n  if (ABORT) return;\r\n  var max = _emscripten_stack_get_end();\r\n  // See writeStackCookie().\r\n  if (max == 0) {\r\n    max += 4;\r\n  }\r\n  var cookie1 = GROWABLE_HEAP_U32()[((max) >> 2)];\r\n  var cookie2 = GROWABLE_HEAP_U32()[(((max) + (4)) >> 2)];\r\n  if (cookie1 != 34821223 || cookie2 != 2310721022) {\r\n    abort(`Stack overflow! Stack cookie has been overwritten at ${ptrToString(max)}, expected hex dwords 0x89BACDFE and 0x2135467, but received ${ptrToString(cookie2)} ${ptrToString(cookie1)}`);\r\n  }\r\n  // Also test the global address 0 for integrity.\r\n  if (GROWABLE_HEAP_U32()[((0) >> 2)] != 1668509029) {\r\n    abort(\"Runtime error: The application has corrupted its heap memory area (address zero)!\");\r\n  }\r\n}\r\n\r\n// end include: runtime_stack_check.js\r\n// include: runtime_exceptions.js\r\n// Base Emscripten EH error class\r\nclass EmscriptenEH extends Error {}\r\n\r\nclass EmscriptenSjLj extends EmscriptenEH {}\r\n\r\nclass CppException extends EmscriptenEH {\r\n  constructor(excPtr) {\r\n    super(excPtr);\r\n    this.excPtr = excPtr;\r\n    const excInfo = getExceptionMessage(excPtr);\r\n    this.name = excInfo[0];\r\n    this.message = excInfo[1];\r\n  }\r\n}\r\n\r\n// end include: runtime_exceptions.js\r\n// include: runtime_debug.js\r\nvar runtimeDebug = true;\r\n\r\n// Switch to false at runtime to disable logging at the right times\r\n// Used by XXXXX_DEBUG settings to output debug messages.\r\nfunction dbg(...args) {\r\n  if (!runtimeDebug && typeof runtimeDebug != \"undefined\") return;\r\n  // TODO(sbc): Make this configurable somehow.  Its not always convenient for\r\n  // logging to show up as warnings.\r\n  console.warn(...args);\r\n}\r\n\r\n// Endianness check\r\n(() => {\r\n  var h16 = new Int16Array(1);\r\n  var h8 = new Int8Array(h16.buffer);\r\n  h16[0] = 25459;\r\n  if (h8[0] !== 115 || h8[1] !== 99) throw \"Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)\";\r\n})();\r\n\r\nfunction consumedModuleProp(prop) {\r\n  if (!Object.getOwnPropertyDescriptor(Module, prop)) {\r\n    Object.defineProperty(Module, prop, {\r\n      configurable: true,\r\n      set() {\r\n        abort(`Attempt to set \\`Module.${prop}\\` after it has already been processed.  This can happen, for example, when code is injected via '--post-js' rather than '--pre-js'`);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction ignoredModuleProp(prop) {\r\n  if (Object.getOwnPropertyDescriptor(Module, prop)) {\r\n    abort(`\\`Module.${prop}\\` was supplied but \\`${prop}\\` not included in INCOMING_MODULE_JS_API`);\r\n  }\r\n}\r\n\r\n// forcing the filesystem exports a few things by default\r\nfunction isExportedByForceFilesystem(name) {\r\n  return name === \"FS_createPath\" || name === \"FS_createDataFile\" || name === \"FS_createPreloadedFile\" || name === \"FS_unlink\" || name === \"addRunDependency\" || // The old FS has some functionality that WasmFS lacks.\r\n  name === \"FS_createLazyFile\" || name === \"FS_createDevice\" || name === \"removeRunDependency\";\r\n}\r\n\r\n/**\r\n * Intercept access to a global symbol.  This enables us to give informative\r\n * warnings/errors when folks attempt to use symbols they did not include in\r\n * their build, or no symbols that no longer exist.\r\n */ function hookGlobalSymbolAccess(sym, func) {\r\n  if (typeof globalThis != \"undefined\" && !Object.getOwnPropertyDescriptor(globalThis, sym)) {\r\n    Object.defineProperty(globalThis, sym, {\r\n      configurable: true,\r\n      get() {\r\n        func();\r\n        return undefined;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction missingGlobal(sym, msg) {\r\n  hookGlobalSymbolAccess(sym, () => {\r\n    warnOnce(`\\`${sym}\\` is not longer defined by emscripten. ${msg}`);\r\n  });\r\n}\r\n\r\nmissingGlobal(\"buffer\", \"Please use HEAP8.buffer or wasmMemory.buffer\");\r\n\r\nmissingGlobal(\"asm\", \"Please use wasmExports instead\");\r\n\r\nfunction missingLibrarySymbol(sym) {\r\n  hookGlobalSymbolAccess(sym, () => {\r\n    // Can't `abort()` here because it would break code that does runtime\r\n    // checks.  e.g. `if (typeof SDL === 'undefined')`.\r\n    var msg = `\\`${sym}\\` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line`;\r\n    // DEFAULT_LIBRARY_FUNCS_TO_INCLUDE requires the name as it appears in\r\n    // library.js, which means $name for a JS name with no prefix, or name\r\n    // for a JS name like _name.\r\n    var librarySymbol = sym;\r\n    if (!librarySymbol.startsWith(\"_\")) {\r\n      librarySymbol = \"$\" + sym;\r\n    }\r\n    msg += ` (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE='${librarySymbol}')`;\r\n    if (isExportedByForceFilesystem(sym)) {\r\n      msg += \". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you\";\r\n    }\r\n    warnOnce(msg);\r\n  });\r\n  // Any symbol that is not included from the JS library is also (by definition)\r\n  // not exported on the Module object.\r\n  unexportedRuntimeSymbol(sym);\r\n}\r\n\r\nfunction unexportedRuntimeSymbol(sym) {\r\n  if (ENVIRONMENT_IS_PTHREAD) {\r\n    return;\r\n  }\r\n  if (!Object.getOwnPropertyDescriptor(Module, sym)) {\r\n    Object.defineProperty(Module, sym, {\r\n      configurable: true,\r\n      get() {\r\n        var msg = `'${sym}' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the Emscripten FAQ)`;\r\n        if (isExportedByForceFilesystem(sym)) {\r\n          msg += \". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you\";\r\n        }\r\n        abort(msg);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Override `err`/`out`/`dbg` to report thread / worker information\r\n */ function initWorkerLogging() {\r\n  function getLogPrefix() {\r\n    var t = 0;\r\n    if (runtimeInitialized && typeof _pthread_self != \"undefined\") {\r\n      t = _pthread_self();\r\n    }\r\n    return `w:${workerID},t:${ptrToString(t)}:`;\r\n  }\r\n  // Prefix all dbg() messages with the calling thread info.\r\n  var origDbg = dbg;\r\n  dbg = (...args) => origDbg(getLogPrefix(), ...args);\r\n}\r\n\r\ninitWorkerLogging();\r\n\r\n// end include: runtime_debug.js\r\n// include: memoryprofiler.js\r\n// end include: memoryprofiler.js\r\n// include: growableHeap.js\r\n// Support for growable heap + pthreads, where the buffer may change, so JS views\r\n// must be updated.\r\nfunction GROWABLE_HEAP_I8() {\r\n  if (wasmMemory.buffer != HEAP8.buffer) {\r\n    updateMemoryViews();\r\n  }\r\n  return HEAP8;\r\n}\r\n\r\nfunction GROWABLE_HEAP_U8() {\r\n  if (wasmMemory.buffer != HEAP8.buffer) {\r\n    updateMemoryViews();\r\n  }\r\n  return HEAPU8;\r\n}\r\n\r\nfunction GROWABLE_HEAP_I16() {\r\n  if (wasmMemory.buffer != HEAP8.buffer) {\r\n    updateMemoryViews();\r\n  }\r\n  return HEAP16;\r\n}\r\n\r\nfunction GROWABLE_HEAP_U16() {\r\n  if (wasmMemory.buffer != HEAP8.buffer) {\r\n    updateMemoryViews();\r\n  }\r\n  return HEAPU16;\r\n}\r\n\r\nfunction GROWABLE_HEAP_I32() {\r\n  if (wasmMemory.buffer != HEAP8.buffer) {\r\n    updateMemoryViews();\r\n  }\r\n  return HEAP32;\r\n}\r\n\r\nfunction GROWABLE_HEAP_U32() {\r\n  if (wasmMemory.buffer != HEAP8.buffer) {\r\n    updateMemoryViews();\r\n  }\r\n  return HEAPU32;\r\n}\r\n\r\nfunction GROWABLE_HEAP_F32() {\r\n  if (wasmMemory.buffer != HEAP8.buffer) {\r\n    updateMemoryViews();\r\n  }\r\n  return HEAPF32;\r\n}\r\n\r\nfunction GROWABLE_HEAP_F64() {\r\n  if (wasmMemory.buffer != HEAP8.buffer) {\r\n    updateMemoryViews();\r\n  }\r\n  return HEAPF64;\r\n}\r\n\r\n// end include: growableHeap.js\r\nvar wasmModuleReceived;\r\n\r\n// include: runtime_pthread.js\r\n// Pthread Web Worker handling code.\r\n// This code runs only on pthread web workers and handles pthread setup\r\n// and communication with the main thread via postMessage.\r\n// Unique ID of the current pthread worker (zero on non-pthread-workers\r\n// including the main thread).\r\nvar workerID = 0;\r\n\r\nif (ENVIRONMENT_IS_PTHREAD) {\r\n  // Thread-local guard variable for one-time init of the JS state\r\n  var initializedJS = false;\r\n  // Turn unhandled rejected promises into errors so that the main thread will be\r\n  // notified about them.\r\n  self.onunhandledrejection = e => {\r\n    throw e.reason || e;\r\n  };\r\n  function handleMessage(e) {\r\n    try {\r\n      var msgData = e[\"data\"];\r\n      //dbg('msgData: ' + Object.keys(msgData));\r\n      var cmd = msgData.cmd;\r\n      if (cmd === \"load\") {\r\n        // Preload command that is called once per worker to parse and load the Emscripten code.\r\n        workerID = msgData.workerID;\r\n        // Until we initialize the runtime, queue up any further incoming messages.\r\n        let messageQueue = [];\r\n        self.onmessage = e => messageQueue.push(e);\r\n        // And add a callback for when the runtime is initialized.\r\n        self.startWorker = instance => {\r\n          // Notify the main thread that this thread has loaded.\r\n          postMessage({\r\n            cmd: \"loaded\"\r\n          });\r\n          // Process any messages that were queued before the thread was ready.\r\n          for (let msg of messageQueue) {\r\n            handleMessage(msg);\r\n          }\r\n          // Restore the real message handler.\r\n          self.onmessage = handleMessage;\r\n        };\r\n        // Use `const` here to ensure that the variable is scoped only to\r\n        // that iteration, allowing safe reference from a closure.\r\n        for (const handler of msgData.handlers) {\r\n          // The the main module has a handler for a certain even, but no\r\n          // handler exists on the pthread worker, then proxy that handler\r\n          // back to the main thread.\r\n          if (!Module[handler] || Module[handler].proxy) {\r\n            Module[handler] = (...args) => {\r\n              postMessage({\r\n                cmd: \"callHandler\",\r\n                handler,\r\n                args\r\n              });\r\n            };\r\n            // Rebind the out / err handlers if needed\r\n            if (handler == \"print\") out = Module[handler];\r\n            if (handler == \"printErr\") err = Module[handler];\r\n          }\r\n        }\r\n        wasmMemory = msgData.wasmMemory;\r\n        updateMemoryViews();\r\n        wasmModuleReceived(msgData.wasmModule);\r\n      } else if (cmd === \"run\") {\r\n        assert(msgData.pthread_ptr);\r\n        // Call inside JS module to set up the stack frame for this pthread in JS module scope.\r\n        // This needs to be the first thing that we do, as we cannot call to any C/C++ functions\r\n        // until the thread stack is initialized.\r\n        establishStackSpace(msgData.pthread_ptr);\r\n        // Pass the thread address to wasm to store it for fast access.\r\n        __emscripten_thread_init(msgData.pthread_ptr, /*is_main=*/ 0, /*is_runtime=*/ 0, /*can_block=*/ 1, 0, 0);\r\n        PThread.threadInitTLS();\r\n        // Await mailbox notifications with `Atomics.waitAsync` so we can start\r\n        // using the fast `Atomics.notify` notification path.\r\n        __emscripten_thread_mailbox_await(msgData.pthread_ptr);\r\n        if (!initializedJS) {\r\n          // Embind must initialize itself on all threads, as it generates support JS.\r\n          // We only do this once per worker since they get reused\r\n          __embind_initialize_bindings();\r\n          initializedJS = true;\r\n        }\r\n        try {\r\n          invokeEntryPoint(msgData.start_routine, msgData.arg);\r\n        } catch (ex) {\r\n          if (ex != \"unwind\") {\r\n            // The pthread \"crashed\".  Do not call `_emscripten_thread_exit` (which\r\n            // would make this thread joinable).  Instead, re-throw the exception\r\n            // and let the top level handler propagate it back to the main thread.\r\n            throw ex;\r\n          }\r\n        }\r\n      } else if (msgData.target === \"setimmediate\") {} else if (cmd === \"checkMailbox\") {\r\n        if (initializedJS) {\r\n          checkMailbox();\r\n        }\r\n      } else if (cmd) {\r\n        // The received message looks like something that should be handled by this message\r\n        // handler, (since there is a cmd field present), but is not one of the\r\n        // recognized commands:\r\n        err(`worker: received unknown command ${cmd}`);\r\n        err(msgData);\r\n      }\r\n    } catch (ex) {\r\n      err(`worker: onmessage() captured an uncaught exception: ${ex}`);\r\n      if (ex?.stack) err(ex.stack);\r\n      __emscripten_thread_crashed();\r\n      throw ex;\r\n    }\r\n  }\r\n  self.onmessage = handleMessage;\r\n}\r\n\r\n// ENVIRONMENT_IS_PTHREAD\r\n// end include: runtime_pthread.js\r\nfunction updateMemoryViews() {\r\n  var b = wasmMemory.buffer;\r\n  HEAP8 = new Int8Array(b);\r\n  HEAP16 = new Int16Array(b);\r\n  HEAPU8 = new Uint8Array(b);\r\n  HEAPU16 = new Uint16Array(b);\r\n  HEAP32 = new Int32Array(b);\r\n  HEAPU32 = new Uint32Array(b);\r\n  Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(b);\r\n  HEAPF64 = new Float64Array(b);\r\n  HEAP64 = new BigInt64Array(b);\r\n  HEAPU64 = new BigUint64Array(b);\r\n}\r\n\r\n// end include: runtime_shared.js\r\nassert(typeof Int32Array != \"undefined\" && typeof Float64Array !== \"undefined\" && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined, \"JS engine does not provide full typed array support\");\r\n\r\n// In non-standalone/normal mode, we create the memory here.\r\n// include: runtime_init_memory.js\r\n// Create the wasm memory. (Note: this only applies if IMPORTED_MEMORY is defined)\r\n// check for full engine support (use string 'subarray' to avoid closure compiler confusion)\r\nfunction initMemory() {\r\n  if ((ENVIRONMENT_IS_PTHREAD)) {\r\n    return;\r\n  }\r\n  {\r\n    var INITIAL_MEMORY = 16777216;\r\n    assert(INITIAL_MEMORY >= 2097152, \"INITIAL_MEMORY should be larger than STACK_SIZE, was \" + INITIAL_MEMORY + \"! (STACK_SIZE=\" + 2097152 + \")\");\r\n    /** @suppress {checkTypes} */ wasmMemory = new WebAssembly.Memory({\r\n      \"initial\": INITIAL_MEMORY / 65536,\r\n      // In theory we should not need to emit the maximum if we want \"unlimited\"\r\n      // or 4GB of memory, but VMs error on that atm, see\r\n      // https://github.com/emscripten-core/emscripten/issues/14130\r\n      // And in the pthreads case we definitely need to emit a maximum. So\r\n      // always emit one.\r\n      \"maximum\": 32768,\r\n      \"shared\": true\r\n    });\r\n  }\r\n  updateMemoryViews();\r\n}\r\n\r\n// end include: runtime_init_memory.js\r\nfunction preRun() {\r\n  assert(!ENVIRONMENT_IS_PTHREAD);\r\n  // PThreads reuse the runtime from the main thread.\r\n  // Begin ATPRERUNS hooks\r\n  callRuntimeCallbacks(onPreRuns);\r\n}\r\n\r\nfunction initRuntime() {\r\n  assert(!runtimeInitialized);\r\n  runtimeInitialized = true;\r\n  if (ENVIRONMENT_IS_PTHREAD) return startWorker(Module);\r\n  checkStackCookie();\r\n  // Begin ATINITS hooks\r\n  if (!Module[\"noFSInit\"] && !FS.initialized) FS.init();\r\n  TTY.init();\r\n  // End ATINITS hooks\r\n  wasmExports[\"__wasm_call_ctors\"]();\r\n  // Begin ATPOSTCTORS hooks\r\n  FS.ignorePermissions = false;\r\n}\r\n\r\nfunction preMain() {\r\n  checkStackCookie();\r\n}\r\n\r\nfunction postRun() {\r\n  checkStackCookie();\r\n  if ((ENVIRONMENT_IS_PTHREAD)) {\r\n    return;\r\n  }\r\n}\r\n\r\n// A counter of dependencies for calling run(). If we need to\r\n// do asynchronous work before running, increment this and\r\n// decrement it. Incrementing must happen in a place like\r\n// Module.preRun (used by emcc to add file preloading).\r\n// Note that you can add dependencies in preRun, even though\r\n// it happens right before run - run will be postponed until\r\n// the dependencies are met.\r\nvar runDependencies = 0;\r\n\r\nvar dependenciesFulfilled = null;\r\n\r\n// overridden to take different actions when all run dependencies are fulfilled\r\nvar runDependencyTracking = {};\r\n\r\nvar runDependencyWatcher = null;\r\n\r\nfunction getUniqueRunDependency(id) {\r\n  var orig = id;\r\n  while (1) {\r\n    if (!runDependencyTracking[id]) return id;\r\n    id = orig + Math.random();\r\n  }\r\n}\r\n\r\nfunction addRunDependency(id) {\r\n  runDependencies++;\r\n  if (id) {\r\n    assert(!runDependencyTracking[id]);\r\n    runDependencyTracking[id] = 1;\r\n    if (runDependencyWatcher === null && typeof setInterval != \"undefined\") {\r\n      // Check for missing dependencies every few seconds\r\n      runDependencyWatcher = setInterval(() => {\r\n        if (ABORT) {\r\n          clearInterval(runDependencyWatcher);\r\n          runDependencyWatcher = null;\r\n          return;\r\n        }\r\n        var shown = false;\r\n        for (var dep in runDependencyTracking) {\r\n          if (!shown) {\r\n            shown = true;\r\n            err(\"still waiting on run dependencies:\");\r\n          }\r\n          err(`dependency: ${dep}`);\r\n        }\r\n        if (shown) {\r\n          err(\"(end of list)\");\r\n        }\r\n      }, 1e4);\r\n    }\r\n  } else {\r\n    err(\"warning: run dependency added without ID\");\r\n  }\r\n}\r\n\r\nfunction removeRunDependency(id) {\r\n  runDependencies--;\r\n  if (id) {\r\n    assert(runDependencyTracking[id]);\r\n    delete runDependencyTracking[id];\r\n  } else {\r\n    err(\"warning: run dependency removed without ID\");\r\n  }\r\n  if (runDependencies == 0) {\r\n    if (runDependencyWatcher !== null) {\r\n      clearInterval(runDependencyWatcher);\r\n      runDependencyWatcher = null;\r\n    }\r\n    if (dependenciesFulfilled) {\r\n      var callback = dependenciesFulfilled;\r\n      dependenciesFulfilled = null;\r\n      callback();\r\n    }\r\n  }\r\n}\r\n\r\n/** @param {string|number=} what */ function abort(what) {\r\n  what = \"Aborted(\" + what + \")\";\r\n  // TODO(sbc): Should we remove printing and leave it up to whoever\r\n  // catches the exception?\r\n  err(what);\r\n  ABORT = true;\r\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\r\n  // exception, which means we'd run destructors on it. We need the error to\r\n  // simply make the program stop.\r\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\r\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\r\n  // a trap or not based on a hidden field within the object. So at the moment\r\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\r\n  // allows this in the wasm spec.\r\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\r\n  // definition for WebAssembly.RuntimeError claims it takes no arguments even\r\n  // though it can.\r\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\r\n  /** @suppress {checkTypes} */ var e = new WebAssembly.RuntimeError(what);\r\n  readyPromiseReject(e);\r\n  // Throw the error whether or not MODULARIZE is set because abort is used\r\n  // in code paths apart from instantiation where an exception is expected\r\n  // to be thrown when abort is called.\r\n  throw e;\r\n}\r\n\r\nfunction createExportWrapper(name, nargs) {\r\n  return (...args) => {\r\n    assert(runtimeInitialized, `native function \\`${name}\\` called before runtime initialization`);\r\n    var f = wasmExports[name];\r\n    assert(f, `exported native function \\`${name}\\` not found`);\r\n    // Only assert for too many arguments. Too few can be valid since the missing arguments will be zero filled.\r\n    assert(args.length <= nargs, `native function \\`${name}\\` called with ${args.length} args but expects ${nargs}`);\r\n    return f(...args);\r\n  };\r\n}\r\n\r\nvar wasmBinaryFile;\r\n\r\nfunction findWasmBinary() {\r\n  if (Module[\"locateFile\"]) {\r\n    return locateFile(\"wasm_boids.wasm\");\r\n  }\r\n  // Use bundler-friendly `new URL(..., import.meta.url)` pattern; works in browsers too.\r\n  return new URL(\"wasm_boids.wasm\", import.meta.url).href;\r\n}\r\n\r\nfunction getBinarySync(file) {\r\n  if (readBinary) {\r\n    return readBinary(file);\r\n  }\r\n  throw \"both async and sync fetching of the wasm failed\";\r\n}\r\n\r\nasync function getWasmBinary(binaryFile) {\r\n  // If we don't have the binary yet, load it asynchronously using readAsync.\r\n  if (!wasmBinary) {\r\n    // Fetch the binary using readAsync\r\n    try {\r\n      var response = await readAsync(binaryFile);\r\n      return new Uint8Array(response);\r\n    } catch {}\r\n  }\r\n  // Otherwise, getBinarySync should be able to get it synchronously\r\n  return getBinarySync(binaryFile);\r\n}\r\n\r\nasync function instantiateArrayBuffer(binaryFile, imports) {\r\n  try {\r\n    var binary = await getWasmBinary(binaryFile);\r\n    var instance = await WebAssembly.instantiate(binary, imports);\r\n    return instance;\r\n  } catch (reason) {\r\n    err(`failed to asynchronously prepare wasm: ${reason}`);\r\n    // Warn on some common problems.\r\n    if (isFileURI(wasmBinaryFile)) {\r\n      err(`warning: Loading from a file URI (${wasmBinaryFile}) is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing`);\r\n    }\r\n    abort(reason);\r\n  }\r\n}\r\n\r\nasync function instantiateAsync(binary, binaryFile, imports) {\r\n  if (!binary && typeof WebAssembly.instantiateStreaming == \"function\") {\r\n    try {\r\n      var response = fetch(binaryFile, {\r\n        credentials: \"same-origin\"\r\n      });\r\n      var instantiationResult = await WebAssembly.instantiateStreaming(response, imports);\r\n      return instantiationResult;\r\n    } catch (reason) {\r\n      // We expect the most common failure cause to be a bad MIME type for the binary,\r\n      // in which case falling back to ArrayBuffer instantiation should work.\r\n      err(`wasm streaming compile failed: ${reason}`);\r\n      err(\"falling back to ArrayBuffer instantiation\");\r\n    }\r\n  }\r\n  return instantiateArrayBuffer(binaryFile, imports);\r\n}\r\n\r\nfunction getWasmImports() {\r\n  assignWasmImports();\r\n  // prepare imports\r\n  return {\r\n    \"env\": wasmImports,\r\n    \"wasi_snapshot_preview1\": wasmImports\r\n  };\r\n}\r\n\r\n// Create the wasm instance.\r\n// Receives the wasm imports, returns the exports.\r\nasync function createWasm() {\r\n  // Load the wasm module and create an instance of using native support in the JS engine.\r\n  // handle a generated wasm instance, receiving its exports and\r\n  // performing other necessary setup\r\n  /** @param {WebAssembly.Module=} module*/ function receiveInstance(instance, module) {\r\n    wasmExports = instance.exports;\r\n    registerTLSInit(wasmExports[\"_emscripten_tls_init\"]);\r\n    wasmTable = wasmExports[\"__indirect_function_table\"];\r\n    assert(wasmTable, \"table not found in wasm exports\");\r\n    // We now have the Wasm module loaded up, keep a reference to the compiled module so we can post it to the workers.\r\n    wasmModule = module;\r\n    removeRunDependency(\"wasm-instantiate\");\r\n    return wasmExports;\r\n  }\r\n  // wait for the pthread pool (if any)\r\n  addRunDependency(\"wasm-instantiate\");\r\n  // Prefer streaming instantiation if available.\r\n  // Async compilation can be confusing when an error on the page overwrites Module\r\n  // (for example, if the order of elements is wrong, and the one defining Module is\r\n  // later), so we save Module and check it later.\r\n  var trueModule = Module;\r\n  function receiveInstantiationResult(result) {\r\n    // 'result' is a ResultObject object which has both the module and instance.\r\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\r\n    assert(Module === trueModule, \"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?\");\r\n    trueModule = null;\r\n    return receiveInstance(result[\"instance\"], result[\"module\"]);\r\n  }\r\n  var info = getWasmImports();\r\n  if ((ENVIRONMENT_IS_PTHREAD)) {\r\n    return new Promise(resolve => {\r\n      wasmModuleReceived = module => {\r\n        // Instantiate from the module posted from the main thread.\r\n        // We can just use sync instantiation in the worker.\r\n        var instance = new WebAssembly.Instance(module, getWasmImports());\r\n        resolve(receiveInstance(instance, module));\r\n      };\r\n    });\r\n  }\r\n  wasmBinaryFile ??= findWasmBinary();\r\n  try {\r\n    var result = await instantiateAsync(wasmBinary, wasmBinaryFile, info);\r\n    var exports = receiveInstantiationResult(result);\r\n    return exports;\r\n  } catch (e) {\r\n    // If instantiation fails, reject the module ready promise.\r\n    readyPromiseReject(e);\r\n    return Promise.reject(e);\r\n  }\r\n}\r\n\r\n// end include: preamble.js\r\n// Begin JS library code\r\nclass ExitStatus {\r\n  name=\"ExitStatus\";\r\n  constructor(status) {\r\n    this.message = `Program terminated with exit(${status})`;\r\n    this.status = status;\r\n  }\r\n}\r\n\r\nvar terminateWorker = worker => {\r\n  worker.terminate();\r\n  // terminate() can be asynchronous, so in theory the worker can continue\r\n  // to run for some amount of time after termination.  However from our POV\r\n  // the worker now dead and we don't want to hear from it again, so we stub\r\n  // out its message handler here.  This avoids having to check in each of\r\n  // the onmessage handlers if the message was coming from valid worker.\r\n  worker.onmessage = e => {\r\n    var cmd = e[\"data\"].cmd;\r\n    err(`received \"${cmd}\" command from terminated worker: ${worker.workerID}`);\r\n  };\r\n};\r\n\r\nvar cleanupThread = pthread_ptr => {\r\n  assert(!ENVIRONMENT_IS_PTHREAD, \"Internal Error! cleanupThread() can only ever be called from main application thread!\");\r\n  assert(pthread_ptr, \"Internal Error! Null pthread_ptr in cleanupThread!\");\r\n  var worker = PThread.pthreads[pthread_ptr];\r\n  assert(worker);\r\n  PThread.returnWorkerToPool(worker);\r\n};\r\n\r\nvar callRuntimeCallbacks = callbacks => {\r\n  while (callbacks.length > 0) {\r\n    // Pass the module as the first argument.\r\n    callbacks.shift()(Module);\r\n  }\r\n};\r\n\r\nvar onPreRuns = [];\r\n\r\nvar addOnPreRun = cb => onPreRuns.push(cb);\r\n\r\nvar spawnThread = threadParams => {\r\n  assert(!ENVIRONMENT_IS_PTHREAD, \"Internal Error! spawnThread() can only ever be called from main application thread!\");\r\n  assert(threadParams.pthread_ptr, \"Internal error, no pthread ptr!\");\r\n  var worker = PThread.getNewWorker();\r\n  if (!worker) {\r\n    // No available workers in the PThread pool.\r\n    return 6;\r\n  }\r\n  assert(!worker.pthread_ptr, \"Internal error!\");\r\n  PThread.runningWorkers.push(worker);\r\n  // Add to pthreads map\r\n  PThread.pthreads[threadParams.pthread_ptr] = worker;\r\n  worker.pthread_ptr = threadParams.pthread_ptr;\r\n  var msg = {\r\n    cmd: \"run\",\r\n    start_routine: threadParams.startRoutine,\r\n    arg: threadParams.arg,\r\n    pthread_ptr: threadParams.pthread_ptr\r\n  };\r\n  // Ask the worker to start executing its pthread entry point function.\r\n  worker.postMessage(msg, threadParams.transferList);\r\n  return 0;\r\n};\r\n\r\nvar runtimeKeepaliveCounter = 0;\r\n\r\nvar keepRuntimeAlive = () => runtimeKeepaliveCounter > 0;\r\n\r\nvar stackSave = () => _emscripten_stack_get_current();\r\n\r\nvar stackRestore = val => __emscripten_stack_restore(val);\r\n\r\nvar stackAlloc = sz => __emscripten_stack_alloc(sz);\r\n\r\n/** @type{function(number, (number|boolean), ...number)} */ var proxyToMainThread = (funcIndex, emAsmAddr, sync, ...callArgs) => {\r\n  // EM_ASM proxying is done by passing a pointer to the address of the EM_ASM\r\n  // content as `emAsmAddr`.  JS library proxying is done by passing an index\r\n  // into `proxiedJSCallArgs` as `funcIndex`. If `emAsmAddr` is non-zero then\r\n  // `funcIndex` will be ignored.\r\n  // Additional arguments are passed after the first three are the actual\r\n  // function arguments.\r\n  // The serialization buffer contains the number of call params, and then\r\n  // all the args here.\r\n  // We also pass 'sync' to C separately, since C needs to look at it.\r\n  // Allocate a buffer, which will be copied by the C code.\r\n  // First passed parameter specifies the number of arguments to the function.\r\n  // When BigInt support is enabled, we must handle types in a more complex\r\n  // way, detecting at runtime if a value is a BigInt or not (as we have no\r\n  // type info here). To do that, add a \"prefix\" before each value that\r\n  // indicates if it is a BigInt, which effectively doubles the number of\r\n  // values we serialize for proxying. TODO: pack this?\r\n  var serializedNumCallArgs = callArgs.length * 2;\r\n  var sp = stackSave();\r\n  var args = stackAlloc(serializedNumCallArgs * 8);\r\n  var b = ((args) >> 3);\r\n  for (var i = 0; i < callArgs.length; i++) {\r\n    var arg = callArgs[i];\r\n    if (typeof arg == \"bigint\") {\r\n      // The prefix is non-zero to indicate a bigint.\r\n      HEAP64[b + 2 * i] = 1n;\r\n      HEAP64[b + 2 * i + 1] = arg;\r\n    } else {\r\n      // The prefix is zero to indicate a JS Number.\r\n      HEAP64[b + 2 * i] = 0n;\r\n      GROWABLE_HEAP_F64()[b + 2 * i + 1] = arg;\r\n    }\r\n  }\r\n  var rtn = __emscripten_run_on_main_thread_js(funcIndex, emAsmAddr, serializedNumCallArgs, args, sync);\r\n  stackRestore(sp);\r\n  return rtn;\r\n};\r\n\r\nfunction _proc_exit(code) {\r\n  if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(0, 0, 1, code);\r\n  EXITSTATUS = code;\r\n  if (!keepRuntimeAlive()) {\r\n    PThread.terminateAllThreads();\r\n    ABORT = true;\r\n  }\r\n  quit_(code, new ExitStatus(code));\r\n}\r\n\r\nvar runtimeKeepalivePop = () => {\r\n  assert(runtimeKeepaliveCounter > 0);\r\n  runtimeKeepaliveCounter -= 1;\r\n};\r\n\r\nfunction exitOnMainThread(returnCode) {\r\n  if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(1, 0, 0, returnCode);\r\n  runtimeKeepalivePop();\r\n  _exit(returnCode);\r\n}\r\n\r\n/** @suppress {duplicate } */ /** @param {boolean|number=} implicit */ var exitJS = (status, implicit) => {\r\n  EXITSTATUS = status;\r\n  checkUnflushedContent();\r\n  if (ENVIRONMENT_IS_PTHREAD) {\r\n    // implicit exit can never happen on a pthread\r\n    assert(!implicit);\r\n    // When running in a pthread we propagate the exit back to the main thread\r\n    // where it can decide if the whole process should be shut down or not.\r\n    // The pthread may have decided not to exit its own runtime, for example\r\n    // because it runs a main loop, but that doesn't affect the main thread.\r\n    exitOnMainThread(status);\r\n    throw \"unwind\";\r\n  }\r\n  // if exit() was called explicitly, warn the user if the runtime isn't actually being shut down\r\n  if (keepRuntimeAlive() && !implicit) {\r\n    var msg = `program exited (with status: ${status}), but keepRuntimeAlive() is set (counter=${runtimeKeepaliveCounter}) due to an async operation, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)`;\r\n    readyPromiseReject(msg);\r\n    err(msg);\r\n  }\r\n  _proc_exit(status);\r\n};\r\n\r\nvar _exit = exitJS;\r\n\r\nvar ptrToString = ptr => {\r\n  assert(typeof ptr === \"number\");\r\n  // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\r\n  ptr >>>= 0;\r\n  return \"0x\" + ptr.toString(16).padStart(8, \"0\");\r\n};\r\n\r\nvar PThread = {\r\n  unusedWorkers: [],\r\n  runningWorkers: [],\r\n  tlsInitFunctions: [],\r\n  pthreads: {},\r\n  nextWorkerID: 1,\r\n  init() {\r\n    if ((!(ENVIRONMENT_IS_PTHREAD))) {\r\n      PThread.initMainThread();\r\n    }\r\n  },\r\n  initMainThread() {\r\n    var pthreadPoolSize = navigator.hardwareConcurrency;\r\n    // Start loading up the Worker pool, if requested.\r\n    while (pthreadPoolSize--) {\r\n      PThread.allocateUnusedWorker();\r\n    }\r\n    // MINIMAL_RUNTIME takes care of calling loadWasmModuleToAllWorkers\r\n    // in postamble_minimal.js\r\n    addOnPreRun(() => {\r\n      addRunDependency(\"loading-workers\");\r\n      PThread.loadWasmModuleToAllWorkers(() => removeRunDependency(\"loading-workers\"));\r\n    });\r\n  },\r\n  terminateAllThreads: () => {\r\n    assert(!ENVIRONMENT_IS_PTHREAD, \"Internal Error! terminateAllThreads() can only ever be called from main application thread!\");\r\n    // Attempt to kill all workers.  Sadly (at least on the web) there is no\r\n    // way to terminate a worker synchronously, or to be notified when a\r\n    // worker in actually terminated.  This means there is some risk that\r\n    // pthreads will continue to be executing after `worker.terminate` has\r\n    // returned.  For this reason, we don't call `returnWorkerToPool` here or\r\n    // free the underlying pthread data structures.\r\n    for (var worker of PThread.runningWorkers) {\r\n      terminateWorker(worker);\r\n    }\r\n    for (var worker of PThread.unusedWorkers) {\r\n      terminateWorker(worker);\r\n    }\r\n    PThread.unusedWorkers = [];\r\n    PThread.runningWorkers = [];\r\n    PThread.pthreads = {};\r\n  },\r\n  returnWorkerToPool: worker => {\r\n    // We don't want to run main thread queued calls here, since we are doing\r\n    // some operations that leave the worker queue in an invalid state until\r\n    // we are completely done (it would be bad if free() ends up calling a\r\n    // queued pthread_create which looks at the global data structures we are\r\n    // modifying). To achieve that, defer the free() til the very end, when\r\n    // we are all done.\r\n    var pthread_ptr = worker.pthread_ptr;\r\n    delete PThread.pthreads[pthread_ptr];\r\n    // Note: worker is intentionally not terminated so the pool can\r\n    // dynamically grow.\r\n    PThread.unusedWorkers.push(worker);\r\n    PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker), 1);\r\n    // Not a running Worker anymore\r\n    // Detach the worker from the pthread object, and return it to the\r\n    // worker pool as an unused worker.\r\n    worker.pthread_ptr = 0;\r\n    // Finally, free the underlying (and now-unused) pthread structure in\r\n    // linear memory.\r\n    __emscripten_thread_free_data(pthread_ptr);\r\n  },\r\n  threadInitTLS() {\r\n    // Call thread init functions (these are the _emscripten_tls_init for each\r\n    // module loaded.\r\n    PThread.tlsInitFunctions.forEach(f => f());\r\n  },\r\n  loadWasmModuleToWorker: worker => new Promise(onFinishedLoading => {\r\n    worker.onmessage = e => {\r\n      var d = e[\"data\"];\r\n      var cmd = d.cmd;\r\n      // If this message is intended to a recipient that is not the main\r\n      // thread, forward it to the target thread.\r\n      if (d.targetThread && d.targetThread != _pthread_self()) {\r\n        var targetWorker = PThread.pthreads[d.targetThread];\r\n        if (targetWorker) {\r\n          targetWorker.postMessage(d, d.transferList);\r\n        } else {\r\n          err(`Internal error! Worker sent a message \"${cmd}\" to target pthread ${d.targetThread}, but that thread no longer exists!`);\r\n        }\r\n        return;\r\n      }\r\n      if (cmd === \"checkMailbox\") {\r\n        checkMailbox();\r\n      } else if (cmd === \"spawnThread\") {\r\n        spawnThread(d);\r\n      } else if (cmd === \"cleanupThread\") {\r\n        cleanupThread(d.thread);\r\n      } else if (cmd === \"loaded\") {\r\n        worker.loaded = true;\r\n        onFinishedLoading(worker);\r\n      } else if (d.target === \"setimmediate\") {\r\n        // Worker wants to postMessage() to itself to implement setImmediate()\r\n        // emulation.\r\n        worker.postMessage(d);\r\n      } else if (cmd === \"callHandler\") {\r\n        Module[d.handler](...d.args);\r\n      } else if (cmd) {\r\n        // The received message looks like something that should be handled by this message\r\n        // handler, (since there is a e.data.cmd field present), but is not one of the\r\n        // recognized commands:\r\n        err(`worker sent an unknown command ${cmd}`);\r\n      }\r\n    };\r\n    worker.onerror = e => {\r\n      var message = \"worker sent an error!\";\r\n      if (worker.pthread_ptr) {\r\n        message = `Pthread ${ptrToString(worker.pthread_ptr)} sent an error!`;\r\n      }\r\n      err(`${message} ${e.filename}:${e.lineno}: ${e.message}`);\r\n      throw e;\r\n    };\r\n    assert(wasmMemory instanceof WebAssembly.Memory, \"WebAssembly memory should have been loaded by now!\");\r\n    assert(wasmModule instanceof WebAssembly.Module, \"WebAssembly Module should have been loaded by now!\");\r\n    // When running on a pthread, none of the incoming parameters on the module\r\n    // object are present. Proxy known handlers back to the main thread if specified.\r\n    var handlers = [];\r\n    var knownHandlers = [];\r\n    for (var handler of knownHandlers) {\r\n      if (Module.propertyIsEnumerable(handler)) {\r\n        handlers.push(handler);\r\n      }\r\n    }\r\n    // Ask the new worker to load up the Emscripten-compiled page. This is a heavy operation.\r\n    worker.postMessage({\r\n      cmd: \"load\",\r\n      handlers,\r\n      wasmMemory,\r\n      wasmModule,\r\n      \"workerID\": worker.workerID\r\n    });\r\n  }),\r\n  loadWasmModuleToAllWorkers(onMaybeReady) {\r\n    // Instantiation is synchronous in pthreads.\r\n    if (ENVIRONMENT_IS_PTHREAD) {\r\n      return onMaybeReady();\r\n    }\r\n    let pthreadPoolReady = Promise.all(PThread.unusedWorkers.map(PThread.loadWasmModuleToWorker));\r\n    pthreadPoolReady.then(onMaybeReady);\r\n  },\r\n  allocateUnusedWorker() {\r\n    var worker;\r\n    // If we're using module output, use bundler-friendly pattern.\r\n    // We need to generate the URL with import.meta.url as the base URL of the JS file\r\n    // instead of just using new URL(import.meta.url) because bundler's only recognize\r\n    // the first case in their bundling step. The latter ends up producing an invalid\r\n    // URL to import from the server (e.g., for webpack the file:// path).\r\n    // See https://github.com/webpack/webpack/issues/12638\r\n    worker = new Worker(new URL(\"wasm_boids.js\", import.meta.url), {\r\n      \"type\": \"module\",\r\n      // This is the way that we signal to the Web Worker that it is hosting\r\n      // a pthread.\r\n      \"name\": \"em-pthread-\" + PThread.nextWorkerID\r\n    });\r\n    worker.workerID = PThread.nextWorkerID++;\r\n    PThread.unusedWorkers.push(worker);\r\n  },\r\n  getNewWorker() {\r\n    if (PThread.unusedWorkers.length == 0) {\r\n      // PTHREAD_POOL_SIZE_STRICT should show a warning and, if set to level `2`, return from the function.\r\n      PThread.allocateUnusedWorker();\r\n      PThread.loadWasmModuleToWorker(PThread.unusedWorkers[0]);\r\n    }\r\n    return PThread.unusedWorkers.pop();\r\n  }\r\n};\r\n\r\nvar establishStackSpace = pthread_ptr => {\r\n  // If memory growth is enabled, the memory views may have gotten out of date,\r\n  // so resync them before accessing the pthread ptr below.\r\n  updateMemoryViews();\r\n  var stackHigh = GROWABLE_HEAP_U32()[(((pthread_ptr) + (52)) >> 2)];\r\n  var stackSize = GROWABLE_HEAP_U32()[(((pthread_ptr) + (56)) >> 2)];\r\n  var stackLow = stackHigh - stackSize;\r\n  assert(stackHigh != 0);\r\n  assert(stackLow != 0);\r\n  assert(stackHigh > stackLow, \"stackHigh must be higher then stackLow\");\r\n  // Set stack limits used by `emscripten/stack.h` function.  These limits are\r\n  // cached in wasm-side globals to make checks as fast as possible.\r\n  _emscripten_stack_set_limits(stackHigh, stackLow);\r\n  // Call inside wasm module to set up the stack frame for this pthread in wasm module scope\r\n  stackRestore(stackHigh);\r\n  // Write the stack cookie last, after we have set up the proper bounds and\r\n  // current position of the stack.\r\n  writeStackCookie();\r\n};\r\n\r\n/**\r\n     * @param {number} ptr\r\n     * @param {string} type\r\n     */ function getValue(ptr, type = \"i8\") {\r\n  if (type.endsWith(\"*\")) type = \"*\";\r\n  switch (type) {\r\n   case \"i1\":\r\n    return GROWABLE_HEAP_I8()[ptr];\r\n\r\n   case \"i8\":\r\n    return GROWABLE_HEAP_I8()[ptr];\r\n\r\n   case \"i16\":\r\n    return GROWABLE_HEAP_I16()[((ptr) >> 1)];\r\n\r\n   case \"i32\":\r\n    return GROWABLE_HEAP_I32()[((ptr) >> 2)];\r\n\r\n   case \"i64\":\r\n    return HEAP64[((ptr) >> 3)];\r\n\r\n   case \"float\":\r\n    return GROWABLE_HEAP_F32()[((ptr) >> 2)];\r\n\r\n   case \"double\":\r\n    return GROWABLE_HEAP_F64()[((ptr) >> 3)];\r\n\r\n   case \"*\":\r\n    return GROWABLE_HEAP_U32()[((ptr) >> 2)];\r\n\r\n   default:\r\n    abort(`invalid type for getValue: ${type}`);\r\n  }\r\n}\r\n\r\nvar wasmTableMirror = [];\r\n\r\n/** @type {WebAssembly.Table} */ var wasmTable;\r\n\r\nvar getWasmTableEntry = funcPtr => {\r\n  var func = wasmTableMirror[funcPtr];\r\n  if (!func) {\r\n    /** @suppress {checkTypes} */ wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\r\n  }\r\n  /** @suppress {checkTypes} */ assert(wasmTable.get(funcPtr) == func, \"JavaScript-side Wasm function table mirror is out of date!\");\r\n  return func;\r\n};\r\n\r\nvar invokeEntryPoint = (ptr, arg) => {\r\n  // An old thread on this worker may have been canceled without returning the\r\n  // `runtimeKeepaliveCounter` to zero. Reset it now so the new thread won't\r\n  // be affected.\r\n  runtimeKeepaliveCounter = 0;\r\n  // pthread entry points are always of signature 'void *ThreadMain(void *arg)'\r\n  // Native codebases sometimes spawn threads with other thread entry point\r\n  // signatures, such as void ThreadMain(void *arg), void *ThreadMain(), or\r\n  // void ThreadMain().  That is not acceptable per C/C++ specification, but\r\n  // x86 compiler ABI extensions enable that to work. If you find the\r\n  // following line to crash, either change the signature to \"proper\" void\r\n  // *ThreadMain(void *arg) form, or try linking with the Emscripten linker\r\n  // flag -sEMULATE_FUNCTION_POINTER_CASTS to add in emulation for this x86\r\n  // ABI extension.\r\n  var result = getWasmTableEntry(ptr)(arg);\r\n  checkStackCookie();\r\n  function finish(result) {\r\n    if (keepRuntimeAlive()) {\r\n      EXITSTATUS = result;\r\n    } else {\r\n      __emscripten_thread_exit(result);\r\n    }\r\n  }\r\n  finish(result);\r\n};\r\n\r\nvar registerTLSInit = tlsInitFunc => PThread.tlsInitFunctions.push(tlsInitFunc);\r\n\r\nvar runtimeKeepalivePush = () => {\r\n  runtimeKeepaliveCounter += 1;\r\n};\r\n\r\n/**\r\n     * @param {number} ptr\r\n     * @param {number} value\r\n     * @param {string} type\r\n     */ function setValue(ptr, value, type = \"i8\") {\r\n  if (type.endsWith(\"*\")) type = \"*\";\r\n  switch (type) {\r\n   case \"i1\":\r\n    GROWABLE_HEAP_I8()[ptr] = value;\r\n    break;\r\n\r\n   case \"i8\":\r\n    GROWABLE_HEAP_I8()[ptr] = value;\r\n    break;\r\n\r\n   case \"i16\":\r\n    GROWABLE_HEAP_I16()[((ptr) >> 1)] = value;\r\n    break;\r\n\r\n   case \"i32\":\r\n    GROWABLE_HEAP_I32()[((ptr) >> 2)] = value;\r\n    break;\r\n\r\n   case \"i64\":\r\n    HEAP64[((ptr) >> 3)] = BigInt(value);\r\n    break;\r\n\r\n   case \"float\":\r\n    GROWABLE_HEAP_F32()[((ptr) >> 2)] = value;\r\n    break;\r\n\r\n   case \"double\":\r\n    GROWABLE_HEAP_F64()[((ptr) >> 3)] = value;\r\n    break;\r\n\r\n   case \"*\":\r\n    GROWABLE_HEAP_U32()[((ptr) >> 2)] = value;\r\n    break;\r\n\r\n   default:\r\n    abort(`invalid type for setValue: ${type}`);\r\n  }\r\n}\r\n\r\nvar warnOnce = text => {\r\n  warnOnce.shown ||= {};\r\n  if (!warnOnce.shown[text]) {\r\n    warnOnce.shown[text] = 1;\r\n    err(text);\r\n  }\r\n};\r\n\r\nvar UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder : undefined;\r\n\r\n/**\r\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\r\n     * array that contains uint8 values, returns a copy of that string as a\r\n     * Javascript String object.\r\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\r\n     * @param {number=} idx\r\n     * @param {number=} maxBytesToRead\r\n     * @return {string}\r\n     */ var UTF8ArrayToString = (heapOrArray, idx = 0, maxBytesToRead = NaN) => {\r\n  var endIdx = idx + maxBytesToRead;\r\n  var endPtr = idx;\r\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on\r\n  // null terminator by itself.  Also, use the length info to avoid running tiny\r\n  // strings through TextDecoder, since .subarray() allocates garbage.\r\n  // (As a tiny code save trick, compare endPtr against endIdx using a negation,\r\n  // so that undefined/NaN means Infinity)\r\n  while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\r\n  if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\r\n    return UTF8Decoder.decode(heapOrArray.buffer instanceof ArrayBuffer ? heapOrArray.subarray(idx, endPtr) : heapOrArray.slice(idx, endPtr));\r\n  }\r\n  var str = \"\";\r\n  // If building with TextDecoder, we have already computed the string length\r\n  // above, so test loop end condition against that\r\n  while (idx < endPtr) {\r\n    // For UTF8 byte structure, see:\r\n    // http://en.wikipedia.org/wiki/UTF-8#Description\r\n    // https://www.ietf.org/rfc/rfc2279.txt\r\n    // https://tools.ietf.org/html/rfc3629\r\n    var u0 = heapOrArray[idx++];\r\n    if (!(u0 & 128)) {\r\n      str += String.fromCharCode(u0);\r\n      continue;\r\n    }\r\n    var u1 = heapOrArray[idx++] & 63;\r\n    if ((u0 & 224) == 192) {\r\n      str += String.fromCharCode(((u0 & 31) << 6) | u1);\r\n      continue;\r\n    }\r\n    var u2 = heapOrArray[idx++] & 63;\r\n    if ((u0 & 240) == 224) {\r\n      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\r\n    } else {\r\n      if ((u0 & 248) != 240) warnOnce(\"Invalid UTF-8 leading byte \" + ptrToString(u0) + \" encountered when deserializing a UTF-8 string in wasm memory to a JS string!\");\r\n      u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\r\n    }\r\n    if (u0 < 65536) {\r\n      str += String.fromCharCode(u0);\r\n    } else {\r\n      var ch = u0 - 65536;\r\n      str += String.fromCharCode(55296 | (ch >> 10), 56320 | (ch & 1023));\r\n    }\r\n  }\r\n  return str;\r\n};\r\n\r\n/**\r\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\r\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\r\n     *\r\n     * @param {number} ptr\r\n     * @param {number=} maxBytesToRead - An optional length that specifies the\r\n     *   maximum number of bytes to read. You can omit this parameter to scan the\r\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\r\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\r\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\r\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\r\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\r\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\r\n     * @return {string}\r\n     */ var UTF8ToString = (ptr, maxBytesToRead) => {\r\n  assert(typeof ptr == \"number\", `UTF8ToString expects a number (got ${typeof ptr})`);\r\n  return ptr ? UTF8ArrayToString(GROWABLE_HEAP_U8(), ptr, maxBytesToRead) : \"\";\r\n};\r\n\r\nvar ___assert_fail = (condition, filename, line, func) => abort(`Assertion failed: ${UTF8ToString(condition)}, at: ` + [ filename ? UTF8ToString(filename) : \"unknown filename\", line, func ? UTF8ToString(func) : \"unknown function\" ]);\r\n\r\nvar exceptionCaught = [];\r\n\r\nvar uncaughtExceptionCount = 0;\r\n\r\nvar ___cxa_begin_catch = ptr => {\r\n  var info = new ExceptionInfo(ptr);\r\n  if (!info.get_caught()) {\r\n    info.set_caught(true);\r\n    uncaughtExceptionCount--;\r\n  }\r\n  info.set_rethrown(false);\r\n  exceptionCaught.push(info);\r\n  ___cxa_increment_exception_refcount(ptr);\r\n  return ___cxa_get_exception_ptr(ptr);\r\n};\r\n\r\nvar exceptionLast = 0;\r\n\r\nvar ___cxa_end_catch = () => {\r\n  // Clear state flag.\r\n  _setThrew(0, 0);\r\n  assert(exceptionCaught.length > 0);\r\n  // Call destructor if one is registered then clear it.\r\n  var info = exceptionCaught.pop();\r\n  ___cxa_decrement_exception_refcount(info.excPtr);\r\n  exceptionLast = 0;\r\n};\r\n\r\nclass ExceptionInfo {\r\n  // excPtr - Thrown object pointer to wrap. Metadata pointer is calculated from it.\r\n  constructor(excPtr) {\r\n    this.excPtr = excPtr;\r\n    this.ptr = excPtr - 24;\r\n  }\r\n  set_type(type) {\r\n    GROWABLE_HEAP_U32()[(((this.ptr) + (4)) >> 2)] = type;\r\n  }\r\n  get_type() {\r\n    return GROWABLE_HEAP_U32()[(((this.ptr) + (4)) >> 2)];\r\n  }\r\n  set_destructor(destructor) {\r\n    GROWABLE_HEAP_U32()[(((this.ptr) + (8)) >> 2)] = destructor;\r\n  }\r\n  get_destructor() {\r\n    return GROWABLE_HEAP_U32()[(((this.ptr) + (8)) >> 2)];\r\n  }\r\n  set_caught(caught) {\r\n    caught = caught ? 1 : 0;\r\n    GROWABLE_HEAP_I8()[(this.ptr) + (12)] = caught;\r\n  }\r\n  get_caught() {\r\n    return GROWABLE_HEAP_I8()[(this.ptr) + (12)] != 0;\r\n  }\r\n  set_rethrown(rethrown) {\r\n    rethrown = rethrown ? 1 : 0;\r\n    GROWABLE_HEAP_I8()[(this.ptr) + (13)] = rethrown;\r\n  }\r\n  get_rethrown() {\r\n    return GROWABLE_HEAP_I8()[(this.ptr) + (13)] != 0;\r\n  }\r\n  // Initialize native structure fields. Should be called once after allocated.\r\n  init(type, destructor) {\r\n    this.set_adjusted_ptr(0);\r\n    this.set_type(type);\r\n    this.set_destructor(destructor);\r\n  }\r\n  set_adjusted_ptr(adjustedPtr) {\r\n    GROWABLE_HEAP_U32()[(((this.ptr) + (16)) >> 2)] = adjustedPtr;\r\n  }\r\n  get_adjusted_ptr() {\r\n    return GROWABLE_HEAP_U32()[(((this.ptr) + (16)) >> 2)];\r\n  }\r\n}\r\n\r\nvar setTempRet0 = val => __emscripten_tempret_set(val);\r\n\r\nvar findMatchingCatch = args => {\r\n  var thrown = exceptionLast?.excPtr;\r\n  if (!thrown) {\r\n    // just pass through the null ptr\r\n    setTempRet0(0);\r\n    return 0;\r\n  }\r\n  var info = new ExceptionInfo(thrown);\r\n  info.set_adjusted_ptr(thrown);\r\n  var thrownType = info.get_type();\r\n  if (!thrownType) {\r\n    // just pass through the thrown ptr\r\n    setTempRet0(0);\r\n    return thrown;\r\n  }\r\n  // can_catch receives a **, add indirection\r\n  // The different catch blocks are denoted by different types.\r\n  // Due to inheritance, those types may not precisely match the\r\n  // type of the thrown object. Find one which matches, and\r\n  // return the type of the catch block which should be called.\r\n  for (var caughtType of args) {\r\n    if (caughtType === 0 || caughtType === thrownType) {\r\n      // Catch all clause matched or exactly the same type is caught\r\n      break;\r\n    }\r\n    var adjusted_ptr_addr = info.ptr + 16;\r\n    if (___cxa_can_catch(caughtType, thrownType, adjusted_ptr_addr)) {\r\n      setTempRet0(caughtType);\r\n      return thrown;\r\n    }\r\n  }\r\n  setTempRet0(thrownType);\r\n  return thrown;\r\n};\r\n\r\nvar ___cxa_find_matching_catch_2 = () => findMatchingCatch([]);\r\n\r\nvar ___cxa_find_matching_catch_3 = arg0 => findMatchingCatch([ arg0 ]);\r\n\r\nvar ___cxa_rethrow = () => {\r\n  var info = exceptionCaught.pop();\r\n  if (!info) {\r\n    abort(\"no exception to throw\");\r\n  }\r\n  var ptr = info.excPtr;\r\n  if (!info.get_rethrown()) {\r\n    // Only pop if the corresponding push was through rethrow_primary_exception\r\n    exceptionCaught.push(info);\r\n    info.set_rethrown(true);\r\n    info.set_caught(false);\r\n    uncaughtExceptionCount++;\r\n  }\r\n  exceptionLast = new CppException(ptr);\r\n  throw exceptionLast;\r\n};\r\n\r\nvar ___cxa_rethrow_primary_exception = ptr => {\r\n  if (!ptr) return;\r\n  var info = new ExceptionInfo(ptr);\r\n  exceptionCaught.push(info);\r\n  info.set_rethrown(true);\r\n  ___cxa_rethrow();\r\n};\r\n\r\nvar ___cxa_throw = (ptr, type, destructor) => {\r\n  var info = new ExceptionInfo(ptr);\r\n  // Initialize ExceptionInfo content after it was allocated in __cxa_allocate_exception.\r\n  info.init(type, destructor);\r\n  exceptionLast = new CppException(ptr);\r\n  uncaughtExceptionCount++;\r\n  throw exceptionLast;\r\n};\r\n\r\nvar ___cxa_uncaught_exceptions = () => uncaughtExceptionCount;\r\n\r\nfunction pthreadCreateProxied(pthread_ptr, attr, startRoutine, arg) {\r\n  if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(2, 0, 1, pthread_ptr, attr, startRoutine, arg);\r\n  return ___pthread_create_js(pthread_ptr, attr, startRoutine, arg);\r\n}\r\n\r\nvar _emscripten_has_threading_support = () => typeof SharedArrayBuffer != \"undefined\";\r\n\r\nvar ___pthread_create_js = (pthread_ptr, attr, startRoutine, arg) => {\r\n  if (!_emscripten_has_threading_support()) {\r\n    dbg(\"pthread_create: environment does not support SharedArrayBuffer, pthreads are not available\");\r\n    return 6;\r\n  }\r\n  // List of JS objects that will transfer ownership to the Worker hosting the thread\r\n  var transferList = [];\r\n  var error = 0;\r\n  // Synchronously proxy the thread creation to main thread if possible. If we\r\n  // need to transfer ownership of objects, then proxy asynchronously via\r\n  // postMessage.\r\n  if (ENVIRONMENT_IS_PTHREAD && (transferList.length === 0 || error)) {\r\n    return pthreadCreateProxied(pthread_ptr, attr, startRoutine, arg);\r\n  }\r\n  // If on the main thread, and accessing Canvas/OffscreenCanvas failed, abort\r\n  // with the detected error.\r\n  if (error) return error;\r\n  var threadParams = {\r\n    startRoutine,\r\n    pthread_ptr,\r\n    arg,\r\n    transferList\r\n  };\r\n  if (ENVIRONMENT_IS_PTHREAD) {\r\n    // The prepopulated pool of web workers that can host pthreads is stored\r\n    // in the main JS thread. Therefore if a pthread is attempting to spawn a\r\n    // new thread, the thread creation must be deferred to the main JS thread.\r\n    threadParams.cmd = \"spawnThread\";\r\n    postMessage(threadParams, transferList);\r\n    // When we defer thread creation this way, we have no way to detect thread\r\n    // creation synchronously today, so we have to assume success and return 0.\r\n    return 0;\r\n  }\r\n  // We are the main thread, so we have the pthread warmup pool in this\r\n  // thread and can fire off JS thread creation directly ourselves.\r\n  return spawnThread(threadParams);\r\n};\r\n\r\nvar ___resumeException = ptr => {\r\n  if (!exceptionLast) {\r\n    exceptionLast = new CppException(ptr);\r\n  }\r\n  throw exceptionLast;\r\n};\r\n\r\nvar __abort_js = () => abort(\"native code called abort()\");\r\n\r\nvar structRegistrations = {};\r\n\r\nvar runDestructors = destructors => {\r\n  while (destructors.length) {\r\n    var ptr = destructors.pop();\r\n    var del = destructors.pop();\r\n    del(ptr);\r\n  }\r\n};\r\n\r\n/** @suppress {globalThis} */ function readPointer(pointer) {\r\n  return this[\"fromWireType\"](GROWABLE_HEAP_U32()[((pointer) >> 2)]);\r\n}\r\n\r\nvar awaitingDependencies = {};\r\n\r\nvar registeredTypes = {};\r\n\r\nvar typeDependencies = {};\r\n\r\nvar InternalError = Module[\"InternalError\"] = class InternalError extends Error {\r\n  constructor(message) {\r\n    super(message);\r\n    this.name = \"InternalError\";\r\n  }\r\n};\r\n\r\nvar throwInternalError = message => {\r\n  throw new InternalError(message);\r\n};\r\n\r\nvar whenDependentTypesAreResolved = (myTypes, dependentTypes, getTypeConverters) => {\r\n  myTypes.forEach(type => typeDependencies[type] = dependentTypes);\r\n  function onComplete(typeConverters) {\r\n    var myTypeConverters = getTypeConverters(typeConverters);\r\n    if (myTypeConverters.length !== myTypes.length) {\r\n      throwInternalError(\"Mismatched type converter count\");\r\n    }\r\n    for (var i = 0; i < myTypes.length; ++i) {\r\n      registerType(myTypes[i], myTypeConverters[i]);\r\n    }\r\n  }\r\n  var typeConverters = new Array(dependentTypes.length);\r\n  var unregisteredTypes = [];\r\n  var registered = 0;\r\n  dependentTypes.forEach((dt, i) => {\r\n    if (registeredTypes.hasOwnProperty(dt)) {\r\n      typeConverters[i] = registeredTypes[dt];\r\n    } else {\r\n      unregisteredTypes.push(dt);\r\n      if (!awaitingDependencies.hasOwnProperty(dt)) {\r\n        awaitingDependencies[dt] = [];\r\n      }\r\n      awaitingDependencies[dt].push(() => {\r\n        typeConverters[i] = registeredTypes[dt];\r\n        ++registered;\r\n        if (registered === unregisteredTypes.length) {\r\n          onComplete(typeConverters);\r\n        }\r\n      });\r\n    }\r\n  });\r\n  if (0 === unregisteredTypes.length) {\r\n    onComplete(typeConverters);\r\n  }\r\n};\r\n\r\nvar __embind_finalize_value_object = structType => {\r\n  var reg = structRegistrations[structType];\r\n  delete structRegistrations[structType];\r\n  var rawConstructor = reg.rawConstructor;\r\n  var rawDestructor = reg.rawDestructor;\r\n  var fieldRecords = reg.fields;\r\n  var fieldTypes = fieldRecords.map(field => field.getterReturnType).concat(fieldRecords.map(field => field.setterArgumentType));\r\n  whenDependentTypesAreResolved([ structType ], fieldTypes, fieldTypes => {\r\n    var fields = {};\r\n    fieldRecords.forEach((field, i) => {\r\n      var fieldName = field.fieldName;\r\n      var getterReturnType = fieldTypes[i];\r\n      var optional = fieldTypes[i].optional;\r\n      var getter = field.getter;\r\n      var getterContext = field.getterContext;\r\n      var setterArgumentType = fieldTypes[i + fieldRecords.length];\r\n      var setter = field.setter;\r\n      var setterContext = field.setterContext;\r\n      fields[fieldName] = {\r\n        read: ptr => getterReturnType[\"fromWireType\"](getter(getterContext, ptr)),\r\n        write: (ptr, o) => {\r\n          var destructors = [];\r\n          setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\r\n          runDestructors(destructors);\r\n        },\r\n        optional\r\n      };\r\n    });\r\n    return [ {\r\n      name: reg.name,\r\n      \"fromWireType\": ptr => {\r\n        var rv = {};\r\n        for (var i in fields) {\r\n          rv[i] = fields[i].read(ptr);\r\n        }\r\n        rawDestructor(ptr);\r\n        return rv;\r\n      },\r\n      \"toWireType\": (destructors, o) => {\r\n        // todo: Here we have an opportunity for -O3 level \"unsafe\" optimizations:\r\n        // assume all fields are present without checking.\r\n        for (var fieldName in fields) {\r\n          if (!(fieldName in o) && !fields[fieldName].optional) {\r\n            throw new TypeError(`Missing field: \"${fieldName}\"`);\r\n          }\r\n        }\r\n        var ptr = rawConstructor();\r\n        for (fieldName in fields) {\r\n          fields[fieldName].write(ptr, o[fieldName]);\r\n        }\r\n        if (destructors !== null) {\r\n          destructors.push(rawDestructor, ptr);\r\n        }\r\n        return ptr;\r\n      },\r\n      argPackAdvance: GenericWireTypeSize,\r\n      \"readValueFromPointer\": readPointer,\r\n      destructorFunction: rawDestructor\r\n    } ];\r\n  });\r\n};\r\n\r\nvar embindRepr = v => {\r\n  if (v === null) {\r\n    return \"null\";\r\n  }\r\n  var t = typeof v;\r\n  if (t === \"object\" || t === \"array\" || t === \"function\") {\r\n    return v.toString();\r\n  } else {\r\n    return \"\" + v;\r\n  }\r\n};\r\n\r\nvar embind_init_charCodes = () => {\r\n  var codes = new Array(256);\r\n  for (var i = 0; i < 256; ++i) {\r\n    codes[i] = String.fromCharCode(i);\r\n  }\r\n  embind_charCodes = codes;\r\n};\r\n\r\nvar embind_charCodes;\r\n\r\nvar readLatin1String = ptr => {\r\n  var ret = \"\";\r\n  var c = ptr;\r\n  while (GROWABLE_HEAP_U8()[c]) {\r\n    ret += embind_charCodes[GROWABLE_HEAP_U8()[c++]];\r\n  }\r\n  return ret;\r\n};\r\n\r\nvar BindingError = Module[\"BindingError\"] = class BindingError extends Error {\r\n  constructor(message) {\r\n    super(message);\r\n    this.name = \"BindingError\";\r\n  }\r\n};\r\n\r\nvar throwBindingError = message => {\r\n  throw new BindingError(message);\r\n};\r\n\r\n/** @param {Object=} options */ function sharedRegisterType(rawType, registeredInstance, options = {}) {\r\n  var name = registeredInstance.name;\r\n  if (!rawType) {\r\n    throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`);\r\n  }\r\n  if (registeredTypes.hasOwnProperty(rawType)) {\r\n    if (options.ignoreDuplicateRegistrations) {\r\n      return;\r\n    } else {\r\n      throwBindingError(`Cannot register type '${name}' twice`);\r\n    }\r\n  }\r\n  registeredTypes[rawType] = registeredInstance;\r\n  delete typeDependencies[rawType];\r\n  if (awaitingDependencies.hasOwnProperty(rawType)) {\r\n    var callbacks = awaitingDependencies[rawType];\r\n    delete awaitingDependencies[rawType];\r\n    callbacks.forEach(cb => cb());\r\n  }\r\n}\r\n\r\n/** @param {Object=} options */ function registerType(rawType, registeredInstance, options = {}) {\r\n  if (registeredInstance.argPackAdvance === undefined) {\r\n    throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\r\n  }\r\n  return sharedRegisterType(rawType, registeredInstance, options);\r\n}\r\n\r\nvar integerReadValueFromPointer = (name, width, signed) => {\r\n  // integers are quite common, so generate very specialized functions\r\n  switch (width) {\r\n   case 1:\r\n    return signed ? pointer => GROWABLE_HEAP_I8()[pointer] : pointer => GROWABLE_HEAP_U8()[pointer];\r\n\r\n   case 2:\r\n    return signed ? pointer => GROWABLE_HEAP_I16()[((pointer) >> 1)] : pointer => GROWABLE_HEAP_U16()[((pointer) >> 1)];\r\n\r\n   case 4:\r\n    return signed ? pointer => GROWABLE_HEAP_I32()[((pointer) >> 2)] : pointer => GROWABLE_HEAP_U32()[((pointer) >> 2)];\r\n\r\n   case 8:\r\n    return signed ? pointer => HEAP64[((pointer) >> 3)] : pointer => HEAPU64[((pointer) >> 3)];\r\n\r\n   default:\r\n    throw new TypeError(`invalid integer width (${width}): ${name}`);\r\n  }\r\n};\r\n\r\n/** @suppress {globalThis} */ var __embind_register_bigint = (primitiveType, name, size, minRange, maxRange) => {\r\n  name = readLatin1String(name);\r\n  var isUnsignedType = (name.indexOf(\"u\") != -1);\r\n  // maxRange comes through as -1 for uint64_t (see issue 13902). Work around that temporarily\r\n  if (isUnsignedType) {\r\n    maxRange = (1n << 64n) - 1n;\r\n  }\r\n  registerType(primitiveType, {\r\n    name,\r\n    \"fromWireType\": value => value,\r\n    \"toWireType\": function(destructors, value) {\r\n      if (typeof value != \"bigint\" && typeof value != \"number\") {\r\n        throw new TypeError(`Cannot convert \"${embindRepr(value)}\" to ${this.name}`);\r\n      }\r\n      if (typeof value == \"number\") {\r\n        value = BigInt(value);\r\n      }\r\n      if (value < minRange || value > maxRange) {\r\n        throw new TypeError(`Passing a number \"${embindRepr(value)}\" from JS side to C/C++ side to an argument of type \"${name}\", which is outside the valid range [${minRange}, ${maxRange}]!`);\r\n      }\r\n      return value;\r\n    },\r\n    argPackAdvance: GenericWireTypeSize,\r\n    \"readValueFromPointer\": integerReadValueFromPointer(name, size, !isUnsignedType),\r\n    destructorFunction: null\r\n  });\r\n};\r\n\r\nvar GenericWireTypeSize = 8;\r\n\r\n/** @suppress {globalThis} */ var __embind_register_bool = (rawType, name, trueValue, falseValue) => {\r\n  name = readLatin1String(name);\r\n  registerType(rawType, {\r\n    name,\r\n    \"fromWireType\": function(wt) {\r\n      // ambiguous emscripten ABI: sometimes return values are\r\n      // true or false, and sometimes integers (0 or 1)\r\n      return !!wt;\r\n    },\r\n    \"toWireType\": function(destructors, o) {\r\n      return o ? trueValue : falseValue;\r\n    },\r\n    argPackAdvance: GenericWireTypeSize,\r\n    \"readValueFromPointer\": function(pointer) {\r\n      return this[\"fromWireType\"](GROWABLE_HEAP_U8()[pointer]);\r\n    },\r\n    destructorFunction: null\r\n  });\r\n};\r\n\r\nvar shallowCopyInternalPointer = o => ({\r\n  count: o.count,\r\n  deleteScheduled: o.deleteScheduled,\r\n  preservePointerOnDelete: o.preservePointerOnDelete,\r\n  ptr: o.ptr,\r\n  ptrType: o.ptrType,\r\n  smartPtr: o.smartPtr,\r\n  smartPtrType: o.smartPtrType\r\n});\r\n\r\nvar throwInstanceAlreadyDeleted = obj => {\r\n  function getInstanceTypeName(handle) {\r\n    return handle.$$.ptrType.registeredClass.name;\r\n  }\r\n  throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\r\n};\r\n\r\nvar finalizationRegistry = false;\r\n\r\nvar detachFinalizer = handle => {};\r\n\r\nvar runDestructor = $$ => {\r\n  if ($$.smartPtr) {\r\n    $$.smartPtrType.rawDestructor($$.smartPtr);\r\n  } else {\r\n    $$.ptrType.registeredClass.rawDestructor($$.ptr);\r\n  }\r\n};\r\n\r\nvar releaseClassHandle = $$ => {\r\n  $$.count.value -= 1;\r\n  var toDelete = 0 === $$.count.value;\r\n  if (toDelete) {\r\n    runDestructor($$);\r\n  }\r\n};\r\n\r\nvar downcastPointer = (ptr, ptrClass, desiredClass) => {\r\n  if (ptrClass === desiredClass) {\r\n    return ptr;\r\n  }\r\n  if (undefined === desiredClass.baseClass) {\r\n    return null;\r\n  }\r\n  var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\r\n  if (rv === null) {\r\n    return null;\r\n  }\r\n  return desiredClass.downcast(rv);\r\n};\r\n\r\nvar registeredPointers = {};\r\n\r\nvar registeredInstances = {};\r\n\r\nvar getBasestPointer = (class_, ptr) => {\r\n  if (ptr === undefined) {\r\n    throwBindingError(\"ptr should not be undefined\");\r\n  }\r\n  while (class_.baseClass) {\r\n    ptr = class_.upcast(ptr);\r\n    class_ = class_.baseClass;\r\n  }\r\n  return ptr;\r\n};\r\n\r\nvar getInheritedInstance = (class_, ptr) => {\r\n  ptr = getBasestPointer(class_, ptr);\r\n  return registeredInstances[ptr];\r\n};\r\n\r\nvar makeClassHandle = (prototype, record) => {\r\n  if (!record.ptrType || !record.ptr) {\r\n    throwInternalError(\"makeClassHandle requires ptr and ptrType\");\r\n  }\r\n  var hasSmartPtrType = !!record.smartPtrType;\r\n  var hasSmartPtr = !!record.smartPtr;\r\n  if (hasSmartPtrType !== hasSmartPtr) {\r\n    throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\r\n  }\r\n  record.count = {\r\n    value: 1\r\n  };\r\n  return attachFinalizer(Object.create(prototype, {\r\n    $$: {\r\n      value: record,\r\n      writable: true\r\n    }\r\n  }));\r\n};\r\n\r\n/** @suppress {globalThis} */ function RegisteredPointer_fromWireType(ptr) {\r\n  // ptr is a raw pointer (or a raw smartpointer)\r\n  // rawPointer is a maybe-null raw pointer\r\n  var rawPointer = this.getPointee(ptr);\r\n  if (!rawPointer) {\r\n    this.destructor(ptr);\r\n    return null;\r\n  }\r\n  var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\r\n  if (undefined !== registeredInstance) {\r\n    // JS object has been neutered, time to repopulate it\r\n    if (0 === registeredInstance.$$.count.value) {\r\n      registeredInstance.$$.ptr = rawPointer;\r\n      registeredInstance.$$.smartPtr = ptr;\r\n      return registeredInstance[\"clone\"]();\r\n    } else {\r\n      // else, just increment reference count on existing object\r\n      // it already has a reference to the smart pointer\r\n      var rv = registeredInstance[\"clone\"]();\r\n      this.destructor(ptr);\r\n      return rv;\r\n    }\r\n  }\r\n  function makeDefaultHandle() {\r\n    if (this.isSmartPointer) {\r\n      return makeClassHandle(this.registeredClass.instancePrototype, {\r\n        ptrType: this.pointeeType,\r\n        ptr: rawPointer,\r\n        smartPtrType: this,\r\n        smartPtr: ptr\r\n      });\r\n    } else {\r\n      return makeClassHandle(this.registeredClass.instancePrototype, {\r\n        ptrType: this,\r\n        ptr\r\n      });\r\n    }\r\n  }\r\n  var actualType = this.registeredClass.getActualType(rawPointer);\r\n  var registeredPointerRecord = registeredPointers[actualType];\r\n  if (!registeredPointerRecord) {\r\n    return makeDefaultHandle.call(this);\r\n  }\r\n  var toType;\r\n  if (this.isConst) {\r\n    toType = registeredPointerRecord.constPointerType;\r\n  } else {\r\n    toType = registeredPointerRecord.pointerType;\r\n  }\r\n  var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\r\n  if (dp === null) {\r\n    return makeDefaultHandle.call(this);\r\n  }\r\n  if (this.isSmartPointer) {\r\n    return makeClassHandle(toType.registeredClass.instancePrototype, {\r\n      ptrType: toType,\r\n      ptr: dp,\r\n      smartPtrType: this,\r\n      smartPtr: ptr\r\n    });\r\n  } else {\r\n    return makeClassHandle(toType.registeredClass.instancePrototype, {\r\n      ptrType: toType,\r\n      ptr: dp\r\n    });\r\n  }\r\n}\r\n\r\nvar attachFinalizer = handle => {\r\n  if (\"undefined\" === typeof FinalizationRegistry) {\r\n    attachFinalizer = handle => handle;\r\n    return handle;\r\n  }\r\n  // If the running environment has a FinalizationRegistry (see\r\n  // https://github.com/tc39/proposal-weakrefs), then attach finalizers\r\n  // for class handles.  We check for the presence of FinalizationRegistry\r\n  // at run-time, not build-time.\r\n  finalizationRegistry = new FinalizationRegistry(info => {\r\n    console.warn(info.leakWarning);\r\n    releaseClassHandle(info.$$);\r\n  });\r\n  attachFinalizer = handle => {\r\n    var $$ = handle.$$;\r\n    var hasSmartPtr = !!$$.smartPtr;\r\n    if (hasSmartPtr) {\r\n      // We should not call the destructor on raw pointers in case other code expects the pointee to live\r\n      var info = {\r\n        $$\r\n      };\r\n      // Create a warning as an Error instance in advance so that we can store\r\n      // the current stacktrace and point to it when / if a leak is detected.\r\n      // This is more useful than the empty stacktrace of `FinalizationRegistry`\r\n      // callback.\r\n      var cls = $$.ptrType.registeredClass;\r\n      var err = new Error(`Embind found a leaked C++ instance ${cls.name} <${ptrToString($$.ptr)}>.\\n` + \"We'll free it automatically in this case, but this functionality is not reliable across various environments.\\n\" + \"Make sure to invoke .delete() manually once you're done with the instance instead.\\n\" + \"Originally allocated\");\r\n      // `.stack` will add \"at ...\" after this sentence\r\n      if (\"captureStackTrace\" in Error) {\r\n        Error.captureStackTrace(err, RegisteredPointer_fromWireType);\r\n      }\r\n      info.leakWarning = err.stack.replace(/^Error: /, \"\");\r\n      finalizationRegistry.register(handle, info, handle);\r\n    }\r\n    return handle;\r\n  };\r\n  detachFinalizer = handle => finalizationRegistry.unregister(handle);\r\n  return attachFinalizer(handle);\r\n};\r\n\r\nvar deletionQueue = [];\r\n\r\nvar flushPendingDeletes = () => {\r\n  while (deletionQueue.length) {\r\n    var obj = deletionQueue.pop();\r\n    obj.$$.deleteScheduled = false;\r\n    obj[\"delete\"]();\r\n  }\r\n};\r\n\r\nvar delayFunction;\r\n\r\nvar init_ClassHandle = () => {\r\n  let proto = ClassHandle.prototype;\r\n  Object.assign(proto, {\r\n    \"isAliasOf\"(other) {\r\n      if (!(this instanceof ClassHandle)) {\r\n        return false;\r\n      }\r\n      if (!(other instanceof ClassHandle)) {\r\n        return false;\r\n      }\r\n      var leftClass = this.$$.ptrType.registeredClass;\r\n      var left = this.$$.ptr;\r\n      other.$$ = /** @type {Object} */ (other.$$);\r\n      var rightClass = other.$$.ptrType.registeredClass;\r\n      var right = other.$$.ptr;\r\n      while (leftClass.baseClass) {\r\n        left = leftClass.upcast(left);\r\n        leftClass = leftClass.baseClass;\r\n      }\r\n      while (rightClass.baseClass) {\r\n        right = rightClass.upcast(right);\r\n        rightClass = rightClass.baseClass;\r\n      }\r\n      return leftClass === rightClass && left === right;\r\n    },\r\n    \"clone\"() {\r\n      if (!this.$$.ptr) {\r\n        throwInstanceAlreadyDeleted(this);\r\n      }\r\n      if (this.$$.preservePointerOnDelete) {\r\n        this.$$.count.value += 1;\r\n        return this;\r\n      } else {\r\n        var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {\r\n          $$: {\r\n            value: shallowCopyInternalPointer(this.$$)\r\n          }\r\n        }));\r\n        clone.$$.count.value += 1;\r\n        clone.$$.deleteScheduled = false;\r\n        return clone;\r\n      }\r\n    },\r\n    \"delete\"() {\r\n      if (!this.$$.ptr) {\r\n        throwInstanceAlreadyDeleted(this);\r\n      }\r\n      if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\r\n        throwBindingError(\"Object already scheduled for deletion\");\r\n      }\r\n      detachFinalizer(this);\r\n      releaseClassHandle(this.$$);\r\n      if (!this.$$.preservePointerOnDelete) {\r\n        this.$$.smartPtr = undefined;\r\n        this.$$.ptr = undefined;\r\n      }\r\n    },\r\n    \"isDeleted\"() {\r\n      return !this.$$.ptr;\r\n    },\r\n    \"deleteLater\"() {\r\n      if (!this.$$.ptr) {\r\n        throwInstanceAlreadyDeleted(this);\r\n      }\r\n      if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\r\n        throwBindingError(\"Object already scheduled for deletion\");\r\n      }\r\n      deletionQueue.push(this);\r\n      if (deletionQueue.length === 1 && delayFunction) {\r\n        delayFunction(flushPendingDeletes);\r\n      }\r\n      this.$$.deleteScheduled = true;\r\n      return this;\r\n    }\r\n  });\r\n  // Support `using ...` from https://github.com/tc39/proposal-explicit-resource-management.\r\n  const symbolDispose = Symbol.dispose;\r\n  if (symbolDispose) {\r\n    proto[symbolDispose] = proto[\"delete\"];\r\n  }\r\n};\r\n\r\n/** @constructor */ function ClassHandle() {}\r\n\r\nvar createNamedFunction = (name, func) => Object.defineProperty(func, \"name\", {\r\n  value: name\r\n});\r\n\r\nvar ensureOverloadTable = (proto, methodName, humanName) => {\r\n  if (undefined === proto[methodName].overloadTable) {\r\n    var prevFunc = proto[methodName];\r\n    // Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.\r\n    proto[methodName] = function(...args) {\r\n      // TODO This check can be removed in -O3 level \"unsafe\" optimizations.\r\n      if (!proto[methodName].overloadTable.hasOwnProperty(args.length)) {\r\n        throwBindingError(`Function '${humanName}' called with an invalid number of arguments (${args.length}) - expects one of (${proto[methodName].overloadTable})!`);\r\n      }\r\n      return proto[methodName].overloadTable[args.length].apply(this, args);\r\n    };\r\n    // Move the previous function into the overload table.\r\n    proto[methodName].overloadTable = [];\r\n    proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\r\n  }\r\n};\r\n\r\n/** @param {number=} numArguments */ var exposePublicSymbol = (name, value, numArguments) => {\r\n  if (Module.hasOwnProperty(name)) {\r\n    if (undefined === numArguments || (undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments])) {\r\n      throwBindingError(`Cannot register public name '${name}' twice`);\r\n    }\r\n    // We are exposing a function with the same name as an existing function. Create an overload table and a function selector\r\n    // that routes between the two.\r\n    ensureOverloadTable(Module, name, name);\r\n    if (Module[name].overloadTable.hasOwnProperty(numArguments)) {\r\n      throwBindingError(`Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`);\r\n    }\r\n    // Add the new function into the overload table.\r\n    Module[name].overloadTable[numArguments] = value;\r\n  } else {\r\n    Module[name] = value;\r\n    Module[name].argCount = numArguments;\r\n  }\r\n};\r\n\r\nvar char_0 = 48;\r\n\r\nvar char_9 = 57;\r\n\r\nvar makeLegalFunctionName = name => {\r\n  assert(typeof name === \"string\");\r\n  name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\r\n  var f = name.charCodeAt(0);\r\n  if (f >= char_0 && f <= char_9) {\r\n    return `_${name}`;\r\n  }\r\n  return name;\r\n};\r\n\r\n/** @constructor */ function RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\r\n  this.name = name;\r\n  this.constructor = constructor;\r\n  this.instancePrototype = instancePrototype;\r\n  this.rawDestructor = rawDestructor;\r\n  this.baseClass = baseClass;\r\n  this.getActualType = getActualType;\r\n  this.upcast = upcast;\r\n  this.downcast = downcast;\r\n  this.pureVirtualFunctions = [];\r\n}\r\n\r\nvar upcastPointer = (ptr, ptrClass, desiredClass) => {\r\n  while (ptrClass !== desiredClass) {\r\n    if (!ptrClass.upcast) {\r\n      throwBindingError(`Expected null or instance of ${desiredClass.name}, got an instance of ${ptrClass.name}`);\r\n    }\r\n    ptr = ptrClass.upcast(ptr);\r\n    ptrClass = ptrClass.baseClass;\r\n  }\r\n  return ptr;\r\n};\r\n\r\n/** @suppress {globalThis} */ function constNoSmartPtrRawPointerToWireType(destructors, handle) {\r\n  if (handle === null) {\r\n    if (this.isReference) {\r\n      throwBindingError(`null is not a valid ${this.name}`);\r\n    }\r\n    return 0;\r\n  }\r\n  if (!handle.$$) {\r\n    throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\r\n  }\r\n  if (!handle.$$.ptr) {\r\n    throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\r\n  }\r\n  var handleClass = handle.$$.ptrType.registeredClass;\r\n  var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\r\n  return ptr;\r\n}\r\n\r\n/** @suppress {globalThis} */ function genericPointerToWireType(destructors, handle) {\r\n  var ptr;\r\n  if (handle === null) {\r\n    if (this.isReference) {\r\n      throwBindingError(`null is not a valid ${this.name}`);\r\n    }\r\n    if (this.isSmartPointer) {\r\n      ptr = this.rawConstructor();\r\n      if (destructors !== null) {\r\n        destructors.push(this.rawDestructor, ptr);\r\n      }\r\n      return ptr;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  if (!handle || !handle.$$) {\r\n    throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\r\n  }\r\n  if (!handle.$$.ptr) {\r\n    throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\r\n  }\r\n  if (!this.isConst && handle.$$.ptrType.isConst) {\r\n    throwBindingError(`Cannot convert argument of type ${(handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name)} to parameter type ${this.name}`);\r\n  }\r\n  var handleClass = handle.$$.ptrType.registeredClass;\r\n  ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\r\n  if (this.isSmartPointer) {\r\n    // TODO: this is not strictly true\r\n    // We could support BY_EMVAL conversions from raw pointers to smart pointers\r\n    // because the smart pointer can hold a reference to the handle\r\n    if (undefined === handle.$$.smartPtr) {\r\n      throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\r\n    }\r\n    switch (this.sharingPolicy) {\r\n     case 0:\r\n      // NONE\r\n      // no upcasting\r\n      if (handle.$$.smartPtrType === this) {\r\n        ptr = handle.$$.smartPtr;\r\n      } else {\r\n        throwBindingError(`Cannot convert argument of type ${(handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name)} to parameter type ${this.name}`);\r\n      }\r\n      break;\r\n\r\n     case 1:\r\n      // INTRUSIVE\r\n      ptr = handle.$$.smartPtr;\r\n      break;\r\n\r\n     case 2:\r\n      // BY_EMVAL\r\n      if (handle.$$.smartPtrType === this) {\r\n        ptr = handle.$$.smartPtr;\r\n      } else {\r\n        var clonedHandle = handle[\"clone\"]();\r\n        ptr = this.rawShare(ptr, Emval.toHandle(() => clonedHandle[\"delete\"]()));\r\n        if (destructors !== null) {\r\n          destructors.push(this.rawDestructor, ptr);\r\n        }\r\n      }\r\n      break;\r\n\r\n     default:\r\n      throwBindingError(\"Unsupporting sharing policy\");\r\n    }\r\n  }\r\n  return ptr;\r\n}\r\n\r\n/** @suppress {globalThis} */ function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\r\n  if (handle === null) {\r\n    if (this.isReference) {\r\n      throwBindingError(`null is not a valid ${this.name}`);\r\n    }\r\n    return 0;\r\n  }\r\n  if (!handle.$$) {\r\n    throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\r\n  }\r\n  if (!handle.$$.ptr) {\r\n    throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\r\n  }\r\n  if (handle.$$.ptrType.isConst) {\r\n    throwBindingError(`Cannot convert argument of type ${handle.$$.ptrType.name} to parameter type ${this.name}`);\r\n  }\r\n  var handleClass = handle.$$.ptrType.registeredClass;\r\n  var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\r\n  return ptr;\r\n}\r\n\r\nvar init_RegisteredPointer = () => {\r\n  Object.assign(RegisteredPointer.prototype, {\r\n    getPointee(ptr) {\r\n      if (this.rawGetPointee) {\r\n        ptr = this.rawGetPointee(ptr);\r\n      }\r\n      return ptr;\r\n    },\r\n    destructor(ptr) {\r\n      this.rawDestructor?.(ptr);\r\n    },\r\n    argPackAdvance: GenericWireTypeSize,\r\n    \"readValueFromPointer\": readPointer,\r\n    \"fromWireType\": RegisteredPointer_fromWireType\r\n  });\r\n};\r\n\r\n/** @constructor\r\n      @param {*=} pointeeType,\r\n      @param {*=} sharingPolicy,\r\n      @param {*=} rawGetPointee,\r\n      @param {*=} rawConstructor,\r\n      @param {*=} rawShare,\r\n      @param {*=} rawDestructor,\r\n       */ function RegisteredPointer(name, registeredClass, isReference, isConst, // smart pointer properties\r\nisSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\r\n  this.name = name;\r\n  this.registeredClass = registeredClass;\r\n  this.isReference = isReference;\r\n  this.isConst = isConst;\r\n  // smart pointer properties\r\n  this.isSmartPointer = isSmartPointer;\r\n  this.pointeeType = pointeeType;\r\n  this.sharingPolicy = sharingPolicy;\r\n  this.rawGetPointee = rawGetPointee;\r\n  this.rawConstructor = rawConstructor;\r\n  this.rawShare = rawShare;\r\n  this.rawDestructor = rawDestructor;\r\n  if (!isSmartPointer && registeredClass.baseClass === undefined) {\r\n    if (isConst) {\r\n      this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\r\n      this.destructorFunction = null;\r\n    } else {\r\n      this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\r\n      this.destructorFunction = null;\r\n    }\r\n  } else {\r\n    this[\"toWireType\"] = genericPointerToWireType;\r\n  }\r\n}\r\n\r\n/** @param {number=} numArguments */ var replacePublicSymbol = (name, value, numArguments) => {\r\n  if (!Module.hasOwnProperty(name)) {\r\n    throwInternalError(\"Replacing nonexistent public symbol\");\r\n  }\r\n  // If there's an overload table for this symbol, replace the symbol in the overload table instead.\r\n  if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\r\n    Module[name].overloadTable[numArguments] = value;\r\n  } else {\r\n    Module[name] = value;\r\n    Module[name].argCount = numArguments;\r\n  }\r\n};\r\n\r\nvar embind__requireFunction = (signature, rawFunction, isAsync = false) => {\r\n  assert(!isAsync, \"Async bindings are only supported with JSPI.\");\r\n  signature = readLatin1String(signature);\r\n  function makeDynCaller() {\r\n    var rtn = getWasmTableEntry(rawFunction);\r\n    return rtn;\r\n  }\r\n  var fp = makeDynCaller();\r\n  if (typeof fp != \"function\") {\r\n    throwBindingError(`unknown function pointer with signature ${signature}: ${rawFunction}`);\r\n  }\r\n  return fp;\r\n};\r\n\r\nclass UnboundTypeError extends Error {}\r\n\r\nvar getTypeName = type => {\r\n  var ptr = ___getTypeName(type);\r\n  var rv = readLatin1String(ptr);\r\n  _free(ptr);\r\n  return rv;\r\n};\r\n\r\nvar throwUnboundTypeError = (message, types) => {\r\n  var unboundTypes = [];\r\n  var seen = {};\r\n  function visit(type) {\r\n    if (seen[type]) {\r\n      return;\r\n    }\r\n    if (registeredTypes[type]) {\r\n      return;\r\n    }\r\n    if (typeDependencies[type]) {\r\n      typeDependencies[type].forEach(visit);\r\n      return;\r\n    }\r\n    unboundTypes.push(type);\r\n    seen[type] = true;\r\n  }\r\n  types.forEach(visit);\r\n  throw new UnboundTypeError(`${message}: ` + unboundTypes.map(getTypeName).join([ \", \" ]));\r\n};\r\n\r\nvar __embind_register_class = (rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name, destructorSignature, rawDestructor) => {\r\n  name = readLatin1String(name);\r\n  getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\r\n  upcast &&= embind__requireFunction(upcastSignature, upcast);\r\n  downcast &&= embind__requireFunction(downcastSignature, downcast);\r\n  rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\r\n  var legalFunctionName = makeLegalFunctionName(name);\r\n  exposePublicSymbol(legalFunctionName, function() {\r\n    // this code cannot run if baseClassRawType is zero\r\n    throwUnboundTypeError(`Cannot construct ${name} due to unbound types`, [ baseClassRawType ]);\r\n  });\r\n  whenDependentTypesAreResolved([ rawType, rawPointerType, rawConstPointerType ], baseClassRawType ? [ baseClassRawType ] : [], base => {\r\n    base = base[0];\r\n    var baseClass;\r\n    var basePrototype;\r\n    if (baseClassRawType) {\r\n      baseClass = base.registeredClass;\r\n      basePrototype = baseClass.instancePrototype;\r\n    } else {\r\n      basePrototype = ClassHandle.prototype;\r\n    }\r\n    var constructor = createNamedFunction(name, function(...args) {\r\n      if (Object.getPrototypeOf(this) !== instancePrototype) {\r\n        throw new BindingError(`Use 'new' to construct ${name}`);\r\n      }\r\n      if (undefined === registeredClass.constructor_body) {\r\n        throw new BindingError(`${name} has no accessible constructor`);\r\n      }\r\n      var body = registeredClass.constructor_body[args.length];\r\n      if (undefined === body) {\r\n        throw new BindingError(`Tried to invoke ctor of ${name} with invalid number of parameters (${args.length}) - expected (${Object.keys(registeredClass.constructor_body).toString()}) parameters instead!`);\r\n      }\r\n      return body.apply(this, args);\r\n    });\r\n    var instancePrototype = Object.create(basePrototype, {\r\n      constructor: {\r\n        value: constructor\r\n      }\r\n    });\r\n    constructor.prototype = instancePrototype;\r\n    var registeredClass = new RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\r\n    if (registeredClass.baseClass) {\r\n      // Keep track of class hierarchy. Used to allow sub-classes to inherit class functions.\r\n      registeredClass.baseClass.__derivedClasses ??= [];\r\n      registeredClass.baseClass.__derivedClasses.push(registeredClass);\r\n    }\r\n    var referenceConverter = new RegisteredPointer(name, registeredClass, true, false, false);\r\n    var pointerConverter = new RegisteredPointer(name + \"*\", registeredClass, false, false, false);\r\n    var constPointerConverter = new RegisteredPointer(name + \" const*\", registeredClass, false, true, false);\r\n    registeredPointers[rawType] = {\r\n      pointerType: pointerConverter,\r\n      constPointerType: constPointerConverter\r\n    };\r\n    replacePublicSymbol(legalFunctionName, constructor);\r\n    return [ referenceConverter, pointerConverter, constPointerConverter ];\r\n  });\r\n};\r\n\r\nvar heap32VectorToArray = (count, firstElement) => {\r\n  var array = [];\r\n  for (var i = 0; i < count; i++) {\r\n    // TODO(https://github.com/emscripten-core/emscripten/issues/17310):\r\n    // Find a way to hoist the `>> 2` or `>> 3` out of this loop.\r\n    array.push(GROWABLE_HEAP_U32()[(((firstElement) + (i * 4)) >> 2)]);\r\n  }\r\n  return array;\r\n};\r\n\r\nfunction usesDestructorStack(argTypes) {\r\n  // Skip return value at index 0 - it's not deleted here.\r\n  for (var i = 1; i < argTypes.length; ++i) {\r\n    // The type does not define a destructor function - must use dynamic stack\r\n    if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction checkArgCount(numArgs, minArgs, maxArgs, humanName, throwBindingError) {\r\n  if (numArgs < minArgs || numArgs > maxArgs) {\r\n    var argCountMessage = minArgs == maxArgs ? minArgs : `${minArgs} to ${maxArgs}`;\r\n    throwBindingError(`function ${humanName} called with ${numArgs} arguments, expected ${argCountMessage}`);\r\n  }\r\n}\r\n\r\nfunction createJsInvoker(argTypes, isClassMethodFunc, returns, isAsync) {\r\n  var needsDestructorStack = usesDestructorStack(argTypes);\r\n  var argCount = argTypes.length - 2;\r\n  var argsList = [];\r\n  var argsListWired = [ \"fn\" ];\r\n  if (isClassMethodFunc) {\r\n    argsListWired.push(\"thisWired\");\r\n  }\r\n  for (var i = 0; i < argCount; ++i) {\r\n    argsList.push(`arg${i}`);\r\n    argsListWired.push(`arg${i}Wired`);\r\n  }\r\n  argsList = argsList.join(\",\");\r\n  argsListWired = argsListWired.join(\",\");\r\n  var invokerFnBody = `return function (${argsList}) {\\n`;\r\n  invokerFnBody += \"checkArgCount(arguments.length, minArgs, maxArgs, humanName, throwBindingError);\\n\";\r\n  if (needsDestructorStack) {\r\n    invokerFnBody += \"var destructors = [];\\n\";\r\n  }\r\n  var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\r\n  var args1 = [ \"humanName\", \"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\" ];\r\n  if (isClassMethodFunc) {\r\n    invokerFnBody += `var thisWired = classParam['toWireType'](${dtorStack}, this);\\n`;\r\n  }\r\n  for (var i = 0; i < argCount; ++i) {\r\n    invokerFnBody += `var arg${i}Wired = argType${i}['toWireType'](${dtorStack}, arg${i});\\n`;\r\n    args1.push(`argType${i}`);\r\n  }\r\n  invokerFnBody += (returns || isAsync ? \"var rv = \" : \"\") + `invoker(${argsListWired});\\n`;\r\n  var returnVal = returns ? \"rv\" : \"\";\r\n  if (needsDestructorStack) {\r\n    invokerFnBody += \"runDestructors(destructors);\\n\";\r\n  } else {\r\n    for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\r\n      // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.\r\n      var paramName = (i === 1 ? \"thisWired\" : (\"arg\" + (i - 2) + \"Wired\"));\r\n      if (argTypes[i].destructorFunction !== null) {\r\n        invokerFnBody += `${paramName}_dtor(${paramName});\\n`;\r\n        args1.push(`${paramName}_dtor`);\r\n      }\r\n    }\r\n  }\r\n  if (returns) {\r\n    invokerFnBody += \"var ret = retType['fromWireType'](rv);\\n\" + \"return ret;\\n\";\r\n  } else {}\r\n  invokerFnBody += \"}\\n\";\r\n  args1.push(\"checkArgCount\", \"minArgs\", \"maxArgs\");\r\n  invokerFnBody = `if (arguments.length !== ${args1.length}){ throw new Error(humanName + \"Expected ${args1.length} closure arguments \" + arguments.length + \" given.\"); }\\n${invokerFnBody}`;\r\n  return [ args1, invokerFnBody ];\r\n}\r\n\r\nfunction getRequiredArgCount(argTypes) {\r\n  var requiredArgCount = argTypes.length - 2;\r\n  for (var i = argTypes.length - 1; i >= 2; --i) {\r\n    if (!argTypes[i].optional) {\r\n      break;\r\n    }\r\n    requiredArgCount--;\r\n  }\r\n  return requiredArgCount;\r\n}\r\n\r\nfunction craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc, /** boolean= */ isAsync) {\r\n  // humanName: a human-readable string name for the function to be generated.\r\n  // argTypes: An array that contains the embind type objects for all types in the function signature.\r\n  //    argTypes[0] is the type object for the function return value.\r\n  //    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.\r\n  //    argTypes[2...] are the actual function parameters.\r\n  // classType: The embind type object for the class to be bound, or null if this is not a method of a class.\r\n  // cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.\r\n  // cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.\r\n  // isAsync: Optional. If true, returns an async function. Async bindings are only supported with JSPI.\r\n  var argCount = argTypes.length;\r\n  if (argCount < 2) {\r\n    throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\r\n  }\r\n  assert(!isAsync, \"Async bindings are only supported with JSPI.\");\r\n  var isClassMethodFunc = (argTypes[1] !== null && classType !== null);\r\n  // Free functions with signature \"void function()\" do not need an invoker that marshalls between wire types.\r\n  // TODO: This omits argument count check - enable only at -O3 or similar.\r\n  //    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == \"void\" && !isClassMethodFunc) {\r\n  //       return FUNCTION_TABLE[fn];\r\n  //    }\r\n  // Determine if we need to use a dynamic stack to store the destructors for the function parameters.\r\n  // TODO: Remove this completely once all function invokers are being dynamically generated.\r\n  var needsDestructorStack = usesDestructorStack(argTypes);\r\n  var returns = (argTypes[0].name !== \"void\");\r\n  var expectedArgCount = argCount - 2;\r\n  var minArgs = getRequiredArgCount(argTypes);\r\n  // Builld the arguments that will be passed into the closure around the invoker\r\n  // function.\r\n  var closureArgs = [ humanName, throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1] ];\r\n  for (var i = 0; i < argCount - 2; ++i) {\r\n    closureArgs.push(argTypes[i + 2]);\r\n  }\r\n  if (!needsDestructorStack) {\r\n    // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.\r\n    for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\r\n      if (argTypes[i].destructorFunction !== null) {\r\n        closureArgs.push(argTypes[i].destructorFunction);\r\n      }\r\n    }\r\n  }\r\n  closureArgs.push(checkArgCount, minArgs, expectedArgCount);\r\n  let [args, invokerFnBody] = createJsInvoker(argTypes, isClassMethodFunc, returns, isAsync);\r\n  var invokerFn = new Function(...args, invokerFnBody)(...closureArgs);\r\n  return createNamedFunction(humanName, invokerFn);\r\n}\r\n\r\nvar __embind_register_class_constructor = (rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) => {\r\n  assert(argCount > 0);\r\n  var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\r\n  invoker = embind__requireFunction(invokerSignature, invoker);\r\n  var args = [ rawConstructor ];\r\n  var destructors = [];\r\n  whenDependentTypesAreResolved([], [ rawClassType ], classType => {\r\n    classType = classType[0];\r\n    var humanName = `constructor ${classType.name}`;\r\n    if (undefined === classType.registeredClass.constructor_body) {\r\n      classType.registeredClass.constructor_body = [];\r\n    }\r\n    if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {\r\n      throw new BindingError(`Cannot register multiple constructors with identical number of parameters (${argCount - 1}) for class '${classType.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);\r\n    }\r\n    classType.registeredClass.constructor_body[argCount - 1] = () => {\r\n      throwUnboundTypeError(`Cannot construct ${classType.name} due to unbound types`, rawArgTypes);\r\n    };\r\n    whenDependentTypesAreResolved([], rawArgTypes, argTypes => {\r\n      // Insert empty slot for context type (argTypes[1]).\r\n      argTypes.splice(1, 0, null);\r\n      classType.registeredClass.constructor_body[argCount - 1] = craftInvokerFunction(humanName, argTypes, null, invoker, rawConstructor);\r\n      return [];\r\n    });\r\n    return [];\r\n  });\r\n};\r\n\r\nvar getFunctionName = signature => {\r\n  signature = signature.trim();\r\n  const argsIndex = signature.indexOf(\"(\");\r\n  if (argsIndex === -1) return signature;\r\n  assert(signature.endsWith(\")\"), \"Parentheses for argument names should match.\");\r\n  return signature.slice(0, argsIndex);\r\n};\r\n\r\nvar __embind_register_class_function = (rawClassType, methodName, argCount, rawArgTypesAddr, // [ReturnType, ThisType, Args...]\r\ninvokerSignature, rawInvoker, context, isPureVirtual, isAsync, isNonnullReturn) => {\r\n  var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\r\n  methodName = readLatin1String(methodName);\r\n  methodName = getFunctionName(methodName);\r\n  rawInvoker = embind__requireFunction(invokerSignature, rawInvoker, isAsync);\r\n  whenDependentTypesAreResolved([], [ rawClassType ], classType => {\r\n    classType = classType[0];\r\n    var humanName = `${classType.name}.${methodName}`;\r\n    if (methodName.startsWith(\"@@\")) {\r\n      methodName = Symbol[methodName.substring(2)];\r\n    }\r\n    if (isPureVirtual) {\r\n      classType.registeredClass.pureVirtualFunctions.push(methodName);\r\n    }\r\n    function unboundTypesHandler() {\r\n      throwUnboundTypeError(`Cannot call ${humanName} due to unbound types`, rawArgTypes);\r\n    }\r\n    var proto = classType.registeredClass.instancePrototype;\r\n    var method = proto[methodName];\r\n    if (undefined === method || (undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2)) {\r\n      // This is the first overload to be registered, OR we are replacing a\r\n      // function in the base class with a function in the derived class.\r\n      unboundTypesHandler.argCount = argCount - 2;\r\n      unboundTypesHandler.className = classType.name;\r\n      proto[methodName] = unboundTypesHandler;\r\n    } else {\r\n      // There was an existing function with the same name registered. Set up\r\n      // a function overload routing table.\r\n      ensureOverloadTable(proto, methodName, humanName);\r\n      proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\r\n    }\r\n    whenDependentTypesAreResolved([], rawArgTypes, argTypes => {\r\n      var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context, isAsync);\r\n      // Replace the initial unbound-handler-stub function with the\r\n      // appropriate member function, now that all types are resolved. If\r\n      // multiple overloads are registered for this function, the function\r\n      // goes into an overload table.\r\n      if (undefined === proto[methodName].overloadTable) {\r\n        // Set argCount in case an overload is registered later\r\n        memberFunction.argCount = argCount - 2;\r\n        proto[methodName] = memberFunction;\r\n      } else {\r\n        proto[methodName].overloadTable[argCount - 2] = memberFunction;\r\n      }\r\n      return [];\r\n    });\r\n    return [];\r\n  });\r\n};\r\n\r\nvar validateThis = (this_, classType, humanName) => {\r\n  if (!(this_ instanceof Object)) {\r\n    throwBindingError(`${humanName} with invalid \"this\": ${this_}`);\r\n  }\r\n  if (!(this_ instanceof classType.registeredClass.constructor)) {\r\n    throwBindingError(`${humanName} incompatible with \"this\" of type ${this_.constructor.name}`);\r\n  }\r\n  if (!this_.$$.ptr) {\r\n    throwBindingError(`cannot call emscripten binding method ${humanName} on deleted object`);\r\n  }\r\n  // todo: kill this\r\n  return upcastPointer(this_.$$.ptr, this_.$$.ptrType.registeredClass, classType.registeredClass);\r\n};\r\n\r\nvar __embind_register_class_property = (classType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) => {\r\n  fieldName = readLatin1String(fieldName);\r\n  getter = embind__requireFunction(getterSignature, getter);\r\n  whenDependentTypesAreResolved([], [ classType ], classType => {\r\n    classType = classType[0];\r\n    var humanName = `${classType.name}.${fieldName}`;\r\n    var desc = {\r\n      get() {\r\n        throwUnboundTypeError(`Cannot access ${humanName} due to unbound types`, [ getterReturnType, setterArgumentType ]);\r\n      },\r\n      enumerable: true,\r\n      configurable: true\r\n    };\r\n    if (setter) {\r\n      desc.set = () => throwUnboundTypeError(`Cannot access ${humanName} due to unbound types`, [ getterReturnType, setterArgumentType ]);\r\n    } else {\r\n      desc.set = v => throwBindingError(humanName + \" is a read-only property\");\r\n    }\r\n    Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);\r\n    whenDependentTypesAreResolved([], (setter ? [ getterReturnType, setterArgumentType ] : [ getterReturnType ]), types => {\r\n      var getterReturnType = types[0];\r\n      var desc = {\r\n        get() {\r\n          var ptr = validateThis(this, classType, humanName + \" getter\");\r\n          return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\r\n        },\r\n        enumerable: true\r\n      };\r\n      if (setter) {\r\n        setter = embind__requireFunction(setterSignature, setter);\r\n        var setterArgumentType = types[1];\r\n        desc.set = function(v) {\r\n          var ptr = validateThis(this, classType, humanName + \" setter\");\r\n          var destructors = [];\r\n          setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, v));\r\n          runDestructors(destructors);\r\n        };\r\n      }\r\n      Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);\r\n      return [];\r\n    });\r\n    return [];\r\n  });\r\n};\r\n\r\nvar emval_freelist = [];\r\n\r\nvar emval_handles = [];\r\n\r\nvar __emval_decref = handle => {\r\n  if (handle > 9 && 0 === --emval_handles[handle + 1]) {\r\n    assert(emval_handles[handle] !== undefined, `Decref for unallocated handle.`);\r\n    emval_handles[handle] = undefined;\r\n    emval_freelist.push(handle);\r\n  }\r\n};\r\n\r\nvar count_emval_handles = () => emval_handles.length / 2 - 5 - emval_freelist.length;\r\n\r\nvar init_emval = () => {\r\n  // reserve 0 and some special values. These never get de-allocated.\r\n  emval_handles.push(0, 1, undefined, 1, null, 1, true, 1, false, 1);\r\n  assert(emval_handles.length === 5 * 2);\r\n  Module[\"count_emval_handles\"] = count_emval_handles;\r\n};\r\n\r\nvar Emval = {\r\n  toValue: handle => {\r\n    if (!handle) {\r\n      throwBindingError(`Cannot use deleted val. handle = ${handle}`);\r\n    }\r\n    // handle 2 is supposed to be `undefined`.\r\n    assert(handle === 2 || emval_handles[handle] !== undefined && handle % 2 === 0, `invalid handle: ${handle}`);\r\n    return emval_handles[handle];\r\n  },\r\n  toHandle: value => {\r\n    switch (value) {\r\n     case undefined:\r\n      return 2;\r\n\r\n     case null:\r\n      return 4;\r\n\r\n     case true:\r\n      return 6;\r\n\r\n     case false:\r\n      return 8;\r\n\r\n     default:\r\n      {\r\n        const handle = emval_freelist.pop() || emval_handles.length;\r\n        emval_handles[handle] = value;\r\n        emval_handles[handle + 1] = 1;\r\n        return handle;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nvar EmValType = {\r\n  name: \"emscripten::val\",\r\n  \"fromWireType\": handle => {\r\n    var rv = Emval.toValue(handle);\r\n    __emval_decref(handle);\r\n    return rv;\r\n  },\r\n  \"toWireType\": (destructors, value) => Emval.toHandle(value),\r\n  argPackAdvance: GenericWireTypeSize,\r\n  \"readValueFromPointer\": readPointer,\r\n  destructorFunction: null\r\n};\r\n\r\nvar __embind_register_emval = rawType => registerType(rawType, EmValType);\r\n\r\nvar floatReadValueFromPointer = (name, width) => {\r\n  switch (width) {\r\n   case 4:\r\n    return function(pointer) {\r\n      return this[\"fromWireType\"](GROWABLE_HEAP_F32()[((pointer) >> 2)]);\r\n    };\r\n\r\n   case 8:\r\n    return function(pointer) {\r\n      return this[\"fromWireType\"](GROWABLE_HEAP_F64()[((pointer) >> 3)]);\r\n    };\r\n\r\n   default:\r\n    throw new TypeError(`invalid float width (${width}): ${name}`);\r\n  }\r\n};\r\n\r\nvar __embind_register_float = (rawType, name, size) => {\r\n  name = readLatin1String(name);\r\n  registerType(rawType, {\r\n    name,\r\n    \"fromWireType\": value => value,\r\n    \"toWireType\": (destructors, value) => {\r\n      if (typeof value != \"number\" && typeof value != \"boolean\") {\r\n        throw new TypeError(`Cannot convert ${embindRepr(value)} to ${this.name}`);\r\n      }\r\n      // The VM will perform JS to Wasm value conversion, according to the spec:\r\n      // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\r\n      return value;\r\n    },\r\n    argPackAdvance: GenericWireTypeSize,\r\n    \"readValueFromPointer\": floatReadValueFromPointer(name, size),\r\n    destructorFunction: null\r\n  });\r\n};\r\n\r\nvar __embind_register_function = (name, argCount, rawArgTypesAddr, signature, rawInvoker, fn, isAsync, isNonnullReturn) => {\r\n  var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\r\n  name = readLatin1String(name);\r\n  name = getFunctionName(name);\r\n  rawInvoker = embind__requireFunction(signature, rawInvoker, isAsync);\r\n  exposePublicSymbol(name, function() {\r\n    throwUnboundTypeError(`Cannot call ${name} due to unbound types`, argTypes);\r\n  }, argCount - 1);\r\n  whenDependentTypesAreResolved([], argTypes, argTypes => {\r\n    var invokerArgsArray = [ argTypes[0], null ].concat(argTypes.slice(1));\r\n    replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null, rawInvoker, fn, isAsync), argCount - 1);\r\n    return [];\r\n  });\r\n};\r\n\r\n/** @suppress {globalThis} */ var __embind_register_integer = (primitiveType, name, size, minRange, maxRange) => {\r\n  name = readLatin1String(name);\r\n  // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come\r\n  // out as 'i32 -1'. Always treat those as max u32.\r\n  if (maxRange === -1) {\r\n    maxRange = 4294967295;\r\n  }\r\n  var fromWireType = value => value;\r\n  if (minRange === 0) {\r\n    var bitshift = 32 - 8 * size;\r\n    fromWireType = value => (value << bitshift) >>> bitshift;\r\n  }\r\n  var isUnsignedType = (name.includes(\"unsigned\"));\r\n  var checkAssertions = (value, toTypeName) => {\r\n    if (typeof value != \"number\" && typeof value != \"boolean\") {\r\n      throw new TypeError(`Cannot convert \"${embindRepr(value)}\" to ${toTypeName}`);\r\n    }\r\n    if (value < minRange || value > maxRange) {\r\n      throw new TypeError(`Passing a number \"${embindRepr(value)}\" from JS side to C/C++ side to an argument of type \"${name}\", which is outside the valid range [${minRange}, ${maxRange}]!`);\r\n    }\r\n  };\r\n  var toWireType;\r\n  if (isUnsignedType) {\r\n    toWireType = function(destructors, value) {\r\n      checkAssertions(value, this.name);\r\n      return value >>> 0;\r\n    };\r\n  } else {\r\n    toWireType = function(destructors, value) {\r\n      checkAssertions(value, this.name);\r\n      // The VM will perform JS to Wasm value conversion, according to the spec:\r\n      // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\r\n      return value;\r\n    };\r\n  }\r\n  registerType(primitiveType, {\r\n    name,\r\n    \"fromWireType\": fromWireType,\r\n    \"toWireType\": toWireType,\r\n    argPackAdvance: GenericWireTypeSize,\r\n    \"readValueFromPointer\": integerReadValueFromPointer(name, size, minRange !== 0),\r\n    destructorFunction: null\r\n  });\r\n};\r\n\r\nvar __embind_register_memory_view = (rawType, dataTypeIndex, name) => {\r\n  var typeMapping = [ Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array, BigInt64Array, BigUint64Array ];\r\n  var TA = typeMapping[dataTypeIndex];\r\n  function decodeMemoryView(handle) {\r\n    var size = GROWABLE_HEAP_U32()[((handle) >> 2)];\r\n    var data = GROWABLE_HEAP_U32()[(((handle) + (4)) >> 2)];\r\n    return new TA(GROWABLE_HEAP_I8().buffer, data, size);\r\n  }\r\n  name = readLatin1String(name);\r\n  registerType(rawType, {\r\n    name,\r\n    \"fromWireType\": decodeMemoryView,\r\n    argPackAdvance: GenericWireTypeSize,\r\n    \"readValueFromPointer\": decodeMemoryView\r\n  }, {\r\n    ignoreDuplicateRegistrations: true\r\n  });\r\n};\r\n\r\nvar EmValOptionalType = Object.assign({\r\n  optional: true\r\n}, EmValType);\r\n\r\nvar __embind_register_optional = (rawOptionalType, rawType) => {\r\n  registerType(rawOptionalType, EmValOptionalType);\r\n};\r\n\r\nvar stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\r\n  assert(typeof str === \"string\", `stringToUTF8Array expects a string (got ${typeof str})`);\r\n  // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\r\n  // undefined and false each don't write out any bytes.\r\n  if (!(maxBytesToWrite > 0)) return 0;\r\n  var startIdx = outIdx;\r\n  var endIdx = outIdx + maxBytesToWrite - 1;\r\n  // -1 for string null terminator.\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\r\n    // unit, not a Unicode code point of the character! So decode\r\n    // UTF16->UTF32->UTF8.\r\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\r\n    // and https://www.ietf.org/rfc/rfc2279.txt\r\n    // and https://tools.ietf.org/html/rfc3629\r\n    var u = str.charCodeAt(i);\r\n    // possibly a lead surrogate\r\n    if (u >= 55296 && u <= 57343) {\r\n      var u1 = str.charCodeAt(++i);\r\n      u = 65536 + ((u & 1023) << 10) | (u1 & 1023);\r\n    }\r\n    if (u <= 127) {\r\n      if (outIdx >= endIdx) break;\r\n      heap[outIdx++] = u;\r\n    } else if (u <= 2047) {\r\n      if (outIdx + 1 >= endIdx) break;\r\n      heap[outIdx++] = 192 | (u >> 6);\r\n      heap[outIdx++] = 128 | (u & 63);\r\n    } else if (u <= 65535) {\r\n      if (outIdx + 2 >= endIdx) break;\r\n      heap[outIdx++] = 224 | (u >> 12);\r\n      heap[outIdx++] = 128 | ((u >> 6) & 63);\r\n      heap[outIdx++] = 128 | (u & 63);\r\n    } else {\r\n      if (outIdx + 3 >= endIdx) break;\r\n      if (u > 1114111) warnOnce(\"Invalid Unicode code point \" + ptrToString(u) + \" encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).\");\r\n      heap[outIdx++] = 240 | (u >> 18);\r\n      heap[outIdx++] = 128 | ((u >> 12) & 63);\r\n      heap[outIdx++] = 128 | ((u >> 6) & 63);\r\n      heap[outIdx++] = 128 | (u & 63);\r\n    }\r\n  }\r\n  // Null-terminate the pointer to the buffer.\r\n  heap[outIdx] = 0;\r\n  return outIdx - startIdx;\r\n};\r\n\r\nvar stringToUTF8 = (str, outPtr, maxBytesToWrite) => {\r\n  assert(typeof maxBytesToWrite == \"number\", \"stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");\r\n  return stringToUTF8Array(str, GROWABLE_HEAP_U8(), outPtr, maxBytesToWrite);\r\n};\r\n\r\nvar lengthBytesUTF8 = str => {\r\n  var len = 0;\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\r\n    // unit, not a Unicode code point of the character! So decode\r\n    // UTF16->UTF32->UTF8.\r\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n    var c = str.charCodeAt(i);\r\n    // possibly a lead surrogate\r\n    if (c <= 127) {\r\n      len++;\r\n    } else if (c <= 2047) {\r\n      len += 2;\r\n    } else if (c >= 55296 && c <= 57343) {\r\n      len += 4;\r\n      ++i;\r\n    } else {\r\n      len += 3;\r\n    }\r\n  }\r\n  return len;\r\n};\r\n\r\nvar __embind_register_std_string = (rawType, name) => {\r\n  name = readLatin1String(name);\r\n  var stdStringIsUTF8 = true;\r\n  registerType(rawType, {\r\n    name,\r\n    // For some method names we use string keys here since they are part of\r\n    // the public/external API and/or used by the runtime-generated code.\r\n    \"fromWireType\"(value) {\r\n      var length = GROWABLE_HEAP_U32()[((value) >> 2)];\r\n      var payload = value + 4;\r\n      var str;\r\n      if (stdStringIsUTF8) {\r\n        var decodeStartPtr = payload;\r\n        // Looping here to support possible embedded '0' bytes\r\n        for (var i = 0; i <= length; ++i) {\r\n          var currentBytePtr = payload + i;\r\n          if (i == length || GROWABLE_HEAP_U8()[currentBytePtr] == 0) {\r\n            var maxRead = currentBytePtr - decodeStartPtr;\r\n            var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\r\n            if (str === undefined) {\r\n              str = stringSegment;\r\n            } else {\r\n              str += String.fromCharCode(0);\r\n              str += stringSegment;\r\n            }\r\n            decodeStartPtr = currentBytePtr + 1;\r\n          }\r\n        }\r\n      } else {\r\n        var a = new Array(length);\r\n        for (var i = 0; i < length; ++i) {\r\n          a[i] = String.fromCharCode(GROWABLE_HEAP_U8()[payload + i]);\r\n        }\r\n        str = a.join(\"\");\r\n      }\r\n      _free(value);\r\n      return str;\r\n    },\r\n    \"toWireType\"(destructors, value) {\r\n      if (value instanceof ArrayBuffer) {\r\n        value = new Uint8Array(value);\r\n      }\r\n      var length;\r\n      var valueIsOfTypeString = (typeof value == \"string\");\r\n      // We accept `string` or array views with single byte elements\r\n      if (!(valueIsOfTypeString || (ArrayBuffer.isView(value) && value.BYTES_PER_ELEMENT == 1))) {\r\n        throwBindingError(\"Cannot pass non-string to std::string\");\r\n      }\r\n      if (stdStringIsUTF8 && valueIsOfTypeString) {\r\n        length = lengthBytesUTF8(value);\r\n      } else {\r\n        length = value.length;\r\n      }\r\n      // assumes POINTER_SIZE alignment\r\n      var base = _malloc(4 + length + 1);\r\n      var ptr = base + 4;\r\n      GROWABLE_HEAP_U32()[((base) >> 2)] = length;\r\n      if (valueIsOfTypeString) {\r\n        if (stdStringIsUTF8) {\r\n          stringToUTF8(value, ptr, length + 1);\r\n        } else {\r\n          for (var i = 0; i < length; ++i) {\r\n            var charCode = value.charCodeAt(i);\r\n            if (charCode > 255) {\r\n              _free(base);\r\n              throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\r\n            }\r\n            GROWABLE_HEAP_U8()[ptr + i] = charCode;\r\n          }\r\n        }\r\n      } else {\r\n        GROWABLE_HEAP_U8().set(value, ptr);\r\n      }\r\n      if (destructors !== null) {\r\n        destructors.push(_free, base);\r\n      }\r\n      return base;\r\n    },\r\n    argPackAdvance: GenericWireTypeSize,\r\n    \"readValueFromPointer\": readPointer,\r\n    destructorFunction(ptr) {\r\n      _free(ptr);\r\n    }\r\n  });\r\n};\r\n\r\nvar UTF16Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\r\n\r\nvar UTF16ToString = (ptr, maxBytesToRead) => {\r\n  assert(ptr % 2 == 0, \"Pointer passed to UTF16ToString must be aligned to two bytes!\");\r\n  var endPtr = ptr;\r\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on\r\n  // null terminator by itself.\r\n  // Also, use the length info to avoid running tiny strings through\r\n  // TextDecoder, since .subarray() allocates garbage.\r\n  var idx = endPtr >> 1;\r\n  var maxIdx = idx + maxBytesToRead / 2;\r\n  // If maxBytesToRead is not passed explicitly, it will be undefined, and this\r\n  // will always evaluate to true. This saves on code size.\r\n  while (!(idx >= maxIdx) && GROWABLE_HEAP_U16()[idx]) ++idx;\r\n  endPtr = idx << 1;\r\n  if (endPtr - ptr > 32 && UTF16Decoder) return UTF16Decoder.decode(GROWABLE_HEAP_U8().slice(ptr, endPtr));\r\n  // Fallback: decode without UTF16Decoder\r\n  var str = \"\";\r\n  // If maxBytesToRead is not passed explicitly, it will be undefined, and the\r\n  // for-loop's condition will always evaluate to true. The loop is then\r\n  // terminated on the first null char.\r\n  for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\r\n    var codeUnit = GROWABLE_HEAP_I16()[(((ptr) + (i * 2)) >> 1)];\r\n    if (codeUnit == 0) break;\r\n    // fromCharCode constructs a character from a UTF-16 code unit, so we can\r\n    // pass the UTF16 string right through.\r\n    str += String.fromCharCode(codeUnit);\r\n  }\r\n  return str;\r\n};\r\n\r\nvar stringToUTF16 = (str, outPtr, maxBytesToWrite) => {\r\n  assert(outPtr % 2 == 0, \"Pointer passed to stringToUTF16 must be aligned to two bytes!\");\r\n  assert(typeof maxBytesToWrite == \"number\", \"stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");\r\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\r\n  maxBytesToWrite ??= 2147483647;\r\n  if (maxBytesToWrite < 2) return 0;\r\n  maxBytesToWrite -= 2;\r\n  // Null terminator.\r\n  var startPtr = outPtr;\r\n  var numCharsToWrite = (maxBytesToWrite < str.length * 2) ? (maxBytesToWrite / 2) : str.length;\r\n  for (var i = 0; i < numCharsToWrite; ++i) {\r\n    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\r\n    var codeUnit = str.charCodeAt(i);\r\n    // possibly a lead surrogate\r\n    GROWABLE_HEAP_I16()[((outPtr) >> 1)] = codeUnit;\r\n    outPtr += 2;\r\n  }\r\n  // Null-terminate the pointer to the HEAP.\r\n  GROWABLE_HEAP_I16()[((outPtr) >> 1)] = 0;\r\n  return outPtr - startPtr;\r\n};\r\n\r\nvar lengthBytesUTF16 = str => str.length * 2;\r\n\r\nvar UTF32ToString = (ptr, maxBytesToRead) => {\r\n  assert(ptr % 4 == 0, \"Pointer passed to UTF32ToString must be aligned to four bytes!\");\r\n  var i = 0;\r\n  var str = \"\";\r\n  // If maxBytesToRead is not passed explicitly, it will be undefined, and this\r\n  // will always evaluate to true. This saves on code size.\r\n  while (!(i >= maxBytesToRead / 4)) {\r\n    var utf32 = GROWABLE_HEAP_I32()[(((ptr) + (i * 4)) >> 2)];\r\n    if (utf32 == 0) break;\r\n    ++i;\r\n    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\r\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n    if (utf32 >= 65536) {\r\n      var ch = utf32 - 65536;\r\n      str += String.fromCharCode(55296 | (ch >> 10), 56320 | (ch & 1023));\r\n    } else {\r\n      str += String.fromCharCode(utf32);\r\n    }\r\n  }\r\n  return str;\r\n};\r\n\r\nvar stringToUTF32 = (str, outPtr, maxBytesToWrite) => {\r\n  assert(outPtr % 4 == 0, \"Pointer passed to stringToUTF32 must be aligned to four bytes!\");\r\n  assert(typeof maxBytesToWrite == \"number\", \"stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");\r\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\r\n  maxBytesToWrite ??= 2147483647;\r\n  if (maxBytesToWrite < 4) return 0;\r\n  var startPtr = outPtr;\r\n  var endPtr = startPtr + maxBytesToWrite - 4;\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\r\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n    var codeUnit = str.charCodeAt(i);\r\n    // possibly a lead surrogate\r\n    if (codeUnit >= 55296 && codeUnit <= 57343) {\r\n      var trailSurrogate = str.charCodeAt(++i);\r\n      codeUnit = 65536 + ((codeUnit & 1023) << 10) | (trailSurrogate & 1023);\r\n    }\r\n    GROWABLE_HEAP_I32()[((outPtr) >> 2)] = codeUnit;\r\n    outPtr += 4;\r\n    if (outPtr + 4 > endPtr) break;\r\n  }\r\n  // Null-terminate the pointer to the HEAP.\r\n  GROWABLE_HEAP_I32()[((outPtr) >> 2)] = 0;\r\n  return outPtr - startPtr;\r\n};\r\n\r\nvar lengthBytesUTF32 = str => {\r\n  var len = 0;\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\r\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n    var codeUnit = str.charCodeAt(i);\r\n    if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\r\n    // possibly a lead surrogate, so skip over the tail surrogate.\r\n    len += 4;\r\n  }\r\n  return len;\r\n};\r\n\r\nvar __embind_register_std_wstring = (rawType, charSize, name) => {\r\n  name = readLatin1String(name);\r\n  var decodeString, encodeString, readCharAt, lengthBytesUTF;\r\n  if (charSize === 2) {\r\n    decodeString = UTF16ToString;\r\n    encodeString = stringToUTF16;\r\n    lengthBytesUTF = lengthBytesUTF16;\r\n    readCharAt = pointer => GROWABLE_HEAP_U16()[((pointer) >> 1)];\r\n  } else if (charSize === 4) {\r\n    decodeString = UTF32ToString;\r\n    encodeString = stringToUTF32;\r\n    lengthBytesUTF = lengthBytesUTF32;\r\n    readCharAt = pointer => GROWABLE_HEAP_U32()[((pointer) >> 2)];\r\n  }\r\n  registerType(rawType, {\r\n    name,\r\n    \"fromWireType\": value => {\r\n      // Code mostly taken from _embind_register_std_string fromWireType\r\n      var length = GROWABLE_HEAP_U32()[((value) >> 2)];\r\n      var str;\r\n      var decodeStartPtr = value + 4;\r\n      // Looping here to support possible embedded '0' bytes\r\n      for (var i = 0; i <= length; ++i) {\r\n        var currentBytePtr = value + 4 + i * charSize;\r\n        if (i == length || readCharAt(currentBytePtr) == 0) {\r\n          var maxReadBytes = currentBytePtr - decodeStartPtr;\r\n          var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\r\n          if (str === undefined) {\r\n            str = stringSegment;\r\n          } else {\r\n            str += String.fromCharCode(0);\r\n            str += stringSegment;\r\n          }\r\n          decodeStartPtr = currentBytePtr + charSize;\r\n        }\r\n      }\r\n      _free(value);\r\n      return str;\r\n    },\r\n    \"toWireType\": (destructors, value) => {\r\n      if (!(typeof value == \"string\")) {\r\n        throwBindingError(`Cannot pass non-string to C++ string type ${name}`);\r\n      }\r\n      // assumes POINTER_SIZE alignment\r\n      var length = lengthBytesUTF(value);\r\n      var ptr = _malloc(4 + length + charSize);\r\n      GROWABLE_HEAP_U32()[((ptr) >> 2)] = length / charSize;\r\n      encodeString(value, ptr + 4, length + charSize);\r\n      if (destructors !== null) {\r\n        destructors.push(_free, ptr);\r\n      }\r\n      return ptr;\r\n    },\r\n    argPackAdvance: GenericWireTypeSize,\r\n    \"readValueFromPointer\": readPointer,\r\n    destructorFunction(ptr) {\r\n      _free(ptr);\r\n    }\r\n  });\r\n};\r\n\r\nvar __embind_register_value_object = (rawType, name, constructorSignature, rawConstructor, destructorSignature, rawDestructor) => {\r\n  structRegistrations[rawType] = {\r\n    name: readLatin1String(name),\r\n    rawConstructor: embind__requireFunction(constructorSignature, rawConstructor),\r\n    rawDestructor: embind__requireFunction(destructorSignature, rawDestructor),\r\n    fields: []\r\n  };\r\n};\r\n\r\nvar __embind_register_value_object_field = (structType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) => {\r\n  structRegistrations[structType].fields.push({\r\n    fieldName: readLatin1String(fieldName),\r\n    getterReturnType,\r\n    getter: embind__requireFunction(getterSignature, getter),\r\n    getterContext,\r\n    setterArgumentType,\r\n    setter: embind__requireFunction(setterSignature, setter),\r\n    setterContext\r\n  });\r\n};\r\n\r\nvar __embind_register_void = (rawType, name) => {\r\n  name = readLatin1String(name);\r\n  registerType(rawType, {\r\n    isVoid: true,\r\n    // void return values can be optimized out sometimes\r\n    name,\r\n    argPackAdvance: 0,\r\n    \"fromWireType\": () => undefined,\r\n    // TODO: assert if anything else is given?\r\n    \"toWireType\": (destructors, o) => undefined\r\n  });\r\n};\r\n\r\nvar __emscripten_init_main_thread_js = tb => {\r\n  // Pass the thread address to the native code where they stored in wasm\r\n  // globals which act as a form of TLS. Global constructors trying\r\n  // to access this value will read the wrong value, but that is UB anyway.\r\n  __emscripten_thread_init(tb, /*is_main=*/ !ENVIRONMENT_IS_WORKER, /*is_runtime=*/ 1, /*can_block=*/ !ENVIRONMENT_IS_WEB, /*default_stacksize=*/ 2097152, /*start_profiling=*/ false);\r\n  PThread.threadInitTLS();\r\n};\r\n\r\nvar handleException = e => {\r\n  // Certain exception types we do not treat as errors since they are used for\r\n  // internal control flow.\r\n  // 1. ExitStatus, which is thrown by exit()\r\n  // 2. \"unwind\", which is thrown by emscripten_unwind_to_js_event_loop() and others\r\n  //    that wish to return to JS event loop.\r\n  if (e instanceof ExitStatus || e == \"unwind\") {\r\n    return EXITSTATUS;\r\n  }\r\n  checkStackCookie();\r\n  if (e instanceof WebAssembly.RuntimeError) {\r\n    if (_emscripten_stack_get_current() <= 0) {\r\n      err(\"Stack overflow detected.  You can try increasing -sSTACK_SIZE (currently set to 2097152)\");\r\n    }\r\n  }\r\n  quit_(1, e);\r\n};\r\n\r\nvar maybeExit = () => {\r\n  if (!keepRuntimeAlive()) {\r\n    try {\r\n      if (ENVIRONMENT_IS_PTHREAD) __emscripten_thread_exit(EXITSTATUS); else _exit(EXITSTATUS);\r\n    } catch (e) {\r\n      handleException(e);\r\n    }\r\n  }\r\n};\r\n\r\nvar callUserCallback = func => {\r\n  if (ABORT) {\r\n    err(\"user callback triggered after runtime exited or application aborted.  Ignoring.\");\r\n    return;\r\n  }\r\n  try {\r\n    func();\r\n    maybeExit();\r\n  } catch (e) {\r\n    handleException(e);\r\n  }\r\n};\r\n\r\nvar __emscripten_thread_mailbox_await = pthread_ptr => {\r\n  if (typeof Atomics.waitAsync === \"function\") {\r\n    // Wait on the pthread's initial self-pointer field because it is easy and\r\n    // safe to access from sending threads that need to notify the waiting\r\n    // thread.\r\n    // TODO: How to make this work with wasm64?\r\n    var wait = Atomics.waitAsync(GROWABLE_HEAP_I32(), ((pthread_ptr) >> 2), pthread_ptr);\r\n    assert(wait.async);\r\n    wait.value.then(checkMailbox);\r\n    var waitingAsync = pthread_ptr + 128;\r\n    Atomics.store(GROWABLE_HEAP_I32(), ((waitingAsync) >> 2), 1);\r\n  }\r\n};\r\n\r\nvar checkMailbox = () => {\r\n  // Only check the mailbox if we have a live pthread runtime. We implement\r\n  // pthread_self to return 0 if there is no live runtime.\r\n  var pthread_ptr = _pthread_self();\r\n  if (pthread_ptr) {\r\n    // If we are using Atomics.waitAsync as our notification mechanism, wait\r\n    // for a notification before processing the mailbox to avoid missing any\r\n    // work that could otherwise arrive after we've finished processing the\r\n    // mailbox and before we're ready for the next notification.\r\n    __emscripten_thread_mailbox_await(pthread_ptr);\r\n    callUserCallback(__emscripten_check_mailbox);\r\n  }\r\n};\r\n\r\nvar __emscripten_notify_mailbox_postmessage = (targetThread, currThreadId) => {\r\n  if (targetThread == currThreadId) {\r\n    setTimeout(checkMailbox);\r\n  } else if (ENVIRONMENT_IS_PTHREAD) {\r\n    postMessage({\r\n      targetThread,\r\n      cmd: \"checkMailbox\"\r\n    });\r\n  } else {\r\n    var worker = PThread.pthreads[targetThread];\r\n    if (!worker) {\r\n      err(`Cannot send message to thread with ID ${targetThread}, unknown thread ID!`);\r\n      return;\r\n    }\r\n    worker.postMessage({\r\n      cmd: \"checkMailbox\"\r\n    });\r\n  }\r\n};\r\n\r\nvar proxiedJSCallArgs = [];\r\n\r\nvar __emscripten_receive_on_main_thread_js = (funcIndex, emAsmAddr, callingThread, numCallArgs, args) => {\r\n  // Sometimes we need to backproxy events to the calling thread (e.g.\r\n  // HTML5 DOM events handlers such as\r\n  // emscripten_set_mousemove_callback()), so keep track in a globally\r\n  // accessible variable about the thread that initiated the proxying.\r\n  numCallArgs /= 2;\r\n  proxiedJSCallArgs.length = numCallArgs;\r\n  var b = ((args) >> 3);\r\n  for (var i = 0; i < numCallArgs; i++) {\r\n    if (HEAP64[b + 2 * i]) {\r\n      // It's a BigInt.\r\n      proxiedJSCallArgs[i] = HEAP64[b + 2 * i + 1];\r\n    } else {\r\n      // It's a Number.\r\n      proxiedJSCallArgs[i] = GROWABLE_HEAP_F64()[b + 2 * i + 1];\r\n    }\r\n  }\r\n  // Proxied JS library funcs use funcIndex and EM_ASM functions use emAsmAddr\r\n  assert(!emAsmAddr);\r\n  var func = proxiedFunctionTable[funcIndex];\r\n  assert(!(funcIndex && emAsmAddr));\r\n  assert(func.length == numCallArgs, \"Call args mismatch in _emscripten_receive_on_main_thread_js\");\r\n  PThread.currentProxiedOperationCallerThread = callingThread;\r\n  var rtn = func(...proxiedJSCallArgs);\r\n  PThread.currentProxiedOperationCallerThread = 0;\r\n  // Proxied functions can return any type except bigint.  All other types\r\n  // cooerce to f64/double (the return type of this function in C) but not\r\n  // bigint.\r\n  assert(typeof rtn != \"bigint\");\r\n  return rtn;\r\n};\r\n\r\nvar __emscripten_thread_cleanup = thread => {\r\n  // Called when a thread needs to be cleaned up so it can be reused.\r\n  // A thread is considered reusable when it either returns from its\r\n  // entry point, calls pthread_exit, or acts upon a cancellation.\r\n  // Detached threads are responsible for calling this themselves,\r\n  // otherwise pthread_join is responsible for calling this.\r\n  if (!ENVIRONMENT_IS_PTHREAD) cleanupThread(thread); else postMessage({\r\n    cmd: \"cleanupThread\",\r\n    thread\r\n  });\r\n};\r\n\r\nvar __emscripten_thread_set_strongref = thread => {};\r\n\r\nvar requireRegisteredType = (rawType, humanName) => {\r\n  var impl = registeredTypes[rawType];\r\n  if (undefined === impl) {\r\n    throwBindingError(`${humanName} has unknown type ${getTypeName(rawType)}`);\r\n  }\r\n  return impl;\r\n};\r\n\r\nvar emval_returnValue = (returnType, destructorsRef, handle) => {\r\n  var destructors = [];\r\n  var result = returnType[\"toWireType\"](destructors, handle);\r\n  if (destructors.length) {\r\n    // void, primitives and any other types w/o destructors don't need to allocate a handle\r\n    GROWABLE_HEAP_U32()[((destructorsRef) >> 2)] = Emval.toHandle(destructors);\r\n  }\r\n  return result;\r\n};\r\n\r\nvar __emval_as = (handle, returnType, destructorsRef) => {\r\n  handle = Emval.toValue(handle);\r\n  returnType = requireRegisteredType(returnType, \"emval::as\");\r\n  return emval_returnValue(returnType, destructorsRef, handle);\r\n};\r\n\r\nvar __emval_get_property = (handle, key) => {\r\n  handle = Emval.toValue(handle);\r\n  key = Emval.toValue(key);\r\n  return Emval.toHandle(handle[key]);\r\n};\r\n\r\nvar emval_symbols = {};\r\n\r\nvar getStringOrSymbol = address => {\r\n  var symbol = emval_symbols[address];\r\n  if (symbol === undefined) {\r\n    return readLatin1String(address);\r\n  }\r\n  return symbol;\r\n};\r\n\r\nvar __emval_new_cstring = v => Emval.toHandle(getStringOrSymbol(v));\r\n\r\nvar __emval_run_destructors = handle => {\r\n  var destructors = Emval.toValue(handle);\r\n  runDestructors(destructors);\r\n  __emval_decref(handle);\r\n};\r\n\r\nvar __emval_take_value = (type, arg) => {\r\n  type = requireRegisteredType(type, \"_emval_take_value\");\r\n  var v = type[\"readValueFromPointer\"](arg);\r\n  return Emval.toHandle(v);\r\n};\r\n\r\nvar __tzset_js = (timezone, daylight, std_name, dst_name) => {\r\n  // TODO: Use (malleable) environment variables instead of system settings.\r\n  var currentYear = (new Date).getFullYear();\r\n  var winter = new Date(currentYear, 0, 1);\r\n  var summer = new Date(currentYear, 6, 1);\r\n  var winterOffset = winter.getTimezoneOffset();\r\n  var summerOffset = summer.getTimezoneOffset();\r\n  // Local standard timezone offset. Local standard time is not adjusted for\r\n  // daylight savings.  This code uses the fact that getTimezoneOffset returns\r\n  // a greater value during Standard Time versus Daylight Saving Time (DST).\r\n  // Thus it determines the expected output during Standard Time, and it\r\n  // compares whether the output of the given date the same (Standard) or less\r\n  // (DST).\r\n  var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\r\n  // timezone is specified as seconds west of UTC (\"The external variable\r\n  // `timezone` shall be set to the difference, in seconds, between\r\n  // Coordinated Universal Time (UTC) and local standard time.\"), the same\r\n  // as returned by stdTimezoneOffset.\r\n  // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html\r\n  GROWABLE_HEAP_U32()[((timezone) >> 2)] = stdTimezoneOffset * 60;\r\n  GROWABLE_HEAP_I32()[((daylight) >> 2)] = Number(winterOffset != summerOffset);\r\n  var extractZone = timezoneOffset => {\r\n    // Why inverse sign?\r\n    // Read here https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTimezoneOffset\r\n    var sign = timezoneOffset >= 0 ? \"-\" : \"+\";\r\n    var absOffset = Math.abs(timezoneOffset);\r\n    var hours = String(Math.floor(absOffset / 60)).padStart(2, \"0\");\r\n    var minutes = String(absOffset % 60).padStart(2, \"0\");\r\n    return `UTC${sign}${hours}${minutes}`;\r\n  };\r\n  var winterName = extractZone(winterOffset);\r\n  var summerName = extractZone(summerOffset);\r\n  assert(winterName);\r\n  assert(summerName);\r\n  assert(lengthBytesUTF8(winterName) <= 16, `timezone name truncated to fit in TZNAME_MAX (${winterName})`);\r\n  assert(lengthBytesUTF8(summerName) <= 16, `timezone name truncated to fit in TZNAME_MAX (${summerName})`);\r\n  if (summerOffset < winterOffset) {\r\n    // Northern hemisphere\r\n    stringToUTF8(winterName, std_name, 17);\r\n    stringToUTF8(summerName, dst_name, 17);\r\n  } else {\r\n    stringToUTF8(winterName, dst_name, 17);\r\n    stringToUTF8(summerName, std_name, 17);\r\n  }\r\n};\r\n\r\nvar _emscripten_get_now = () => performance.timeOrigin + performance.now();\r\n\r\nvar _emscripten_date_now = () => Date.now();\r\n\r\nvar nowIsMonotonic = 1;\r\n\r\nvar checkWasiClock = clock_id => clock_id >= 0 && clock_id <= 3;\r\n\r\nvar INT53_MAX = 9007199254740992;\r\n\r\nvar INT53_MIN = -9007199254740992;\r\n\r\nvar bigintToI53Checked = num => (num < INT53_MIN || num > INT53_MAX) ? NaN : Number(num);\r\n\r\nfunction _clock_time_get(clk_id, ignored_precision, ptime) {\r\n  ignored_precision = bigintToI53Checked(ignored_precision);\r\n  if (!checkWasiClock(clk_id)) {\r\n    return 28;\r\n  }\r\n  var now;\r\n  // all wasi clocks but realtime are monotonic\r\n  if (clk_id === 0) {\r\n    now = _emscripten_date_now();\r\n  } else if (nowIsMonotonic) {\r\n    now = _emscripten_get_now();\r\n  } else {\r\n    return 52;\r\n  }\r\n  // \"now\" is in ms, and wasi times are in ns.\r\n  var nsec = Math.round(now * 1e3 * 1e3);\r\n  HEAP64[((ptime) >> 3)] = BigInt(nsec);\r\n  return 0;\r\n}\r\n\r\nvar _emscripten_check_blocking_allowed = () => {\r\n  if (ENVIRONMENT_IS_WORKER) return;\r\n  // Blocking in a worker/pthread is fine.\r\n  warnOnce(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\");\r\n};\r\n\r\nvar _emscripten_exit_with_live_runtime = () => {\r\n  runtimeKeepalivePush();\r\n  throw \"unwind\";\r\n};\r\n\r\nvar getHeapMax = () => // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate\r\n// full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side\r\n// for any code that deals with heap sizes, which would require special\r\n// casing all heap size related code to treat 0 specially.\r\n2147483648;\r\n\r\nvar _emscripten_get_heap_max = () => getHeapMax();\r\n\r\nvar _emscripten_num_logical_cores = () => navigator[\"hardwareConcurrency\"];\r\n\r\nvar alignMemory = (size, alignment) => {\r\n  assert(alignment, \"alignment argument is required\");\r\n  return Math.ceil(size / alignment) * alignment;\r\n};\r\n\r\nvar growMemory = size => {\r\n  var b = wasmMemory.buffer;\r\n  var pages = ((size - b.byteLength + 65535) / 65536) | 0;\r\n  try {\r\n    // round size grow request up to wasm page size (fixed 64KB per spec)\r\n    wasmMemory.grow(pages);\r\n    // .grow() takes a delta compared to the previous size\r\n    updateMemoryViews();\r\n    return 1;\r\n  } catch (e) {\r\n    err(`growMemory: Attempted to grow heap from ${b.byteLength} bytes to ${size} bytes, but got error: ${e}`);\r\n  }\r\n};\r\n\r\nvar _emscripten_resize_heap = requestedSize => {\r\n  var oldSize = GROWABLE_HEAP_U8().length;\r\n  // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\r\n  requestedSize >>>= 0;\r\n  // With multithreaded builds, races can happen (another thread might increase the size\r\n  // in between), so return a failure, and let the caller retry.\r\n  if (requestedSize <= oldSize) {\r\n    return false;\r\n  }\r\n  // Memory resize rules:\r\n  // 1.  Always increase heap size to at least the requested size, rounded up\r\n  //     to next page multiple.\r\n  // 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap\r\n  //     geometrically: increase the heap size according to\r\n  //     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most\r\n  //     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).\r\n  // 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap\r\n  //     linearly: increase the heap size by at least\r\n  //     MEMORY_GROWTH_LINEAR_STEP bytes.\r\n  // 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by\r\n  //     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest\r\n  // 4.  If we were unable to allocate as much memory, it may be due to\r\n  //     over-eager decision to excessively reserve due to (3) above.\r\n  //     Hence if an allocation fails, cut down on the amount of excess\r\n  //     growth, in an attempt to succeed to perform a smaller allocation.\r\n  // A limit is set for how much we can grow. We should not exceed that\r\n  // (the wasm binary specifies it, so if we tried, we'd fail anyhow).\r\n  var maxHeapSize = getHeapMax();\r\n  if (requestedSize > maxHeapSize) {\r\n    err(`Cannot enlarge memory, requested ${requestedSize} bytes, but the limit is ${maxHeapSize} bytes!`);\r\n    return false;\r\n  }\r\n  // Loop through potential heap size increases. If we attempt a too eager\r\n  // reservation that fails, cut down on the attempted size and reserve a\r\n  // smaller bump instead. (max 3 times, chosen somewhat arbitrarily)\r\n  for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\r\n    var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\r\n    // ensure geometric growth\r\n    // but limit overreserving (default to capping at +96MB overgrowth at most)\r\n    overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\r\n    var newSize = Math.min(maxHeapSize, alignMemory(Math.max(requestedSize, overGrownHeapSize), 65536));\r\n    var replacement = growMemory(newSize);\r\n    if (replacement) {\r\n      return true;\r\n    }\r\n  }\r\n  err(`Failed to grow the heap from ${oldSize} bytes to ${newSize} bytes, not enough memory!`);\r\n  return false;\r\n};\r\n\r\nvar _emscripten_runtime_keepalive_check = keepRuntimeAlive;\r\n\r\nvar ENV = {};\r\n\r\nvar getExecutableName = () => thisProgram || \"./this.program\";\r\n\r\nvar getEnvStrings = () => {\r\n  if (!getEnvStrings.strings) {\r\n    // Default values.\r\n    // Browser language detection #8751\r\n    var lang = ((typeof navigator == \"object\" && navigator.languages && navigator.languages[0]) || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\r\n    var env = {\r\n      \"USER\": \"web_user\",\r\n      \"LOGNAME\": \"web_user\",\r\n      \"PATH\": \"/\",\r\n      \"PWD\": \"/\",\r\n      \"HOME\": \"/home/web_user\",\r\n      \"LANG\": lang,\r\n      \"_\": getExecutableName()\r\n    };\r\n    // Apply the user-provided values, if any.\r\n    for (var x in ENV) {\r\n      // x is a key in ENV; if ENV[x] is undefined, that means it was\r\n      // explicitly set to be so. We allow user code to do that to\r\n      // force variables with default values to remain unset.\r\n      if (ENV[x] === undefined) delete env[x]; else env[x] = ENV[x];\r\n    }\r\n    var strings = [];\r\n    for (var x in env) {\r\n      strings.push(`${x}=${env[x]}`);\r\n    }\r\n    getEnvStrings.strings = strings;\r\n  }\r\n  return getEnvStrings.strings;\r\n};\r\n\r\nfunction _environ_get(__environ, environ_buf) {\r\n  if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(3, 0, 1, __environ, environ_buf);\r\n  var bufSize = 0;\r\n  var envp = 0;\r\n  for (var string of getEnvStrings()) {\r\n    var ptr = environ_buf + bufSize;\r\n    GROWABLE_HEAP_U32()[(((__environ) + (envp)) >> 2)] = ptr;\r\n    bufSize += stringToUTF8(string, ptr, Infinity) + 1;\r\n    envp += 4;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction _environ_sizes_get(penviron_count, penviron_buf_size) {\r\n  if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(4, 0, 1, penviron_count, penviron_buf_size);\r\n  var strings = getEnvStrings();\r\n  GROWABLE_HEAP_U32()[((penviron_count) >> 2)] = strings.length;\r\n  var bufSize = 0;\r\n  for (var string of strings) {\r\n    bufSize += lengthBytesUTF8(string) + 1;\r\n  }\r\n  GROWABLE_HEAP_U32()[((penviron_buf_size) >> 2)] = bufSize;\r\n  return 0;\r\n}\r\n\r\nvar PATH = {\r\n  isAbs: path => path.charAt(0) === \"/\",\r\n  splitPath: filename => {\r\n    var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\n    return splitPathRe.exec(filename).slice(1);\r\n  },\r\n  normalizeArray: (parts, allowAboveRoot) => {\r\n    // if the path tries to go above the root, `up` ends up > 0\r\n    var up = 0;\r\n    for (var i = parts.length - 1; i >= 0; i--) {\r\n      var last = parts[i];\r\n      if (last === \".\") {\r\n        parts.splice(i, 1);\r\n      } else if (last === \"..\") {\r\n        parts.splice(i, 1);\r\n        up++;\r\n      } else if (up) {\r\n        parts.splice(i, 1);\r\n        up--;\r\n      }\r\n    }\r\n    // if the path is allowed to go above the root, restore leading ..s\r\n    if (allowAboveRoot) {\r\n      for (;up; up--) {\r\n        parts.unshift(\"..\");\r\n      }\r\n    }\r\n    return parts;\r\n  },\r\n  normalize: path => {\r\n    var isAbsolute = PATH.isAbs(path), trailingSlash = path.slice(-1) === \"/\";\r\n    // Normalize the path\r\n    path = PATH.normalizeArray(path.split(\"/\").filter(p => !!p), !isAbsolute).join(\"/\");\r\n    if (!path && !isAbsolute) {\r\n      path = \".\";\r\n    }\r\n    if (path && trailingSlash) {\r\n      path += \"/\";\r\n    }\r\n    return (isAbsolute ? \"/\" : \"\") + path;\r\n  },\r\n  dirname: path => {\r\n    var result = PATH.splitPath(path), root = result[0], dir = result[1];\r\n    if (!root && !dir) {\r\n      // No dirname whatsoever\r\n      return \".\";\r\n    }\r\n    if (dir) {\r\n      // It has a dirname, strip trailing slash\r\n      dir = dir.slice(0, -1);\r\n    }\r\n    return root + dir;\r\n  },\r\n  basename: path => path && path.match(/([^\\/]+|\\/)\\/*$/)[1],\r\n  join: (...paths) => PATH.normalize(paths.join(\"/\")),\r\n  join2: (l, r) => PATH.normalize(l + \"/\" + r)\r\n};\r\n\r\nvar initRandomFill = () => view => view.set(crypto.getRandomValues(new Uint8Array(view.byteLength)));\r\n\r\nvar randomFill = view => {\r\n  // Lazily init on the first invocation.\r\n  (randomFill = initRandomFill())(view);\r\n};\r\n\r\nvar PATH_FS = {\r\n  resolve: (...args) => {\r\n    var resolvedPath = \"\", resolvedAbsolute = false;\r\n    for (var i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n      var path = (i >= 0) ? args[i] : FS.cwd();\r\n      // Skip empty and invalid entries\r\n      if (typeof path != \"string\") {\r\n        throw new TypeError(\"Arguments to path.resolve must be strings\");\r\n      } else if (!path) {\r\n        return \"\";\r\n      }\r\n      resolvedPath = path + \"/\" + resolvedPath;\r\n      resolvedAbsolute = PATH.isAbs(path);\r\n    }\r\n    // At this point the path should be resolved to a full absolute path, but\r\n    // handle relative paths to be safe (might happen when process.cwd() fails)\r\n    resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(p => !!p), !resolvedAbsolute).join(\"/\");\r\n    return ((resolvedAbsolute ? \"/\" : \"\") + resolvedPath) || \".\";\r\n  },\r\n  relative: (from, to) => {\r\n    from = PATH_FS.resolve(from).slice(1);\r\n    to = PATH_FS.resolve(to).slice(1);\r\n    function trim(arr) {\r\n      var start = 0;\r\n      for (;start < arr.length; start++) {\r\n        if (arr[start] !== \"\") break;\r\n      }\r\n      var end = arr.length - 1;\r\n      for (;end >= 0; end--) {\r\n        if (arr[end] !== \"\") break;\r\n      }\r\n      if (start > end) return [];\r\n      return arr.slice(start, end - start + 1);\r\n    }\r\n    var fromParts = trim(from.split(\"/\"));\r\n    var toParts = trim(to.split(\"/\"));\r\n    var length = Math.min(fromParts.length, toParts.length);\r\n    var samePartsLength = length;\r\n    for (var i = 0; i < length; i++) {\r\n      if (fromParts[i] !== toParts[i]) {\r\n        samePartsLength = i;\r\n        break;\r\n      }\r\n    }\r\n    var outputParts = [];\r\n    for (var i = samePartsLength; i < fromParts.length; i++) {\r\n      outputParts.push(\"..\");\r\n    }\r\n    outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n    return outputParts.join(\"/\");\r\n  }\r\n};\r\n\r\nvar FS_stdin_getChar_buffer = [];\r\n\r\n/** @type {function(string, boolean=, number=)} */ var intArrayFromString = (stringy, dontAddNull, length) => {\r\n  var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\r\n  var u8array = new Array(len);\r\n  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\r\n  if (dontAddNull) u8array.length = numBytesWritten;\r\n  return u8array;\r\n};\r\n\r\nvar FS_stdin_getChar = () => {\r\n  if (!FS_stdin_getChar_buffer.length) {\r\n    var result = null;\r\n    if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\r\n      // Browser.\r\n      result = window.prompt(\"Input: \");\r\n      // returns null on cancel\r\n      if (result !== null) {\r\n        result += \"\\n\";\r\n      }\r\n    } else {}\r\n    if (!result) {\r\n      return null;\r\n    }\r\n    FS_stdin_getChar_buffer = intArrayFromString(result, true);\r\n  }\r\n  return FS_stdin_getChar_buffer.shift();\r\n};\r\n\r\nvar TTY = {\r\n  ttys: [],\r\n  init() {},\r\n  shutdown() {},\r\n  register(dev, ops) {\r\n    TTY.ttys[dev] = {\r\n      input: [],\r\n      output: [],\r\n      ops\r\n    };\r\n    FS.registerDevice(dev, TTY.stream_ops);\r\n  },\r\n  stream_ops: {\r\n    open(stream) {\r\n      var tty = TTY.ttys[stream.node.rdev];\r\n      if (!tty) {\r\n        throw new FS.ErrnoError(43);\r\n      }\r\n      stream.tty = tty;\r\n      stream.seekable = false;\r\n    },\r\n    close(stream) {\r\n      // flush any pending line data\r\n      stream.tty.ops.fsync(stream.tty);\r\n    },\r\n    fsync(stream) {\r\n      stream.tty.ops.fsync(stream.tty);\r\n    },\r\n    read(stream, buffer, offset, length, pos) {\r\n      if (!stream.tty || !stream.tty.ops.get_char) {\r\n        throw new FS.ErrnoError(60);\r\n      }\r\n      var bytesRead = 0;\r\n      for (var i = 0; i < length; i++) {\r\n        var result;\r\n        try {\r\n          result = stream.tty.ops.get_char(stream.tty);\r\n        } catch (e) {\r\n          throw new FS.ErrnoError(29);\r\n        }\r\n        if (result === undefined && bytesRead === 0) {\r\n          throw new FS.ErrnoError(6);\r\n        }\r\n        if (result === null || result === undefined) break;\r\n        bytesRead++;\r\n        buffer[offset + i] = result;\r\n      }\r\n      if (bytesRead) {\r\n        stream.node.atime = Date.now();\r\n      }\r\n      return bytesRead;\r\n    },\r\n    write(stream, buffer, offset, length, pos) {\r\n      if (!stream.tty || !stream.tty.ops.put_char) {\r\n        throw new FS.ErrnoError(60);\r\n      }\r\n      try {\r\n        for (var i = 0; i < length; i++) {\r\n          stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\r\n        }\r\n      } catch (e) {\r\n        throw new FS.ErrnoError(29);\r\n      }\r\n      if (length) {\r\n        stream.node.mtime = stream.node.ctime = Date.now();\r\n      }\r\n      return i;\r\n    }\r\n  },\r\n  default_tty_ops: {\r\n    get_char(tty) {\r\n      return FS_stdin_getChar();\r\n    },\r\n    put_char(tty, val) {\r\n      if (val === null || val === 10) {\r\n        out(UTF8ArrayToString(tty.output));\r\n        tty.output = [];\r\n      } else {\r\n        if (val != 0) tty.output.push(val);\r\n      }\r\n    },\r\n    fsync(tty) {\r\n      if (tty.output?.length > 0) {\r\n        out(UTF8ArrayToString(tty.output));\r\n        tty.output = [];\r\n      }\r\n    },\r\n    ioctl_tcgets(tty) {\r\n      // typical setting\r\n      return {\r\n        c_iflag: 25856,\r\n        c_oflag: 5,\r\n        c_cflag: 191,\r\n        c_lflag: 35387,\r\n        c_cc: [ 3, 28, 127, 21, 4, 0, 1, 0, 17, 19, 26, 0, 18, 15, 23, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]\r\n      };\r\n    },\r\n    ioctl_tcsets(tty, optional_actions, data) {\r\n      // currently just ignore\r\n      return 0;\r\n    },\r\n    ioctl_tiocgwinsz(tty) {\r\n      return [ 24, 80 ];\r\n    }\r\n  },\r\n  default_tty1_ops: {\r\n    put_char(tty, val) {\r\n      if (val === null || val === 10) {\r\n        err(UTF8ArrayToString(tty.output));\r\n        tty.output = [];\r\n      } else {\r\n        if (val != 0) tty.output.push(val);\r\n      }\r\n    },\r\n    fsync(tty) {\r\n      if (tty.output?.length > 0) {\r\n        err(UTF8ArrayToString(tty.output));\r\n        tty.output = [];\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nvar mmapAlloc = size => {\r\n  abort(\"internal error: mmapAlloc called but `emscripten_builtin_memalign` native symbol not exported\");\r\n};\r\n\r\nvar MEMFS = {\r\n  ops_table: null,\r\n  mount(mount) {\r\n    return MEMFS.createNode(null, \"/\", 16895, 0);\r\n  },\r\n  createNode(parent, name, mode, dev) {\r\n    if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\r\n      // no supported\r\n      throw new FS.ErrnoError(63);\r\n    }\r\n    MEMFS.ops_table ||= {\r\n      dir: {\r\n        node: {\r\n          getattr: MEMFS.node_ops.getattr,\r\n          setattr: MEMFS.node_ops.setattr,\r\n          lookup: MEMFS.node_ops.lookup,\r\n          mknod: MEMFS.node_ops.mknod,\r\n          rename: MEMFS.node_ops.rename,\r\n          unlink: MEMFS.node_ops.unlink,\r\n          rmdir: MEMFS.node_ops.rmdir,\r\n          readdir: MEMFS.node_ops.readdir,\r\n          symlink: MEMFS.node_ops.symlink\r\n        },\r\n        stream: {\r\n          llseek: MEMFS.stream_ops.llseek\r\n        }\r\n      },\r\n      file: {\r\n        node: {\r\n          getattr: MEMFS.node_ops.getattr,\r\n          setattr: MEMFS.node_ops.setattr\r\n        },\r\n        stream: {\r\n          llseek: MEMFS.stream_ops.llseek,\r\n          read: MEMFS.stream_ops.read,\r\n          write: MEMFS.stream_ops.write,\r\n          mmap: MEMFS.stream_ops.mmap,\r\n          msync: MEMFS.stream_ops.msync\r\n        }\r\n      },\r\n      link: {\r\n        node: {\r\n          getattr: MEMFS.node_ops.getattr,\r\n          setattr: MEMFS.node_ops.setattr,\r\n          readlink: MEMFS.node_ops.readlink\r\n        },\r\n        stream: {}\r\n      },\r\n      chrdev: {\r\n        node: {\r\n          getattr: MEMFS.node_ops.getattr,\r\n          setattr: MEMFS.node_ops.setattr\r\n        },\r\n        stream: FS.chrdev_stream_ops\r\n      }\r\n    };\r\n    var node = FS.createNode(parent, name, mode, dev);\r\n    if (FS.isDir(node.mode)) {\r\n      node.node_ops = MEMFS.ops_table.dir.node;\r\n      node.stream_ops = MEMFS.ops_table.dir.stream;\r\n      node.contents = {};\r\n    } else if (FS.isFile(node.mode)) {\r\n      node.node_ops = MEMFS.ops_table.file.node;\r\n      node.stream_ops = MEMFS.ops_table.file.stream;\r\n      node.usedBytes = 0;\r\n      // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.\r\n      // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred\r\n      // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size\r\n      // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.\r\n      node.contents = null;\r\n    } else if (FS.isLink(node.mode)) {\r\n      node.node_ops = MEMFS.ops_table.link.node;\r\n      node.stream_ops = MEMFS.ops_table.link.stream;\r\n    } else if (FS.isChrdev(node.mode)) {\r\n      node.node_ops = MEMFS.ops_table.chrdev.node;\r\n      node.stream_ops = MEMFS.ops_table.chrdev.stream;\r\n    }\r\n    node.atime = node.mtime = node.ctime = Date.now();\r\n    // add the new node to the parent\r\n    if (parent) {\r\n      parent.contents[name] = node;\r\n      parent.atime = parent.mtime = parent.ctime = node.atime;\r\n    }\r\n    return node;\r\n  },\r\n  getFileDataAsTypedArray(node) {\r\n    if (!node.contents) return new Uint8Array(0);\r\n    if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);\r\n    // Make sure to not return excess unused bytes.\r\n    return new Uint8Array(node.contents);\r\n  },\r\n  expandFileStorage(node, newCapacity) {\r\n    var prevCapacity = node.contents ? node.contents.length : 0;\r\n    if (prevCapacity >= newCapacity) return;\r\n    // No need to expand, the storage was already large enough.\r\n    // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\r\n    // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\r\n    // avoid overshooting the allocation cap by a very large margin.\r\n    var CAPACITY_DOUBLING_MAX = 1024 * 1024;\r\n    newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125)) >>> 0);\r\n    if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\r\n    // At minimum allocate 256b for each file when expanding.\r\n    var oldContents = node.contents;\r\n    node.contents = new Uint8Array(newCapacity);\r\n    // Allocate new storage.\r\n    if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\r\n  },\r\n  resizeFileStorage(node, newSize) {\r\n    if (node.usedBytes == newSize) return;\r\n    if (newSize == 0) {\r\n      node.contents = null;\r\n      // Fully decommit when requesting a resize to zero.\r\n      node.usedBytes = 0;\r\n    } else {\r\n      var oldContents = node.contents;\r\n      node.contents = new Uint8Array(newSize);\r\n      // Allocate new storage.\r\n      if (oldContents) {\r\n        node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\r\n      }\r\n      node.usedBytes = newSize;\r\n    }\r\n  },\r\n  node_ops: {\r\n    getattr(node) {\r\n      var attr = {};\r\n      // device numbers reuse inode numbers.\r\n      attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\r\n      attr.ino = node.id;\r\n      attr.mode = node.mode;\r\n      attr.nlink = 1;\r\n      attr.uid = 0;\r\n      attr.gid = 0;\r\n      attr.rdev = node.rdev;\r\n      if (FS.isDir(node.mode)) {\r\n        attr.size = 4096;\r\n      } else if (FS.isFile(node.mode)) {\r\n        attr.size = node.usedBytes;\r\n      } else if (FS.isLink(node.mode)) {\r\n        attr.size = node.link.length;\r\n      } else {\r\n        attr.size = 0;\r\n      }\r\n      attr.atime = new Date(node.atime);\r\n      attr.mtime = new Date(node.mtime);\r\n      attr.ctime = new Date(node.ctime);\r\n      // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),\r\n      //       but this is not required by the standard.\r\n      attr.blksize = 4096;\r\n      attr.blocks = Math.ceil(attr.size / attr.blksize);\r\n      return attr;\r\n    },\r\n    setattr(node, attr) {\r\n      for (const key of [ \"mode\", \"atime\", \"mtime\", \"ctime\" ]) {\r\n        if (attr[key] != null) {\r\n          node[key] = attr[key];\r\n        }\r\n      }\r\n      if (attr.size !== undefined) {\r\n        MEMFS.resizeFileStorage(node, attr.size);\r\n      }\r\n    },\r\n    lookup(parent, name) {\r\n      throw new FS.ErrnoError(44);\r\n    },\r\n    mknod(parent, name, mode, dev) {\r\n      return MEMFS.createNode(parent, name, mode, dev);\r\n    },\r\n    rename(old_node, new_dir, new_name) {\r\n      var new_node;\r\n      try {\r\n        new_node = FS.lookupNode(new_dir, new_name);\r\n      } catch (e) {}\r\n      if (new_node) {\r\n        if (FS.isDir(old_node.mode)) {\r\n          // if we're overwriting a directory at new_name, make sure it's empty.\r\n          for (var i in new_node.contents) {\r\n            throw new FS.ErrnoError(55);\r\n          }\r\n        }\r\n        FS.hashRemoveNode(new_node);\r\n      }\r\n      // do the internal rewiring\r\n      delete old_node.parent.contents[old_node.name];\r\n      new_dir.contents[new_name] = old_node;\r\n      old_node.name = new_name;\r\n      new_dir.ctime = new_dir.mtime = old_node.parent.ctime = old_node.parent.mtime = Date.now();\r\n    },\r\n    unlink(parent, name) {\r\n      delete parent.contents[name];\r\n      parent.ctime = parent.mtime = Date.now();\r\n    },\r\n    rmdir(parent, name) {\r\n      var node = FS.lookupNode(parent, name);\r\n      for (var i in node.contents) {\r\n        throw new FS.ErrnoError(55);\r\n      }\r\n      delete parent.contents[name];\r\n      parent.ctime = parent.mtime = Date.now();\r\n    },\r\n    readdir(node) {\r\n      return [ \".\", \"..\", ...Object.keys(node.contents) ];\r\n    },\r\n    symlink(parent, newname, oldpath) {\r\n      var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\r\n      node.link = oldpath;\r\n      return node;\r\n    },\r\n    readlink(node) {\r\n      if (!FS.isLink(node.mode)) {\r\n        throw new FS.ErrnoError(28);\r\n      }\r\n      return node.link;\r\n    }\r\n  },\r\n  stream_ops: {\r\n    read(stream, buffer, offset, length, position) {\r\n      var contents = stream.node.contents;\r\n      if (position >= stream.node.usedBytes) return 0;\r\n      var size = Math.min(stream.node.usedBytes - position, length);\r\n      assert(size >= 0);\r\n      if (size > 8 && contents.subarray) {\r\n        // non-trivial, and typed array\r\n        buffer.set(contents.subarray(position, position + size), offset);\r\n      } else {\r\n        for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\r\n      }\r\n      return size;\r\n    },\r\n    write(stream, buffer, offset, length, position, canOwn) {\r\n      // The data buffer should be a typed array view\r\n      assert(!(buffer instanceof ArrayBuffer));\r\n      // If the buffer is located in main memory (HEAP), and if\r\n      // memory can grow, we can't hold on to references of the\r\n      // memory buffer, as they may get invalidated. That means we\r\n      // need to do copy its contents.\r\n      if (buffer.buffer === GROWABLE_HEAP_I8().buffer) {\r\n        canOwn = false;\r\n      }\r\n      if (!length) return 0;\r\n      var node = stream.node;\r\n      node.mtime = node.ctime = Date.now();\r\n      if (buffer.subarray && (!node.contents || node.contents.subarray)) {\r\n        // This write is from a typed array to a typed array?\r\n        if (canOwn) {\r\n          assert(position === 0, \"canOwn must imply no weird position inside the file\");\r\n          node.contents = buffer.subarray(offset, offset + length);\r\n          node.usedBytes = length;\r\n          return length;\r\n        } else if (node.usedBytes === 0 && position === 0) {\r\n          // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.\r\n          node.contents = buffer.slice(offset, offset + length);\r\n          node.usedBytes = length;\r\n          return length;\r\n        } else if (position + length <= node.usedBytes) {\r\n          // Writing to an already allocated and used subrange of the file?\r\n          node.contents.set(buffer.subarray(offset, offset + length), position);\r\n          return length;\r\n        }\r\n      }\r\n      // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.\r\n      MEMFS.expandFileStorage(node, position + length);\r\n      if (node.contents.subarray && buffer.subarray) {\r\n        // Use typed array write which is available.\r\n        node.contents.set(buffer.subarray(offset, offset + length), position);\r\n      } else {\r\n        for (var i = 0; i < length; i++) {\r\n          node.contents[position + i] = buffer[offset + i];\r\n        }\r\n      }\r\n      node.usedBytes = Math.max(node.usedBytes, position + length);\r\n      return length;\r\n    },\r\n    llseek(stream, offset, whence) {\r\n      var position = offset;\r\n      if (whence === 1) {\r\n        position += stream.position;\r\n      } else if (whence === 2) {\r\n        if (FS.isFile(stream.node.mode)) {\r\n          position += stream.node.usedBytes;\r\n        }\r\n      }\r\n      if (position < 0) {\r\n        throw new FS.ErrnoError(28);\r\n      }\r\n      return position;\r\n    },\r\n    mmap(stream, length, position, prot, flags) {\r\n      if (!FS.isFile(stream.node.mode)) {\r\n        throw new FS.ErrnoError(43);\r\n      }\r\n      var ptr;\r\n      var allocated;\r\n      var contents = stream.node.contents;\r\n      // Only make a new copy when MAP_PRIVATE is specified.\r\n      if (!(flags & 2) && contents && contents.buffer === GROWABLE_HEAP_I8().buffer) {\r\n        // We can't emulate MAP_SHARED when the file is not backed by the\r\n        // buffer we're mapping to (e.g. the HEAP buffer).\r\n        allocated = false;\r\n        ptr = contents.byteOffset;\r\n      } else {\r\n        allocated = true;\r\n        ptr = mmapAlloc(length);\r\n        if (!ptr) {\r\n          throw new FS.ErrnoError(48);\r\n        }\r\n        if (contents) {\r\n          // Try to avoid unnecessary slices.\r\n          if (position > 0 || position + length < contents.length) {\r\n            if (contents.subarray) {\r\n              contents = contents.subarray(position, position + length);\r\n            } else {\r\n              contents = Array.prototype.slice.call(contents, position, position + length);\r\n            }\r\n          }\r\n          GROWABLE_HEAP_I8().set(contents, ptr);\r\n        }\r\n      }\r\n      return {\r\n        ptr,\r\n        allocated\r\n      };\r\n    },\r\n    msync(stream, buffer, offset, length, mmapFlags) {\r\n      MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\r\n      // should we check if bytesWritten and length are the same?\r\n      return 0;\r\n    }\r\n  }\r\n};\r\n\r\nvar asyncLoad = async url => {\r\n  var arrayBuffer = await readAsync(url);\r\n  assert(arrayBuffer, `Loading data file \"${url}\" failed (no arrayBuffer).`);\r\n  return new Uint8Array(arrayBuffer);\r\n};\r\n\r\nvar FS_createDataFile = (...args) => FS.createDataFile(...args);\r\n\r\nvar preloadPlugins = [];\r\n\r\nvar FS_handledByPreloadPlugin = (byteArray, fullname, finish, onerror) => {\r\n  // Ensure plugins are ready.\r\n  if (typeof Browser != \"undefined\") Browser.init();\r\n  var handled = false;\r\n  preloadPlugins.forEach(plugin => {\r\n    if (handled) return;\r\n    if (plugin[\"canHandle\"](fullname)) {\r\n      plugin[\"handle\"](byteArray, fullname, finish, onerror);\r\n      handled = true;\r\n    }\r\n  });\r\n  return handled;\r\n};\r\n\r\nvar FS_createPreloadedFile = (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {\r\n  // TODO we should allow people to just pass in a complete filename instead\r\n  // of parent and name being that we just join them anyways\r\n  var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\r\n  var dep = getUniqueRunDependency(`cp ${fullname}`);\r\n  // might have several active requests for the same fullname\r\n  function processData(byteArray) {\r\n    function finish(byteArray) {\r\n      preFinish?.();\r\n      if (!dontCreateFile) {\r\n        FS_createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\r\n      }\r\n      onload?.();\r\n      removeRunDependency(dep);\r\n    }\r\n    if (FS_handledByPreloadPlugin(byteArray, fullname, finish, () => {\r\n      onerror?.();\r\n      removeRunDependency(dep);\r\n    })) {\r\n      return;\r\n    }\r\n    finish(byteArray);\r\n  }\r\n  addRunDependency(dep);\r\n  if (typeof url == \"string\") {\r\n    asyncLoad(url).then(processData, onerror);\r\n  } else {\r\n    processData(url);\r\n  }\r\n};\r\n\r\nvar FS_modeStringToFlags = str => {\r\n  var flagModes = {\r\n    \"r\": 0,\r\n    \"r+\": 2,\r\n    \"w\": 512 | 64 | 1,\r\n    \"w+\": 512 | 64 | 2,\r\n    \"a\": 1024 | 64 | 1,\r\n    \"a+\": 1024 | 64 | 2\r\n  };\r\n  var flags = flagModes[str];\r\n  if (typeof flags == \"undefined\") {\r\n    throw new Error(`Unknown file open mode: ${str}`);\r\n  }\r\n  return flags;\r\n};\r\n\r\nvar FS_getMode = (canRead, canWrite) => {\r\n  var mode = 0;\r\n  if (canRead) mode |= 292 | 73;\r\n  if (canWrite) mode |= 146;\r\n  return mode;\r\n};\r\n\r\nvar strError = errno => UTF8ToString(_strerror(errno));\r\n\r\nvar ERRNO_CODES = {\r\n  \"EPERM\": 63,\r\n  \"ENOENT\": 44,\r\n  \"ESRCH\": 71,\r\n  \"EINTR\": 27,\r\n  \"EIO\": 29,\r\n  \"ENXIO\": 60,\r\n  \"E2BIG\": 1,\r\n  \"ENOEXEC\": 45,\r\n  \"EBADF\": 8,\r\n  \"ECHILD\": 12,\r\n  \"EAGAIN\": 6,\r\n  \"EWOULDBLOCK\": 6,\r\n  \"ENOMEM\": 48,\r\n  \"EACCES\": 2,\r\n  \"EFAULT\": 21,\r\n  \"ENOTBLK\": 105,\r\n  \"EBUSY\": 10,\r\n  \"EEXIST\": 20,\r\n  \"EXDEV\": 75,\r\n  \"ENODEV\": 43,\r\n  \"ENOTDIR\": 54,\r\n  \"EISDIR\": 31,\r\n  \"EINVAL\": 28,\r\n  \"ENFILE\": 41,\r\n  \"EMFILE\": 33,\r\n  \"ENOTTY\": 59,\r\n  \"ETXTBSY\": 74,\r\n  \"EFBIG\": 22,\r\n  \"ENOSPC\": 51,\r\n  \"ESPIPE\": 70,\r\n  \"EROFS\": 69,\r\n  \"EMLINK\": 34,\r\n  \"EPIPE\": 64,\r\n  \"EDOM\": 18,\r\n  \"ERANGE\": 68,\r\n  \"ENOMSG\": 49,\r\n  \"EIDRM\": 24,\r\n  \"ECHRNG\": 106,\r\n  \"EL2NSYNC\": 156,\r\n  \"EL3HLT\": 107,\r\n  \"EL3RST\": 108,\r\n  \"ELNRNG\": 109,\r\n  \"EUNATCH\": 110,\r\n  \"ENOCSI\": 111,\r\n  \"EL2HLT\": 112,\r\n  \"EDEADLK\": 16,\r\n  \"ENOLCK\": 46,\r\n  \"EBADE\": 113,\r\n  \"EBADR\": 114,\r\n  \"EXFULL\": 115,\r\n  \"ENOANO\": 104,\r\n  \"EBADRQC\": 103,\r\n  \"EBADSLT\": 102,\r\n  \"EDEADLOCK\": 16,\r\n  \"EBFONT\": 101,\r\n  \"ENOSTR\": 100,\r\n  \"ENODATA\": 116,\r\n  \"ETIME\": 117,\r\n  \"ENOSR\": 118,\r\n  \"ENONET\": 119,\r\n  \"ENOPKG\": 120,\r\n  \"EREMOTE\": 121,\r\n  \"ENOLINK\": 47,\r\n  \"EADV\": 122,\r\n  \"ESRMNT\": 123,\r\n  \"ECOMM\": 124,\r\n  \"EPROTO\": 65,\r\n  \"EMULTIHOP\": 36,\r\n  \"EDOTDOT\": 125,\r\n  \"EBADMSG\": 9,\r\n  \"ENOTUNIQ\": 126,\r\n  \"EBADFD\": 127,\r\n  \"EREMCHG\": 128,\r\n  \"ELIBACC\": 129,\r\n  \"ELIBBAD\": 130,\r\n  \"ELIBSCN\": 131,\r\n  \"ELIBMAX\": 132,\r\n  \"ELIBEXEC\": 133,\r\n  \"ENOSYS\": 52,\r\n  \"ENOTEMPTY\": 55,\r\n  \"ENAMETOOLONG\": 37,\r\n  \"ELOOP\": 32,\r\n  \"EOPNOTSUPP\": 138,\r\n  \"EPFNOSUPPORT\": 139,\r\n  \"ECONNRESET\": 15,\r\n  \"ENOBUFS\": 42,\r\n  \"EAFNOSUPPORT\": 5,\r\n  \"EPROTOTYPE\": 67,\r\n  \"ENOTSOCK\": 57,\r\n  \"ENOPROTOOPT\": 50,\r\n  \"ESHUTDOWN\": 140,\r\n  \"ECONNREFUSED\": 14,\r\n  \"EADDRINUSE\": 3,\r\n  \"ECONNABORTED\": 13,\r\n  \"ENETUNREACH\": 40,\r\n  \"ENETDOWN\": 38,\r\n  \"ETIMEDOUT\": 73,\r\n  \"EHOSTDOWN\": 142,\r\n  \"EHOSTUNREACH\": 23,\r\n  \"EINPROGRESS\": 26,\r\n  \"EALREADY\": 7,\r\n  \"EDESTADDRREQ\": 17,\r\n  \"EMSGSIZE\": 35,\r\n  \"EPROTONOSUPPORT\": 66,\r\n  \"ESOCKTNOSUPPORT\": 137,\r\n  \"EADDRNOTAVAIL\": 4,\r\n  \"ENETRESET\": 39,\r\n  \"EISCONN\": 30,\r\n  \"ENOTCONN\": 53,\r\n  \"ETOOMANYREFS\": 141,\r\n  \"EUSERS\": 136,\r\n  \"EDQUOT\": 19,\r\n  \"ESTALE\": 72,\r\n  \"ENOTSUP\": 138,\r\n  \"ENOMEDIUM\": 148,\r\n  \"EILSEQ\": 25,\r\n  \"EOVERFLOW\": 61,\r\n  \"ECANCELED\": 11,\r\n  \"ENOTRECOVERABLE\": 56,\r\n  \"EOWNERDEAD\": 62,\r\n  \"ESTRPIPE\": 135\r\n};\r\n\r\nvar FS = {\r\n  root: null,\r\n  mounts: [],\r\n  devices: {},\r\n  streams: [],\r\n  nextInode: 1,\r\n  nameTable: null,\r\n  currentPath: \"/\",\r\n  initialized: false,\r\n  ignorePermissions: true,\r\n  filesystems: null,\r\n  syncFSRequests: 0,\r\n  ErrnoError: class extends Error {\r\n    name=\"ErrnoError\";\r\n    // We set the `name` property to be able to identify `FS.ErrnoError`\r\n    // - the `name` is a standard ECMA-262 property of error objects. Kind of good to have it anyway.\r\n    // - when using PROXYFS, an error can come from an underlying FS\r\n    // as different FS objects have their own FS.ErrnoError each,\r\n    // the test `err instanceof FS.ErrnoError` won't detect an error coming from another filesystem, causing bugs.\r\n    // we'll use the reliable test `err.name == \"ErrnoError\"` instead\r\n    constructor(errno) {\r\n      super(runtimeInitialized ? strError(errno) : \"\");\r\n      this.errno = errno;\r\n      for (var key in ERRNO_CODES) {\r\n        if (ERRNO_CODES[key] === errno) {\r\n          this.code = key;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  FSStream: class {\r\n    shared={};\r\n    get object() {\r\n      return this.node;\r\n    }\r\n    set object(val) {\r\n      this.node = val;\r\n    }\r\n    get isRead() {\r\n      return (this.flags & 2097155) !== 1;\r\n    }\r\n    get isWrite() {\r\n      return (this.flags & 2097155) !== 0;\r\n    }\r\n    get isAppend() {\r\n      return (this.flags & 1024);\r\n    }\r\n    get flags() {\r\n      return this.shared.flags;\r\n    }\r\n    set flags(val) {\r\n      this.shared.flags = val;\r\n    }\r\n    get position() {\r\n      return this.shared.position;\r\n    }\r\n    set position(val) {\r\n      this.shared.position = val;\r\n    }\r\n  },\r\n  FSNode: class {\r\n    node_ops={};\r\n    stream_ops={};\r\n    readMode=292 | 73;\r\n    writeMode=146;\r\n    mounted=null;\r\n    constructor(parent, name, mode, rdev) {\r\n      if (!parent) {\r\n        parent = this;\r\n      }\r\n      this.parent = parent;\r\n      this.mount = parent.mount;\r\n      this.id = FS.nextInode++;\r\n      this.name = name;\r\n      this.mode = mode;\r\n      this.rdev = rdev;\r\n      this.atime = this.mtime = this.ctime = Date.now();\r\n    }\r\n    get read() {\r\n      return (this.mode & this.readMode) === this.readMode;\r\n    }\r\n    set read(val) {\r\n      val ? this.mode |= this.readMode : this.mode &= ~this.readMode;\r\n    }\r\n    get write() {\r\n      return (this.mode & this.writeMode) === this.writeMode;\r\n    }\r\n    set write(val) {\r\n      val ? this.mode |= this.writeMode : this.mode &= ~this.writeMode;\r\n    }\r\n    get isFolder() {\r\n      return FS.isDir(this.mode);\r\n    }\r\n    get isDevice() {\r\n      return FS.isChrdev(this.mode);\r\n    }\r\n  },\r\n  lookupPath(path, opts = {}) {\r\n    if (!path) {\r\n      throw new FS.ErrnoError(44);\r\n    }\r\n    opts.follow_mount ??= true;\r\n    if (!PATH.isAbs(path)) {\r\n      path = FS.cwd() + \"/\" + path;\r\n    }\r\n    // limit max consecutive symlinks to 40 (SYMLOOP_MAX).\r\n    linkloop: for (var nlinks = 0; nlinks < 40; nlinks++) {\r\n      // split the absolute path\r\n      var parts = path.split(\"/\").filter(p => !!p);\r\n      // start at the root\r\n      var current = FS.root;\r\n      var current_path = \"/\";\r\n      for (var i = 0; i < parts.length; i++) {\r\n        var islast = (i === parts.length - 1);\r\n        if (islast && opts.parent) {\r\n          // stop resolving\r\n          break;\r\n        }\r\n        if (parts[i] === \".\") {\r\n          continue;\r\n        }\r\n        if (parts[i] === \"..\") {\r\n          current_path = PATH.dirname(current_path);\r\n          if (FS.isRoot(current)) {\r\n            path = current_path + \"/\" + parts.slice(i + 1).join(\"/\");\r\n            continue linkloop;\r\n          } else {\r\n            current = current.parent;\r\n          }\r\n          continue;\r\n        }\r\n        current_path = PATH.join2(current_path, parts[i]);\r\n        try {\r\n          current = FS.lookupNode(current, parts[i]);\r\n        } catch (e) {\r\n          // if noent_okay is true, suppress a ENOENT in the last component\r\n          // and return an object with an undefined node. This is needed for\r\n          // resolving symlinks in the path when creating a file.\r\n          if ((e?.errno === 44) && islast && opts.noent_okay) {\r\n            return {\r\n              path: current_path\r\n            };\r\n          }\r\n          throw e;\r\n        }\r\n        // jump to the mount's root node if this is a mountpoint\r\n        if (FS.isMountpoint(current) && (!islast || opts.follow_mount)) {\r\n          current = current.mounted.root;\r\n        }\r\n        // by default, lookupPath will not follow a symlink if it is the final path component.\r\n        // setting opts.follow = true will override this behavior.\r\n        if (FS.isLink(current.mode) && (!islast || opts.follow)) {\r\n          if (!current.node_ops.readlink) {\r\n            throw new FS.ErrnoError(52);\r\n          }\r\n          var link = current.node_ops.readlink(current);\r\n          if (!PATH.isAbs(link)) {\r\n            link = PATH.dirname(current_path) + \"/\" + link;\r\n          }\r\n          path = link + \"/\" + parts.slice(i + 1).join(\"/\");\r\n          continue linkloop;\r\n        }\r\n      }\r\n      return {\r\n        path: current_path,\r\n        node: current\r\n      };\r\n    }\r\n    throw new FS.ErrnoError(32);\r\n  },\r\n  getPath(node) {\r\n    var path;\r\n    while (true) {\r\n      if (FS.isRoot(node)) {\r\n        var mount = node.mount.mountpoint;\r\n        if (!path) return mount;\r\n        return mount[mount.length - 1] !== \"/\" ? `${mount}/${path}` : mount + path;\r\n      }\r\n      path = path ? `${node.name}/${path}` : node.name;\r\n      node = node.parent;\r\n    }\r\n  },\r\n  hashName(parentid, name) {\r\n    var hash = 0;\r\n    for (var i = 0; i < name.length; i++) {\r\n      hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\r\n    }\r\n    return ((parentid + hash) >>> 0) % FS.nameTable.length;\r\n  },\r\n  hashAddNode(node) {\r\n    var hash = FS.hashName(node.parent.id, node.name);\r\n    node.name_next = FS.nameTable[hash];\r\n    FS.nameTable[hash] = node;\r\n  },\r\n  hashRemoveNode(node) {\r\n    var hash = FS.hashName(node.parent.id, node.name);\r\n    if (FS.nameTable[hash] === node) {\r\n      FS.nameTable[hash] = node.name_next;\r\n    } else {\r\n      var current = FS.nameTable[hash];\r\n      while (current) {\r\n        if (current.name_next === node) {\r\n          current.name_next = node.name_next;\r\n          break;\r\n        }\r\n        current = current.name_next;\r\n      }\r\n    }\r\n  },\r\n  lookupNode(parent, name) {\r\n    var errCode = FS.mayLookup(parent);\r\n    if (errCode) {\r\n      throw new FS.ErrnoError(errCode);\r\n    }\r\n    var hash = FS.hashName(parent.id, name);\r\n    for (var node = FS.nameTable[hash]; node; node = node.name_next) {\r\n      var nodeName = node.name;\r\n      if (node.parent.id === parent.id && nodeName === name) {\r\n        return node;\r\n      }\r\n    }\r\n    // if we failed to find it in the cache, call into the VFS\r\n    return FS.lookup(parent, name);\r\n  },\r\n  createNode(parent, name, mode, rdev) {\r\n    assert(typeof parent == \"object\");\r\n    var node = new FS.FSNode(parent, name, mode, rdev);\r\n    FS.hashAddNode(node);\r\n    return node;\r\n  },\r\n  destroyNode(node) {\r\n    FS.hashRemoveNode(node);\r\n  },\r\n  isRoot(node) {\r\n    return node === node.parent;\r\n  },\r\n  isMountpoint(node) {\r\n    return !!node.mounted;\r\n  },\r\n  isFile(mode) {\r\n    return (mode & 61440) === 32768;\r\n  },\r\n  isDir(mode) {\r\n    return (mode & 61440) === 16384;\r\n  },\r\n  isLink(mode) {\r\n    return (mode & 61440) === 40960;\r\n  },\r\n  isChrdev(mode) {\r\n    return (mode & 61440) === 8192;\r\n  },\r\n  isBlkdev(mode) {\r\n    return (mode & 61440) === 24576;\r\n  },\r\n  isFIFO(mode) {\r\n    return (mode & 61440) === 4096;\r\n  },\r\n  isSocket(mode) {\r\n    return (mode & 49152) === 49152;\r\n  },\r\n  flagsToPermissionString(flag) {\r\n    var perms = [ \"r\", \"w\", \"rw\" ][flag & 3];\r\n    if ((flag & 512)) {\r\n      perms += \"w\";\r\n    }\r\n    return perms;\r\n  },\r\n  nodePermissions(node, perms) {\r\n    if (FS.ignorePermissions) {\r\n      return 0;\r\n    }\r\n    // return 0 if any user, group or owner bits are set.\r\n    if (perms.includes(\"r\") && !(node.mode & 292)) {\r\n      return 2;\r\n    } else if (perms.includes(\"w\") && !(node.mode & 146)) {\r\n      return 2;\r\n    } else if (perms.includes(\"x\") && !(node.mode & 73)) {\r\n      return 2;\r\n    }\r\n    return 0;\r\n  },\r\n  mayLookup(dir) {\r\n    if (!FS.isDir(dir.mode)) return 54;\r\n    var errCode = FS.nodePermissions(dir, \"x\");\r\n    if (errCode) return errCode;\r\n    if (!dir.node_ops.lookup) return 2;\r\n    return 0;\r\n  },\r\n  mayCreate(dir, name) {\r\n    if (!FS.isDir(dir.mode)) {\r\n      return 54;\r\n    }\r\n    try {\r\n      var node = FS.lookupNode(dir, name);\r\n      return 20;\r\n    } catch (e) {}\r\n    return FS.nodePermissions(dir, \"wx\");\r\n  },\r\n  mayDelete(dir, name, isdir) {\r\n    var node;\r\n    try {\r\n      node = FS.lookupNode(dir, name);\r\n    } catch (e) {\r\n      return e.errno;\r\n    }\r\n    var errCode = FS.nodePermissions(dir, \"wx\");\r\n    if (errCode) {\r\n      return errCode;\r\n    }\r\n    if (isdir) {\r\n      if (!FS.isDir(node.mode)) {\r\n        return 54;\r\n      }\r\n      if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\r\n        return 10;\r\n      }\r\n    } else {\r\n      if (FS.isDir(node.mode)) {\r\n        return 31;\r\n      }\r\n    }\r\n    return 0;\r\n  },\r\n  mayOpen(node, flags) {\r\n    if (!node) {\r\n      return 44;\r\n    }\r\n    if (FS.isLink(node.mode)) {\r\n      return 32;\r\n    } else if (FS.isDir(node.mode)) {\r\n      if (FS.flagsToPermissionString(flags) !== \"r\" || (flags & (512 | 64))) {\r\n        // TODO: check for O_SEARCH? (== search for dir only)\r\n        return 31;\r\n      }\r\n    }\r\n    return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\r\n  },\r\n  checkOpExists(op, err) {\r\n    if (!op) {\r\n      throw new FS.ErrnoError(err);\r\n    }\r\n    return op;\r\n  },\r\n  MAX_OPEN_FDS: 4096,\r\n  nextfd() {\r\n    for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {\r\n      if (!FS.streams[fd]) {\r\n        return fd;\r\n      }\r\n    }\r\n    throw new FS.ErrnoError(33);\r\n  },\r\n  getStreamChecked(fd) {\r\n    var stream = FS.getStream(fd);\r\n    if (!stream) {\r\n      throw new FS.ErrnoError(8);\r\n    }\r\n    return stream;\r\n  },\r\n  getStream: fd => FS.streams[fd],\r\n  createStream(stream, fd = -1) {\r\n    assert(fd >= -1);\r\n    // clone it, so we can return an instance of FSStream\r\n    stream = Object.assign(new FS.FSStream, stream);\r\n    if (fd == -1) {\r\n      fd = FS.nextfd();\r\n    }\r\n    stream.fd = fd;\r\n    FS.streams[fd] = stream;\r\n    return stream;\r\n  },\r\n  closeStream(fd) {\r\n    FS.streams[fd] = null;\r\n  },\r\n  dupStream(origStream, fd = -1) {\r\n    var stream = FS.createStream(origStream, fd);\r\n    stream.stream_ops?.dup?.(stream);\r\n    return stream;\r\n  },\r\n  doSetAttr(stream, node, attr) {\r\n    var setattr = stream?.stream_ops.setattr;\r\n    var arg = setattr ? stream : node;\r\n    setattr ??= node.node_ops.setattr;\r\n    FS.checkOpExists(setattr, 63);\r\n    setattr(arg, attr);\r\n  },\r\n  chrdev_stream_ops: {\r\n    open(stream) {\r\n      var device = FS.getDevice(stream.node.rdev);\r\n      // override node's stream ops with the device's\r\n      stream.stream_ops = device.stream_ops;\r\n      // forward the open call\r\n      stream.stream_ops.open?.(stream);\r\n    },\r\n    llseek() {\r\n      throw new FS.ErrnoError(70);\r\n    }\r\n  },\r\n  major: dev => ((dev) >> 8),\r\n  minor: dev => ((dev) & 255),\r\n  makedev: (ma, mi) => ((ma) << 8 | (mi)),\r\n  registerDevice(dev, ops) {\r\n    FS.devices[dev] = {\r\n      stream_ops: ops\r\n    };\r\n  },\r\n  getDevice: dev => FS.devices[dev],\r\n  getMounts(mount) {\r\n    var mounts = [];\r\n    var check = [ mount ];\r\n    while (check.length) {\r\n      var m = check.pop();\r\n      mounts.push(m);\r\n      check.push(...m.mounts);\r\n    }\r\n    return mounts;\r\n  },\r\n  syncfs(populate, callback) {\r\n    if (typeof populate == \"function\") {\r\n      callback = populate;\r\n      populate = false;\r\n    }\r\n    FS.syncFSRequests++;\r\n    if (FS.syncFSRequests > 1) {\r\n      err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);\r\n    }\r\n    var mounts = FS.getMounts(FS.root.mount);\r\n    var completed = 0;\r\n    function doCallback(errCode) {\r\n      assert(FS.syncFSRequests > 0);\r\n      FS.syncFSRequests--;\r\n      return callback(errCode);\r\n    }\r\n    function done(errCode) {\r\n      if (errCode) {\r\n        if (!done.errored) {\r\n          done.errored = true;\r\n          return doCallback(errCode);\r\n        }\r\n        return;\r\n      }\r\n      if (++completed >= mounts.length) {\r\n        doCallback(null);\r\n      }\r\n    }\r\n    // sync all mounts\r\n    mounts.forEach(mount => {\r\n      if (!mount.type.syncfs) {\r\n        return done(null);\r\n      }\r\n      mount.type.syncfs(mount, populate, done);\r\n    });\r\n  },\r\n  mount(type, opts, mountpoint) {\r\n    if (typeof type == \"string\") {\r\n      // The filesystem was not included, and instead we have an error\r\n      // message stored in the variable.\r\n      throw type;\r\n    }\r\n    var root = mountpoint === \"/\";\r\n    var pseudo = !mountpoint;\r\n    var node;\r\n    if (root && FS.root) {\r\n      throw new FS.ErrnoError(10);\r\n    } else if (!root && !pseudo) {\r\n      var lookup = FS.lookupPath(mountpoint, {\r\n        follow_mount: false\r\n      });\r\n      mountpoint = lookup.path;\r\n      // use the absolute path\r\n      node = lookup.node;\r\n      if (FS.isMountpoint(node)) {\r\n        throw new FS.ErrnoError(10);\r\n      }\r\n      if (!FS.isDir(node.mode)) {\r\n        throw new FS.ErrnoError(54);\r\n      }\r\n    }\r\n    var mount = {\r\n      type,\r\n      opts,\r\n      mountpoint,\r\n      mounts: []\r\n    };\r\n    // create a root node for the fs\r\n    var mountRoot = type.mount(mount);\r\n    mountRoot.mount = mount;\r\n    mount.root = mountRoot;\r\n    if (root) {\r\n      FS.root = mountRoot;\r\n    } else if (node) {\r\n      // set as a mountpoint\r\n      node.mounted = mount;\r\n      // add the new mount to the current mount's children\r\n      if (node.mount) {\r\n        node.mount.mounts.push(mount);\r\n      }\r\n    }\r\n    return mountRoot;\r\n  },\r\n  unmount(mountpoint) {\r\n    var lookup = FS.lookupPath(mountpoint, {\r\n      follow_mount: false\r\n    });\r\n    if (!FS.isMountpoint(lookup.node)) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    // destroy the nodes for this mount, and all its child mounts\r\n    var node = lookup.node;\r\n    var mount = node.mounted;\r\n    var mounts = FS.getMounts(mount);\r\n    Object.keys(FS.nameTable).forEach(hash => {\r\n      var current = FS.nameTable[hash];\r\n      while (current) {\r\n        var next = current.name_next;\r\n        if (mounts.includes(current.mount)) {\r\n          FS.destroyNode(current);\r\n        }\r\n        current = next;\r\n      }\r\n    });\r\n    // no longer a mountpoint\r\n    node.mounted = null;\r\n    // remove this mount from the child mounts\r\n    var idx = node.mount.mounts.indexOf(mount);\r\n    assert(idx !== -1);\r\n    node.mount.mounts.splice(idx, 1);\r\n  },\r\n  lookup(parent, name) {\r\n    return parent.node_ops.lookup(parent, name);\r\n  },\r\n  mknod(path, mode, dev) {\r\n    var lookup = FS.lookupPath(path, {\r\n      parent: true\r\n    });\r\n    var parent = lookup.node;\r\n    var name = PATH.basename(path);\r\n    if (!name) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    if (name === \".\" || name === \"..\") {\r\n      throw new FS.ErrnoError(20);\r\n    }\r\n    var errCode = FS.mayCreate(parent, name);\r\n    if (errCode) {\r\n      throw new FS.ErrnoError(errCode);\r\n    }\r\n    if (!parent.node_ops.mknod) {\r\n      throw new FS.ErrnoError(63);\r\n    }\r\n    return parent.node_ops.mknod(parent, name, mode, dev);\r\n  },\r\n  statfs(path) {\r\n    return FS.statfsNode(FS.lookupPath(path, {\r\n      follow: true\r\n    }).node);\r\n  },\r\n  statfsStream(stream) {\r\n    // We keep a separate statfsStream function because noderawfs overrides\r\n    // it. In noderawfs, stream.node is sometimes null. Instead, we need to\r\n    // look at stream.path.\r\n    return FS.statfsNode(stream.node);\r\n  },\r\n  statfsNode(node) {\r\n    // NOTE: None of the defaults here are true. We're just returning safe and\r\n    //       sane values. Currently nodefs and rawfs replace these defaults,\r\n    //       other file systems leave them alone.\r\n    var rtn = {\r\n      bsize: 4096,\r\n      frsize: 4096,\r\n      blocks: 1e6,\r\n      bfree: 5e5,\r\n      bavail: 5e5,\r\n      files: FS.nextInode,\r\n      ffree: FS.nextInode - 1,\r\n      fsid: 42,\r\n      flags: 2,\r\n      namelen: 255\r\n    };\r\n    if (node.node_ops.statfs) {\r\n      Object.assign(rtn, node.node_ops.statfs(node.mount.opts.root));\r\n    }\r\n    return rtn;\r\n  },\r\n  create(path, mode = 438) {\r\n    mode &= 4095;\r\n    mode |= 32768;\r\n    return FS.mknod(path, mode, 0);\r\n  },\r\n  mkdir(path, mode = 511) {\r\n    mode &= 511 | 512;\r\n    mode |= 16384;\r\n    return FS.mknod(path, mode, 0);\r\n  },\r\n  mkdirTree(path, mode) {\r\n    var dirs = path.split(\"/\");\r\n    var d = \"\";\r\n    for (var dir of dirs) {\r\n      if (!dir) continue;\r\n      if (d || PATH.isAbs(path)) d += \"/\";\r\n      d += dir;\r\n      try {\r\n        FS.mkdir(d, mode);\r\n      } catch (e) {\r\n        if (e.errno != 20) throw e;\r\n      }\r\n    }\r\n  },\r\n  mkdev(path, mode, dev) {\r\n    if (typeof dev == \"undefined\") {\r\n      dev = mode;\r\n      mode = 438;\r\n    }\r\n    mode |= 8192;\r\n    return FS.mknod(path, mode, dev);\r\n  },\r\n  symlink(oldpath, newpath) {\r\n    if (!PATH_FS.resolve(oldpath)) {\r\n      throw new FS.ErrnoError(44);\r\n    }\r\n    var lookup = FS.lookupPath(newpath, {\r\n      parent: true\r\n    });\r\n    var parent = lookup.node;\r\n    if (!parent) {\r\n      throw new FS.ErrnoError(44);\r\n    }\r\n    var newname = PATH.basename(newpath);\r\n    var errCode = FS.mayCreate(parent, newname);\r\n    if (errCode) {\r\n      throw new FS.ErrnoError(errCode);\r\n    }\r\n    if (!parent.node_ops.symlink) {\r\n      throw new FS.ErrnoError(63);\r\n    }\r\n    return parent.node_ops.symlink(parent, newname, oldpath);\r\n  },\r\n  rename(old_path, new_path) {\r\n    var old_dirname = PATH.dirname(old_path);\r\n    var new_dirname = PATH.dirname(new_path);\r\n    var old_name = PATH.basename(old_path);\r\n    var new_name = PATH.basename(new_path);\r\n    // parents must exist\r\n    var lookup, old_dir, new_dir;\r\n    // let the errors from non existent directories percolate up\r\n    lookup = FS.lookupPath(old_path, {\r\n      parent: true\r\n    });\r\n    old_dir = lookup.node;\r\n    lookup = FS.lookupPath(new_path, {\r\n      parent: true\r\n    });\r\n    new_dir = lookup.node;\r\n    if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\r\n    // need to be part of the same mount\r\n    if (old_dir.mount !== new_dir.mount) {\r\n      throw new FS.ErrnoError(75);\r\n    }\r\n    // source must exist\r\n    var old_node = FS.lookupNode(old_dir, old_name);\r\n    // old path should not be an ancestor of the new path\r\n    var relative = PATH_FS.relative(old_path, new_dirname);\r\n    if (relative.charAt(0) !== \".\") {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    // new path should not be an ancestor of the old path\r\n    relative = PATH_FS.relative(new_path, old_dirname);\r\n    if (relative.charAt(0) !== \".\") {\r\n      throw new FS.ErrnoError(55);\r\n    }\r\n    // see if the new path already exists\r\n    var new_node;\r\n    try {\r\n      new_node = FS.lookupNode(new_dir, new_name);\r\n    } catch (e) {}\r\n    // early out if nothing needs to change\r\n    if (old_node === new_node) {\r\n      return;\r\n    }\r\n    // we'll need to delete the old entry\r\n    var isdir = FS.isDir(old_node.mode);\r\n    var errCode = FS.mayDelete(old_dir, old_name, isdir);\r\n    if (errCode) {\r\n      throw new FS.ErrnoError(errCode);\r\n    }\r\n    // need delete permissions if we'll be overwriting.\r\n    // need create permissions if new doesn't already exist.\r\n    errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\r\n    if (errCode) {\r\n      throw new FS.ErrnoError(errCode);\r\n    }\r\n    if (!old_dir.node_ops.rename) {\r\n      throw new FS.ErrnoError(63);\r\n    }\r\n    if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\r\n      throw new FS.ErrnoError(10);\r\n    }\r\n    // if we are going to change the parent, check write permissions\r\n    if (new_dir !== old_dir) {\r\n      errCode = FS.nodePermissions(old_dir, \"w\");\r\n      if (errCode) {\r\n        throw new FS.ErrnoError(errCode);\r\n      }\r\n    }\r\n    // remove the node from the lookup hash\r\n    FS.hashRemoveNode(old_node);\r\n    // do the underlying fs rename\r\n    try {\r\n      old_dir.node_ops.rename(old_node, new_dir, new_name);\r\n      // update old node (we do this here to avoid each backend\r\n      // needing to)\r\n      old_node.parent = new_dir;\r\n    } catch (e) {\r\n      throw e;\r\n    } finally {\r\n      // add the node back to the hash (in case node_ops.rename\r\n      // changed its name)\r\n      FS.hashAddNode(old_node);\r\n    }\r\n  },\r\n  rmdir(path) {\r\n    var lookup = FS.lookupPath(path, {\r\n      parent: true\r\n    });\r\n    var parent = lookup.node;\r\n    var name = PATH.basename(path);\r\n    var node = FS.lookupNode(parent, name);\r\n    var errCode = FS.mayDelete(parent, name, true);\r\n    if (errCode) {\r\n      throw new FS.ErrnoError(errCode);\r\n    }\r\n    if (!parent.node_ops.rmdir) {\r\n      throw new FS.ErrnoError(63);\r\n    }\r\n    if (FS.isMountpoint(node)) {\r\n      throw new FS.ErrnoError(10);\r\n    }\r\n    parent.node_ops.rmdir(parent, name);\r\n    FS.destroyNode(node);\r\n  },\r\n  readdir(path) {\r\n    var lookup = FS.lookupPath(path, {\r\n      follow: true\r\n    });\r\n    var node = lookup.node;\r\n    var readdir = FS.checkOpExists(node.node_ops.readdir, 54);\r\n    return readdir(node);\r\n  },\r\n  unlink(path) {\r\n    var lookup = FS.lookupPath(path, {\r\n      parent: true\r\n    });\r\n    var parent = lookup.node;\r\n    if (!parent) {\r\n      throw new FS.ErrnoError(44);\r\n    }\r\n    var name = PATH.basename(path);\r\n    var node = FS.lookupNode(parent, name);\r\n    var errCode = FS.mayDelete(parent, name, false);\r\n    if (errCode) {\r\n      // According to POSIX, we should map EISDIR to EPERM, but\r\n      // we instead do what Linux does (and we must, as we use\r\n      // the musl linux libc).\r\n      throw new FS.ErrnoError(errCode);\r\n    }\r\n    if (!parent.node_ops.unlink) {\r\n      throw new FS.ErrnoError(63);\r\n    }\r\n    if (FS.isMountpoint(node)) {\r\n      throw new FS.ErrnoError(10);\r\n    }\r\n    parent.node_ops.unlink(parent, name);\r\n    FS.destroyNode(node);\r\n  },\r\n  readlink(path) {\r\n    var lookup = FS.lookupPath(path);\r\n    var link = lookup.node;\r\n    if (!link) {\r\n      throw new FS.ErrnoError(44);\r\n    }\r\n    if (!link.node_ops.readlink) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    return link.node_ops.readlink(link);\r\n  },\r\n  stat(path, dontFollow) {\r\n    var lookup = FS.lookupPath(path, {\r\n      follow: !dontFollow\r\n    });\r\n    var node = lookup.node;\r\n    var getattr = FS.checkOpExists(node.node_ops.getattr, 63);\r\n    return getattr(node);\r\n  },\r\n  fstat(fd) {\r\n    var stream = FS.getStreamChecked(fd);\r\n    var node = stream.node;\r\n    var getattr = stream.stream_ops.getattr;\r\n    var arg = getattr ? stream : node;\r\n    getattr ??= node.node_ops.getattr;\r\n    FS.checkOpExists(getattr, 63);\r\n    return getattr(arg);\r\n  },\r\n  lstat(path) {\r\n    return FS.stat(path, true);\r\n  },\r\n  doChmod(stream, node, mode, dontFollow) {\r\n    FS.doSetAttr(stream, node, {\r\n      mode: (mode & 4095) | (node.mode & ~4095),\r\n      ctime: Date.now(),\r\n      dontFollow\r\n    });\r\n  },\r\n  chmod(path, mode, dontFollow) {\r\n    var node;\r\n    if (typeof path == \"string\") {\r\n      var lookup = FS.lookupPath(path, {\r\n        follow: !dontFollow\r\n      });\r\n      node = lookup.node;\r\n    } else {\r\n      node = path;\r\n    }\r\n    FS.doChmod(null, node, mode, dontFollow);\r\n  },\r\n  lchmod(path, mode) {\r\n    FS.chmod(path, mode, true);\r\n  },\r\n  fchmod(fd, mode) {\r\n    var stream = FS.getStreamChecked(fd);\r\n    FS.doChmod(stream, stream.node, mode, false);\r\n  },\r\n  doChown(stream, node, dontFollow) {\r\n    FS.doSetAttr(stream, node, {\r\n      timestamp: Date.now(),\r\n      dontFollow\r\n    });\r\n  },\r\n  chown(path, uid, gid, dontFollow) {\r\n    var node;\r\n    if (typeof path == \"string\") {\r\n      var lookup = FS.lookupPath(path, {\r\n        follow: !dontFollow\r\n      });\r\n      node = lookup.node;\r\n    } else {\r\n      node = path;\r\n    }\r\n    FS.doChown(null, node, dontFollow);\r\n  },\r\n  lchown(path, uid, gid) {\r\n    FS.chown(path, uid, gid, true);\r\n  },\r\n  fchown(fd, uid, gid) {\r\n    var stream = FS.getStreamChecked(fd);\r\n    FS.doChown(stream, stream.node, false);\r\n  },\r\n  doTruncate(stream, node, len) {\r\n    if (FS.isDir(node.mode)) {\r\n      throw new FS.ErrnoError(31);\r\n    }\r\n    if (!FS.isFile(node.mode)) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    var errCode = FS.nodePermissions(node, \"w\");\r\n    if (errCode) {\r\n      throw new FS.ErrnoError(errCode);\r\n    }\r\n    FS.doSetAttr(stream, node, {\r\n      size: len,\r\n      timestamp: Date.now()\r\n    });\r\n  },\r\n  truncate(path, len) {\r\n    if (len < 0) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    var node;\r\n    if (typeof path == \"string\") {\r\n      var lookup = FS.lookupPath(path, {\r\n        follow: true\r\n      });\r\n      node = lookup.node;\r\n    } else {\r\n      node = path;\r\n    }\r\n    FS.doTruncate(null, node, len);\r\n  },\r\n  ftruncate(fd, len) {\r\n    var stream = FS.getStreamChecked(fd);\r\n    if (len < 0 || (stream.flags & 2097155) === 0) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    FS.doTruncate(stream, stream.node, len);\r\n  },\r\n  utime(path, atime, mtime) {\r\n    var lookup = FS.lookupPath(path, {\r\n      follow: true\r\n    });\r\n    var node = lookup.node;\r\n    var setattr = FS.checkOpExists(node.node_ops.setattr, 63);\r\n    setattr(node, {\r\n      atime,\r\n      mtime\r\n    });\r\n  },\r\n  open(path, flags, mode = 438) {\r\n    if (path === \"\") {\r\n      throw new FS.ErrnoError(44);\r\n    }\r\n    flags = typeof flags == \"string\" ? FS_modeStringToFlags(flags) : flags;\r\n    if ((flags & 64)) {\r\n      mode = (mode & 4095) | 32768;\r\n    } else {\r\n      mode = 0;\r\n    }\r\n    var node;\r\n    var isDirPath;\r\n    if (typeof path == \"object\") {\r\n      node = path;\r\n    } else {\r\n      isDirPath = path.endsWith(\"/\");\r\n      // noent_okay makes it so that if the final component of the path\r\n      // doesn't exist, lookupPath returns `node: undefined`. `path` will be\r\n      // updated to point to the target of all symlinks.\r\n      var lookup = FS.lookupPath(path, {\r\n        follow: !(flags & 131072),\r\n        noent_okay: true\r\n      });\r\n      node = lookup.node;\r\n      path = lookup.path;\r\n    }\r\n    // perhaps we need to create the node\r\n    var created = false;\r\n    if ((flags & 64)) {\r\n      if (node) {\r\n        // if O_CREAT and O_EXCL are set, error out if the node already exists\r\n        if ((flags & 128)) {\r\n          throw new FS.ErrnoError(20);\r\n        }\r\n      } else if (isDirPath) {\r\n        throw new FS.ErrnoError(31);\r\n      } else {\r\n        // node doesn't exist, try to create it\r\n        // Ignore the permission bits here to ensure we can `open` this new\r\n        // file below. We use chmod below the apply the permissions once the\r\n        // file is open.\r\n        node = FS.mknod(path, mode | 511, 0);\r\n        created = true;\r\n      }\r\n    }\r\n    if (!node) {\r\n      throw new FS.ErrnoError(44);\r\n    }\r\n    // can't truncate a device\r\n    if (FS.isChrdev(node.mode)) {\r\n      flags &= ~512;\r\n    }\r\n    // if asked only for a directory, then this must be one\r\n    if ((flags & 65536) && !FS.isDir(node.mode)) {\r\n      throw new FS.ErrnoError(54);\r\n    }\r\n    // check permissions, if this is not a file we just created now (it is ok to\r\n    // create and write to a file with read-only permissions; it is read-only\r\n    // for later use)\r\n    if (!created) {\r\n      var errCode = FS.mayOpen(node, flags);\r\n      if (errCode) {\r\n        throw new FS.ErrnoError(errCode);\r\n      }\r\n    }\r\n    // do truncation if necessary\r\n    if ((flags & 512) && !created) {\r\n      FS.truncate(node, 0);\r\n    }\r\n    // we've already handled these, don't pass down to the underlying vfs\r\n    flags &= ~(128 | 512 | 131072);\r\n    // register the stream with the filesystem\r\n    var stream = FS.createStream({\r\n      node,\r\n      path: FS.getPath(node),\r\n      // we want the absolute path to the node\r\n      flags,\r\n      seekable: true,\r\n      position: 0,\r\n      stream_ops: node.stream_ops,\r\n      // used by the file family libc calls (fopen, fwrite, ferror, etc.)\r\n      ungotten: [],\r\n      error: false\r\n    });\r\n    // call the new stream's open function\r\n    if (stream.stream_ops.open) {\r\n      stream.stream_ops.open(stream);\r\n    }\r\n    if (created) {\r\n      FS.chmod(node, mode & 511);\r\n    }\r\n    return stream;\r\n  },\r\n  close(stream) {\r\n    if (FS.isClosed(stream)) {\r\n      throw new FS.ErrnoError(8);\r\n    }\r\n    if (stream.getdents) stream.getdents = null;\r\n    // free readdir state\r\n    try {\r\n      if (stream.stream_ops.close) {\r\n        stream.stream_ops.close(stream);\r\n      }\r\n    } catch (e) {\r\n      throw e;\r\n    } finally {\r\n      FS.closeStream(stream.fd);\r\n    }\r\n    stream.fd = null;\r\n  },\r\n  isClosed(stream) {\r\n    return stream.fd === null;\r\n  },\r\n  llseek(stream, offset, whence) {\r\n    if (FS.isClosed(stream)) {\r\n      throw new FS.ErrnoError(8);\r\n    }\r\n    if (!stream.seekable || !stream.stream_ops.llseek) {\r\n      throw new FS.ErrnoError(70);\r\n    }\r\n    if (whence != 0 && whence != 1 && whence != 2) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    stream.position = stream.stream_ops.llseek(stream, offset, whence);\r\n    stream.ungotten = [];\r\n    return stream.position;\r\n  },\r\n  read(stream, buffer, offset, length, position) {\r\n    assert(offset >= 0);\r\n    if (length < 0 || position < 0) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    if (FS.isClosed(stream)) {\r\n      throw new FS.ErrnoError(8);\r\n    }\r\n    if ((stream.flags & 2097155) === 1) {\r\n      throw new FS.ErrnoError(8);\r\n    }\r\n    if (FS.isDir(stream.node.mode)) {\r\n      throw new FS.ErrnoError(31);\r\n    }\r\n    if (!stream.stream_ops.read) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    var seeking = typeof position != \"undefined\";\r\n    if (!seeking) {\r\n      position = stream.position;\r\n    } else if (!stream.seekable) {\r\n      throw new FS.ErrnoError(70);\r\n    }\r\n    var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\r\n    if (!seeking) stream.position += bytesRead;\r\n    return bytesRead;\r\n  },\r\n  write(stream, buffer, offset, length, position, canOwn) {\r\n    assert(offset >= 0);\r\n    if (length < 0 || position < 0) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    if (FS.isClosed(stream)) {\r\n      throw new FS.ErrnoError(8);\r\n    }\r\n    if ((stream.flags & 2097155) === 0) {\r\n      throw new FS.ErrnoError(8);\r\n    }\r\n    if (FS.isDir(stream.node.mode)) {\r\n      throw new FS.ErrnoError(31);\r\n    }\r\n    if (!stream.stream_ops.write) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    if (stream.seekable && stream.flags & 1024) {\r\n      // seek to the end before writing in append mode\r\n      FS.llseek(stream, 0, 2);\r\n    }\r\n    var seeking = typeof position != \"undefined\";\r\n    if (!seeking) {\r\n      position = stream.position;\r\n    } else if (!stream.seekable) {\r\n      throw new FS.ErrnoError(70);\r\n    }\r\n    var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\r\n    if (!seeking) stream.position += bytesWritten;\r\n    return bytesWritten;\r\n  },\r\n  mmap(stream, length, position, prot, flags) {\r\n    // User requests writing to file (prot & PROT_WRITE != 0).\r\n    // Checking if we have permissions to write to the file unless\r\n    // MAP_PRIVATE flag is set. According to POSIX spec it is possible\r\n    // to write to file opened in read-only mode with MAP_PRIVATE flag,\r\n    // as all modifications will be visible only in the memory of\r\n    // the current process.\r\n    if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\r\n      throw new FS.ErrnoError(2);\r\n    }\r\n    if ((stream.flags & 2097155) === 1) {\r\n      throw new FS.ErrnoError(2);\r\n    }\r\n    if (!stream.stream_ops.mmap) {\r\n      throw new FS.ErrnoError(43);\r\n    }\r\n    if (!length) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    return stream.stream_ops.mmap(stream, length, position, prot, flags);\r\n  },\r\n  msync(stream, buffer, offset, length, mmapFlags) {\r\n    assert(offset >= 0);\r\n    if (!stream.stream_ops.msync) {\r\n      return 0;\r\n    }\r\n    return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\r\n  },\r\n  ioctl(stream, cmd, arg) {\r\n    if (!stream.stream_ops.ioctl) {\r\n      throw new FS.ErrnoError(59);\r\n    }\r\n    return stream.stream_ops.ioctl(stream, cmd, arg);\r\n  },\r\n  readFile(path, opts = {}) {\r\n    opts.flags = opts.flags || 0;\r\n    opts.encoding = opts.encoding || \"binary\";\r\n    if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\r\n      throw new Error(`Invalid encoding type \"${opts.encoding}\"`);\r\n    }\r\n    var ret;\r\n    var stream = FS.open(path, opts.flags);\r\n    var stat = FS.stat(path);\r\n    var length = stat.size;\r\n    var buf = new Uint8Array(length);\r\n    FS.read(stream, buf, 0, length, 0);\r\n    if (opts.encoding === \"utf8\") {\r\n      ret = UTF8ArrayToString(buf);\r\n    } else if (opts.encoding === \"binary\") {\r\n      ret = buf;\r\n    }\r\n    FS.close(stream);\r\n    return ret;\r\n  },\r\n  writeFile(path, data, opts = {}) {\r\n    opts.flags = opts.flags || 577;\r\n    var stream = FS.open(path, opts.flags, opts.mode);\r\n    if (typeof data == \"string\") {\r\n      var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\r\n      var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\r\n      FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\r\n    } else if (ArrayBuffer.isView(data)) {\r\n      FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\r\n    } else {\r\n      throw new Error(\"Unsupported data type\");\r\n    }\r\n    FS.close(stream);\r\n  },\r\n  cwd: () => FS.currentPath,\r\n  chdir(path) {\r\n    var lookup = FS.lookupPath(path, {\r\n      follow: true\r\n    });\r\n    if (lookup.node === null) {\r\n      throw new FS.ErrnoError(44);\r\n    }\r\n    if (!FS.isDir(lookup.node.mode)) {\r\n      throw new FS.ErrnoError(54);\r\n    }\r\n    var errCode = FS.nodePermissions(lookup.node, \"x\");\r\n    if (errCode) {\r\n      throw new FS.ErrnoError(errCode);\r\n    }\r\n    FS.currentPath = lookup.path;\r\n  },\r\n  createDefaultDirectories() {\r\n    FS.mkdir(\"/tmp\");\r\n    FS.mkdir(\"/home\");\r\n    FS.mkdir(\"/home/web_user\");\r\n  },\r\n  createDefaultDevices() {\r\n    // create /dev\r\n    FS.mkdir(\"/dev\");\r\n    // setup /dev/null\r\n    FS.registerDevice(FS.makedev(1, 3), {\r\n      read: () => 0,\r\n      write: (stream, buffer, offset, length, pos) => length,\r\n      llseek: () => 0\r\n    });\r\n    FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\r\n    // setup /dev/tty and /dev/tty1\r\n    // stderr needs to print output using err() rather than out()\r\n    // so we register a second tty just for it.\r\n    TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\r\n    TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\r\n    FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\r\n    FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\r\n    // setup /dev/[u]random\r\n    // use a buffer to avoid overhead of individual crypto calls per byte\r\n    var randomBuffer = new Uint8Array(1024), randomLeft = 0;\r\n    var randomByte = () => {\r\n      if (randomLeft === 0) {\r\n        randomFill(randomBuffer);\r\n        randomLeft = randomBuffer.byteLength;\r\n      }\r\n      return randomBuffer[--randomLeft];\r\n    };\r\n    FS.createDevice(\"/dev\", \"random\", randomByte);\r\n    FS.createDevice(\"/dev\", \"urandom\", randomByte);\r\n    // we're not going to emulate the actual shm device,\r\n    // just create the tmp dirs that reside in it commonly\r\n    FS.mkdir(\"/dev/shm\");\r\n    FS.mkdir(\"/dev/shm/tmp\");\r\n  },\r\n  createSpecialDirectories() {\r\n    // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the\r\n    // name of the stream for fd 6 (see test_unistd_ttyname)\r\n    FS.mkdir(\"/proc\");\r\n    var proc_self = FS.mkdir(\"/proc/self\");\r\n    FS.mkdir(\"/proc/self/fd\");\r\n    FS.mount({\r\n      mount() {\r\n        var node = FS.createNode(proc_self, \"fd\", 16895, 73);\r\n        node.stream_ops = {\r\n          llseek: MEMFS.stream_ops.llseek\r\n        };\r\n        node.node_ops = {\r\n          lookup(parent, name) {\r\n            var fd = +name;\r\n            var stream = FS.getStreamChecked(fd);\r\n            var ret = {\r\n              parent: null,\r\n              mount: {\r\n                mountpoint: \"fake\"\r\n              },\r\n              node_ops: {\r\n                readlink: () => stream.path\r\n              },\r\n              id: fd + 1\r\n            };\r\n            ret.parent = ret;\r\n            // make it look like a simple root node\r\n            return ret;\r\n          },\r\n          readdir() {\r\n            return Array.from(FS.streams.entries()).filter(([k, v]) => v).map(([k, v]) => k.toString());\r\n          }\r\n        };\r\n        return node;\r\n      }\r\n    }, {}, \"/proc/self/fd\");\r\n  },\r\n  createStandardStreams(input, output, error) {\r\n    // TODO deprecate the old functionality of a single\r\n    // input / output callback and that utilizes FS.createDevice\r\n    // and instead require a unique set of stream ops\r\n    // by default, we symlink the standard streams to the\r\n    // default tty devices. however, if the standard streams\r\n    // have been overwritten we create a unique device for\r\n    // them instead.\r\n    if (input) {\r\n      FS.createDevice(\"/dev\", \"stdin\", input);\r\n    } else {\r\n      FS.symlink(\"/dev/tty\", \"/dev/stdin\");\r\n    }\r\n    if (output) {\r\n      FS.createDevice(\"/dev\", \"stdout\", null, output);\r\n    } else {\r\n      FS.symlink(\"/dev/tty\", \"/dev/stdout\");\r\n    }\r\n    if (error) {\r\n      FS.createDevice(\"/dev\", \"stderr\", null, error);\r\n    } else {\r\n      FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\r\n    }\r\n    // open default streams for the stdin, stdout and stderr devices\r\n    var stdin = FS.open(\"/dev/stdin\", 0);\r\n    var stdout = FS.open(\"/dev/stdout\", 1);\r\n    var stderr = FS.open(\"/dev/stderr\", 1);\r\n    assert(stdin.fd === 0, `invalid handle for stdin (${stdin.fd})`);\r\n    assert(stdout.fd === 1, `invalid handle for stdout (${stdout.fd})`);\r\n    assert(stderr.fd === 2, `invalid handle for stderr (${stderr.fd})`);\r\n  },\r\n  staticInit() {\r\n    FS.nameTable = new Array(4096);\r\n    FS.mount(MEMFS, {}, \"/\");\r\n    FS.createDefaultDirectories();\r\n    FS.createDefaultDevices();\r\n    FS.createSpecialDirectories();\r\n    FS.filesystems = {\r\n      \"MEMFS\": MEMFS\r\n    };\r\n  },\r\n  init(input, output, error) {\r\n    assert(!FS.initialized, \"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)\");\r\n    FS.initialized = true;\r\n    // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here\r\n    FS.createStandardStreams(input, output, error);\r\n  },\r\n  quit() {\r\n    FS.initialized = false;\r\n    // force-flush all streams, so we get musl std streams printed out\r\n    _fflush(0);\r\n    // close all of our streams\r\n    for (var stream of FS.streams) {\r\n      if (stream) {\r\n        FS.close(stream);\r\n      }\r\n    }\r\n  },\r\n  findObject(path, dontResolveLastLink) {\r\n    var ret = FS.analyzePath(path, dontResolveLastLink);\r\n    if (!ret.exists) {\r\n      return null;\r\n    }\r\n    return ret.object;\r\n  },\r\n  analyzePath(path, dontResolveLastLink) {\r\n    // operate from within the context of the symlink's target\r\n    try {\r\n      var lookup = FS.lookupPath(path, {\r\n        follow: !dontResolveLastLink\r\n      });\r\n      path = lookup.path;\r\n    } catch (e) {}\r\n    var ret = {\r\n      isRoot: false,\r\n      exists: false,\r\n      error: 0,\r\n      name: null,\r\n      path: null,\r\n      object: null,\r\n      parentExists: false,\r\n      parentPath: null,\r\n      parentObject: null\r\n    };\r\n    try {\r\n      var lookup = FS.lookupPath(path, {\r\n        parent: true\r\n      });\r\n      ret.parentExists = true;\r\n      ret.parentPath = lookup.path;\r\n      ret.parentObject = lookup.node;\r\n      ret.name = PATH.basename(path);\r\n      lookup = FS.lookupPath(path, {\r\n        follow: !dontResolveLastLink\r\n      });\r\n      ret.exists = true;\r\n      ret.path = lookup.path;\r\n      ret.object = lookup.node;\r\n      ret.name = lookup.node.name;\r\n      ret.isRoot = lookup.path === \"/\";\r\n    } catch (e) {\r\n      ret.error = e.errno;\r\n    }\r\n    return ret;\r\n  },\r\n  createPath(parent, path, canRead, canWrite) {\r\n    parent = typeof parent == \"string\" ? parent : FS.getPath(parent);\r\n    var parts = path.split(\"/\").reverse();\r\n    while (parts.length) {\r\n      var part = parts.pop();\r\n      if (!part) continue;\r\n      var current = PATH.join2(parent, part);\r\n      try {\r\n        FS.mkdir(current);\r\n      } catch (e) {\r\n        if (e.errno != 20) throw e;\r\n      }\r\n      parent = current;\r\n    }\r\n    return current;\r\n  },\r\n  createFile(parent, name, properties, canRead, canWrite) {\r\n    var path = PATH.join2(typeof parent == \"string\" ? parent : FS.getPath(parent), name);\r\n    var mode = FS_getMode(canRead, canWrite);\r\n    return FS.create(path, mode);\r\n  },\r\n  createDataFile(parent, name, data, canRead, canWrite, canOwn) {\r\n    var path = name;\r\n    if (parent) {\r\n      parent = typeof parent == \"string\" ? parent : FS.getPath(parent);\r\n      path = name ? PATH.join2(parent, name) : parent;\r\n    }\r\n    var mode = FS_getMode(canRead, canWrite);\r\n    var node = FS.create(path, mode);\r\n    if (data) {\r\n      if (typeof data == \"string\") {\r\n        var arr = new Array(data.length);\r\n        for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\r\n        data = arr;\r\n      }\r\n      // make sure we can write to the file\r\n      FS.chmod(node, mode | 146);\r\n      var stream = FS.open(node, 577);\r\n      FS.write(stream, data, 0, data.length, 0, canOwn);\r\n      FS.close(stream);\r\n      FS.chmod(node, mode);\r\n    }\r\n  },\r\n  createDevice(parent, name, input, output) {\r\n    var path = PATH.join2(typeof parent == \"string\" ? parent : FS.getPath(parent), name);\r\n    var mode = FS_getMode(!!input, !!output);\r\n    FS.createDevice.major ??= 64;\r\n    var dev = FS.makedev(FS.createDevice.major++, 0);\r\n    // Create a fake device that a set of stream ops to emulate\r\n    // the old behavior.\r\n    FS.registerDevice(dev, {\r\n      open(stream) {\r\n        stream.seekable = false;\r\n      },\r\n      close(stream) {\r\n        // flush any pending line data\r\n        if (output?.buffer?.length) {\r\n          output(10);\r\n        }\r\n      },\r\n      read(stream, buffer, offset, length, pos) {\r\n        var bytesRead = 0;\r\n        for (var i = 0; i < length; i++) {\r\n          var result;\r\n          try {\r\n            result = input();\r\n          } catch (e) {\r\n            throw new FS.ErrnoError(29);\r\n          }\r\n          if (result === undefined && bytesRead === 0) {\r\n            throw new FS.ErrnoError(6);\r\n          }\r\n          if (result === null || result === undefined) break;\r\n          bytesRead++;\r\n          buffer[offset + i] = result;\r\n        }\r\n        if (bytesRead) {\r\n          stream.node.atime = Date.now();\r\n        }\r\n        return bytesRead;\r\n      },\r\n      write(stream, buffer, offset, length, pos) {\r\n        for (var i = 0; i < length; i++) {\r\n          try {\r\n            output(buffer[offset + i]);\r\n          } catch (e) {\r\n            throw new FS.ErrnoError(29);\r\n          }\r\n        }\r\n        if (length) {\r\n          stream.node.mtime = stream.node.ctime = Date.now();\r\n        }\r\n        return i;\r\n      }\r\n    });\r\n    return FS.mkdev(path, mode, dev);\r\n  },\r\n  forceLoadFile(obj) {\r\n    if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\r\n    if (typeof XMLHttpRequest != \"undefined\") {\r\n      throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\r\n    } else {\r\n      // Command-line.\r\n      try {\r\n        obj.contents = readBinary(obj.url);\r\n        obj.usedBytes = obj.contents.length;\r\n      } catch (e) {\r\n        throw new FS.ErrnoError(29);\r\n      }\r\n    }\r\n  },\r\n  createLazyFile(parent, name, url, canRead, canWrite) {\r\n    // Lazy chunked Uint8Array (implements get and length from Uint8Array).\r\n    // Actual getting is abstracted away for eventual reuse.\r\n    class LazyUint8Array {\r\n      lengthKnown=false;\r\n      chunks=[];\r\n      // Loaded chunks. Index is the chunk number\r\n      get(idx) {\r\n        if (idx > this.length - 1 || idx < 0) {\r\n          return undefined;\r\n        }\r\n        var chunkOffset = idx % this.chunkSize;\r\n        var chunkNum = (idx / this.chunkSize) | 0;\r\n        return this.getter(chunkNum)[chunkOffset];\r\n      }\r\n      setDataGetter(getter) {\r\n        this.getter = getter;\r\n      }\r\n      cacheLength() {\r\n        // Find length\r\n        var xhr = new XMLHttpRequest;\r\n        xhr.open(\"HEAD\", url, false);\r\n        xhr.send(null);\r\n        if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n        var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\r\n        var header;\r\n        var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\r\n        var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\r\n        var chunkSize = 1024 * 1024;\r\n        // Chunk size in bytes\r\n        if (!hasByteServing) chunkSize = datalength;\r\n        // Function to get a range from the remote URL.\r\n        var doXHR = (from, to) => {\r\n          if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\r\n          if (to > datalength - 1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\r\n          // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.\r\n          var xhr = new XMLHttpRequest;\r\n          xhr.open(\"GET\", url, false);\r\n          if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\r\n          // Some hints to the browser that we want binary data.\r\n          xhr.responseType = \"arraybuffer\";\r\n          if (xhr.overrideMimeType) {\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n          }\r\n          xhr.send(null);\r\n          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n          if (xhr.response !== undefined) {\r\n            return new Uint8Array(/** @type{Array<number>} */ (xhr.response || []));\r\n          }\r\n          return intArrayFromString(xhr.responseText || \"\", true);\r\n        };\r\n        var lazyArray = this;\r\n        lazyArray.setDataGetter(chunkNum => {\r\n          var start = chunkNum * chunkSize;\r\n          var end = (chunkNum + 1) * chunkSize - 1;\r\n          // including this byte\r\n          end = Math.min(end, datalength - 1);\r\n          // if datalength-1 is selected, this is the last block\r\n          if (typeof lazyArray.chunks[chunkNum] == \"undefined\") {\r\n            lazyArray.chunks[chunkNum] = doXHR(start, end);\r\n          }\r\n          if (typeof lazyArray.chunks[chunkNum] == \"undefined\") throw new Error(\"doXHR failed!\");\r\n          return lazyArray.chunks[chunkNum];\r\n        });\r\n        if (usesGzip || !datalength) {\r\n          // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length\r\n          chunkSize = datalength = 1;\r\n          // this will force getter(0)/doXHR do download the whole file\r\n          datalength = this.getter(0).length;\r\n          chunkSize = datalength;\r\n          out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\r\n        }\r\n        this._length = datalength;\r\n        this._chunkSize = chunkSize;\r\n        this.lengthKnown = true;\r\n      }\r\n      get length() {\r\n        if (!this.lengthKnown) {\r\n          this.cacheLength();\r\n        }\r\n        return this._length;\r\n      }\r\n      get chunkSize() {\r\n        if (!this.lengthKnown) {\r\n          this.cacheLength();\r\n        }\r\n        return this._chunkSize;\r\n      }\r\n    }\r\n    if (typeof XMLHttpRequest != \"undefined\") {\r\n      if (!ENVIRONMENT_IS_WORKER) throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\r\n      var lazyArray = new LazyUint8Array;\r\n      var properties = {\r\n        isDevice: false,\r\n        contents: lazyArray\r\n      };\r\n    } else {\r\n      var properties = {\r\n        isDevice: false,\r\n        url\r\n      };\r\n    }\r\n    var node = FS.createFile(parent, name, properties, canRead, canWrite);\r\n    // This is a total hack, but I want to get this lazy file code out of the\r\n    // core of MEMFS. If we want to keep this lazy file concept I feel it should\r\n    // be its own thin LAZYFS proxying calls to MEMFS.\r\n    if (properties.contents) {\r\n      node.contents = properties.contents;\r\n    } else if (properties.url) {\r\n      node.contents = null;\r\n      node.url = properties.url;\r\n    }\r\n    // Add a function that defers querying the file size until it is asked the first time.\r\n    Object.defineProperties(node, {\r\n      usedBytes: {\r\n        get: function() {\r\n          return this.contents.length;\r\n        }\r\n      }\r\n    });\r\n    // override each stream op with one that tries to force load the lazy file first\r\n    var stream_ops = {};\r\n    var keys = Object.keys(node.stream_ops);\r\n    keys.forEach(key => {\r\n      var fn = node.stream_ops[key];\r\n      stream_ops[key] = (...args) => {\r\n        FS.forceLoadFile(node);\r\n        return fn(...args);\r\n      };\r\n    });\r\n    function writeChunks(stream, buffer, offset, length, position) {\r\n      var contents = stream.node.contents;\r\n      if (position >= contents.length) return 0;\r\n      var size = Math.min(contents.length - position, length);\r\n      assert(size >= 0);\r\n      if (contents.slice) {\r\n        // normal array\r\n        for (var i = 0; i < size; i++) {\r\n          buffer[offset + i] = contents[position + i];\r\n        }\r\n      } else {\r\n        for (var i = 0; i < size; i++) {\r\n          // LazyUint8Array from sync binary XHR\r\n          buffer[offset + i] = contents.get(position + i);\r\n        }\r\n      }\r\n      return size;\r\n    }\r\n    // use a custom read function\r\n    stream_ops.read = (stream, buffer, offset, length, position) => {\r\n      FS.forceLoadFile(node);\r\n      return writeChunks(stream, buffer, offset, length, position);\r\n    };\r\n    // use a custom mmap function\r\n    stream_ops.mmap = (stream, length, position, prot, flags) => {\r\n      FS.forceLoadFile(node);\r\n      var ptr = mmapAlloc(length);\r\n      if (!ptr) {\r\n        throw new FS.ErrnoError(48);\r\n      }\r\n      writeChunks(stream, GROWABLE_HEAP_I8(), ptr, length, position);\r\n      return {\r\n        ptr,\r\n        allocated: true\r\n      };\r\n    };\r\n    node.stream_ops = stream_ops;\r\n    return node;\r\n  },\r\n  absolutePath() {\r\n    abort(\"FS.absolutePath has been removed; use PATH_FS.resolve instead\");\r\n  },\r\n  createFolder() {\r\n    abort(\"FS.createFolder has been removed; use FS.mkdir instead\");\r\n  },\r\n  createLink() {\r\n    abort(\"FS.createLink has been removed; use FS.symlink instead\");\r\n  },\r\n  joinPath() {\r\n    abort(\"FS.joinPath has been removed; use PATH.join instead\");\r\n  },\r\n  mmapAlloc() {\r\n    abort(\"FS.mmapAlloc has been replaced by the top level function mmapAlloc\");\r\n  },\r\n  standardizePath() {\r\n    abort(\"FS.standardizePath has been removed; use PATH.normalize instead\");\r\n  }\r\n};\r\n\r\nvar SYSCALLS = {\r\n  DEFAULT_POLLMASK: 5,\r\n  calculateAt(dirfd, path, allowEmpty) {\r\n    if (PATH.isAbs(path)) {\r\n      return path;\r\n    }\r\n    // relative path\r\n    var dir;\r\n    if (dirfd === -100) {\r\n      dir = FS.cwd();\r\n    } else {\r\n      var dirstream = SYSCALLS.getStreamFromFD(dirfd);\r\n      dir = dirstream.path;\r\n    }\r\n    if (path.length == 0) {\r\n      if (!allowEmpty) {\r\n        throw new FS.ErrnoError(44);\r\n      }\r\n      return dir;\r\n    }\r\n    return dir + \"/\" + path;\r\n  },\r\n  writeStat(buf, stat) {\r\n    GROWABLE_HEAP_I32()[((buf) >> 2)] = stat.dev;\r\n    GROWABLE_HEAP_I32()[(((buf) + (4)) >> 2)] = stat.mode;\r\n    GROWABLE_HEAP_U32()[(((buf) + (8)) >> 2)] = stat.nlink;\r\n    GROWABLE_HEAP_I32()[(((buf) + (12)) >> 2)] = stat.uid;\r\n    GROWABLE_HEAP_I32()[(((buf) + (16)) >> 2)] = stat.gid;\r\n    GROWABLE_HEAP_I32()[(((buf) + (20)) >> 2)] = stat.rdev;\r\n    HEAP64[(((buf) + (24)) >> 3)] = BigInt(stat.size);\r\n    GROWABLE_HEAP_I32()[(((buf) + (32)) >> 2)] = 4096;\r\n    GROWABLE_HEAP_I32()[(((buf) + (36)) >> 2)] = stat.blocks;\r\n    var atime = stat.atime.getTime();\r\n    var mtime = stat.mtime.getTime();\r\n    var ctime = stat.ctime.getTime();\r\n    HEAP64[(((buf) + (40)) >> 3)] = BigInt(Math.floor(atime / 1e3));\r\n    GROWABLE_HEAP_U32()[(((buf) + (48)) >> 2)] = (atime % 1e3) * 1e3 * 1e3;\r\n    HEAP64[(((buf) + (56)) >> 3)] = BigInt(Math.floor(mtime / 1e3));\r\n    GROWABLE_HEAP_U32()[(((buf) + (64)) >> 2)] = (mtime % 1e3) * 1e3 * 1e3;\r\n    HEAP64[(((buf) + (72)) >> 3)] = BigInt(Math.floor(ctime / 1e3));\r\n    GROWABLE_HEAP_U32()[(((buf) + (80)) >> 2)] = (ctime % 1e3) * 1e3 * 1e3;\r\n    HEAP64[(((buf) + (88)) >> 3)] = BigInt(stat.ino);\r\n    return 0;\r\n  },\r\n  writeStatFs(buf, stats) {\r\n    GROWABLE_HEAP_I32()[(((buf) + (4)) >> 2)] = stats.bsize;\r\n    GROWABLE_HEAP_I32()[(((buf) + (40)) >> 2)] = stats.bsize;\r\n    GROWABLE_HEAP_I32()[(((buf) + (8)) >> 2)] = stats.blocks;\r\n    GROWABLE_HEAP_I32()[(((buf) + (12)) >> 2)] = stats.bfree;\r\n    GROWABLE_HEAP_I32()[(((buf) + (16)) >> 2)] = stats.bavail;\r\n    GROWABLE_HEAP_I32()[(((buf) + (20)) >> 2)] = stats.files;\r\n    GROWABLE_HEAP_I32()[(((buf) + (24)) >> 2)] = stats.ffree;\r\n    GROWABLE_HEAP_I32()[(((buf) + (28)) >> 2)] = stats.fsid;\r\n    GROWABLE_HEAP_I32()[(((buf) + (44)) >> 2)] = stats.flags;\r\n    // ST_NOSUID\r\n    GROWABLE_HEAP_I32()[(((buf) + (36)) >> 2)] = stats.namelen;\r\n  },\r\n  doMsync(addr, stream, len, flags, offset) {\r\n    if (!FS.isFile(stream.node.mode)) {\r\n      throw new FS.ErrnoError(43);\r\n    }\r\n    if (flags & 2) {\r\n      // MAP_PRIVATE calls need not to be synced back to underlying fs\r\n      return 0;\r\n    }\r\n    var buffer = GROWABLE_HEAP_U8().slice(addr, addr + len);\r\n    FS.msync(stream, buffer, offset, len, flags);\r\n  },\r\n  getStreamFromFD(fd) {\r\n    var stream = FS.getStreamChecked(fd);\r\n    return stream;\r\n  },\r\n  varargs: undefined,\r\n  getStr(ptr) {\r\n    var ret = UTF8ToString(ptr);\r\n    return ret;\r\n  }\r\n};\r\n\r\nfunction _fd_close(fd) {\r\n  if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(5, 0, 1, fd);\r\n  try {\r\n    var stream = SYSCALLS.getStreamFromFD(fd);\r\n    FS.close(stream);\r\n    return 0;\r\n  } catch (e) {\r\n    if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n    return e.errno;\r\n  }\r\n}\r\n\r\n/** @param {number=} offset */ var doReadv = (stream, iov, iovcnt, offset) => {\r\n  var ret = 0;\r\n  for (var i = 0; i < iovcnt; i++) {\r\n    var ptr = GROWABLE_HEAP_U32()[((iov) >> 2)];\r\n    var len = GROWABLE_HEAP_U32()[(((iov) + (4)) >> 2)];\r\n    iov += 8;\r\n    var curr = FS.read(stream, GROWABLE_HEAP_I8(), ptr, len, offset);\r\n    if (curr < 0) return -1;\r\n    ret += curr;\r\n    if (curr < len) break;\r\n    // nothing more to read\r\n    if (typeof offset != \"undefined\") {\r\n      offset += curr;\r\n    }\r\n  }\r\n  return ret;\r\n};\r\n\r\nfunction _fd_read(fd, iov, iovcnt, pnum) {\r\n  if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(6, 0, 1, fd, iov, iovcnt, pnum);\r\n  try {\r\n    var stream = SYSCALLS.getStreamFromFD(fd);\r\n    var num = doReadv(stream, iov, iovcnt);\r\n    GROWABLE_HEAP_U32()[((pnum) >> 2)] = num;\r\n    return 0;\r\n  } catch (e) {\r\n    if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n    return e.errno;\r\n  }\r\n}\r\n\r\nfunction _fd_seek(fd, offset, whence, newOffset) {\r\n  if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(7, 0, 1, fd, offset, whence, newOffset);\r\n  offset = bigintToI53Checked(offset);\r\n  try {\r\n    if (isNaN(offset)) return 61;\r\n    var stream = SYSCALLS.getStreamFromFD(fd);\r\n    FS.llseek(stream, offset, whence);\r\n    HEAP64[((newOffset) >> 3)] = BigInt(stream.position);\r\n    if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;\r\n    // reset readdir state\r\n    return 0;\r\n  } catch (e) {\r\n    if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n    return e.errno;\r\n  }\r\n}\r\n\r\n/** @param {number=} offset */ var doWritev = (stream, iov, iovcnt, offset) => {\r\n  var ret = 0;\r\n  for (var i = 0; i < iovcnt; i++) {\r\n    var ptr = GROWABLE_HEAP_U32()[((iov) >> 2)];\r\n    var len = GROWABLE_HEAP_U32()[(((iov) + (4)) >> 2)];\r\n    iov += 8;\r\n    var curr = FS.write(stream, GROWABLE_HEAP_I8(), ptr, len, offset);\r\n    if (curr < 0) return -1;\r\n    ret += curr;\r\n    if (curr < len) {\r\n      // No more space to write.\r\n      break;\r\n    }\r\n    if (typeof offset != \"undefined\") {\r\n      offset += curr;\r\n    }\r\n  }\r\n  return ret;\r\n};\r\n\r\nfunction _fd_write(fd, iov, iovcnt, pnum) {\r\n  if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(8, 0, 1, fd, iov, iovcnt, pnum);\r\n  try {\r\n    var stream = SYSCALLS.getStreamFromFD(fd);\r\n    var num = doWritev(stream, iov, iovcnt);\r\n    GROWABLE_HEAP_U32()[((pnum) >> 2)] = num;\r\n    return 0;\r\n  } catch (e) {\r\n    if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n    return e.errno;\r\n  }\r\n}\r\n\r\nfunction _random_get(buffer, size) {\r\n  try {\r\n    randomFill(GROWABLE_HEAP_U8().subarray(buffer, buffer + size));\r\n    return 0;\r\n  } catch (e) {\r\n    if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n    return e.errno;\r\n  }\r\n}\r\n\r\nvar getCFunc = ident => {\r\n  var func = Module[\"_\" + ident];\r\n  // closure exported function\r\n  assert(func, \"Cannot call unknown function \" + ident + \", make sure it is exported\");\r\n  return func;\r\n};\r\n\r\nvar writeArrayToMemory = (array, buffer) => {\r\n  assert(array.length >= 0, \"writeArrayToMemory array must have a length (should be an array or typed array)\");\r\n  GROWABLE_HEAP_I8().set(array, buffer);\r\n};\r\n\r\nvar stringToUTF8OnStack = str => {\r\n  var size = lengthBytesUTF8(str) + 1;\r\n  var ret = stackAlloc(size);\r\n  stringToUTF8(str, ret, size);\r\n  return ret;\r\n};\r\n\r\n/**\r\n     * @param {string|null=} returnType\r\n     * @param {Array=} argTypes\r\n     * @param {Arguments|Array=} args\r\n     * @param {Object=} opts\r\n     */ var ccall = (ident, returnType, argTypes, args, opts) => {\r\n  // For fast lookup of conversion functions\r\n  var toC = {\r\n    \"string\": str => {\r\n      var ret = 0;\r\n      if (str !== null && str !== undefined && str !== 0) {\r\n        // null string\r\n        ret = stringToUTF8OnStack(str);\r\n      }\r\n      return ret;\r\n    },\r\n    \"array\": arr => {\r\n      var ret = stackAlloc(arr.length);\r\n      writeArrayToMemory(arr, ret);\r\n      return ret;\r\n    }\r\n  };\r\n  function convertReturnValue(ret) {\r\n    if (returnType === \"string\") {\r\n      return UTF8ToString(ret);\r\n    }\r\n    if (returnType === \"boolean\") return Boolean(ret);\r\n    return ret;\r\n  }\r\n  var func = getCFunc(ident);\r\n  var cArgs = [];\r\n  var stack = 0;\r\n  assert(returnType !== \"array\", 'Return type should not be \"array\".');\r\n  if (args) {\r\n    for (var i = 0; i < args.length; i++) {\r\n      var converter = toC[argTypes[i]];\r\n      if (converter) {\r\n        if (stack === 0) stack = stackSave();\r\n        cArgs[i] = converter(args[i]);\r\n      } else {\r\n        cArgs[i] = args[i];\r\n      }\r\n    }\r\n  }\r\n  var ret = func(...cArgs);\r\n  function onDone(ret) {\r\n    if (stack !== 0) stackRestore(stack);\r\n    return convertReturnValue(ret);\r\n  }\r\n  ret = onDone(ret);\r\n  return ret;\r\n};\r\n\r\n/**\r\n     * @param {string=} returnType\r\n     * @param {Array=} argTypes\r\n     * @param {Object=} opts\r\n     */ var cwrap = (ident, returnType, argTypes, opts) => (...args) => ccall(ident, returnType, argTypes, args, opts);\r\n\r\nvar incrementExceptionRefcount = ptr => ___cxa_increment_exception_refcount(ptr);\r\n\r\nvar decrementExceptionRefcount = ptr => ___cxa_decrement_exception_refcount(ptr);\r\n\r\nvar getExceptionMessageCommon = ptr => {\r\n  var sp = stackSave();\r\n  var type_addr_addr = stackAlloc(4);\r\n  var message_addr_addr = stackAlloc(4);\r\n  ___get_exception_message(ptr, type_addr_addr, message_addr_addr);\r\n  var type_addr = GROWABLE_HEAP_U32()[((type_addr_addr) >> 2)];\r\n  var message_addr = GROWABLE_HEAP_U32()[((message_addr_addr) >> 2)];\r\n  var type = UTF8ToString(type_addr);\r\n  _free(type_addr);\r\n  var message;\r\n  if (message_addr) {\r\n    message = UTF8ToString(message_addr);\r\n    _free(message_addr);\r\n  }\r\n  stackRestore(sp);\r\n  return [ type, message ];\r\n};\r\n\r\nvar getExceptionMessage = ptr => getExceptionMessageCommon(ptr);\r\n\r\nPThread.init();\r\n\r\nembind_init_charCodes();\r\n\r\ninit_ClassHandle();\r\n\r\ninit_RegisteredPointer();\r\n\r\ninit_emval();\r\n\r\nFS.createPreloadedFile = FS_createPreloadedFile;\r\n\r\nFS.staticInit();\r\n\r\n// End JS library code\r\n// include: postlibrary.js\r\n// This file is included after the automatically-generated JS library code\r\n// but before the wasm module is created.\r\n{\r\n  // With WASM_ESM_INTEGRATION this has to happen at the top level and not\r\n  // delayed until processModuleArgs.\r\n  initMemory();\r\n  // No ATMODULES hooks\r\n  checkIncomingModuleAPI();\r\n  // Assertions on removed incoming Module JS APIs.\r\n  assert(typeof Module[\"memoryInitializerPrefixURL\"] == \"undefined\", \"Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead\");\r\n  assert(typeof Module[\"pthreadMainPrefixURL\"] == \"undefined\", \"Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead\");\r\n  assert(typeof Module[\"cdInitializerPrefixURL\"] == \"undefined\", \"Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead\");\r\n  assert(typeof Module[\"filePackagePrefixURL\"] == \"undefined\", \"Module.filePackagePrefixURL option was removed, use Module.locateFile instead\");\r\n  assert(typeof Module[\"read\"] == \"undefined\", \"Module.read option was removed\");\r\n  assert(typeof Module[\"readAsync\"] == \"undefined\", \"Module.readAsync option was removed (modify readAsync in JS)\");\r\n  assert(typeof Module[\"readBinary\"] == \"undefined\", \"Module.readBinary option was removed (modify readBinary in JS)\");\r\n  assert(typeof Module[\"setWindowTitle\"] == \"undefined\", \"Module.setWindowTitle option was removed (modify emscripten_set_window_title in JS)\");\r\n  assert(typeof Module[\"TOTAL_MEMORY\"] == \"undefined\", \"Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY\");\r\n  assert(typeof Module[\"ENVIRONMENT\"] == \"undefined\", \"Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)\");\r\n  assert(typeof Module[\"STACK_SIZE\"] == \"undefined\", \"STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time\");\r\n}\r\n\r\n// Begin runtime exports\r\nModule[\"ccall\"] = ccall;\r\n\r\nModule[\"cwrap\"] = cwrap;\r\n\r\nvar missingLibrarySymbols = [ \"writeI53ToI64\", \"writeI53ToI64Clamped\", \"writeI53ToI64Signaling\", \"writeI53ToU64Clamped\", \"writeI53ToU64Signaling\", \"readI53FromI64\", \"readI53FromU64\", \"convertI32PairToI53\", \"convertI32PairToI53Checked\", \"convertU32PairToI53\", \"getTempRet0\", \"zeroMemory\", \"inetPton4\", \"inetNtop4\", \"inetPton6\", \"inetNtop6\", \"readSockaddr\", \"writeSockaddr\", \"emscriptenLog\", \"readEmAsmArgs\", \"jstoi_q\", \"listenOnce\", \"autoResumeAudioContext\", \"getDynCaller\", \"dynCall\", \"asmjsMangle\", \"HandleAllocator\", \"getNativeTypeSize\", \"addOnInit\", \"addOnPostCtor\", \"addOnPreMain\", \"addOnExit\", \"addOnPostRun\", \"STACK_SIZE\", \"STACK_ALIGN\", \"POINTER_SIZE\", \"ASSERTIONS\", \"uleb128Encode\", \"sigToWasmTypes\", \"generateFuncType\", \"convertJsFunctionToWasm\", \"getEmptyTableSlot\", \"updateTableMap\", \"getFunctionAddress\", \"addFunction\", \"removeFunction\", \"reallyNegative\", \"unSign\", \"strLen\", \"reSign\", \"formatString\", \"intArrayToString\", \"AsciiToString\", \"stringToAscii\", \"stringToNewUTF8\", \"registerKeyEventCallback\", \"maybeCStringToJsString\", \"findEventTarget\", \"getBoundingClientRect\", \"fillMouseEventData\", \"registerMouseEventCallback\", \"registerWheelEventCallback\", \"registerUiEventCallback\", \"registerFocusEventCallback\", \"fillDeviceOrientationEventData\", \"registerDeviceOrientationEventCallback\", \"fillDeviceMotionEventData\", \"registerDeviceMotionEventCallback\", \"screenOrientation\", \"fillOrientationChangeEventData\", \"registerOrientationChangeEventCallback\", \"fillFullscreenChangeEventData\", \"registerFullscreenChangeEventCallback\", \"JSEvents_requestFullscreen\", \"JSEvents_resizeCanvasForFullscreen\", \"registerRestoreOldStyle\", \"hideEverythingExceptGivenElement\", \"restoreHiddenElements\", \"setLetterbox\", \"softFullscreenResizeWebGLRenderTarget\", \"doRequestFullscreen\", \"fillPointerlockChangeEventData\", \"registerPointerlockChangeEventCallback\", \"registerPointerlockErrorEventCallback\", \"requestPointerLock\", \"fillVisibilityChangeEventData\", \"registerVisibilityChangeEventCallback\", \"registerTouchEventCallback\", \"fillGamepadEventData\", \"registerGamepadEventCallback\", \"registerBeforeUnloadEventCallback\", \"fillBatteryEventData\", \"battery\", \"registerBatteryEventCallback\", \"setCanvasElementSizeCallingThread\", \"setCanvasElementSizeMainThread\", \"setCanvasElementSize\", \"getCanvasSizeCallingThread\", \"getCanvasSizeMainThread\", \"getCanvasElementSize\", \"jsStackTrace\", \"getCallstack\", \"convertPCtoSourceLocation\", \"wasiRightsToMuslOFlags\", \"wasiOFlagsToMuslOFlags\", \"safeSetTimeout\", \"setImmediateWrapped\", \"safeRequestAnimationFrame\", \"clearImmediateWrapped\", \"registerPostMainLoop\", \"registerPreMainLoop\", \"getPromise\", \"makePromise\", \"idsToPromises\", \"makePromiseCallback\", \"Browser_asyncPrepareDataCounter\", \"isLeapYear\", \"ydayFromDate\", \"arraySum\", \"addDays\", \"getSocketFromFD\", \"getSocketAddress\", \"FS_mkdirTree\", \"_setNetworkCallback\", \"heapObjectForWebGLType\", \"toTypedArrayIndex\", \"webgl_enable_ANGLE_instanced_arrays\", \"webgl_enable_OES_vertex_array_object\", \"webgl_enable_WEBGL_draw_buffers\", \"webgl_enable_WEBGL_multi_draw\", \"webgl_enable_EXT_polygon_offset_clamp\", \"webgl_enable_EXT_clip_control\", \"webgl_enable_WEBGL_polygon_mode\", \"emscriptenWebGLGet\", \"computeUnpackAlignedImageSize\", \"colorChannelsInGlTextureFormat\", \"emscriptenWebGLGetTexPixelData\", \"emscriptenWebGLGetUniform\", \"webglGetUniformLocation\", \"webglPrepareUniformLocationsBeforeFirstUse\", \"webglGetLeftBracePos\", \"emscriptenWebGLGetVertexAttrib\", \"__glGetActiveAttribOrUniform\", \"writeGLArray\", \"emscripten_webgl_destroy_context_before_on_calling_thread\", \"registerWebGlEventCallback\", \"runAndAbortIfError\", \"ALLOC_NORMAL\", \"ALLOC_STACK\", \"allocate\", \"writeStringToMemory\", \"writeAsciiToMemory\", \"demangle\", \"stackTrace\", \"getFunctionArgsName\", \"createJsInvokerSignature\", \"PureVirtualError\", \"registerInheritedInstance\", \"unregisterInheritedInstance\", \"getInheritedInstanceCount\", \"getLiveInheritedInstances\", \"enumReadValueFromPointer\", \"setDelayFunction\", \"emval_get_global\", \"emval_lookupTypes\", \"emval_addMethodCaller\" ];\r\n\r\nmissingLibrarySymbols.forEach(missingLibrarySymbol);\r\n\r\nvar unexportedSymbols = [ \"run\", \"addRunDependency\", \"removeRunDependency\", \"out\", \"err\", \"callMain\", \"abort\", \"wasmMemory\", \"wasmExports\", \"HEAPF64\", \"HEAP8\", \"HEAPU8\", \"HEAP16\", \"HEAPU16\", \"HEAP32\", \"HEAPU32\", \"HEAP64\", \"HEAPU64\", \"GROWABLE_HEAP_I8\", \"GROWABLE_HEAP_U8\", \"GROWABLE_HEAP_I16\", \"GROWABLE_HEAP_U16\", \"GROWABLE_HEAP_I32\", \"GROWABLE_HEAP_U32\", \"GROWABLE_HEAP_F32\", \"GROWABLE_HEAP_F64\", \"writeStackCookie\", \"checkStackCookie\", \"INT53_MAX\", \"INT53_MIN\", \"bigintToI53Checked\", \"stackSave\", \"stackRestore\", \"stackAlloc\", \"setTempRet0\", \"ptrToString\", \"exitJS\", \"getHeapMax\", \"growMemory\", \"ENV\", \"ERRNO_CODES\", \"strError\", \"DNS\", \"Protocols\", \"Sockets\", \"timers\", \"warnOnce\", \"readEmAsmArgsArray\", \"getExecutableName\", \"handleException\", \"keepRuntimeAlive\", \"runtimeKeepalivePush\", \"runtimeKeepalivePop\", \"callUserCallback\", \"maybeExit\", \"asyncLoad\", \"alignMemory\", \"mmapAlloc\", \"wasmTable\", \"noExitRuntime\", \"addOnPreRun\", \"getCFunc\", \"freeTableIndexes\", \"functionsInTableMap\", \"setValue\", \"getValue\", \"PATH\", \"PATH_FS\", \"UTF8Decoder\", \"UTF8ArrayToString\", \"UTF8ToString\", \"stringToUTF8Array\", \"stringToUTF8\", \"lengthBytesUTF8\", \"intArrayFromString\", \"UTF16Decoder\", \"UTF16ToString\", \"stringToUTF16\", \"lengthBytesUTF16\", \"UTF32ToString\", \"stringToUTF32\", \"lengthBytesUTF32\", \"stringToUTF8OnStack\", \"writeArrayToMemory\", \"JSEvents\", \"specialHTMLTargets\", \"findCanvasEventTarget\", \"currentFullscreenStrategy\", \"restoreOldWindowedStyle\", \"UNWIND_CACHE\", \"ExitStatus\", \"getEnvStrings\", \"checkWasiClock\", \"doReadv\", \"doWritev\", \"initRandomFill\", \"randomFill\", \"emSetImmediate\", \"emClearImmediate_deps\", \"emClearImmediate\", \"promiseMap\", \"uncaughtExceptionCount\", \"exceptionLast\", \"exceptionCaught\", \"ExceptionInfo\", \"findMatchingCatch\", \"getExceptionMessageCommon\", \"Browser\", \"getPreloadedImageData__data\", \"wget\", \"MONTH_DAYS_REGULAR\", \"MONTH_DAYS_LEAP\", \"MONTH_DAYS_REGULAR_CUMULATIVE\", \"MONTH_DAYS_LEAP_CUMULATIVE\", \"SYSCALLS\", \"preloadPlugins\", \"FS_createPreloadedFile\", \"FS_modeStringToFlags\", \"FS_getMode\", \"FS_stdin_getChar_buffer\", \"FS_stdin_getChar\", \"FS_unlink\", \"FS_createPath\", \"FS_createDevice\", \"FS_readFile\", \"FS\", \"FS_root\", \"FS_mounts\", \"FS_devices\", \"FS_streams\", \"FS_nextInode\", \"FS_nameTable\", \"FS_currentPath\", \"FS_initialized\", \"FS_ignorePermissions\", \"FS_filesystems\", \"FS_syncFSRequests\", \"FS_lookupPath\", \"FS_getPath\", \"FS_hashName\", \"FS_hashAddNode\", \"FS_hashRemoveNode\", \"FS_lookupNode\", \"FS_createNode\", \"FS_destroyNode\", \"FS_isRoot\", \"FS_isMountpoint\", \"FS_isFile\", \"FS_isDir\", \"FS_isLink\", \"FS_isChrdev\", \"FS_isBlkdev\", \"FS_isFIFO\", \"FS_isSocket\", \"FS_flagsToPermissionString\", \"FS_nodePermissions\", \"FS_mayLookup\", \"FS_mayCreate\", \"FS_mayDelete\", \"FS_mayOpen\", \"FS_checkOpExists\", \"FS_nextfd\", \"FS_getStreamChecked\", \"FS_getStream\", \"FS_createStream\", \"FS_closeStream\", \"FS_dupStream\", \"FS_doSetAttr\", \"FS_chrdev_stream_ops\", \"FS_major\", \"FS_minor\", \"FS_makedev\", \"FS_registerDevice\", \"FS_getDevice\", \"FS_getMounts\", \"FS_syncfs\", \"FS_mount\", \"FS_unmount\", \"FS_lookup\", \"FS_mknod\", \"FS_statfs\", \"FS_statfsStream\", \"FS_statfsNode\", \"FS_create\", \"FS_mkdir\", \"FS_mkdev\", \"FS_symlink\", \"FS_rename\", \"FS_rmdir\", \"FS_readdir\", \"FS_readlink\", \"FS_stat\", \"FS_fstat\", \"FS_lstat\", \"FS_doChmod\", \"FS_chmod\", \"FS_lchmod\", \"FS_fchmod\", \"FS_doChown\", \"FS_chown\", \"FS_lchown\", \"FS_fchown\", \"FS_doTruncate\", \"FS_truncate\", \"FS_ftruncate\", \"FS_utime\", \"FS_open\", \"FS_close\", \"FS_isClosed\", \"FS_llseek\", \"FS_read\", \"FS_write\", \"FS_mmap\", \"FS_msync\", \"FS_ioctl\", \"FS_writeFile\", \"FS_cwd\", \"FS_chdir\", \"FS_createDefaultDirectories\", \"FS_createDefaultDevices\", \"FS_createSpecialDirectories\", \"FS_createStandardStreams\", \"FS_staticInit\", \"FS_init\", \"FS_quit\", \"FS_findObject\", \"FS_analyzePath\", \"FS_createFile\", \"FS_createDataFile\", \"FS_forceLoadFile\", \"FS_createLazyFile\", \"FS_absolutePath\", \"FS_createFolder\", \"FS_createLink\", \"FS_joinPath\", \"FS_mmapAlloc\", \"FS_standardizePath\", \"MEMFS\", \"TTY\", \"PIPEFS\", \"SOCKFS\", \"tempFixedLengthArray\", \"miniTempWebGLFloatBuffers\", \"miniTempWebGLIntBuffers\", \"GL\", \"AL\", \"GLUT\", \"EGL\", \"GLEW\", \"IDBStore\", \"SDL\", \"SDL_gfx\", \"allocateUTF8\", \"allocateUTF8OnStack\", \"print\", \"printErr\", \"jstoi_s\", \"PThread\", \"terminateWorker\", \"cleanupThread\", \"registerTLSInit\", \"spawnThread\", \"exitOnMainThread\", \"proxyToMainThread\", \"proxiedJSCallArgs\", \"invokeEntryPoint\", \"checkMailbox\", \"InternalError\", \"BindingError\", \"throwInternalError\", \"throwBindingError\", \"registeredTypes\", \"awaitingDependencies\", \"typeDependencies\", \"tupleRegistrations\", \"structRegistrations\", \"sharedRegisterType\", \"whenDependentTypesAreResolved\", \"embind_charCodes\", \"embind_init_charCodes\", \"readLatin1String\", \"getTypeName\", \"getFunctionName\", \"heap32VectorToArray\", \"requireRegisteredType\", \"usesDestructorStack\", \"checkArgCount\", \"getRequiredArgCount\", \"createJsInvoker\", \"UnboundTypeError\", \"GenericWireTypeSize\", \"EmValType\", \"EmValOptionalType\", \"throwUnboundTypeError\", \"ensureOverloadTable\", \"exposePublicSymbol\", \"replacePublicSymbol\", \"createNamedFunction\", \"embindRepr\", \"registeredInstances\", \"getBasestPointer\", \"getInheritedInstance\", \"registeredPointers\", \"registerType\", \"integerReadValueFromPointer\", \"floatReadValueFromPointer\", \"readPointer\", \"runDestructors\", \"craftInvokerFunction\", \"embind__requireFunction\", \"genericPointerToWireType\", \"constNoSmartPtrRawPointerToWireType\", \"nonConstNoSmartPtrRawPointerToWireType\", \"init_RegisteredPointer\", \"RegisteredPointer\", \"RegisteredPointer_fromWireType\", \"runDestructor\", \"releaseClassHandle\", \"finalizationRegistry\", \"detachFinalizer_deps\", \"detachFinalizer\", \"attachFinalizer\", \"makeClassHandle\", \"init_ClassHandle\", \"ClassHandle\", \"throwInstanceAlreadyDeleted\", \"deletionQueue\", \"flushPendingDeletes\", \"delayFunction\", \"RegisteredClass\", \"shallowCopyInternalPointer\", \"downcastPointer\", \"upcastPointer\", \"validateThis\", \"char_0\", \"char_9\", \"makeLegalFunctionName\", \"emval_freelist\", \"emval_handles\", \"emval_symbols\", \"init_emval\", \"count_emval_handles\", \"getStringOrSymbol\", \"Emval\", \"emval_returnValue\", \"emval_methodCallers\", \"reflectConstruct\" ];\r\n\r\nunexportedSymbols.forEach(unexportedRuntimeSymbol);\r\n\r\n// End runtime exports\r\n// Begin JS library exports\r\nModule[\"incrementExceptionRefcount\"] = incrementExceptionRefcount;\r\n\r\nModule[\"decrementExceptionRefcount\"] = decrementExceptionRefcount;\r\n\r\nModule[\"getExceptionMessage\"] = getExceptionMessage;\r\n\r\n// End JS library exports\r\n// end include: postlibrary.js\r\n// proxiedFunctionTable specifies the list of functions that can be called\r\n// either synchronously or asynchronously from other threads in postMessage()d\r\n// or internally queued events. This way a pthread in a Worker can synchronously\r\n// access e.g. the DOM on the main thread.\r\nvar proxiedFunctionTable = [ _proc_exit, exitOnMainThread, pthreadCreateProxied, _environ_get, _environ_sizes_get, _fd_close, _fd_read, _fd_seek, _fd_write ];\r\n\r\nfunction checkIncomingModuleAPI() {\r\n  ignoredModuleProp(\"ENVIRONMENT\");\r\n  ignoredModuleProp(\"GL_MAX_TEXTURE_IMAGE_UNITS\");\r\n  ignoredModuleProp(\"SDL_canPlayWithWebAudio\");\r\n  ignoredModuleProp(\"SDL_numSimultaneouslyQueuedBuffers\");\r\n  ignoredModuleProp(\"INITIAL_MEMORY\");\r\n  ignoredModuleProp(\"wasmMemory\");\r\n  ignoredModuleProp(\"arguments\");\r\n  ignoredModuleProp(\"buffer\");\r\n  ignoredModuleProp(\"canvas\");\r\n  ignoredModuleProp(\"doNotCaptureKeyboard\");\r\n  ignoredModuleProp(\"dynamicLibraries\");\r\n  ignoredModuleProp(\"elementPointerLock\");\r\n  ignoredModuleProp(\"extraStackTrace\");\r\n  ignoredModuleProp(\"forcedAspectRatio\");\r\n  ignoredModuleProp(\"instantiateWasm\");\r\n  ignoredModuleProp(\"keyboardListeningElement\");\r\n  ignoredModuleProp(\"freePreloadedMediaOnUse\");\r\n  ignoredModuleProp(\"loadSplitModule\");\r\n  ignoredModuleProp(\"logReadFiles\");\r\n  ignoredModuleProp(\"mainScriptUrlOrBlob\");\r\n  ignoredModuleProp(\"mem\");\r\n  ignoredModuleProp(\"monitorRunDependencies\");\r\n  ignoredModuleProp(\"noExitRuntime\");\r\n  ignoredModuleProp(\"noInitialRun\");\r\n  ignoredModuleProp(\"onAbort\");\r\n  ignoredModuleProp(\"onCustomMessage\");\r\n  ignoredModuleProp(\"onExit\");\r\n  ignoredModuleProp(\"onFree\");\r\n  ignoredModuleProp(\"onFullScreen\");\r\n  ignoredModuleProp(\"onMalloc\");\r\n  ignoredModuleProp(\"onRealloc\");\r\n  ignoredModuleProp(\"onRuntimeInitialized\");\r\n  ignoredModuleProp(\"postMainLoop\");\r\n  ignoredModuleProp(\"postRun\");\r\n  ignoredModuleProp(\"preInit\");\r\n  ignoredModuleProp(\"preMainLoop\");\r\n  ignoredModuleProp(\"preRun\");\r\n  ignoredModuleProp(\"preinitializedWebGLContext\");\r\n  ignoredModuleProp(\"preloadPlugins\");\r\n  ignoredModuleProp(\"print\");\r\n  ignoredModuleProp(\"printErr\");\r\n  ignoredModuleProp(\"setStatus\");\r\n  ignoredModuleProp(\"statusMessage\");\r\n  ignoredModuleProp(\"stderr\");\r\n  ignoredModuleProp(\"stdin\");\r\n  ignoredModuleProp(\"stdout\");\r\n  ignoredModuleProp(\"thisProgram\");\r\n  ignoredModuleProp(\"wasm\");\r\n  ignoredModuleProp(\"wasmBinary\");\r\n  ignoredModuleProp(\"websocket\");\r\n  ignoredModuleProp(\"fetchSettings\");\r\n}\r\n\r\nvar wasmImports;\r\n\r\nfunction assignWasmImports() {\r\n  wasmImports = {\r\n    /** @export */ __assert_fail: ___assert_fail,\r\n    /** @export */ __cxa_begin_catch: ___cxa_begin_catch,\r\n    /** @export */ __cxa_end_catch: ___cxa_end_catch,\r\n    /** @export */ __cxa_find_matching_catch_2: ___cxa_find_matching_catch_2,\r\n    /** @export */ __cxa_find_matching_catch_3: ___cxa_find_matching_catch_3,\r\n    /** @export */ __cxa_rethrow: ___cxa_rethrow,\r\n    /** @export */ __cxa_rethrow_primary_exception: ___cxa_rethrow_primary_exception,\r\n    /** @export */ __cxa_throw: ___cxa_throw,\r\n    /** @export */ __cxa_uncaught_exceptions: ___cxa_uncaught_exceptions,\r\n    /** @export */ __pthread_create_js: ___pthread_create_js,\r\n    /** @export */ __resumeException: ___resumeException,\r\n    /** @export */ _abort_js: __abort_js,\r\n    /** @export */ _embind_finalize_value_object: __embind_finalize_value_object,\r\n    /** @export */ _embind_register_bigint: __embind_register_bigint,\r\n    /** @export */ _embind_register_bool: __embind_register_bool,\r\n    /** @export */ _embind_register_class: __embind_register_class,\r\n    /** @export */ _embind_register_class_constructor: __embind_register_class_constructor,\r\n    /** @export */ _embind_register_class_function: __embind_register_class_function,\r\n    /** @export */ _embind_register_class_property: __embind_register_class_property,\r\n    /** @export */ _embind_register_emval: __embind_register_emval,\r\n    /** @export */ _embind_register_float: __embind_register_float,\r\n    /** @export */ _embind_register_function: __embind_register_function,\r\n    /** @export */ _embind_register_integer: __embind_register_integer,\r\n    /** @export */ _embind_register_memory_view: __embind_register_memory_view,\r\n    /** @export */ _embind_register_optional: __embind_register_optional,\r\n    /** @export */ _embind_register_std_string: __embind_register_std_string,\r\n    /** @export */ _embind_register_std_wstring: __embind_register_std_wstring,\r\n    /** @export */ _embind_register_value_object: __embind_register_value_object,\r\n    /** @export */ _embind_register_value_object_field: __embind_register_value_object_field,\r\n    /** @export */ _embind_register_void: __embind_register_void,\r\n    /** @export */ _emscripten_init_main_thread_js: __emscripten_init_main_thread_js,\r\n    /** @export */ _emscripten_notify_mailbox_postmessage: __emscripten_notify_mailbox_postmessage,\r\n    /** @export */ _emscripten_receive_on_main_thread_js: __emscripten_receive_on_main_thread_js,\r\n    /** @export */ _emscripten_thread_cleanup: __emscripten_thread_cleanup,\r\n    /** @export */ _emscripten_thread_mailbox_await: __emscripten_thread_mailbox_await,\r\n    /** @export */ _emscripten_thread_set_strongref: __emscripten_thread_set_strongref,\r\n    /** @export */ _emval_as: __emval_as,\r\n    /** @export */ _emval_decref: __emval_decref,\r\n    /** @export */ _emval_get_property: __emval_get_property,\r\n    /** @export */ _emval_new_cstring: __emval_new_cstring,\r\n    /** @export */ _emval_run_destructors: __emval_run_destructors,\r\n    /** @export */ _emval_take_value: __emval_take_value,\r\n    /** @export */ _tzset_js: __tzset_js,\r\n    /** @export */ clock_time_get: _clock_time_get,\r\n    /** @export */ emscripten_check_blocking_allowed: _emscripten_check_blocking_allowed,\r\n    /** @export */ emscripten_exit_with_live_runtime: _emscripten_exit_with_live_runtime,\r\n    /** @export */ emscripten_get_heap_max: _emscripten_get_heap_max,\r\n    /** @export */ emscripten_get_now: _emscripten_get_now,\r\n    /** @export */ emscripten_num_logical_cores: _emscripten_num_logical_cores,\r\n    /** @export */ emscripten_resize_heap: _emscripten_resize_heap,\r\n    /** @export */ emscripten_runtime_keepalive_check: _emscripten_runtime_keepalive_check,\r\n    /** @export */ environ_get: _environ_get,\r\n    /** @export */ environ_sizes_get: _environ_sizes_get,\r\n    /** @export */ exit: _exit,\r\n    /** @export */ fd_close: _fd_close,\r\n    /** @export */ fd_read: _fd_read,\r\n    /** @export */ fd_seek: _fd_seek,\r\n    /** @export */ fd_write: _fd_write,\r\n    /** @export */ invoke_diii,\r\n    /** @export */ invoke_fiii,\r\n    /** @export */ invoke_i,\r\n    /** @export */ invoke_ii,\r\n    /** @export */ invoke_iii,\r\n    /** @export */ invoke_iiii,\r\n    /** @export */ invoke_iiiii,\r\n    /** @export */ invoke_iiiiid,\r\n    /** @export */ invoke_iiiiii,\r\n    /** @export */ invoke_iiiiiii,\r\n    /** @export */ invoke_iiiiiiii,\r\n    /** @export */ invoke_iiiiiiiiiii,\r\n    /** @export */ invoke_iiiiiiiiiiii,\r\n    /** @export */ invoke_iiiiiiiiiiiii,\r\n    /** @export */ invoke_jiiii,\r\n    /** @export */ invoke_v,\r\n    /** @export */ invoke_vi,\r\n    /** @export */ invoke_vii,\r\n    /** @export */ invoke_viii,\r\n    /** @export */ invoke_viiii,\r\n    /** @export */ invoke_viiiiiii,\r\n    /** @export */ invoke_viiiiiiiiii,\r\n    /** @export */ invoke_viiiiiiiiiiiiiii,\r\n    /** @export */ memory: wasmMemory,\r\n    /** @export */ random_get: _random_get\r\n  };\r\n}\r\n\r\nvar wasmExports = await createWasm();\r\n\r\nvar ___wasm_call_ctors = createExportWrapper(\"__wasm_call_ctors\", 0);\r\n\r\nvar ___getTypeName = createExportWrapper(\"__getTypeName\", 1);\r\n\r\nvar __embind_initialize_bindings = createExportWrapper(\"_embind_initialize_bindings\", 0);\r\n\r\nvar _main = Module[\"_main\"] = createExportWrapper(\"main\", 2);\r\n\r\nvar _initBoids = Module[\"_initBoids\"] = createExportWrapper(\"initBoids\", 3);\r\n\r\nvar _build = Module[\"_build\"] = createExportWrapper(\"build\", 2);\r\n\r\nvar _posPtr = Module[\"_posPtr\"] = createExportWrapper(\"posPtr\", 0);\r\n\r\nvar _velPtr = Module[\"_velPtr\"] = createExportWrapper(\"velPtr\", 0);\r\n\r\nvar _boidCount = Module[\"_boidCount\"] = createExportWrapper(\"boidCount\", 0);\r\n\r\nvar _update = Module[\"_update\"] = createExportWrapper(\"update\", 1);\r\n\r\nvar _setFlockSize = Module[\"_setFlockSize\"] = createExportWrapper(\"setFlockSize\", 3);\r\n\r\nvar _setSpeciesParams = Module[\"_setSpeciesParams\"] = createExportWrapper(\"setSpeciesParams\", 1);\r\n\r\nvar _free = Module[\"_free\"] = createExportWrapper(\"free\", 1);\r\n\r\nvar _pthread_self = () => (_pthread_self = wasmExports[\"pthread_self\"])();\r\n\r\nvar __emscripten_tls_init = createExportWrapper(\"_emscripten_tls_init\", 0);\r\n\r\nvar __emscripten_proxy_main = Module[\"__emscripten_proxy_main\"] = createExportWrapper(\"_emscripten_proxy_main\", 2);\r\n\r\nvar _emscripten_stack_get_base = () => (_emscripten_stack_get_base = wasmExports[\"emscripten_stack_get_base\"])();\r\n\r\nvar _emscripten_stack_get_end = () => (_emscripten_stack_get_end = wasmExports[\"emscripten_stack_get_end\"])();\r\n\r\nvar __emscripten_thread_init = createExportWrapper(\"_emscripten_thread_init\", 6);\r\n\r\nvar __emscripten_thread_crashed = createExportWrapper(\"_emscripten_thread_crashed\", 0);\r\n\r\nvar _fflush = createExportWrapper(\"fflush\", 1);\r\n\r\nvar _malloc = Module[\"_malloc\"] = createExportWrapper(\"malloc\", 1);\r\n\r\nvar __emscripten_run_on_main_thread_js = createExportWrapper(\"_emscripten_run_on_main_thread_js\", 5);\r\n\r\nvar __emscripten_thread_free_data = createExportWrapper(\"_emscripten_thread_free_data\", 1);\r\n\r\nvar __emscripten_thread_exit = createExportWrapper(\"_emscripten_thread_exit\", 1);\r\n\r\nvar _strerror = createExportWrapper(\"strerror\", 1);\r\n\r\nvar __emscripten_check_mailbox = createExportWrapper(\"_emscripten_check_mailbox\", 0);\r\n\r\nvar _setThrew = createExportWrapper(\"setThrew\", 2);\r\n\r\nvar __emscripten_tempret_set = createExportWrapper(\"_emscripten_tempret_set\", 1);\r\n\r\nvar _emscripten_stack_init = () => (_emscripten_stack_init = wasmExports[\"emscripten_stack_init\"])();\r\n\r\nvar _emscripten_stack_set_limits = (a0, a1) => (_emscripten_stack_set_limits = wasmExports[\"emscripten_stack_set_limits\"])(a0, a1);\r\n\r\nvar _emscripten_stack_get_free = () => (_emscripten_stack_get_free = wasmExports[\"emscripten_stack_get_free\"])();\r\n\r\nvar __emscripten_stack_restore = a0 => (__emscripten_stack_restore = wasmExports[\"_emscripten_stack_restore\"])(a0);\r\n\r\nvar __emscripten_stack_alloc = a0 => (__emscripten_stack_alloc = wasmExports[\"_emscripten_stack_alloc\"])(a0);\r\n\r\nvar _emscripten_stack_get_current = () => (_emscripten_stack_get_current = wasmExports[\"emscripten_stack_get_current\"])();\r\n\r\nvar ___cxa_decrement_exception_refcount = createExportWrapper(\"__cxa_decrement_exception_refcount\", 1);\r\n\r\nvar ___cxa_increment_exception_refcount = createExportWrapper(\"__cxa_increment_exception_refcount\", 1);\r\n\r\nvar ___cxa_free_exception = createExportWrapper(\"__cxa_free_exception\", 1);\r\n\r\nvar ___get_exception_message = createExportWrapper(\"__get_exception_message\", 3);\r\n\r\nvar ___cxa_can_catch = createExportWrapper(\"__cxa_can_catch\", 3);\r\n\r\nvar ___cxa_get_exception_ptr = createExportWrapper(\"__cxa_get_exception_ptr\", 1);\r\n\r\nfunction invoke_ii(index, a1) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iii(index, a1, a2) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_vii(index, a1, a2) {\r\n  var sp = stackSave();\r\n  try {\r\n    getWasmTableEntry(index)(a1, a2);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iiii(index, a1, a2, a3) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_vi(index, a1) {\r\n  var sp = stackSave();\r\n  try {\r\n    getWasmTableEntry(index)(a1);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_i(index) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)();\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_v(index) {\r\n  var sp = stackSave();\r\n  try {\r\n    getWasmTableEntry(index)();\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iiiiiii(index, a1, a2, a3, a4, a5, a6) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_viiii(index, a1, a2, a3, a4) {\r\n  var sp = stackSave();\r\n  try {\r\n    getWasmTableEntry(index)(a1, a2, a3, a4);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iiiiii(index, a1, a2, a3, a4, a5) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iiiiid(index, a1, a2, a3, a4, a5) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_viii(index, a1, a2, a3) {\r\n  var sp = stackSave();\r\n  try {\r\n    getWasmTableEntry(index)(a1, a2, a3);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iiiii(index, a1, a2, a3, a4) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3, a4);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_jiiii(index, a1, a2, a3, a4) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3, a4);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n    return 0n;\r\n  }\r\n}\r\n\r\nfunction invoke_iiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_fiii(index, a1, a2, a3) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_diii(index, a1, a2, a3) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {\r\n  var sp = stackSave();\r\n  try {\r\n    getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_viiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\r\n  var sp = stackSave();\r\n  try {\r\n    getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_viiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {\r\n  var sp = stackSave();\r\n  try {\r\n    getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\n// include: postamble.js\r\n// === Auto-generated postamble setup entry stuff ===\r\nvar calledRun;\r\n\r\nfunction callMain() {\r\n  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on Module[\"onRuntimeInitialized\"])');\r\n  assert(typeof onPreRuns === \"undefined\" || onPreRuns.length == 0, \"cannot call main when preRun functions remain to be called\");\r\n  var entryFunction = __emscripten_proxy_main;\r\n  // With PROXY_TO_PTHREAD make sure we keep the runtime alive until the\r\n  // proxied main calls exit (see exitOnMainThread() for where Pop is called).\r\n  runtimeKeepalivePush();\r\n  var argc = 0;\r\n  var argv = 0;\r\n  try {\r\n    var ret = entryFunction(argc, argv);\r\n    // if we're not running an evented main loop, it's time to exit\r\n    exitJS(ret, /* implicit = */ true);\r\n    return ret;\r\n  } catch (e) {\r\n    return handleException(e);\r\n  }\r\n}\r\n\r\nfunction stackCheckInit() {\r\n  // This is normally called automatically during __wasm_call_ctors but need to\r\n  // get these values before even running any of the ctors so we call it redundantly\r\n  // here.\r\n  // See $establishStackSpace for the equivalent code that runs on a thread\r\n  assert(!ENVIRONMENT_IS_PTHREAD);\r\n  _emscripten_stack_init();\r\n  // TODO(sbc): Move writeStackCookie to native to to avoid this.\r\n  writeStackCookie();\r\n}\r\n\r\nfunction run() {\r\n  if (runDependencies > 0) {\r\n    dependenciesFulfilled = run;\r\n    return;\r\n  }\r\n  if ((ENVIRONMENT_IS_PTHREAD)) {\r\n    readyPromiseResolve(Module);\r\n    initRuntime();\r\n    return;\r\n  }\r\n  stackCheckInit();\r\n  preRun();\r\n  // a preRun added a dependency, run will be called later\r\n  if (runDependencies > 0) {\r\n    dependenciesFulfilled = run;\r\n    return;\r\n  }\r\n  function doRun() {\r\n    // run may have just been called through dependencies being fulfilled just in this very frame,\r\n    // or while the async setStatus time below was happening\r\n    assert(!calledRun);\r\n    calledRun = true;\r\n    Module[\"calledRun\"] = true;\r\n    if (ABORT) return;\r\n    initRuntime();\r\n    preMain();\r\n    readyPromiseResolve(Module);\r\n    var noInitialRun = false;\r\n    if (!noInitialRun) callMain();\r\n    postRun();\r\n  }\r\n  {\r\n    doRun();\r\n  }\r\n  checkStackCookie();\r\n}\r\n\r\nfunction checkUnflushedContent() {\r\n  // Compiler settings do not allow exiting the runtime, so flushing\r\n  // the streams is not possible. but in ASSERTIONS mode we check\r\n  // if there was something to flush, and if so tell the user they\r\n  // should request that the runtime be exitable.\r\n  // Normally we would not even include flush() at all, but in ASSERTIONS\r\n  // builds we do so just for this check, and here we see if there is any\r\n  // content to flush, that is, we check if there would have been\r\n  // something a non-ASSERTIONS build would have not seen.\r\n  // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0\r\n  // mode (which has its own special function for this; otherwise, all\r\n  // the code is inside libc)\r\n  var oldOut = out;\r\n  var oldErr = err;\r\n  var has = false;\r\n  out = err = x => {\r\n    has = true;\r\n  };\r\n  try {\r\n    // it doesn't matter if it fails\r\n    _fflush(0);\r\n    // also flush in the JS FS layer\r\n    [ \"stdout\", \"stderr\" ].forEach(name => {\r\n      var info = FS.analyzePath(\"/dev/\" + name);\r\n      if (!info) return;\r\n      var stream = info.object;\r\n      var rdev = stream.rdev;\r\n      var tty = TTY.ttys[rdev];\r\n      if (tty?.output?.length) {\r\n        has = true;\r\n      }\r\n    });\r\n  } catch (e) {}\r\n  out = oldOut;\r\n  err = oldErr;\r\n  if (has) {\r\n    warnOnce(\"stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the Emscripten FAQ), or make sure to emit a newline when you printf etc.\");\r\n  }\r\n}\r\n\r\nfunction preInit() {}\r\n\r\npreInit();\r\n\r\nrun();\r\n\r\n// end include: postamble.js\r\n// include: postamble_modularize.js\r\n// In MODULARIZE mode we wrap the generated code in a factory function\r\n// and return either the Module itself, or a promise of the module.\r\n// We assign to the `moduleRtn` global here and configure closure to see\r\n// this as and extern so it won't get minified.\r\nmoduleRtn = readyPromise;\r\n\r\n// Assertion for attempting to access module properties on the incoming\r\n// moduleArg.  In the past we used this object as the prototype of the module\r\n// and assigned properties to it, but now we return a distinct object.  This\r\n// keeps the instance private until it is ready (i.e the promise has been\r\n// resolved).\r\nfor (const prop of Object.keys(Module)) {\r\n  if (!(prop in moduleArg)) {\r\n    Object.defineProperty(moduleArg, prop, {\r\n      configurable: true,\r\n      get() {\r\n        abort(`Access to module property ('${prop}') is no longer possible via the module constructor argument; Instead, use the result of the module constructor.`);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\n  return moduleRtn;\r\n}\r\n);\r\n})();\r\nexport default createBoidsModule;\r\nvar isPthread = globalThis.self?.name?.startsWith('em-pthread');\r\n// When running as a pthread, construct a new instance on startup\r\nisPthread && createBoidsModule();\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"b74f88c5\" + \".js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/wasm-boids/\";","__webpack_require__.b = self.location + \"/../../../\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t580: 1\n};\n\n// no chunk install function needed\n// no chunk loading\n\n// no HMR\n\n// no HMR manifest","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(580);\n"],"names":["createBoidsModule","moduleArg","moduleRtn","readyPromiseResolve","readyPromiseReject","Module","readyPromise","Promise","resolve","reject","ENVIRONMENT_IS_WEB","window","ENVIRONMENT_IS_WORKER","WorkerGlobalScope","ENVIRONMENT_IS_NODE","process","versions","node","type","ENVIRONMENT_IS_SHELL","ENVIRONMENT_IS_PTHREAD","self","name","startsWith","assert","globalThis","moduleLoaded","readAsync","readBinary","thisProgram","quit_","status","toThrow","_scriptName","scriptDirectory","locateFile","path","Error","URL","href","url","xhr","XMLHttpRequest","open","responseType","send","Uint8Array","async","isFileURI","response","fetch","credentials","ok","arrayBuffer","wasmBinary","wasmMemory","wasmModule","out","console","log","bind","err","error","WebAssembly","EXITSTATUS","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAP64","HEAPU64","HEAPF64","ABORT","condition","text","abort","runtimeInitialized","filename","writeStackCookie","max","_emscripten_stack_get_end","GROWABLE_HEAP_U32","checkStackCookie","cookie1","cookie2","ptrToString","EmscriptenEH","CppException","constructor","excPtr","super","this","excInfo","getExceptionMessage","message","wasmModuleReceived","runtimeDebug","dbg","args","warn","ignoredModuleProp","prop","Object","getOwnPropertyDescriptor","isExportedByForceFilesystem","hookGlobalSymbolAccess","sym","func","defineProperty","configurable","get","missingGlobal","msg","warnOnce","missingLibrarySymbol","librarySymbol","unexportedRuntimeSymbol","initWorkerLogging","getLogPrefix","t","_pthread_self","workerID","origDbg","GROWABLE_HEAP_I8","buffer","updateMemoryViews","GROWABLE_HEAP_U8","GROWABLE_HEAP_I16","GROWABLE_HEAP_U16","GROWABLE_HEAP_I32","GROWABLE_HEAP_F32","GROWABLE_HEAP_F64","h16","Int16Array","h8","Int8Array","initializedJS","handleMessage","e","msgData","cmd","messageQueue","onmessage","push","startWorker","instance","postMessage","handler","handlers","proxy","pthread_ptr","establishStackSpace","__emscripten_thread_init","PThread","threadInitTLS","__emscripten_thread_mailbox_await","__embind_initialize_bindings","invokeEntryPoint","start_routine","arg","ex","target","checkMailbox","stack","__emscripten_thread_crashed","onunhandledrejection","reason","b","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array","initMemory","INITIAL_MEMORY","Memory","preRun","callRuntimeCallbacks","onPreRuns","initRuntime","FS","initialized","init","TTY","wasmExports","ignorePermissions","preMain","postRun","undefined","prototype","subarray","set","wasmBinaryFile","runDependencies","dependenciesFulfilled","runDependencyTracking","runDependencyWatcher","getUniqueRunDependency","id","orig","Math","random","addRunDependency","setInterval","clearInterval","shown","dep","removeRunDependency","callback","what","RuntimeError","createExportWrapper","nargs","f","length","findWasmBinary","getBinarySync","file","getWasmBinary","binaryFile","instantiateArrayBuffer","imports","binary","instantiate","instantiateAsync","instantiateStreaming","instantiationResult","getWasmImports","assignWasmImports","wasmImports","createWasm","receiveInstance","module","exports","registerTLSInit","wasmTable","trueModule","receiveInstantiationResult","result","info","Instance","ExitStatus","terminateWorker","worker","terminate","cleanupThread","pthreads","returnWorkerToPool","callbacks","shift","addOnPreRun","cb","spawnThread","threadParams","getNewWorker","runningWorkers","startRoutine","transferList","runtimeKeepaliveCounter","keepRuntimeAlive","stackSave","_emscripten_stack_get_current","stackRestore","val","__emscripten_stack_restore","stackAlloc","sz","__emscripten_stack_alloc","proxyToMainThread","funcIndex","emAsmAddr","sync","callArgs","serializedNumCallArgs","sp","i","rtn","__emscripten_run_on_main_thread_js","_proc_exit","code","terminateAllThreads","runtimeKeepalivePop","exitOnMainThread","returnCode","_exit","exitJS","implicit","checkUnflushedContent","ptr","toString","padStart","unusedWorkers","tlsInitFunctions","nextWorkerID","initMainThread","pthreadPoolSize","navigator","hardwareConcurrency","allocateUnusedWorker","loadWasmModuleToAllWorkers","splice","indexOf","__emscripten_thread_free_data","forEach","loadWasmModuleToWorker","onFinishedLoading","d","targetThread","targetWorker","thread","loaded","onerror","lineno","knownHandlers","propertyIsEnumerable","onMaybeReady","pthreadPoolReady","all","map","then","Worker","pop","stackHigh","stackSize","stackLow","_emscripten_stack_set_limits","wasmTableMirror","getWasmTableEntry","funcPtr","finish","__emscripten_thread_exit","tlsInitFunc","runtimeKeepalivePush","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","NaN","endIdx","endPtr","decode","ArrayBuffer","slice","str","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","___assert_fail","line","exceptionCaught","uncaughtExceptionCount","___cxa_begin_catch","ExceptionInfo","get_caught","set_caught","set_rethrown","___cxa_increment_exception_refcount","___cxa_get_exception_ptr","exceptionLast","___cxa_end_catch","_setThrew","___cxa_decrement_exception_refcount","set_type","get_type","set_destructor","destructor","get_destructor","caught","rethrown","get_rethrown","set_adjusted_ptr","adjustedPtr","get_adjusted_ptr","setTempRet0","__emscripten_tempret_set","findMatchingCatch","thrown","thrownType","caughtType","adjusted_ptr_addr","___cxa_can_catch","___cxa_find_matching_catch_2","___cxa_find_matching_catch_3","arg0","___cxa_rethrow","___cxa_rethrow_primary_exception","___cxa_throw","___cxa_uncaught_exceptions","pthreadCreateProxied","attr","___pthread_create_js","_emscripten_has_threading_support","SharedArrayBuffer","___resumeException","__abort_js","structRegistrations","runDestructors","destructors","del","readPointer","pointer","embind_charCodes","awaitingDependencies","registeredTypes","typeDependencies","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","Array","unregisteredTypes","registered","dt","hasOwnProperty","__embind_finalize_value_object","structType","reg","rawConstructor","rawDestructor","fieldRecords","fields","fieldTypes","field","getterReturnType","concat","setterArgumentType","fieldName","optional","getter","getterContext","setter","setterContext","read","write","o","rv","TypeError","argPackAdvance","GenericWireTypeSize","destructorFunction","embindRepr","v","embind_init_charCodes","codes","readLatin1String","ret","c","BindingError","throwBindingError","sharedRegisterType","rawType","registeredInstance","options","ignoreDuplicateRegistrations","integerReadValueFromPointer","width","signed","__embind_register_bigint","primitiveType","size","minRange","maxRange","isUnsignedType","value","BigInt","__embind_register_bool","trueValue","falseValue","wt","shallowCopyInternalPointer","count","deleteScheduled","preservePointerOnDelete","ptrType","smartPtr","smartPtrType","throwInstanceAlreadyDeleted","obj","getInstanceTypeName","handle","$$","registeredClass","finalizationRegistry","detachFinalizer","runDestructor","releaseClassHandle","toDelete","downcastPointer","ptrClass","desiredClass","baseClass","downcast","registeredPointers","registeredInstances","getBasestPointer","class_","upcast","getInheritedInstance","makeClassHandle","record","hasSmartPtrType","hasSmartPtr","attachFinalizer","create","writable","RegisteredPointer_fromWireType","rawPointer","getPointee","makeDefaultHandle","isSmartPointer","instancePrototype","pointeeType","toType","actualType","getActualType","registeredPointerRecord","call","isConst","constPointerType","pointerType","dp","delayFunction","FinalizationRegistry","leakWarning","cls","captureStackTrace","replace","register","unregister","deletionQueue","flushPendingDeletes","init_ClassHandle","proto","ClassHandle","assign","other","leftClass","left","rightClass","right","clone","getPrototypeOf","symbolDispose","Symbol","dispose","createNamedFunction","ensureOverloadTable","methodName","humanName","overloadTable","prevFunc","apply","argCount","exposePublicSymbol","numArguments","char_0","char_9","makeLegalFunctionName","charCodeAt","RegisteredClass","pureVirtualFunctions","upcastPointer","constNoSmartPtrRawPointerToWireType","isReference","handleClass","genericPointerToWireType","sharingPolicy","clonedHandle","rawShare","Emval","toHandle","nonConstNoSmartPtrRawPointerToWireType","init_RegisteredPointer","RegisteredPointer","rawGetPointee","replacePublicSymbol","embind__requireFunction","signature","rawFunction","isAsync","makeDynCaller","fp","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","visit","join","__embind_register_class","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","constructor_body","body","keys","__derivedClasses","referenceConverter","pointerConverter","constPointerConverter","heap32VectorToArray","firstElement","array","usesDestructorStack","argTypes","checkArgCount","numArgs","minArgs","maxArgs","argCountMessage","createJsInvoker","isClassMethodFunc","returns","needsDestructorStack","argsList","argsListWired","invokerFnBody","dtorStack","args1","paramName","getRequiredArgCount","requiredArgCount","craftInvokerFunction","classType","cppInvokerFunc","cppTargetFunc","expectedArgCount","closureArgs","invokerFn","Function","__embind_register_class_constructor","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","getFunctionName","trim","argsIndex","endsWith","__embind_register_class_function","rawInvoker","context","isPureVirtual","isNonnullReturn","unboundTypesHandler","substring","method","className","memberFunction","validateThis","this_","__embind_register_class_property","getterSignature","setterSignature","desc","enumerable","emval_freelist","emval_handles","__emval_decref","count_emval_handles","init_emval","toValue","EmValType","__embind_register_emval","floatReadValueFromPointer","__embind_register_float","__embind_register_function","fn","invokerArgsArray","__embind_register_integer","fromWireType","bitshift","toWireType","includes","checkAssertions","toTypeName","__embind_register_memory_view","dataTypeIndex","typeMapping","TA","decodeMemoryView","data","EmValOptionalType","__embind_register_optional","rawOptionalType","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","u","stringToUTF8","outPtr","lengthBytesUTF8","len","__embind_register_std_string","stdStringIsUTF8","payload","decodeStartPtr","currentBytePtr","maxRead","stringSegment","a","valueIsOfTypeString","isView","BYTES_PER_ELEMENT","_malloc","charCode","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","trailSurrogate","lengthBytesUTF32","__embind_register_std_wstring","charSize","decodeString","encodeString","readCharAt","lengthBytesUTF","maxReadBytes","__embind_register_value_object","constructorSignature","__embind_register_value_object_field","__embind_register_void","isVoid","__emscripten_init_main_thread_js","tb","handleException","maybeExit","callUserCallback","Atomics","waitAsync","wait","waitingAsync","store","__emscripten_check_mailbox","__emscripten_notify_mailbox_postmessage","currThreadId","setTimeout","proxiedJSCallArgs","__emscripten_receive_on_main_thread_js","callingThread","numCallArgs","proxiedFunctionTable","currentProxiedOperationCallerThread","__emscripten_thread_cleanup","__emscripten_thread_set_strongref","requireRegisteredType","impl","emval_returnValue","returnType","destructorsRef","__emval_as","__emval_get_property","key","emval_symbols","getStringOrSymbol","address","symbol","__emval_new_cstring","__emval_run_destructors","__emval_take_value","__tzset_js","timezone","daylight","std_name","dst_name","currentYear","Date","getFullYear","winter","summer","winterOffset","getTimezoneOffset","summerOffset","stdTimezoneOffset","Number","extractZone","timezoneOffset","sign","absOffset","abs","hours","floor","minutes","winterName","summerName","_emscripten_get_now","performance","timeOrigin","now","_emscripten_date_now","nowIsMonotonic","checkWasiClock","clock_id","INT53_MAX","INT53_MIN","bigintToI53Checked","num","_clock_time_get","clk_id","ignored_precision","ptime","nsec","round","_emscripten_check_blocking_allowed","_emscripten_exit_with_live_runtime","getHeapMax","_emscripten_get_heap_max","_emscripten_num_logical_cores","alignMemory","alignment","ceil","growMemory","pages","byteLength","grow","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","cutDown","overGrownHeapSize","min","newSize","replacement","_emscripten_runtime_keepalive_check","ENV","getExecutableName","getEnvStrings","strings","lang","languages","env","x","_environ_get","__environ","environ_buf","bufSize","envp","string","Infinity","_environ_sizes_get","penviron_count","penviron_buf_size","PATH","isAbs","charAt","splitPath","splitPathRe","exec","normalizeArray","parts","allowAboveRoot","up","last","unshift","normalize","isAbsolute","trailingSlash","split","filter","p","dirname","root","dir","basename","match","paths","join2","l","r","initRandomFill","view","crypto","getRandomValues","randomFill","PATH_FS","resolvedPath","resolvedAbsolute","cwd","relative","from","to","arr","start","end","fromParts","toParts","samePartsLength","outputParts","FS_stdin_getChar_buffer","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","FS_stdin_getChar","prompt","ttys","shutdown","dev","ops","input","output","registerDevice","stream_ops","stream","tty","rdev","ErrnoError","seekable","close","fsync","offset","pos","get_char","bytesRead","atime","put_char","mtime","ctime","default_tty_ops","ioctl_tcgets","c_iflag","c_oflag","c_cflag","c_lflag","c_cc","ioctl_tcsets","optional_actions","ioctl_tiocgwinsz","default_tty1_ops","mmapAlloc","MEMFS","ops_table","mount","createNode","parent","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","CAPACITY_DOUBLING_MAX","oldContents","resizeFileStorage","ino","nlink","uid","gid","blksize","blocks","old_node","new_dir","new_name","new_node","lookupNode","hashRemoveNode","newname","oldpath","position","canOwn","whence","prot","flags","allocated","byteOffset","mmapFlags","asyncLoad","FS_createDataFile","createDataFile","preloadPlugins","FS_handledByPreloadPlugin","byteArray","fullname","Browser","handled","plugin","FS_createPreloadedFile","canRead","canWrite","onload","dontCreateFile","preFinish","processData","FS_modeStringToFlags","flagModes","FS_getMode","strError","errno","_strerror","ERRNO_CODES","mounts","devices","streams","nextInode","nameTable","currentPath","filesystems","syncFSRequests","FSStream","shared","object","isRead","isWrite","isAppend","FSNode","readMode","writeMode","mounted","isFolder","isDevice","lookupPath","opts","follow_mount","linkloop","nlinks","current","current_path","islast","noent_okay","isMountpoint","follow","isRoot","getPath","mountpoint","hashName","parentid","hash","hashAddNode","name_next","errCode","mayLookup","nodeName","destroyNode","isSocket","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","mayOpen","checkOpExists","op","MAX_OPEN_FDS","nextfd","fd","getStreamChecked","getStream","createStream","closeStream","dupStream","origStream","dup","doSetAttr","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","m","syncfs","populate","completed","doCallback","done","errored","pseudo","mountRoot","unmount","next","statfs","statfsNode","statfsStream","bsize","frsize","bfree","bavail","files","ffree","fsid","namelen","mkdir","mkdirTree","dirs","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","stat","dontFollow","fstat","lstat","doChmod","chmod","lchmod","fchmod","doChown","timestamp","chown","lchown","fchown","doTruncate","truncate","ftruncate","utime","isDirPath","created","ungotten","isClosed","getdents","seeking","bytesWritten","ioctl","readFile","encoding","buf","writeFile","actualNumBytes","chdir","createDefaultDirectories","createDefaultDevices","randomBuffer","randomLeft","randomByte","createDevice","createSpecialDirectories","proc_self","entries","k","createStandardStreams","stdin","stdout","stderr","staticInit","quit","_fflush","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","reverse","part","createFile","properties","forceLoadFile","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","setDataGetter","cacheLength","header","datalength","getResponseHeader","hasByteServing","usesGzip","doXHR","setRequestHeader","overrideMimeType","responseText","lazyArray","_length","_chunkSize","defineProperties","writeChunks","absolutePath","createFolder","createLink","joinPath","standardizePath","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","dirstream","getStreamFromFD","writeStat","getTime","writeStatFs","stats","doMsync","addr","varargs","getStr","_fd_close","doReadv","iov","iovcnt","curr","_fd_read","pnum","_fd_seek","newOffset","isNaN","doWritev","_fd_write","_random_get","getCFunc","ident","writeArrayToMemory","stringToUTF8OnStack","ccall","toC","convertReturnValue","Boolean","cArgs","converter","onDone","cwrap","incrementExceptionRefcount","decrementExceptionRefcount","getExceptionMessageCommon","type_addr_addr","message_addr_addr","___get_exception_message","type_addr","message_addr","createPreloadedFile","checkIncomingModuleAPI","missingLibrarySymbols","unexportedSymbols","__assert_fail","__cxa_begin_catch","__cxa_end_catch","__cxa_find_matching_catch_2","__cxa_find_matching_catch_3","__cxa_rethrow","__cxa_rethrow_primary_exception","__cxa_throw","__cxa_uncaught_exceptions","__pthread_create_js","__resumeException","_abort_js","_embind_finalize_value_object","_embind_register_bigint","_embind_register_bool","_embind_register_class","_embind_register_class_constructor","_embind_register_class_function","_embind_register_class_property","_embind_register_emval","_embind_register_float","_embind_register_function","_embind_register_integer","_embind_register_memory_view","_embind_register_optional","_embind_register_std_string","_embind_register_std_wstring","_embind_register_value_object","_embind_register_value_object_field","_embind_register_void","_emscripten_init_main_thread_js","_emscripten_notify_mailbox_postmessage","_emscripten_receive_on_main_thread_js","_emscripten_thread_cleanup","_emscripten_thread_mailbox_await","_emscripten_thread_set_strongref","_emval_as","_emval_decref","_emval_get_property","_emval_new_cstring","_emval_run_destructors","_emval_take_value","_tzset_js","clock_time_get","emscripten_check_blocking_allowed","emscripten_exit_with_live_runtime","emscripten_get_heap_max","emscripten_get_now","emscripten_num_logical_cores","emscripten_resize_heap","emscripten_runtime_keepalive_check","environ_get","environ_sizes_get","exit","fd_close","fd_read","fd_seek","fd_write","invoke_diii","invoke_fiii","invoke_i","invoke_ii","invoke_iii","invoke_iiii","invoke_iiiii","invoke_iiiiid","invoke_iiiiii","invoke_iiiiiii","invoke_iiiiiiii","invoke_iiiiiiiiiii","invoke_iiiiiiiiiiii","invoke_iiiiiiiiiiiii","invoke_jiiii","invoke_v","invoke_vi","invoke_vii","invoke_viii","invoke_viiii","invoke_viiiiiii","invoke_viiiiiiiiii","invoke_viiiiiiiiiiiiiii","memory","random_get","calledRun","__emscripten_proxy_main","_emscripten_stack_init","a0","a1","index","a2","a3","a4","a5","a6","a7","a8","a9","a10","a11","a12","a13","a14","a15","callMain","entryFunction","argc","argv","stackCheckInit","run","doRun","noInitialRun","oldOut","oldErr","has","preInit","isPthread","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","chunkId","location"],"sourceRoot":""}