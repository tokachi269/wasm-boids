{"version":3,"file":"static/js/index.f84dd4af.js","mappings":"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","sources":["webpack://wasm-boids/./src/components/Settings.vue","webpack://wasm-boids/./src/components/Settings.vue?b3ff","webpack://wasm-boids/./src/App.vue","webpack://wasm-boids/./src/App.vue?7ccd","webpack://wasm-boids/./src/main.js","webpack://wasm-boids/webpack/bootstrap","webpack://wasm-boids/webpack/runtime/chunk loaded","webpack://wasm-boids/webpack/runtime/define property getters","webpack://wasm-boids/webpack/runtime/global","webpack://wasm-boids/webpack/runtime/hasOwnProperty shorthand","webpack://wasm-boids/webpack/runtime/jsonp chunk loading","webpack://wasm-boids/webpack/startup"],"sourcesContent":["// filepath: d:\\GitHub\\wasm-boids\\src\\components\\Settings.vue\r\n<template>\r\n  <div class=\"settings\">\r\n    <details class=\"species-section\" :open=\"false\">\r\n      <summary class=\"species-header\">\r\n        <span class=\"species-title\">{{ settings.species }} ({{ settings.count }}匹)</span>\r\n        <button\r\n          v-if=\"canRemove\"\r\n          class=\"species-remove\"\r\n          type=\"button\"\r\n          @click.stop=\"emitRemove\"\r\n        >削除</button>\r\n      </summary>\r\n      <div class=\"species-content\">\r\n        <div class=\"setting-row\">\r\n          <label>種族名<br>(Species):</label>\r\n          <span>{{ settings.species }}</span>\r\n        </div>\r\n        <div class=\"setting-row\">\r\n          <label>群れの数(要更新)<br>(Count):</label>\r\n          <input\r\n            type=\"range\"\r\n            v-model.number=\"countDraft\"\r\n            min=\"0\"\r\n            max=\"50000\"\r\n            step=\"1\"\r\n            @change=\"commitCountFromSlider\"\r\n          />\r\n          <span \r\n            v-if=\"!editingCount\" \r\n            class=\"editable-value\" \r\n            @click=\"startEditCount\"\r\n            title=\"クリックして編集\"\r\n          >{{ settings.count }}</span>\r\n          <input \r\n            v-if=\"editingCount\"\r\n            type=\"number\" \r\n            v-model.number=\"countDraft\" \r\n            min=\"0\" \r\n            max=\"20000\"\r\n            class=\"value-input\"\r\n            @blur=\"cancelCountEdit\"\r\n            @keyup.enter=\"commitCountFromInput\"\r\n            ref=\"countInput\"\r\n          />\r\n        </div><div class=\"setting-row\">\r\n      <label>凝集<br>(Cohesion):</label>\r\n      <input type=\"range\" v-model.number=\"settings.cohesion\" min=\"0\" max=\"40\" step=\"0.01\" />\r\n      <span \r\n        v-if=\"!editingCohesion\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditCohesion\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.cohesion }}</span>\r\n      <input \r\n        v-if=\"editingCohesion\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.cohesion\" \r\n        min=\"0\" \r\n        max=\"40\"\r\n        step=\"0.01\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditCohesion\"\r\n        @keyup.enter=\"stopEditCohesion\"\r\n        ref=\"cohesionInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>凝集範囲<br>(Cohesion Range):</label>\r\n      <input type=\"range\" v-model.number=\"settings.cohesionRange\" min=\"1\" max=\"300\" step=\"1\" />\r\n      <span \r\n        v-if=\"!editingCohesionRange\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditCohesionRange\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.cohesionRange }}</span>\r\n      <input \r\n        v-if=\"editingCohesionRange\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.cohesionRange\" \r\n        min=\"1\" \r\n        max=\"300\"\r\n        step=\"1\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditCohesionRange\"\r\n        @keyup.enter=\"stopEditCohesionRange\"\r\n        ref=\"cohesionRangeInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>分離<br>(Separation):</label>\r\n      <input type=\"range\" v-model.number=\"settings.separation\" min=\"0\" max=\"10\" step=\"0.01\" />\r\n      <span \r\n        v-if=\"!editingSeparation\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditSeparation\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.separation }}</span>\r\n      <input \r\n        v-if=\"editingSeparation\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.separation\" \r\n        min=\"0\" \r\n        max=\"10\"\r\n        step=\"0.01\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditSeparation\"\r\n        @keyup.enter=\"stopEditSeparation\"\r\n        ref=\"separationInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>分離範囲<br>(Separation Range):</label>\r\n      <input type=\"range\" v-model.number=\"settings.separationRange\" min=\"0.1\" max=\"10\" step=\"0.1\" />\r\n      <span \r\n        v-if=\"!editingSeparationRange\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditSeparationRange\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.separationRange }}</span>\r\n      <input \r\n        v-if=\"editingSeparationRange\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.separationRange\" \r\n        min=\"0.1\" \r\n        max=\"10\"\r\n        step=\"0.1\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditSeparationRange\"\r\n        @keyup.enter=\"stopEditSeparationRange\"\r\n        ref=\"separationRangeInput\"\r\n      />\r\n    </div>    <div class=\"setting-row\">\r\n      <label>整列<br>(Alignment):</label>\r\n      <input type=\"range\" v-model.number=\"settings.alignment\" min=\"0\" max=\"20\" step=\"0.01\" />\r\n      <span \r\n        v-if=\"!editingAlignment\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditAlignment\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.alignment }}</span>\r\n      <input \r\n        v-if=\"editingAlignment\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.alignment\" \r\n        min=\"0\" \r\n        max=\"20\"\r\n        step=\"0.01\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditAlignment\"\r\n        @keyup.enter=\"stopEditAlignment\"\r\n        ref=\"alignmentInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>整列範囲<br>(Alignment Range):</label>\r\n      <input type=\"range\" v-model.number=\"settings.alignmentRange\" min=\"1\" max=\"100\" step=\"1\" />\r\n      <span \r\n        v-if=\"!editingAlignmentRange\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditAlignmentRange\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.alignmentRange }}</span>\r\n      <input \r\n        v-if=\"editingAlignmentRange\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.alignmentRange\" \r\n        min=\"1\" \r\n        max=\"100\"\r\n        step=\"1\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditAlignmentRange\"\r\n        @keyup.enter=\"stopEditAlignmentRange\"\r\n        ref=\"alignmentRangeInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>最大速度<br>(Max Speed):</label>\r\n      <input type=\"range\" v-model.number=\"settings.maxSpeed\" min=\"0.1\" max=\"2\" step=\"0.01\" />\r\n      <span \r\n        v-if=\"!editingMaxSpeed\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditMaxSpeed\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.maxSpeed }}</span>\r\n      <input \r\n        v-if=\"editingMaxSpeed\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.maxSpeed\" \r\n        min=\"0.1\" \r\n        max=\"2\"\r\n        step=\"0.01\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditMaxSpeed\"\r\n        @keyup.enter=\"stopEditMaxSpeed\"\r\n        ref=\"maxSpeedInput\"\r\n      />\r\n    </div>    <div class=\"setting-row\">\r\n      <label>最大旋回角<br>(Max Turn Angle):</label>\r\n      <input type=\"range\" v-model.number=\"settings.maxTurnAngle\" min=\"0.001\" max=\"0.3\" step=\"0.001\" />\r\n      <span \r\n        v-if=\"!editingMaxTurnAngle\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditMaxTurnAngle\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.maxTurnAngle }}</span>\r\n      <input \r\n        v-if=\"editingMaxTurnAngle\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.maxTurnAngle\" \r\n        min=\"0.001\" \r\n        max=\"0.3\"\r\n        step=\"0.001\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditMaxTurnAngle\"\r\n        @keyup.enter=\"stopEditMaxTurnAngle\"\r\n        ref=\"maxTurnAngleInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>最大近傍数<br>(Max Neighbors):</label>\r\n      <input type=\"range\" v-model.number=\"settings.maxNeighbors\" min=\"0\" max=\"32\" step=\"1\" />\r\n      <span \r\n        v-if=\"!editingMaxNeighbors\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditMaxNeighbors\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.maxNeighbors }}</span>\r\n      <input \r\n        v-if=\"editingMaxNeighbors\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.maxNeighbors\" \r\n        min=\"0\" \r\n        max=\"32\"\r\n        step=\"1\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditMaxNeighbors\"\r\n        @keyup.enter=\"stopEditMaxNeighbors\"\r\n        ref=\"maxNeighborsInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>水平化トルク<br>(Horizontal Torque):</label>\r\n      <input type=\"range\" v-model.number=\"settings.horizontalTorque\" min=\"0.0\" max=\"0.2\" step=\"0.001\" />\r\n      <span \r\n        v-if=\"!editingHorizontalTorque\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditHorizontalTorque\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.horizontalTorque }}</span>\r\n      <input \r\n        v-if=\"editingHorizontalTorque\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.horizontalTorque\" \r\n        min=\"0.0\" \r\n        max=\"0.2\"\r\n        step=\"0.001\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditHorizontalTorque\"\r\n        @keyup.enter=\"stopEditHorizontalTorque\"\r\n        ref=\"horizontalTorqueInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>回転トルク強度<br>(Torque Strength):</label>\r\n      <input type=\"range\" v-model.number=\"settings.torqueStrength\" min=\"0.0\" max=\"20\" step=\"0.001\" />\r\n      <span \r\n        v-if=\"!editingTorqueStrength\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditTorqueStrength\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.torqueStrength }}</span>\r\n      <input \r\n        v-if=\"editingTorqueStrength\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.torqueStrength\" \r\n        min=\"0.0\" \r\n        max=\"5\"\r\n        step=\"0.001\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditTorqueStrength\"\r\n        @keyup.enter=\"stopEditTorqueStrength\"\r\n        ref=\"torqueStrengthInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>減衰係数<br>(Damping Coefficient):</label>\r\n      <input type=\"range\" v-model.number=\"settings.lambda\" min=\"0\" max=\"1\" step=\"0.001\" />\r\n      <span \r\n        v-if=\"!editingLambda\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditLambda\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.lambda }}</span>\r\n      <input \r\n        v-if=\"editingLambda\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.lambda\" \r\n        min=\"0\" \r\n        max=\"1\"\r\n        step=\"0.001\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditLambda\"\r\n        @keyup.enter=\"stopEditLambda\"\r\n        ref=\"lambdaInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>記憶時間<br>(Memory Time):</label>\r\n      <input type=\"range\" v-model.number=\"settings.tau\" min=\"0\" max=\"5\" step=\"0.01\" />\r\n      <span \r\n        v-if=\"!editingTau\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditTau\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.tau }}</span>\r\n      <input \r\n        v-if=\"editingTau\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.tau\" \r\n        min=\"0\" \r\n        max=\"5\"\r\n        step=\"0.01\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditTau\"\r\n        @keyup.enter=\"stopEditTau\"\r\n        ref=\"tauInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>捕食者フラグ<br>(Is Predator):</label>\r\n      <input type=\"checkbox\" v-model=\"settings.isPredator\" />\r\n      <span>{{ settings.isPredator }}</span>\r\n    </div>\r\n      </div>\r\n    </details>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, nextTick, watch } from 'vue';\r\n\r\nconst emit = defineEmits(['remove']);\r\n\r\nconst props = defineProps({\r\n  settings: {\r\n    type: Object,\r\n    required: true\r\n  },\r\n  canRemove: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n});\r\n\r\nconst settings = props.settings;\r\n\r\n// 編集状態のref\r\nconst editingCount = ref(false);\r\nconst editingCohesion = ref(false);\r\nconst editingCohesionRange = ref(false);\r\nconst editingSeparation = ref(false);\r\nconst editingSeparationRange = ref(false);\r\nconst editingAlignment = ref(false);\r\nconst editingAlignmentRange = ref(false);\r\nconst editingMaxSpeed = ref(false);\r\nconst editingMaxTurnAngle = ref(false);\r\nconst editingMaxNeighbors = ref(false);\r\nconst editingHorizontalTorque = ref(false);\r\nconst editingTorqueStrength = ref(false);\r\nconst editingLambda = ref(false);\r\nconst editingTau = ref(false);\r\n\r\n// 入力フィールドのref\r\nconst countInput = ref(null);\r\nconst cohesionInput = ref(null);\r\nconst cohesionRangeInput = ref(null);\r\nconst separationInput = ref(null);\r\nconst separationRangeInput = ref(null);\r\nconst alignmentInput = ref(null);\r\nconst alignmentRangeInput = ref(null);\r\nconst maxSpeedInput = ref(null);\r\nconst maxTurnAngleInput = ref(null);\r\nconst maxNeighborsInput = ref(null);\r\nconst horizontalTorqueInput = ref(null);\r\nconst torqueStrengthInput = ref(null);\r\nconst lambdaInput = ref(null);\r\nconst tauInput = ref(null);\r\n\r\nconst countDraft = ref(settings.count ?? 0);\r\n\r\nwatch(\r\n  () => settings.count,\r\n  (value) => {\r\n    if (!editingCount.value) {\r\n      countDraft.value = value ?? 0;\r\n    }\r\n  }\r\n);\r\n\r\n// 編集開始関数\r\nasync function startEditCount() {\r\n  editingCount.value = true;\r\n  countDraft.value = settings.count ?? 0;\r\n  await nextTick();\r\n  if (countInput.value) {\r\n    countInput.value.focus();\r\n    countInput.value.select();\r\n  }\r\n}\r\n\r\nfunction cancelCountEdit() {\r\n  editingCount.value = false;\r\n  countDraft.value = settings.count ?? 0;\r\n}\r\n\r\nfunction applyCountDraft() {\r\n  const nextValue = Math.max(0, Math.round(Number.isFinite(countDraft.value) ? countDraft.value : 0));\r\n  if (settings.count !== nextValue) {\r\n    settings.count = nextValue;\r\n  }\r\n}\r\n\r\nfunction commitCountFromSlider() {\r\n  applyCountDraft();\r\n}\r\n\r\nfunction commitCountFromInput() {\r\n  applyCountDraft();\r\n  cancelCountEdit();\r\n}\r\n\r\nfunction emitRemove() {\r\n  emit('remove');\r\n}\r\n\r\nasync function startEditCohesion() {\r\n  editingCohesion.value = true;\r\n  await nextTick();\r\n  if (cohesionInput.value) {\r\n    cohesionInput.value.focus();\r\n    cohesionInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditCohesionRange() {\r\n  editingCohesionRange.value = true;\r\n  await nextTick();\r\n  if (cohesionRangeInput.value) {\r\n    cohesionRangeInput.value.focus();\r\n    cohesionRangeInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditSeparation() {\r\n  editingSeparation.value = true;\r\n  await nextTick();\r\n  if (separationInput.value) {\r\n    separationInput.value.focus();\r\n    separationInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditSeparationRange() {\r\n  editingSeparationRange.value = true;\r\n  await nextTick();\r\n  if (separationRangeInput.value) {\r\n    separationRangeInput.value.focus();\r\n    separationRangeInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditAlignment() {\r\n  editingAlignment.value = true;\r\n  await nextTick();\r\n  if (alignmentInput.value) {\r\n    alignmentInput.value.focus();\r\n    alignmentInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditAlignmentRange() {\r\n  editingAlignmentRange.value = true;\r\n  await nextTick();\r\n  if (alignmentRangeInput.value) {\r\n    alignmentRangeInput.value.focus();\r\n    alignmentRangeInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditMaxSpeed() {\r\n  editingMaxSpeed.value = true;\r\n  await nextTick();\r\n  if (maxSpeedInput.value) {\r\n    maxSpeedInput.value.focus();\r\n    maxSpeedInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditMaxTurnAngle() {\r\n  editingMaxTurnAngle.value = true;\r\n  await nextTick();\r\n  if (maxTurnAngleInput.value) {\r\n    maxTurnAngleInput.value.focus();\r\n    maxTurnAngleInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditMaxNeighbors() {\r\n  editingMaxNeighbors.value = true;\r\n  await nextTick();\r\n  if (maxNeighborsInput.value) {\r\n    maxNeighborsInput.value.focus();\r\n    maxNeighborsInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditHorizontalTorque() {\r\n  editingHorizontalTorque.value = true;\r\n  await nextTick();\r\n  if (horizontalTorqueInput.value) {\r\n    horizontalTorqueInput.value.focus();\r\n    horizontalTorqueInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditTorqueStrength() {\r\n  editingTorqueStrength.value = true;\r\n  await nextTick();\r\n  if (torqueStrengthInput.value) {\r\n    torqueStrengthInput.value.focus();\r\n    torqueStrengthInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditLambda() {\r\n  editingLambda.value = true;\r\n  await nextTick();\r\n  if (lambdaInput.value) {\r\n    lambdaInput.value.focus();\r\n    lambdaInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditTau() {\r\n  editingTau.value = true;\r\n  await nextTick();\r\n  if (tauInput.value) {\r\n    tauInput.value.focus();\r\n    tauInput.value.select();\r\n  }\r\n}\r\n\r\nfunction stopEditCohesion() {\r\n  editingCohesion.value = false;\r\n}\r\n\r\nfunction stopEditCohesionRange() {\r\n  editingCohesionRange.value = false;\r\n}\r\n\r\nfunction stopEditSeparation() {\r\n  editingSeparation.value = false;\r\n}\r\n\r\nfunction stopEditSeparationRange() {\r\n  editingSeparationRange.value = false;\r\n}\r\n\r\nfunction stopEditAlignment() {\r\n  editingAlignment.value = false;\r\n}\r\n\r\nfunction stopEditAlignmentRange() {\r\n  editingAlignmentRange.value = false;\r\n}\r\n\r\nfunction stopEditMaxSpeed() {\r\n  editingMaxSpeed.value = false;\r\n}\r\n\r\nfunction stopEditMaxTurnAngle() {\r\n  editingMaxTurnAngle.value = false;\r\n}\r\n\r\nfunction stopEditMaxNeighbors() {\r\n  editingMaxNeighbors.value = false;\r\n}\r\n\r\nfunction stopEditHorizontalTorque() {\r\n  editingHorizontalTorque.value = false;\r\n}\r\n\r\nfunction stopEditTorqueStrength() {\r\n  editingTorqueStrength.value = false;\r\n}\r\n\r\nfunction stopEditLambda() {\r\n  editingLambda.value = false;\r\n}\r\n\r\nfunction stopEditTau() {\r\n  editingTau.value = false;\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.settings {\r\n  margin-bottom: 20px;\r\n  width: 100%;\r\n  min-width: 260px;\r\n  max-width: 520px;\r\n  box-sizing: border-box;\r\n  pointer-events: auto;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n.setting-row {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 8px;\r\n  width: 100%;\r\n}\r\n.setting-row label {\r\n  width: 130px;\r\n  text-align: left;\r\n  margin-right: 10px;\r\n  flex-shrink: 0;\r\n  display: inline-block;\r\n}\r\n.setting-row input[type=\"range\"] {\r\n  width: 120px;\r\n  min-width: 80px;\r\n  max-width: 200px;\r\n  margin: 0 10px;\r\n  flex: none;\r\n  display: inline-block;\r\n}\r\n.setting-row span {\r\n  width: 60px;\r\n  text-align: left;\r\n  display: inline-block;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.editable-value {\r\n  cursor: pointer;\r\n  padding: 2px 4px;\r\n  border-radius: 3px;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.editable-value:hover {\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  text-decoration: underline;\r\n}\r\n\r\n.value-input {\r\n  width: 60px;\r\n  padding: 2px 4px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 3px;\r\n  background: transparent;\r\n  color: inherit;\r\n  font-size: inherit;\r\n  text-align: left;\r\n}\r\n\r\n.value-input:focus {\r\n  outline: none;\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 3px rgba(0, 123, 255, 0.3);\r\n}\r\n\r\n.species-section {\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n  background-color: rgba(255, 255, 255, 0.05);\r\n  pointer-events: auto;\r\n  position: relative;\r\n  overflow: visible;\r\n  max-width: 100%;\r\n  width: fit-content;\r\n  min-width: 260px;\r\n}\r\n\r\n.species-header {\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  border-radius: 5px 5px 0 0;\r\n  user-select: none;\r\n  pointer-events: auto;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  gap: 8px;\r\n}\r\n\r\n.species-title {\r\n  flex: 1;\r\n}\r\n\r\n.species-remove {\r\n  pointer-events: auto;\r\n  background: #d9534f;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 4px 8px;\r\n  font-size: 0.8rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.species-remove:hover {\r\n  background: #c9302c;\r\n}\r\n\r\n.species-header:hover {\r\n  background-color: rgba(255, 255, 255, 0.15);\r\n}\r\n\r\n.species-content {\r\n  padding: 10px;\r\n  pointer-events: auto;\r\n  position: relative;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n}\r\n</style>","import script from \"./Settings.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Settings.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Settings.vue?vue&type=style&index=0&id=5992d372&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5992d372\"]])\n\nexport default __exports__","<template>\r\n  <div id=\"app\">\r\n    <div class=\"ui-overlay\">\r\n      <h1>Boids Simulation</h1>\r\n      <details>\r\n        <summary>Settings</summary>\r\n        <div v-for=\"(s, i) in settings\" :key=\"i\">\r\n          <Settings\r\n            :settings=\"s\"\r\n            :can-remove=\"settings.length > 1\"\r\n            @remove=\"removeSpecies(i)\"\r\n          />\r\n        </div>\r\n        <button class=\"add-species-button\" @click=\"addSpecies\">種族を追加</button>\r\n        <button @click=\"resetSettings\" style=\"margin-bottom:1em;\">リセット</button>\r\n        <div>\r\n          <label>\r\n            <input type=\"checkbox\" v-model=\"showUnits\" />\r\n            Unit可視化\r\n          </label>\r\n          <label style=\"margin-left:1em;\">\r\n            <input type=\"checkbox\" v-model=\"showUnitSpheres\" />\r\n            スフィアのみ表示\r\n          </label>\r\n          <label style=\"margin-left:1em;\">\r\n            <input type=\"checkbox\" v-model=\"showUnitLines\" />\r\n            線のみ表示\r\n          </label>\r\n          <label style=\"margin-left:1em;\">\r\n            <input type=\"checkbox\" v-model=\"showUnitColors\" />\r\n            Unit色分け\r\n          </label>\r\n          <label style=\"margin-left:1em;\">\r\n            表示レイヤ下限: <input type=\"range\" min=\"1\" max=\"20\" v-model=\"unitLayer\" />\r\n            {{ unitLayer }}\r\n          </label>\r\n        </div>\r\n      </details>\r\n      <div class=\"info\">\r\n        <p>Boids Count: {{ totalBoids }}</p>\r\n      </div>\r\n    </div>\r\n    <div ref=\"threeContainer\" class=\"three-container\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, inject, onMounted, reactive, ref, watch, toRaw } from 'vue';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport Settings from './components/Settings.vue';\r\nimport Stats from 'three/examples/jsm/libs/stats.module'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\r\nimport { SSAOPass } from 'three/examples/jsm/postprocessing/SSAOPass.js';\r\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js';\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js';\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\nconst wasmModule = inject('wasmModule');\r\nif (!wasmModule) {\r\n  console.error('wasmModule not provided');\r\n}\r\n\r\nconst stepSimulation = wasmModule.cwrap('stepSimulation', 'number', ['number'])\r\nconst build = wasmModule.cwrap('build', 'void', ['number', 'number'])\r\nconst exportTreeStructure = wasmModule.cwrap('exportTreeStructure', 'object', [])\r\nconst boidUnitMappingPtr = wasmModule.cwrap('boidUnitMappingPtr', 'number', []);\r\nconst currentFirstBoidX = wasmModule.cwrap('currentFirstBoidX', 'number', []);\r\nconst speciesIdsPtr = wasmModule.cwrap('speciesIdsPtr', 'number', []);\r\nconst syncReadToWriteBuffers = wasmModule.cwrap('syncReadToWriteBuffers', 'void', []);\r\n// const getUnitCount = wasmModule.cwrap('getUnitCount', 'number', []);\r\n// const getUnitParentIndicesPtr = wasmModule.cwrap('getUnitParentIndicesPtr', 'number', []);\r\n\r\nfunction isMobileDevice() {\r\n  if (typeof navigator === 'undefined') {\r\n    return false;\r\n  }\r\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n}\r\n\r\nfunction fetchTreeStructure() {\r\n  const treeData = exportTreeStructure();\r\n  return treeData;\r\n}\r\nconst mobileBoidCount = isMobileDevice() ? 6000 : 10000;\r\n\r\nconst DEFAULT_SETTINGS = [{\r\n  species: 'Boids',         // 種族名\r\n  count: mobileBoidCount,   // 群れの数（スマホなら6000、PCなら10000）\r\n  cohesion: 32,             // 凝集\r\n  cohesionRange: 30,        // 凝集範囲\r\n  separation: 8,            // 分離\r\n  separationRange: 0.6,     // 分離範囲\r\n  alignment: 17,            // 整列\r\n  alignmentRange: 6,        // 整列範囲\r\n  maxSpeed: 0.26,           // 最大速度\r\n  maxTurnAngle: 0.25,       // 最大旋回角\r\n  maxNeighbors: 6,          // 最大近傍数\r\n  horizontalTorque: 0.019,  // 水平化トルク\r\n  torqueStrength: 10,       // 回転トルク強度\r\n  lambda: 0.62,             // 速度調整係数\r\n  tau: 1.5                  // 記憶時間スケール\r\n}, {\r\n  species: 'Predator',\r\n  count: 1,\r\n  cohesion: 5.58,                     // 捕食者には使わない\r\n  separation: 0.0,\r\n  alignment: 0.0,\r\n  maxSpeed: 1.37,                     // 速く逃げられるよう速度は大きめ\r\n  minSpeed: 0.4,\r\n  maxTurnAngle: 0.2,\r\n  separationRange: 14.0,\r\n  alignmentRange: 11.0,\r\n  cohesionRange: 77.0,\r\n  maxNeighbors: 0,\r\n  lambda: 0.05,\r\n  tau: 1.0, // 捕食者は常に追いかける\r\n  horizontalTorque: 0.022,\r\n  torqueStrength: 0.0,\r\n  isPredator: true                // ← 捕食者フラグ\r\n}];\r\n\r\nfunction loadSettings() {\r\n  try {\r\n    const saved = localStorage.getItem('boids_settings');\r\n    if (saved) {\r\n      const parsed = JSON.parse(saved);\r\n      if (Array.isArray(parsed)) {\r\n        return parsed; // 配列として保存されている場合のみ返す\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to load settings from localStorage:', error);\r\n  }\r\n  return DEFAULT_SETTINGS; // デフォルト値を返す\r\n}\r\n\r\nfunction snapshotSettingsList(list) {\r\n  return list.map((item) => JSON.parse(JSON.stringify(toRaw(item))));\r\n}\r\n\r\nlet cachedTotalBoidCount = 0;\r\nlet lastSpeciesSignature = '';\r\nconst totalBoids = computed(() => getTotalBoidCount());\r\n\r\nconst settings = reactive(loadSettings());\r\ncachedTotalBoidCount = getTotalBoidCount();\r\nlastSpeciesSignature = getSpeciesSignature(settings);\r\nlet previousSettingsSnapshot = snapshotSettingsList(settings);\r\nlet pendingStateForReinitialize = null;\r\nlet pendingSettingsSnapshot = null;\r\n\r\nfunction generateUniqueSpeciesName(baseName) {\r\n  const taken = new Set(settings.map((s) => s.species));\r\n  if (!baseName) {\r\n    baseName = 'Species';\r\n  }\r\n  if (!taken.has(baseName)) {\r\n    return baseName;\r\n  }\r\n  let index = 2;\r\n  let candidate = `${baseName} ${index}`;\r\n  while (taken.has(candidate)) {\r\n    index += 1;\r\n    candidate = `${baseName} ${index}`;\r\n  }\r\n  return candidate;\r\n}\r\n\r\nfunction cloneSpeciesTemplate(template) {\r\n  return JSON.parse(JSON.stringify(template));\r\n}\r\n\r\nfunction addSpecies() {\r\n  const template = DEFAULT_SETTINGS[0] ? cloneSpeciesTemplate(DEFAULT_SETTINGS[0]) : {\r\n    species: 'Species',\r\n    count: 0,\r\n    cohesion: 20,\r\n    cohesionRange: 30,\r\n    separation: 5,\r\n    separationRange: 1,\r\n    alignment: 10,\r\n    alignmentRange: 6,\r\n    maxSpeed: 0.3,\r\n    maxTurnAngle: 0.2,\r\n    maxNeighbors: 6,\r\n    horizontalTorque: 0.02,\r\n    torqueStrength: 5,\r\n    lambda: 0.5,\r\n    tau: 1.5,\r\n  };\r\n  const next = cloneSpeciesTemplate(template);\r\n  next.isPredator = false;\r\n  next.species = generateUniqueSpeciesName(next.species);\r\n  next.count = 0;\r\n  settings.push(next);\r\n}\r\n\r\nfunction removeSpecies(index) {\r\n  if (index < 0 || index >= settings.length) {\r\n    return;\r\n  }\r\n  settings.splice(index, 1);\r\n}\r\n\r\nconst threeContainer = ref(null);\r\nlet scene, camera, renderer, controls, composer;\r\nlet heightFogPass = null;\r\nlet heightFogRenderTarget = null;\r\n\r\nconst paused = ref(false);\r\n\r\nconst showUnits = ref(true);\r\nconst showUnitSpheres = ref(false);\r\nconst showUnitLines = ref(false);\r\nconst showUnitColors = ref(false);\r\nconst unitLayer = ref(1);\r\n\r\nlet unitSpheres = [];\r\nlet unitLines = [];\r\n\r\nlet maxDepth = 1;\r\nlet stats = null;\r\nlet gpuStatsPanel = null;\r\nlet glContext = null;\r\nlet gpuTimerExt = null;\r\nlet gpuQueryInFlight = null;\r\nlet gpuPendingQuery = null;\r\nlet lastGpuTimeMs = 0;\r\nlet latestStatePtr = 0;\r\nlet latestStateHeaderPtr = 0;\r\nlet latestStateHeaderView = null;\r\nlet latestPositionsPtr = 0;\r\nlet latestVelocitiesPtr = 0;\r\nlet latestOrientationsPtr = 0;\r\nlet latestBoidCountFromWasm = 0;\r\nlet frameCounter = 0;\r\nlet debugTimer = 0;\r\nlet flockReinitTimer = null;\r\n\r\nlet animationTimer = null;\r\nconst FRAME_INTERVAL = 1000 / 1000;//1000 / 60; // 60FPS\r\nconst COUNT_REINIT_DELAY_MS = 400;\r\n\r\n// ツリーの最大深さを計算\r\nfunction calcMaxDepth(unit, depth = 0) {\r\n  if (!unit || !unit.children || typeof unit.children.size !== 'function' || unit.children.size() === 0) {\r\n    return depth;\r\n  }\r\n  let max = depth;\r\n  for (let i = 0; i < unit.children.size(); i++) {\r\n    const child = unit.children.get(i);\r\n    max = Math.max(max, calcMaxDepth(child, depth + 1));\r\n  }\r\n  return max;\r\n}\r\n\r\nfunction handleKeydown(e) {\r\n  if (e.code === 'Space') {\r\n    paused.value = !paused.value;\r\n  }\r\n}\r\n\r\nfunction initThreeJS() {\r\n  const width = window.innerWidth;\r\n  const height = window.innerHeight;\r\n\r\n  scene = new THREE.Scene();\r\n  scene.background = new THREE.Color(OCEAN_COLORS.DEEP_BLUE);\r\n  createOceanSphere();\r\n\r\n  camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\r\n  camera.position.set(3, -5,3);\r\n  camera.lookAt(0, 0, 0);\r\n\r\n  renderer = new THREE.WebGLRenderer({\r\n    antialias: true,\r\n    depth: true, // 深度バッファを有効化\r\n\r\n  });\r\n  renderer.setPixelRatio(window.devicePixelRatio); // 高DPI対応\r\n  renderer.setSize(width, height);\r\n  renderer.shadowMap.enabled = true;\r\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap; // 影を柔らかく\r\n\r\n  glContext = renderer.getContext();\r\n  if (typeof WebGL2RenderingContext !== 'undefined' && glContext instanceof WebGL2RenderingContext) {\r\n    gpuTimerExt = glContext.getExtension('EXT_disjoint_timer_query_webgl2');\r\n    if (!gpuTimerExt) {\r\n      console.warn('EXT_disjoint_timer_query_webgl2 is not available; GPU timing disabled.');\r\n    }\r\n  } else {\r\n    gpuTimerExt = null;\r\n  }\r\n\r\n  threeContainer.value.appendChild(renderer.domElement);\r\n\r\n  camera.aspect = width / height;\r\n  camera.updateProjectionMatrix();\r\n\r\n  controls = new OrbitControls(camera, renderer.domElement);\r\n  controls.enableDamping = true; // なめらかな操作\r\n  controls.dampingFactor = 0.1;\r\n\r\n  // 地面メッシュ追加\r\n  const groundGeo = new THREE.PlaneGeometry(300, 300);\r\n  const groundMat = createFadeOutGroundMaterial();\r\n  groundMat.depthTest = true;\r\n  const ground = new THREE.Mesh(groundGeo, groundMat);\r\n  ground.rotation.x = -Math.PI / 2;\r\n  ground.position.y = -10;\r\n  ground.receiveShadow = true; // 影を受ける\r\n  scene.add(ground);\r\n\r\n  // ライト\r\n  const ambientLight = new THREE.AmbientLight(toHex(OCEAN_COLORS.AMBIENT_LIGHT), 0.9);\r\n  scene.add(ambientLight);\r\n\r\n  // 太陽光（やや暖色のDirectionalLight）\r\n  const dirLight = new THREE.DirectionalLight(toHex(OCEAN_COLORS.SUN_LIGHT), 20); // 暖色＆強め\r\n  dirLight.position.set(300, 500, 200); // 高い位置から照らす\r\n  dirLight.castShadow = true;\r\n\r\n  // 影カメラの範囲を広げる\r\n  dirLight.shadow.camera.left = -100;\r\n  dirLight.shadow.camera.right = 100;\r\n  dirLight.shadow.camera.top = 100;\r\n  dirLight.shadow.camera.bottom = -100;\r\n  dirLight.shadow.camera.near = 1;\r\n  dirLight.shadow.camera.far = 1000;\r\n\r\n  dirLight.shadow.mapSize.width = 1024;\r\n  dirLight.shadow.mapSize.height = 1024;\r\n  dirLight.shadow.bias = -0.01;\r\n  dirLight.shadow.normalBias = 0.01;\r\n\r\n  scene.add(dirLight);\r\n  // EffectComposer の初期化（スマホ以外の場合のみ）\r\n  if (!isMobileDevice()) {\r\n    const renderTargetOptions = {\r\n      depthBuffer: true,\r\n      stencilBuffer: false,\r\n    };\r\n    heightFogRenderTarget = new THREE.WebGLRenderTarget(width, height, renderTargetOptions);\r\n    heightFogRenderTarget.depthTexture = new THREE.DepthTexture(width, height, THREE.FloatType);\r\n    heightFogRenderTarget.depthTexture.format = THREE.DepthFormat;\r\n    heightFogRenderTarget.depthTexture.type = THREE.FloatType;\r\n    heightFogRenderTarget.depthTexture.needsUpdate = true;\r\n\r\n    // EffectComposer の初期化\r\n    composer = new EffectComposer(renderer, heightFogRenderTarget);\r\n\r\n    // RenderPass を追加\r\n    const renderPass = new RenderPass(scene, camera);\r\n    composer.addPass(renderPass);\r\n\r\n    const ssaoPass = new SSAOPass(scene, camera, width, height);\r\n    ssaoPass.kernelRadius = 8; // サンプル半径（大きくすると効果が広がる）\r\n    ssaoPass.minDistance = 0.01; // 最小距離（小さくすると近距離の効果が強調される）\r\n    ssaoPass.maxDistance = 0.01; // 最大距離（大きくすると遠距離の効果が強調される）\r\n    composer.addPass(ssaoPass);\r\n    \r\n    // UnrealBloomPass を追加（任意）\r\n    const bloomPass = new UnrealBloomPass(new THREE.Vector2(width, height), 1.5, 0.4, 0.85);\r\n    composer.addPass(bloomPass);\r\n\r\n    heightFogPass = new ShaderPass(HeightFogShader);\r\n    heightFogPass.uniforms.tDepth.value = heightFogRenderTarget.depthTexture;\r\n    heightFogPass.uniforms.fogColor.value.copy(heightFogConfig.color);\r\n    heightFogPass.uniforms.distanceStart.value = heightFogConfig.distanceStart;\r\n    heightFogPass.uniforms.distanceEnd.value = heightFogConfig.distanceEnd;\r\n    heightFogPass.uniforms.distanceExponent.value = heightFogConfig.distanceExponent;\r\n    heightFogPass.uniforms.distanceControlPoint1.value.copy(heightFogConfig.distanceControlPoint1);\r\n    heightFogPass.uniforms.distanceControlPoint2.value.copy(heightFogConfig.distanceControlPoint2);\r\n    heightFogPass.uniforms.surfaceLevel.value = heightFogConfig.surfaceLevel;\r\n    heightFogPass.uniforms.heightFalloff.value = heightFogConfig.heightFalloff;\r\n    heightFogPass.uniforms.heightExponent.value = heightFogConfig.heightExponent;\r\n    heightFogPass.uniforms.maxOpacity.value = heightFogConfig.maxOpacity;\r\n\r\n    heightFogPass.material.depthTest = false;\r\n    heightFogPass.material.depthWrite = false;\r\n    heightFogPass.material.transparent = false;\r\n    heightFogPass.material.blending = THREE.NoBlending;\r\n    heightFogPass.material.toneMapped = true;\r\n    heightFogPass.material.needsUpdate = true;\r\n    heightFogPass.renderToScreen = true;\r\n    composer.addPass(heightFogPass);\r\n\r\n\r\n  }\r\n  // ウィンドウリサイズ対応\r\n  window.addEventListener('resize', onWindowResize);\r\n}\r\n\r\nfunction onWindowResize() {\r\n  const width = window.innerWidth;\r\n  const height = window.innerHeight;\r\n  camera.aspect = width / height;\r\n  camera.updateProjectionMatrix();\r\n  renderer.setSize(width, height);\r\n  if (composer) {\r\n    composer.setSize(width, height);\r\n  }\r\n  if (heightFogRenderTarget) {\r\n    heightFogRenderTarget.setSize(width, height);\r\n  }\r\n}\r\n\r\n// 一時的に従来方式に戻す - instancedMeshを単一で使用\r\nlet instancedMeshHigh = null; // 高ポリゴン用\r\nlet instancedMeshLow = null;  // 低ポリゴン用\r\nconst instancingMaterials = new Set();\r\n\r\nconst TRIPLE_BUFFER_SIZE = 3;\r\nconst HIDDEN_POSITION = 1e6;\r\nconst IDENTITY_QUATERNION = [0, 0, 0, 1];\r\n// LOD距離閾値（平方距離）: 近距離はハイポリ、中距離はLOD+アニメ、遠距離はLOD静止\r\nconst LOD_NEAR_DISTANCE_SQ = 4; // 2m以内はメインモデル\r\nconst LOD_MID_DISTANCE_SQ = 25; // 5m以内はLODモデル＋アニメ\r\nconst STREAM_USAGE = THREE.StreamDrawUsage ?? THREE.DynamicDrawUsage;\r\nconst tailAnimation = {\r\n  uniforms: {\r\n    uTailTime: { value: 0 },            // 時間（波形生成用）\r\n    uTailAmplitude: { value: 0.14 },    // 振幅（全身の揺れ幅）\r\n    uTailFrequency: { value: 10.0 },    // 周波数（くねり速度）\r\n    uTailPhaseStride: { value: 5.0 },   // 体の長さ方向の位相差（波長に相当）\r\n    uTailTurnStrength: { value: 0.1 },  // 旋回時の強度\r\n    uTailSpeedScale: { value: 1 },      // 速度による影響度\r\n    uTailRight: { value: new THREE.Vector3(1, 0, 0) },     // 尾アニメの右方向ベクトル\r\n    uTailForward: { value: new THREE.Vector3(0, 0, 1) },   // 尾アニメの進行方向ベクトル\r\n    uTailUp: { value: new THREE.Vector3(0, 1, 0) },        // 尾アニメの上方向ベクトル\r\n    uTailEnable: { value: 1 }           // アニメーション有効/無効\r\n  },\r\n};\r\n\r\n// 海中シーンの色味をまとめて管理する定数群\r\nconst OCEAN_COLORS = {\r\n  SKY_HIGHLIGHT: '#4fbaff',\r\n  SKY_BLUE: '#15a1ff',\r\n  DEEP_BLUE: '#002968',\r\n  SEAFLOOR: '#777465',\r\n  FOG: '#153a6c',\r\n  AMBIENT_LIGHT: '#2c9aff',\r\n  SUN_LIGHT: '#5389b7',\r\n  SIDE_LIGHT1: '#6ba3d0',\r\n  SIDE_LIGHT2: '#2d5f7a',\r\n  BOTTOM_LIGHT: '#0f2635',\r\n};\r\n\r\n// '#rrggbb' 形式の色を three.js の整数表現に変換\r\nconst toHex = (colorStr) => parseInt(colorStr.replace('#', '0x'), 16);\r\n\r\n// 距離と深度で濃さが変わる海中フォグ設定\r\nconst heightFogConfig = {\r\n  color: new THREE.Color(OCEAN_COLORS.DEEP_BLUE),       // 遠景で溶け込む深海色\r\n  distanceStart: 4.0,                      // カメラからこの距離まではフォグゼロ\r\n  distanceEnd: 60.0,                       // この距離でフォグが最大になる\r\n  distanceExponent: 0.4,                   // 距離カーブの滑らかさ\r\n  distanceControlPoint1: new THREE.Vector2(0.2, 0.8),\r\n  distanceControlPoint2: new THREE.Vector2(0.75, 0.95),\r\n  surfaceLevel: 100.0,                       // 水面の高さ。ここから下がるほど暗くなる\r\n  heightFalloff: 0.01,                       // 深度による減衰率\r\n  heightExponent: 1,                          // 深度カーブの強さ\r\n  maxOpacity: 1.2,                            // 最大フォグ率\r\n};\r\n\r\n// カメラ位置からの距離と高さでブレンドするフォグシェーダー\r\nconst HeightFogShader = {\r\n  uniforms: {\r\n    tDiffuse: { value: null },\r\n    tDepth: { value: null },\r\n    cameraNear: { value: 0.1 },\r\n    cameraFar: { value: 1000 },\r\n    projectionMatrixInverse: { value: new THREE.Matrix4() },\r\n    cameraMatrixWorld: { value: new THREE.Matrix4() },\r\n    fogColor: { value: heightFogConfig.color.clone() },\r\n    distanceStart: { value: heightFogConfig.distanceStart },\r\n    distanceEnd: { value: heightFogConfig.distanceEnd },\r\n    distanceExponent: { value: heightFogConfig.distanceExponent },\r\n    distanceControlPoint1: { value: heightFogConfig.distanceControlPoint1.clone() },\r\n    distanceControlPoint2: { value: heightFogConfig.distanceControlPoint2.clone() },\r\n    surfaceLevel: { value: heightFogConfig.surfaceLevel },\r\n    heightFalloff: { value: heightFogConfig.heightFalloff },\r\n    heightExponent: { value: heightFogConfig.heightExponent },\r\n    maxOpacity: { value: heightFogConfig.maxOpacity },\r\n  },\r\n  vertexShader: /* glsl */`\r\n    varying vec2 vUv;\r\n    void main() {\r\n      vUv = uv;\r\n      gl_Position = vec4(position.xy, 0.0, 1.0);\r\n    }\r\n  `,\r\n  fragmentShader: /* glsl */`\r\n    precision highp float;\r\n    varying vec2 vUv;\r\n\r\n    uniform sampler2D tDiffuse;\r\n    uniform sampler2D tDepth;\r\n    uniform float cameraNear;\r\n    uniform float cameraFar;\r\n    uniform vec3 fogColor;\r\n    uniform float distanceStart;\r\n    uniform float distanceEnd;\r\n    uniform float distanceExponent;\r\n    uniform vec2 distanceControlPoint1;\r\n    uniform vec2 distanceControlPoint2;\r\n    uniform float surfaceLevel;\r\n    uniform float heightFalloff;\r\n    uniform float heightExponent;\r\n    uniform float maxOpacity;\r\n    uniform mat4 projectionMatrixInverse;\r\n    uniform mat4 cameraMatrixWorld;\r\n\r\n    float cubicBezier1D(float t, float p0, float p1, float p2, float p3) {\r\n      float u = 1.0 - t;\r\n      float uu = u * u;\r\n      float tt = t * t;\r\n      return u * uu * p0 + 3.0 * uu * t * p1 + 3.0 * u * tt * p2 + tt * t * p3;\r\n    }\r\n\r\n    float cubicBezierDerivative1D(float t, float p0, float p1, float p2, float p3) {\r\n      float u = 1.0 - t;\r\n      return 3.0 * u * u * (p1 - p0)\r\n           + 6.0 * u * t * (p2 - p1)\r\n           + 3.0 * t * t * (p3 - p2);\r\n    }\r\n\r\n    float cubicBezierInverse(float x, vec2 c1, vec2 c2) {\r\n      float t = clamp(x, 0.0, 1.0);\r\n      for (int i = 0; i < 5; i++) {\r\n        float current = cubicBezier1D(t, 0.0, c1.x, c2.x, 1.0) - x;\r\n        float slope = cubicBezierDerivative1D(t, 0.0, c1.x, c2.x, 1.0);\r\n        if (abs(slope) < 1e-5) {\r\n          break;\r\n        }\r\n        t -= current / slope;\r\n        t = clamp(t, 0.0, 1.0);\r\n      }\r\n      return t;\r\n    }\r\n\r\n    float sampleDistanceCurve(float x, vec2 c1, vec2 c2) {\r\n      float t = cubicBezierInverse(x, c1, c2);\r\n      return cubicBezier1D(t, 0.0, c1.y, c2.y, 1.0);\r\n    }\r\n\r\n    void main() {\r\n      vec4 baseColor = texture2D(tDiffuse, vUv);\r\n      float depth = texture2D(tDepth, vUv).x;\r\n\r\n      if (depth >= 1.0) {\r\n        gl_FragColor = baseColor;\r\n        return;\r\n      }\r\n\r\n      vec2 ndc = vUv * 2.0 - 1.0;\r\n      float ndcZ = depth * 2.0 - 1.0;\r\n      vec4 clipPos = vec4(ndc, ndcZ, 1.0);\r\n      vec4 viewPos = projectionMatrixInverse * clipPos;\r\n      viewPos /= max(viewPos.w, 1e-5);\r\n      vec4 worldPos = cameraMatrixWorld * viewPos;\r\n\r\n      float viewDistance = length(viewPos.xyz);\r\n      float distanceFogNorm = clamp(\r\n        (viewDistance - distanceStart) / max(distanceEnd - distanceStart, 1e-5),\r\n        0.0,\r\n        1.0\r\n      );\r\n      float distanceFog = sampleDistanceCurve(distanceFogNorm, distanceControlPoint1, distanceControlPoint2);\r\n      distanceFog = pow(distanceFog, distanceExponent);\r\n\r\n      float depthBelowSurface = max(surfaceLevel - worldPos.y, 0.0);\r\n      float heightFactor = 1.0 - exp(-depthBelowSurface * heightFalloff);\r\n      heightFactor = clamp(pow(heightFactor, heightExponent), 0.0, 1.0);\r\n\r\n      float fogFactor = clamp(distanceFog * heightFactor, 0.0, 1.0);\r\n      fogFactor = mix(0.0, maxOpacity, fogFactor);\r\n\r\n      vec3 fogged = mix(baseColor.rgb, fogColor, fogFactor);\r\n      gl_FragColor = vec4(fogged, baseColor.a);\r\n      #include <tonemapping_fragment>\r\n      #include <colorspace_fragment>\r\n    }\r\n  `,\r\n};\r\n\r\nfunction createOceanSphere() {\r\n  if (!scene) return null;\r\n\r\n  // 上層→深層のグラデーションで海中の空気感を演出\r\n  const canvas = document.createElement('canvas');\r\n  const context = canvas.getContext('2d');\r\n  canvas.width = 512;\r\n  canvas.height = 512;\r\n\r\n  const gradient = context.createLinearGradient(0, 0, 0, canvas.height);\r\n  gradient.addColorStop(0, OCEAN_COLORS.SKY_HIGHLIGHT);\r\n  gradient.addColorStop(0.2, OCEAN_COLORS.SKY_BLUE);\r\n  gradient.addColorStop(0.6, OCEAN_COLORS.DEEP_BLUE);\r\n  gradient.addColorStop(1, OCEAN_COLORS.DEEP_BLUE);\r\n\r\n  context.fillStyle = gradient;\r\n  context.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n  const texture = new THREE.CanvasTexture(canvas);\r\n  texture.colorSpace = THREE.SRGBColorSpace;\r\n  texture.generateMipmaps = false;\r\n  texture.minFilter = THREE.LinearFilter;\r\n  texture.magFilter = THREE.LinearFilter;\r\n\r\n  const sphereGeo = new THREE.SphereGeometry(300, 32, 32);\r\n  const sphereMat = new THREE.MeshBasicMaterial({\r\n    map: texture,\r\n    side: THREE.BackSide,\r\n    fog: false,\r\n  });\r\n\r\n  const oceanSphere = new THREE.Mesh(sphereGeo, sphereMat);\r\n  scene.add(oceanSphere);\r\n  return oceanSphere;\r\n}\r\n\r\nfunction createFadeOutGroundMaterial() {\r\n  const textureLoader = new THREE.TextureLoader();\r\n  const alphaMap = textureLoader.load('./models/groundAlfa.png');\r\n\r\n  alphaMap.minFilter = THREE.LinearFilter;\r\n  alphaMap.magFilter = THREE.LinearFilter;\r\n  alphaMap.wrapS = THREE.ClampToEdgeWrapping;\r\n  alphaMap.wrapT = THREE.ClampToEdgeWrapping;\r\n\r\n  const material = new THREE.MeshStandardMaterial({\r\n    color: toHex(OCEAN_COLORS.SEAFLOOR),\r\n    transparent: true,\r\n    alphaMap,\r\n    depthWrite: true,\r\n  });\r\n\r\n  material.roughness = 0.85;\r\n  material.metalness = 0.0;\r\n  return material;\r\n}\r\n\r\nfunction updateInstancingMaterialUniforms(time) {\r\n  tailAnimation.uniforms.uTailTime.value = time;\r\n}\r\n\r\nlet bufferCursor = 0;\r\nlet bufferSetHigh = null;\r\nlet bufferSetLow = null;\r\nlet cachedHeapBuffer = null;\r\nlet cachedPositionsPtr = 0;\r\nlet cachedOrientationsPtr = 0;\r\nlet cachedPositionsView = null;\r\nlet cachedOrientationsView = null;\r\nlet cachedPositionsCount = 0;\r\nlet cachedOrientationsCount = 0;\r\nlet shaderTime = 0;\r\nlet cachedVelocitiesPtr = 0;\r\nlet cachedVelocitiesView = null;\r\nlet cachedVelocitiesCount = 0;\r\nlet tailPhaseSeeds = null;\r\nlet previousVelocities = null;\r\nlet cachedSpeciesIdsView = null;\r\nlet cachedSpeciesIdsPtr = 0;\r\nlet cachedSpeciesIdsCount = 0;\r\nlet cachedSpeciesIdsBuffer = null;\r\nfunction createAttributeSet(count, itemSize) {\r\n  const length = count * itemSize;\r\n  const attributes = [];\r\n  for (let i = 0; i < TRIPLE_BUFFER_SIZE; i++) {\r\n    const attr = new THREE.InstancedBufferAttribute(new Float32Array(length), itemSize);\r\n    attr.setUsage(STREAM_USAGE);\r\n    attributes.push(attr);\r\n  }\r\n  return attributes;\r\n}\r\n\r\nfunction createBufferSet(count) {\r\n  // トリプルバッファ用の属性セットを作成（位置・姿勢・尾アニメ制御用）\r\n  return {\r\n    pos: createAttributeSet(count, 3),\r\n    quat: createAttributeSet(count, 4),\r\n    tailPhase: createAttributeSet(count, 1),\r\n    tailSpeed: createAttributeSet(count, 1),\r\n    tailTurn: createAttributeSet(count, 1),\r\n    tailDrive: createAttributeSet(count, 1), // 尾アニメの有効/無効制御（遠距離で0にして負荷削減）\r\n  };\r\n}\r\n\r\nfunction resetBufferSetToHidden(bufferSet) {\r\n  for (const attr of bufferSet.pos) {\r\n    const array = attr.array;\r\n    for (let i = 0; i < array.length; i += 3) {\r\n      array[i] = HIDDEN_POSITION;\r\n      array[i + 1] = HIDDEN_POSITION;\r\n      array[i + 2] = HIDDEN_POSITION;\r\n    }\r\n  }\r\n  for (const attr of bufferSet.quat) {\r\n    const array = attr.array;\r\n    for (let i = 0; i < array.length; i += 4) {\r\n      array[i] = 0;\r\n      array[i + 1] = 0;\r\n      array[i + 2] = 0;\r\n      array[i + 3] = 1;\r\n    }\r\n  }\r\n  for (const attr of bufferSet.tailPhase) {\r\n    attr.array.fill(0);\r\n  }\r\n  for (const attr of bufferSet.tailSpeed) {\r\n    attr.array.fill(0);\r\n  }\r\n  for (const attr of bufferSet.tailTurn) {\r\n    attr.array.fill(0);\r\n  }\r\n  for (const attr of bufferSet.tailDrive) {\r\n    attr.array.fill(0);\r\n  }\r\n}\r\n\r\nfunction applyBufferSet(mesh, bufferSet, index) {\r\n  // トリプルバッファの指定インデックスから属性をジオメトリに設定\r\n  mesh.geometry.setAttribute('instancePos', bufferSet.pos[index]);\r\n  mesh.geometry.setAttribute('instanceQuat', bufferSet.quat[index]);\r\n  mesh.geometry.setAttribute('instanceTailPhase', bufferSet.tailPhase[index]);\r\n  mesh.geometry.setAttribute('instanceTailSpeed', bufferSet.tailSpeed[index]);\r\n  mesh.geometry.setAttribute('instanceTailTurn', bufferSet.tailTurn[index]);\r\n  mesh.geometry.setAttribute('instanceTailDrive', bufferSet.tailDrive[index]);\r\n}\r\n\r\nfunction patchQuaternionInstancing(material) {\r\n  if (material.userData?.quaternionInstancingPatched) return;\r\n\r\n  material.onBeforeCompile = (shader) => {\r\n    Object.entries(tailAnimation.uniforms).forEach(([key, uniform]) => {\r\n      shader.uniforms[key] = uniform;\r\n    });\r\n\r\n    shader.vertexShader = shader.vertexShader\r\n      .replace(\r\n        '#include <common>',\r\n        `#include <common>\\nattribute vec3 instancePos;\\nattribute vec4 instanceQuat;\\nattribute float aBodyCoord;\\nattribute float instanceTailPhase;\\nattribute float instanceTailSpeed;\\nattribute float instanceTailTurn;\\nattribute float instanceTailDrive;\\nuniform float uTailTime;\\nuniform float uTailAmplitude;\\nuniform float uTailFrequency;\\nuniform float uTailPhaseStride;\\nuniform float uTailTurnStrength;\\nuniform float uTailSpeedScale;\\nuniform vec3 uTailRight;\\nuniform vec3 uTailForward;\\nuniform vec3 uTailUp;\\nuniform float uTailEnable;\\nvec3 quatTransform(vec3 v, vec4 q) {\\n  vec3 t = 2.0 * cross(q.xyz, v);\\n  return v + q.w * t + cross(q.xyz, t);\\n}`\r\n      )\r\n      .replace('#include <instancing_vertex>', `#ifdef USE_INSTANCING\\n#endif`)\r\n      .replace(\r\n        '#include <begin_vertex>',\r\n        `#include <begin_vertex>\\nif (uTailEnable > 0.5) {\\n  float driveRaw = instanceTailDrive;\\n  if (driveRaw > 0.01) {\\n    float drive = clamp(driveRaw, 0.0, 1.0);\\n    vec3 originalPos = transformed;\\n    vec3 right = normalize(uTailRight);\\n    vec3 forward = normalize(uTailForward);\\n    vec3 up = normalize(uTailUp);\\n\\n    float localX = dot(originalPos, right);\\n    float localY = dot(originalPos, forward);\\n    float localZ = dot(originalPos, up);\\n\\n    float bodyCoord = clamp(aBodyCoord, 0.0, 1.0);\\n    float tailWeight = smoothstep(0.0, 0.35, bodyCoord);\\n    float speedFactor = clamp(instanceTailSpeed * uTailSpeedScale, 0.0, 2.0);\\n\\n    float phase = instanceTailPhase + uTailTime * uTailFrequency;\\n    float wavePhase = phase + bodyCoord * uTailPhaseStride;\\n    float wag = sin(wavePhase) * uTailAmplitude * drive;\\n    float turnOffset = instanceTailTurn * uTailTurnStrength * drive;\\n    float motion = wag * (0.4 + 0.6 * speedFactor) + turnOffset;\\n\\n    float tipDamping = 1.0 - smoothstep(0.7, 1.0, bodyCoord) * 0.3;\\n    float bendStrength = mix(0.02, 1.0, tailWeight) * tipDamping;\\n\\n    float bendAngle = motion * bendStrength;\\n    float s = sin(bendAngle);\\n    float c = cos(bendAngle);\\n    float rotX = localX * c - localY * s;\\n    float rotY = localX * s + localY * c;\\n\\n    float sway = motion * 0.4 * tipDamping;\\n    rotX += sway * (0.05 + 0.95 * bodyCoord);\\n\\n    vec3 rotated = right * rotX + forward * rotY + up * localZ;\\n    transformed = rotated;\\n  }\\n}\\ntransformed = quatTransform(transformed, instanceQuat) + instancePos;`\r\n      )\r\n      .replace(\r\n        '#include <beginnormal_vertex>',\r\n        '#include <beginnormal_vertex>\\nobjectNormal = quatTransform(objectNormal, instanceQuat);'\r\n      )\r\n      .replace(\r\n        '#include <project_vertex>',\r\n        `#include <project_vertex>\\n#ifdef DEPTH_PACKING\\nif (uTailEnable > 0.5) {\\n  float driveRaw = instanceTailDrive;\\n  if (driveRaw > 0.01) {\\n    float drive = clamp(driveRaw, 0.0, 1.0);\\n    vec3 viewPos = mvPosition.xyz;\\n    mat3 normalMatrix3 = mat3(normalMatrix);\\n    vec3 right = normalize(normalMatrix3 * uTailRight);\\n    vec3 forward = normalize(normalMatrix3 * uTailForward);\\n    vec3 up = normalize(normalMatrix3 * uTailUp);\\n\\n    float localX = dot(viewPos, right);\\n    float localY = dot(viewPos, forward);\\n    float localZ = dot(viewPos, up);\\n\\n    float bodyCoord = clamp(aBodyCoord, 0.0, 1.0);\\n    float tailWeight = smoothstep(0.0, 0.35, bodyCoord);\\n    float speedFactor = clamp(instanceTailSpeed * uTailSpeedScale, 0.0, 2.0);\\n\\n    float phase = instanceTailPhase + uTailTime * uTailFrequency;\\n    float wavePhase = phase + bodyCoord * uTailPhaseStride;\\n    float wag = sin(wavePhase) * uTailAmplitude * drive;\\n    float turnOffset = instanceTailTurn * uTailTurnStrength * drive;\\n    float motion = wag * (0.4 + 0.6 * speedFactor) + turnOffset;\\n\\n    float tipDamping = 1.0 - smoothstep(0.7, 1.0, bodyCoord) * 0.3;\\n    float bendStrength = mix(0.02, 1.0, tailWeight) * tipDamping;\\n\\n    float bendAngle = motion * bendStrength;\\n    float s = sin(bendAngle);\\n    float c = cos(bendAngle);\\n    float rotX = localX * c - localY * s;\\n    float rotY = localX * s + localY * c;\\n\\n    float sway = motion * 0.4 * tipDamping;\\n    rotX += sway * (0.05 + 0.95 * bodyCoord);\\n\\n    vec3 rotated = right * rotX + forward * rotY + up * localZ;\\n    mvPosition.xyz = rotated;\\n    gl_Position = projectionMatrix * mvPosition;\\n  }\\n}\\n#endif`\r\n      );\r\n\r\n    material.userData = {\r\n      ...(material.userData || {}),\r\n      quaternionInstancingPatched: true,\r\n    };\r\n  };\r\n\r\n  material.needsUpdate = true;\r\n  instancingMaterials.add(material);\r\n}\r\n\r\n// シャドウレンダリングでもインスタンス属性を適用する深度マテリアル\r\nfunction createInstancedDepthMaterial(sourceMaterial) {\r\n  const depthMaterial = new THREE.MeshDepthMaterial({\r\n    depthPacking: THREE.RGBADepthPacking,\r\n    alphaTest: sourceMaterial.alphaTest ?? 0,\r\n  });\r\n  depthMaterial.map = sourceMaterial.map ?? null;\r\n  depthMaterial.alphaMap = sourceMaterial.alphaMap ?? null;\r\n  depthMaterial.transparent = sourceMaterial.transparent ?? false;\r\n  patchQuaternionInstancing(depthMaterial);\r\n  return depthMaterial;\r\n}\r\n\r\n// ポイントライト用の距離マテリアルもインスタンス挙動に合わせる\r\nfunction createInstancedDistanceMaterial(sourceMaterial) {\r\n  const distanceMaterial = new THREE.MeshDistanceMaterial({\r\n    alphaTest: sourceMaterial.alphaTest ?? 0,\r\n  });\r\n  distanceMaterial.map = sourceMaterial.map ?? null;\r\n  distanceMaterial.alphaMap = sourceMaterial.alphaMap ?? null;\r\n  distanceMaterial.transparent = sourceMaterial.transparent ?? false;\r\n  patchQuaternionInstancing(distanceMaterial);\r\n  return distanceMaterial;\r\n}\r\n\r\nfunction stepSimulationAndUpdateState(deltaTime) {\r\n  const statePtr = stepSimulation(deltaTime);\r\n  if (!statePtr) {\r\n    return latestBoidCountFromWasm;\r\n  }\r\n\r\n  latestStatePtr = statePtr;\r\n\r\n  const heapU8Buffer = wasmModule.HEAPU8.buffer;\r\n  if (\r\n    !latestStateHeaderView ||\r\n    latestStateHeaderPtr !== statePtr ||\r\n    latestStateHeaderView.buffer !== heapU8Buffer\r\n  ) {\r\n    latestStateHeaderView = new DataView(heapU8Buffer, statePtr, 16);\r\n    latestStateHeaderPtr = statePtr;\r\n  }\r\n\r\n  latestPositionsPtr = latestStateHeaderView.getUint32(0, true);\r\n  latestVelocitiesPtr = latestStateHeaderView.getUint32(4, true);\r\n  latestOrientationsPtr = latestStateHeaderView.getUint32(8, true);\r\n  latestBoidCountFromWasm = latestStateHeaderView.getInt32(12, true);\r\n\r\n  return latestBoidCountFromWasm;\r\n}\r\n\r\nfunction getWasmViews(count) {\r\n  const heapBuffer = wasmModule.HEAPF32.buffer;\r\n\r\n  if (cachedHeapBuffer !== heapBuffer) {\r\n    cachedHeapBuffer = heapBuffer;\r\n    cachedPositionsPtr = 0;\r\n    cachedOrientationsPtr = 0;\r\n    cachedVelocitiesPtr = 0;\r\n    cachedPositionsView = null;\r\n    cachedOrientationsView = null;\r\n    cachedVelocitiesView = null;\r\n    cachedPositionsCount = 0;\r\n    cachedOrientationsCount = 0;\r\n    cachedVelocitiesCount = 0;\r\n  }\r\n\r\n  const posPointer = latestPositionsPtr;\r\n  const oriPointer = latestOrientationsPtr;\r\n  const velPointer = latestVelocitiesPtr;\r\n\r\n  if (!posPointer || !oriPointer || !velPointer || count <= 0) {\r\n    return {\r\n      positions: cachedPositionsView ?? new Float32Array(0),\r\n      orientations: cachedOrientationsView ?? new Float32Array(0),\r\n      velocities: cachedVelocitiesView ?? new Float32Array(0),\r\n    };\r\n  }\r\n\r\n  if (\r\n    cachedPositionsView === null ||\r\n    cachedPositionsCount !== count ||\r\n    cachedPositionsPtr !== posPointer\r\n  ) {\r\n    cachedPositionsPtr = posPointer;\r\n    cachedPositionsView = new Float32Array(heapBuffer, cachedPositionsPtr, count * 3);\r\n    cachedPositionsCount = count;\r\n  }\r\n\r\n  if (\r\n    cachedOrientationsView === null ||\r\n    cachedOrientationsCount !== count ||\r\n    cachedOrientationsPtr !== oriPointer\r\n  ) {\r\n    cachedOrientationsPtr = oriPointer;\r\n    cachedOrientationsView = new Float32Array(heapBuffer, cachedOrientationsPtr, count * 4);\r\n    cachedOrientationsCount = count;\r\n  }\r\n\r\n  if (\r\n    cachedVelocitiesView === null ||\r\n    cachedVelocitiesCount !== count ||\r\n    cachedVelocitiesPtr !== velPointer\r\n  ) {\r\n    cachedVelocitiesPtr = velPointer;\r\n    cachedVelocitiesView = new Float32Array(heapBuffer, cachedVelocitiesPtr, count * 3);\r\n    cachedVelocitiesCount = count;\r\n  }\r\n\r\n  return {\r\n    positions: cachedPositionsView,\r\n    orientations: cachedOrientationsView,\r\n    velocities: cachedVelocitiesView,\r\n  };\r\n}\r\n\r\nfunction getSpeciesIdView(count) {\r\n  const ptr = speciesIdsPtr ? speciesIdsPtr() : 0;\r\n  if (!ptr || count <= 0) {\r\n    return cachedSpeciesIdsView ?? new Int32Array(0);\r\n  }\r\n\r\n  const heapBuffer32 = wasmModule.HEAP32.buffer;\r\n  if (\r\n    cachedSpeciesIdsView === null ||\r\n    cachedSpeciesIdsPtr !== ptr ||\r\n    cachedSpeciesIdsCount !== count ||\r\n    cachedSpeciesIdsBuffer !== heapBuffer32\r\n  ) {\r\n    cachedSpeciesIdsPtr = ptr;\r\n    cachedSpeciesIdsCount = count;\r\n    cachedSpeciesIdsBuffer = heapBuffer32;\r\n    cachedSpeciesIdsView = new Int32Array(heapBuffer32, ptr, count);\r\n  }\r\n\r\n  return cachedSpeciesIdsView;\r\n}\r\n\r\nfunction buildSpeciesRanges(list = []) {\r\n  const ranges = [];\r\n  let offset = 0;\r\n  for (const item of list) {\r\n    if (!item) continue;\r\n    const count = Math.max(0, Number(item.count) || 0);\r\n    ranges.push({\r\n      name: item.species || '',\r\n      start: offset,\r\n      count,\r\n    });\r\n    offset += count;\r\n  }\r\n  return ranges;\r\n}\r\n\r\nfunction captureFlockState() {\r\n  if (!wasmModule) return null;\r\n  const currentCount = stepSimulationAndUpdateState(0);\r\n  if (!currentCount || currentCount <= 0) {\r\n    return { count: 0 };\r\n  }\r\n\r\n  const { positions, velocities, orientations } = getWasmViews(currentCount);\r\n  const speciesIdsView = getSpeciesIdView(currentCount);\r\n\r\n  return {\r\n    count: currentCount,\r\n    positions: positions ? new Float32Array(positions) : null,\r\n    velocities: velocities ? new Float32Array(velocities) : null,\r\n    orientations: orientations ? new Float32Array(orientations) : null,\r\n    speciesIds: speciesIdsView ? new Int32Array(speciesIdsView) : null,\r\n  };\r\n}\r\n\r\nfunction restoreFlockState(previousState, oldSettings, newSettings) {\r\n  if (!previousState || previousState.count <= 0) {\r\n    return;\r\n  }\r\n\r\n  const currentCount = stepSimulationAndUpdateState(0);\r\n  if (!currentCount || currentCount <= 0) {\r\n    return;\r\n  }\r\n\r\n  const { positions, velocities, orientations } = getWasmViews(currentCount);\r\n  if (!positions || !velocities || !orientations) {\r\n    return;\r\n  }\r\n\r\n  const prevPositions = previousState.positions;\r\n  const prevVelocities = previousState.velocities;\r\n  const prevOrientations = previousState.orientations;\r\n\r\n  const oldRanges = buildSpeciesRanges(oldSettings);\r\n  const newRanges = buildSpeciesRanges(newSettings);\r\n  const oldRangeMap = new Map(oldRanges.map((info) => [info.name, info]));\r\n\r\n  let restored = 0;\r\n\r\n  for (const newInfo of newRanges) {\r\n    if (!newInfo.count) continue;\r\n    const oldInfo = oldRangeMap.get(newInfo.name);\r\n    if (!oldInfo || !oldInfo.count) continue;\r\n\r\n    const transferable = Math.min(oldInfo.count, newInfo.count);\r\n    for (let i = 0; i < transferable; i += 1) {\r\n      const srcIndex = oldInfo.start + i;\r\n      const dstIndex = newInfo.start + i;\r\n      if (srcIndex >= previousState.count || dstIndex >= currentCount) {\r\n        break;\r\n      }\r\n\r\n      if (prevPositions) {\r\n        const srcPosBase = srcIndex * 3;\r\n        const dstPosBase = dstIndex * 3;\r\n        positions[dstPosBase] = prevPositions[srcPosBase];\r\n        positions[dstPosBase + 1] = prevPositions[srcPosBase + 1];\r\n        positions[dstPosBase + 2] = prevPositions[srcPosBase + 2];\r\n      }\r\n\r\n      if (prevVelocities) {\r\n        const srcVelBase = srcIndex * 3;\r\n        const dstVelBase = dstIndex * 3;\r\n        velocities[dstVelBase] = prevVelocities[srcVelBase];\r\n        velocities[dstVelBase + 1] = prevVelocities[srcVelBase + 1];\r\n        velocities[dstVelBase + 2] = prevVelocities[srcVelBase + 2];\r\n      }\r\n\r\n      if (prevOrientations) {\r\n        const srcOriBase = srcIndex * 4;\r\n        const dstOriBase = dstIndex * 4;\r\n        orientations[dstOriBase] = prevOrientations[srcOriBase];\r\n        orientations[dstOriBase + 1] = prevOrientations[srcOriBase + 1];\r\n        orientations[dstOriBase + 2] = prevOrientations[srcOriBase + 2];\r\n        orientations[dstOriBase + 3] = prevOrientations[srcOriBase + 3];\r\n      }\r\n      restored += 1;\r\n    }\r\n  }\r\n\r\n  if (restored > 0 && typeof syncReadToWriteBuffers === 'function') {\r\n    syncReadToWriteBuffers();\r\n  }\r\n}\r\n\r\n// LOD用ジオメトリ・マテリアルを使い回す\r\nconst boidGeometryHigh = new THREE.SphereGeometry(1, 8, 8);\r\nconst boidGeometryLow = new THREE.SphereGeometry(1, 3, 2);\r\nboidGeometryHigh.scale(0.5, 0.5, 2.0); // 少し小さくする\r\nboidGeometryLow.scale(0.5, 0.5, 2.0); // 少し小さくする\r\nlet boidModel = null; // 読み込んだモデルを保持\r\nlet boidModelLod = null; // 読み込んだモデルを保持\r\nlet originalMaterial = null; // 元のマテリアルを保持\r\nlet originalMaterialLod = null; // 元のLODマテリアルを保持\r\nlet predatorModel = null;\r\nlet predatorMaterial = null;\r\nlet predatorMeshes = [];\r\nlet predatorMeshCountCache = -1;\r\n\r\n// 起動時の正しいテクスチャマテリアルを保持\r\nlet originalHighMat = null;\r\nlet originalLowMat = null;\r\n\r\n// 前回のshowUnitColorsの状態を保持（OFF→ONの検知用）\r\nlet lastShowUnitColors = false;\r\n\r\nfunction getPredatorCount() {\r\n  return settings.reduce((sum, s) => sum + ((s.isPredator && s.count) ? s.count : 0), 0);\r\n}\r\n\r\nfunction ensurePredatorMeshes(count) {\r\n  if (!predatorModel) return false;\r\n\r\n  while (predatorMeshes.length > count) {\r\n    const mesh = predatorMeshes.pop();\r\n    if (mesh) {\r\n      scene.remove(mesh);\r\n    }\r\n  }\r\n\r\n  while (predatorMeshes.length < count) {\r\n    const clone = predatorModel.clone(true);\r\n    clone.traverse((child) => {\r\n      if (child.isMesh) {\r\n        child.castShadow = true;\r\n        child.receiveShadow = true;\r\n      }\r\n    });\r\n    clone.visible = false;\r\n    scene.add(clone);\r\n    predatorMeshes.push(clone);\r\n  }\r\n\r\n  return predatorMeshes.length === count;\r\n}\r\n\r\nfunction createTailPhaseArray(count) {\r\n  const array = new Float32Array(count);\r\n  for (let i = 0; i < count; i++) {\r\n    array[i] = Math.random() * Math.PI * 2;\r\n  }\r\n  return array;\r\n}\r\n\r\nfunction applyTailPhaseSeeds(bufferSet, seeds) {\r\n  if (!bufferSet || !bufferSet.tailPhase) return;\r\n  for (const attr of bufferSet.tailPhase) {\r\n    attr.array.set(seeds);\r\n    attr.needsUpdate = true;\r\n  }\r\n}\r\n\r\nfunction ensureTailRuntimeBuffers(count) {\r\n  if (!previousVelocities || previousVelocities.length !== count * 3) {\r\n    previousVelocities = new Float32Array(count * 3);\r\n  }\r\n}\r\n\r\nfunction ensureBodyCoordAttribute(geometry) {\r\n  if (geometry.getAttribute('aBodyCoord')) return;\r\n  const position = geometry.getAttribute('position');\r\n  if (!position) return;\r\n\r\n  const count = position.count;\r\n  const array = position.array;\r\n  let minX = Infinity, minY = Infinity, minZ = Infinity;\r\n  let maxX = -Infinity, maxY = -Infinity, maxZ = -Infinity;\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    const ix = i * 3;\r\n    const x = array[ix];\r\n    const y = array[ix + 1];\r\n    const z = array[ix + 2];\r\n    if (x < minX) minX = x;\r\n    if (x > maxX) maxX = x;\r\n    if (y < minY) minY = y;\r\n    if (y > maxY) maxY = y;\r\n    if (z < minZ) minZ = z;\r\n    if (z > maxZ) maxZ = z;\r\n  }\r\n\r\n  const rangeX = maxX - minX;\r\n  const rangeY = maxY - minY;\r\n  const rangeZ = maxZ - minZ;\r\n  let axis = 'z';\r\n  let min = minZ;\r\n  let range = rangeZ;\r\n\r\n  if (rangeX > rangeY && rangeX > rangeZ) {\r\n    axis = 'x';\r\n    min = minX;\r\n    range = rangeX;\r\n  } else if (rangeY > rangeZ) {\r\n    axis = 'y';\r\n    min = minY;\r\n    range = rangeY;\r\n  }\r\n\r\n  const bodyCoord = new Float32Array(count);\r\n  const denom = range > 0 ? range : 1;\r\n  for (let i = 0; i < count; i++) {\r\n    const ix = i * 3;\r\n    const value = axis === 'x' ? array[ix] : axis === 'y' ? array[ix + 1] : array[ix + 2];\r\n    bodyCoord[i] = (value - min) / denom;\r\n  }\r\n\r\n  geometry.setAttribute('aBodyCoord', new THREE.BufferAttribute(bodyCoord, 1));\r\n}\r\n\r\nfunction getTotalBoidCount() {\r\n  return settings.reduce((sum, s) => sum + (s.count || 0), 0);\r\n}\r\n\r\nfunction getSpeciesSignature(specList = settings) {\r\n  if (!Array.isArray(specList)) {\r\n    return '';\r\n  }\r\n  return specList\r\n    .map((s, index) => `${index}:${(s && s.count) || 0}:${s && s.isPredator ? 1 : 0}`)\r\n    .join('|');\r\n}\r\n\r\nfunction createSpeciesParamsVector() {\r\n  const vector = new wasmModule.VectorSpeciesParams();\r\n  settings.forEach((s, index) => {\r\n    const tau = typeof s.tau === 'number' ? s.tau : 0.0;\r\n    vector.push_back({\r\n      species: s.species || `Species ${index + 1}`,\r\n      count: s.count || 0,\r\n      speciesId: index,\r\n      cohesion: s.cohesion || 0.0,\r\n      separation: s.separation || 0.0,\r\n      alignment: s.alignment || 0.0,\r\n      maxSpeed: s.maxSpeed || 1.0,\r\n      minSpeed: s.minSpeed || 0.0,\r\n      maxTurnAngle: s.maxTurnAngle || 0.0,\r\n      separationRange: s.separationRange || 0.0,\r\n      alignmentRange: s.alignmentRange || 0.0,\r\n      cohesionRange: s.cohesionRange || 0.0,\r\n      maxNeighbors: s.maxNeighbors || 0,\r\n      lambda: s.lambda || 0.0,\r\n      horizontalTorque: s.horizontalTorque || 0.0,\r\n      velocityEpsilon: s.velocityEpsilon || 0.0,\r\n      torqueStrength: s.torqueStrength || 0.0,\r\n      tau,\r\n      isPredator: s.isPredator || false,\r\n    });\r\n  });\r\n  return vector;\r\n}\r\n\r\nfunction reinitializeFlockNow() {\r\n  if (!wasmModule) return;\r\n\r\n  const pendingState = pendingStateForReinitialize?.state || null;\r\n  const oldSettingsRef = pendingStateForReinitialize?.oldSettings || previousSettingsSnapshot;\r\n  const newSettingsRef = pendingSettingsSnapshot || snapshotSettingsList(settings);\r\n  const targetSignature = getSpeciesSignature(newSettingsRef);\r\n\r\n  const vector = createSpeciesParamsVector();\r\n  wasmModule.callInitBoids(vector, 1, 6, 0.25);\r\n  build(16, 0);\r\n  const total = getTotalBoidCount();\r\n  cachedTotalBoidCount = total;\r\n  initInstancedBoids(total);\r\n\r\n  if (pendingState?.count > 0) {\r\n    restoreFlockState(pendingState, oldSettingsRef, newSettingsRef);\r\n  }\r\n\r\n  lastSpeciesSignature = targetSignature;\r\n  previousSettingsSnapshot = newSettingsRef;\r\n  pendingStateForReinitialize = null;\r\n  pendingSettingsSnapshot = null;\r\n}\r\n\r\nfunction scheduleFlockReinitialize() {\r\n  if (flockReinitTimer) {\r\n    clearTimeout(flockReinitTimer);\r\n  }\r\n\r\n  if (!pendingStateForReinitialize) {\r\n    pendingStateForReinitialize = {\r\n      state: captureFlockState(),\r\n      oldSettings: previousSettingsSnapshot,\r\n    };\r\n  }\r\n\r\n  pendingSettingsSnapshot = snapshotSettingsList(settings);\r\n\r\n  flockReinitTimer = setTimeout(() => {\r\n    flockReinitTimer = null;\r\n    reinitializeFlockNow();\r\n  }, COUNT_REINIT_DELAY_MS);\r\n}\r\n\r\nfunction initInstancedBoids(count) {\r\n  if (!boidModel.children || !boidModel.children[0]) {\r\n    console.error('Boid model does not have valid children.');\r\n    return;\r\n  }\r\n\r\n  // 既存のメッシュを削除\r\n  if (instancedMeshHigh) {\r\n    scene.remove(instancedMeshHigh);\r\n    instancingMaterials.delete(instancedMeshHigh.material);\r\n  }\r\n  if (instancedMeshLow) {\r\n    scene.remove(instancedMeshLow);\r\n    instancingMaterials.delete(instancedMeshLow.material);\r\n  }\r\n  instancingMaterials.clear();\r\n  // InstancedMeshを作成（最初はvertexColors無効でテクスチャ表示）\r\n  const highMaterial = originalMaterial.clone();\r\n  highMaterial.vertexColors = false; // 最初はテクスチャ表示\r\n\r\n  const lowMaterial = originalMaterialLod.clone();\r\n  lowMaterial.vertexColors = false; // 最初はテクスチャ表示\r\n\r\n  patchQuaternionInstancing(highMaterial);\r\n  patchQuaternionInstancing(lowMaterial);\r\n\r\n  const highGeometry = boidModel.children[0].geometry;\r\n  const lowGeometry = boidModelLod.children[0].geometry;\r\n  ensureBodyCoordAttribute(highGeometry);\r\n  ensureBodyCoordAttribute(lowGeometry);\r\n\r\n  instancedMeshHigh = new THREE.InstancedMesh(\r\n    highGeometry,\r\n    highMaterial,\r\n    count\r\n  );\r\n  instancedMeshHigh.castShadow = true;\r\n  instancedMeshHigh.receiveShadow = true;\r\n  instancedMeshHigh.frustumCulled = false;\r\n  instancedMeshHigh.customDepthMaterial = createInstancedDepthMaterial(highMaterial);\r\n  instancedMeshHigh.customDistanceMaterial = createInstancedDistanceMaterial(highMaterial);\r\n\r\n  instancedMeshLow = new THREE.InstancedMesh(\r\n    lowGeometry,\r\n    lowMaterial,\r\n    count\r\n  );\r\n  instancedMeshLow.castShadow = true;\r\n  instancedMeshLow.receiveShadow = true;\r\n  instancedMeshLow.frustumCulled = false;\r\n  instancedMeshLow.customDepthMaterial = createInstancedDepthMaterial(lowMaterial);\r\n  instancedMeshLow.customDistanceMaterial = createInstancedDistanceMaterial(lowMaterial);\r\n\r\n  // インスタンスカラーを白で初期化\r\n  const whiteColor = new THREE.Color(1, 1, 1);\r\n  for (let i = 0; i < count; i++) {\r\n    instancedMeshHigh.setColorAt(i, whiteColor);\r\n    instancedMeshLow.setColorAt(i, whiteColor);\r\n  }\r\n  instancedMeshHigh.instanceColor.needsUpdate = true;\r\n  instancedMeshLow.instanceColor.needsUpdate = true;\r\n\r\n  // シーンに追加\r\n  scene.add(instancedMeshHigh);\r\n  scene.add(instancedMeshLow);\r\n\r\n  bufferSetHigh = createBufferSet(count);\r\n  bufferSetLow = createBufferSet(count);\r\n  resetBufferSetToHidden(bufferSetHigh);\r\n  resetBufferSetToHidden(bufferSetLow);\r\n  tailPhaseSeeds = createTailPhaseArray(count);\r\n  applyTailPhaseSeeds(bufferSetHigh, tailPhaseSeeds);\r\n  applyTailPhaseSeeds(bufferSetLow, tailPhaseSeeds);\r\n  bufferCursor = 0;\r\n  applyBufferSet(instancedMeshHigh, bufferSetHigh, bufferCursor);\r\n  applyBufferSet(instancedMeshLow, bufferSetLow, bufferCursor);\r\n\r\n  instancedMeshHigh.instanceMatrix.setUsage(THREE.StaticDrawUsage);\r\n  instancedMeshLow.instanceMatrix.setUsage(THREE.StaticDrawUsage);\r\n  instancedMeshHigh.count = count;\r\n  instancedMeshLow.count = count;\r\n\r\n  cachedPositionsView = null;\r\n  cachedOrientationsView = null;\r\n  cachedPositionsCount = 0;\r\n  cachedOrientationsCount = 0;\r\n  cachedPositionsPtr = 0;\r\n  cachedOrientationsPtr = 0;\r\n  cachedVelocitiesView = null;\r\n  cachedVelocitiesCount = 0;\r\n  cachedVelocitiesPtr = 0;\r\n  previousVelocities = null;\r\n  shaderTime = 0;\r\n  cachedSpeciesIdsView = null;\r\n  cachedSpeciesIdsPtr = 0;\r\n  cachedSpeciesIdsCount = 0;\r\n  cachedSpeciesIdsBuffer = null;\r\n  ensureTailRuntimeBuffers(count);\r\n\r\n  const predators = getPredatorCount();\r\n  if (ensurePredatorMeshes(predators)) {\r\n    predatorMeshCountCache = predators;\r\n  }\r\n  for (const mesh of predatorMeshes) {\r\n    mesh.visible = false;\r\n  }\r\n\r\n  console.log('InstancedMeshes created with vertex colors enabled');\r\n}\r\n\r\n\r\n\r\nfunction loadBoidModel(callback) {\r\n  const loader = new GLTFLoader();\r\n  const basePath = process.env.BASE_URL || '/'; // publicPath を取得\r\n  const textureLoader = new THREE.TextureLoader();\r\n  let pendingAssets = 3;\r\n  const notifyReady = () => {\r\n    pendingAssets = Math.max(0, pendingAssets - 1);\r\n    if (pendingAssets === 0) {\r\n      callback();\r\n    }\r\n  };\r\n  const texture = textureLoader.load(\r\n    './models/fish.png', // テクスチャのパス\r\n    () => {\r\n      console.log('Texture loaded successfully.');\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the texture:', error);\r\n    }\r\n  );\r\n  const textureLod = textureLoader.load(\r\n    './models/fish_lod.png', // テクスチャのパス\r\n    () => {\r\n      console.log('Texture loaded successfully.');\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the texture:', error);\r\n    }\r\n  );\r\n  texture.flipY = false;\r\n  texture.colorSpace = THREE.SRGBColorSpace; // sRGBカラー空間を使用\r\n  textureLod.flipY = false;\r\n  textureLod.colorSpace = THREE.SRGBColorSpace;\r\n\r\n  const predatorTexture = textureLoader.load(\r\n    './models/fishPredetor.png',\r\n    () => {\r\n      console.log('Predator texture loaded successfully.');\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the predator texture:', error);\r\n    }\r\n  );\r\n  predatorTexture.flipY = false;\r\n  predatorTexture.colorSpace = THREE.SRGBColorSpace;\r\n\r\n  let boidMaterial = new THREE.MeshStandardMaterial({\r\n    color: 0xffffff, // 白色\r\n    roughness: 0.5,\r\n    metalness: 0.2,\r\n    transparent: false, // 半透明を有効化\r\n    alphaTest: 0.5,    // アルファテストを設定\r\n    map: texture,      // テクスチャを設定\r\n    vertexColors: true, // 通常時は無効\r\n    vertexColor: 0xffffff\r\n  });\r\n\r\n  let boidLodMaterial = new THREE.MeshStandardMaterial({\r\n    color: 0xffffff, // 白色\r\n    roughness: 0.5,\r\n    metalness: 0.2,\r\n    transparent: false, // 半透明を有効化\r\n    alphaTest: 0.5,    // アルファテストを設定\r\n    map: textureLod,      // テクスチャを設定\r\n    vertexColors: false, // 通常時は無効\r\n    vertexColor: 0xffffff\r\n\r\n  });\r\n\r\n  originalMaterial = boidMaterial;\r\n  originalMaterialLod = boidLodMaterial;\r\n  predatorMaterial = new THREE.MeshStandardMaterial({\r\n    color: 0xffffff,\r\n    roughness: 0.5,\r\n    metalness: 0,\r\n    transparent: false,\r\n    alphaTest: 0.5,\r\n    map: predatorTexture,\r\n    vertexColors: false,\r\n    vertexColor: 0xffffff,\r\n  });\r\n  loader.load(\r\n    `./models/boidModel.glb`, // モデルのパス\r\n    (gltf) => {\r\n      boidModel = gltf.scene;\r\n\r\n      // マテリアルの transparent と alphaTest を変更\r\n      boidModel.traverse((child) => {\r\n        if (child.isMesh) {\r\n          child.material = boidMaterial; // 半透明を有効化\r\n        }\r\n      });\r\n\r\n      notifyReady();\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the model:', error);\r\n      notifyReady();\r\n    }\r\n  );\r\n\r\n  loader.load(\r\n    `./models/boidModel_lod.glb`, // LODモデルのパス\r\n    (gltf) => {\r\n      boidModelLod = gltf.scene;\r\n\r\n      // マテリアルの transparent と alphaTest を変更\r\n      boidModelLod.traverse((child) => {\r\n        if (child.isMesh) {\r\n          child.material = boidLodMaterial; // 半透明を有効化\r\n        }\r\n      });\r\n\r\n      notifyReady();\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the LOD model:', error);\r\n      notifyReady();\r\n    }\r\n  );\r\n\r\n  loader.load(\r\n    `./models/boidPredetorModel.glb`,\r\n    (gltf) => {\r\n      predatorModel = gltf.scene;\r\n      predatorModel.traverse((child) => {\r\n        if (child.isMesh) {\r\n          child.material = predatorMaterial;\r\n          child.castShadow = true;\r\n          child.receiveShadow = true;\r\n        }\r\n      });\r\n      predatorMeshCountCache = -1;\r\n      notifyReady();\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the predator model:', error);\r\n      notifyReady();\r\n    }\r\n  );\r\n}\r\n\r\nfunction clearUnitVisuals() {\r\n  for (const mesh of unitSpheres) scene.remove(mesh);\r\n  for (const line of unitLines) scene.remove(line);\r\n  unitSpheres = [];\r\n  unitLines = [];\r\n}\r\n\r\n// レイヤ制限付き再帰描画\r\nfunction drawUnitTree(unit, layer = 0) {\r\n  // スフィア: スライダで制御\r\n  if (\r\n    layer >= (maxDepth - unitLayer.value + 1) &&\r\n    (unit.children == null || unit.children.size() === 0 || layer === maxDepth)\r\n  ) {\r\n    let sphere;\r\n    if (unitSpheres.length > 0) {\r\n      sphere = unitSpheres.pop(); // 再利用\r\n      sphere.visible = true;\r\n    } else {\r\n      const geometry = new THREE.SphereGeometry(unit.radius, 16, 16);\r\n      const material = new THREE.MeshBasicMaterial({\r\n        color: new THREE.Color().setHSL(0.1, 1, 0.7 - 0.4 * (layer / maxDepth)),\r\n        wireframe: true,\r\n        opacity: 0.3,\r\n        transparent: true,\r\n      });\r\n      sphere = new THREE.Mesh(geometry, material);\r\n      scene.add(sphere);\r\n    }\r\n    sphere.position.set(unit.center.x, unit.center.y, unit.center.z);\r\n    unitSpheres.push(sphere);\r\n  }\r\n\r\n  // 線: チェックボックスで全て表示、色は深さでグラデ\r\n  if (showUnitLines.value && unit.children && typeof unit.children.size === 'function' && unit.children.size() > 0) {\r\n    for (let i = 0; i < unit.children.size(); i++) {\r\n      const child = unit.children.get(i);\r\n      let line;\r\n      if (unitLines.length > 0) {\r\n        line = unitLines.pop(); // 再利用\r\n        line.visible = true;\r\n      } else {\r\n        const lineGeometry = new THREE.BufferGeometry();\r\n        const lineMaterial = new THREE.LineBasicMaterial({\r\n          color: new THREE.Color().setHSL(0.35, 1, 0.7 - 0.4 * (layer / maxDepth)),\r\n        });\r\n        line = new THREE.Line(lineGeometry, lineMaterial);\r\n        scene.add(line);\r\n      }\r\n      const points = [\r\n        new THREE.Vector3(unit.center.x, unit.center.y, unit.center.z),\r\n        new THREE.Vector3(child.center.x, child.center.y, child.center.z),\r\n      ];\r\n      line.geometry.setFromPoints(points);\r\n      unitLines.push(line);\r\n    }\r\n  }\r\n\r\n  // 再帰\r\n  if (unit.children && typeof unit.children.size === 'function' && unit.children.size() > 0) {\r\n    for (let i = 0; i < unit.children.size(); i++) {\r\n      const child = unit.children.get(i);\r\n      drawUnitTree(child, layer + 1);\r\n    }\r\n  }\r\n}\r\nlet lastTime = performance.now(); // 前回のフレームのタイムスタンプ\r\n\r\nfunction animate() {\r\n  stats?.begin();\r\n\r\n  const currentTime = performance.now();\r\n  const deltaTime = (currentTime - lastTime) / 1000;\r\n  lastTime = currentTime;\r\n\r\n  if (!paused.value) {\r\n    shaderTime += deltaTime;\r\n  }\r\n  updateInstancingMaterialUniforms(shaderTime);\r\n\r\n  const count = stepSimulationAndUpdateState(paused.value ? 0 : deltaTime);\r\n  if (!instancedMeshHigh || !instancedMeshLow || !bufferSetHigh || !bufferSetLow) {\r\n    controls.update();\r\n    (isMobileDevice() ? renderer : composer).render(scene, camera);\r\n    stats?.end();\r\n    animationTimer = setTimeout(animate, FRAME_INTERVAL);\r\n    return;\r\n  }\r\n  if (gpuTimerExt && glContext && !gpuQueryInFlight && !gpuPendingQuery) {\r\n    const query = glContext.createQuery();\r\n    if (query) {\r\n      glContext.beginQuery(gpuTimerExt.TIME_ELAPSED_EXT, query);\r\n      gpuQueryInFlight = query;\r\n    }\r\n  }\r\n  const { positions, orientations, velocities } = getWasmViews(count);\r\n  if ((frameCounter++ & 63) === 0) {\r\n    currentFirstBoidX();\r\n  }\r\n  ensureTailRuntimeBuffers(count);\r\n\r\n  const currentIndex = bufferCursor;\r\n  const nextIndex = (currentIndex + 1) % TRIPLE_BUFFER_SIZE;\r\n  const highPosAttr = bufferSetHigh.pos[currentIndex];\r\n  const highQuatAttr = bufferSetHigh.quat[currentIndex];\r\n  const lowPosAttr = bufferSetLow.pos[currentIndex];\r\n  const lowQuatAttr = bufferSetLow.quat[currentIndex];\r\n  const highTailPhaseAttr = bufferSetHigh.tailPhase[currentIndex];\r\n  const highTailSpeedAttr = bufferSetHigh.tailSpeed[currentIndex];\r\n  const highTailTurnAttr = bufferSetHigh.tailTurn[currentIndex];\r\n  const highTailDriveAttr = bufferSetHigh.tailDrive[currentIndex];\r\n  const lowTailPhaseAttr = bufferSetLow.tailPhase[currentIndex];\r\n  const lowTailSpeedAttr = bufferSetLow.tailSpeed[currentIndex];\r\n  const lowTailTurnAttr = bufferSetLow.tailTurn[currentIndex];\r\n  const lowTailDriveAttr = bufferSetLow.tailDrive[currentIndex];\r\n  const highPosArray = highPosAttr.array;\r\n  const highQuatArray = highQuatAttr.array;\r\n  const lowPosArray = lowPosAttr.array;\r\n  const lowQuatArray = lowQuatAttr.array;\r\n  const highTailSpeedArray = highTailSpeedAttr.array;\r\n  const highTailTurnArray = highTailTurnAttr.array;\r\n  const highTailDriveArray = highTailDriveAttr.array;\r\n  const lowTailSpeedArray = lowTailSpeedAttr.array;\r\n  const lowTailTurnArray = lowTailTurnAttr.array;\r\n  const lowTailDriveArray = lowTailDriveAttr.array;\r\n\r\n  const camPos = camera.position;\r\n  const camX = camPos.x;\r\n  const camY = camPos.y;\r\n  const camZ = camPos.z;\r\n  // 捕食者の個体数と開始インデックスを計算（配列の末尾から捕食者を配置）\r\n  const predatorCount = getPredatorCount();\r\n  const predatorStartIndex = predatorCount > 0 ? Math.max(0, count - predatorCount) : count;\r\n  if (predatorMeshCountCache !== predatorCount) {\r\n    if (ensurePredatorMeshes(predatorCount)) {\r\n      predatorMeshCountCache = predatorCount;\r\n    }\r\n  }\r\n  for (const mesh of predatorMeshes) {\r\n    mesh.visible = false;\r\n  }\r\n\r\n  const hiddenPos = HIDDEN_POSITION;\r\n  const [identityX, identityY, identityZ, identityW] = IDENTITY_QUATERNION;\r\n\r\n  // 各Boidの位置と姿勢を更新\r\n  for (let i = 0; i < count; ++i) {\r\n    const basePos = i * 3;\r\n    const px = positions[basePos];\r\n    const py = positions[basePos + 1];\r\n    const pz = positions[basePos + 2];\r\n    const vx = velocities ? velocities[basePos] : 0;\r\n    const vy = velocities ? velocities[basePos + 1] : 0;\r\n    const vz = velocities ? velocities[basePos + 2] : 0;\r\n    const dx = px - camX;\r\n    const dy = py - camY;\r\n    const dz = pz - camZ;\r\n    const distSq = dx * dx + dy * dy + dz * dz;\r\n    // 3段階LOD: 近距離/中距離/遠距離を距離の平方で判定\r\n    const isNear = distSq < LOD_NEAR_DISTANCE_SQ;\r\n    const isMid = !isNear && distSq < LOD_MID_DISTANCE_SQ;\r\n    const animateTail = isNear || isMid; // 遠距離では尾アニメを停止してGPU負荷削減\r\n\r\n    const baseQuat = i * 4;\r\n    const qx = orientations[baseQuat];\r\n    const qy = orientations[baseQuat + 1];\r\n    const qz = orientations[baseQuat + 2];\r\n    const qw = orientations[baseQuat + 3];\r\n\r\n    // 捕食者は専用メッシュで描画し、インスタンシングからは除外\r\n    const isPredator = i >= predatorStartIndex && predatorCount > 0;\r\n    if (isPredator) {\r\n      const meshIndex = i - predatorStartIndex;\r\n      const predatorMesh = predatorMeshes[meshIndex];\r\n      if (predatorMesh) {\r\n        predatorMesh.visible = true;\r\n        predatorMesh.position.set(px, py, pz);\r\n        predatorMesh.quaternion.set(qx, qy, qz, qw);\r\n      }\r\n\r\n      highPosArray[basePos] = hiddenPos;\r\n      highPosArray[basePos + 1] = hiddenPos;\r\n      highPosArray[basePos + 2] = hiddenPos;\r\n      highQuatArray[baseQuat] = identityX;\r\n      highQuatArray[baseQuat + 1] = identityY;\r\n      highQuatArray[baseQuat + 2] = identityZ;\r\n      highQuatArray[baseQuat + 3] = identityW;\r\n\r\n      lowPosArray[basePos] = hiddenPos;\r\n      lowPosArray[basePos + 1] = hiddenPos;\r\n      lowPosArray[basePos + 2] = hiddenPos;\r\n      lowQuatArray[baseQuat] = identityX;\r\n      lowQuatArray[baseQuat + 1] = identityY;\r\n      lowQuatArray[baseQuat + 2] = identityZ;\r\n      lowQuatArray[baseQuat + 3] = identityW;\r\n      highTailSpeedArray[i] = 0;\r\n      lowTailSpeedArray[i] = 0;\r\n      highTailTurnArray[i] = 0;\r\n      lowTailTurnArray[i] = 0;\r\n      highTailDriveArray[i] = 0;\r\n      lowTailDriveArray[i] = 0;\r\n      if (previousVelocities) {\r\n        previousVelocities[basePos] = 0;\r\n        previousVelocities[basePos + 1] = 0;\r\n        previousVelocities[basePos + 2] = 0;\r\n      }\r\n      continue;\r\n    }\r\n\r\n    // 尾アニメーション用の速度と旋回量を計算\r\n    const speed = Math.hypot(vx, vy, vz);\r\n    const prevVx = previousVelocities ? previousVelocities[basePos] : 0;\r\n    const prevVy = previousVelocities ? previousVelocities[basePos + 1] : 0;\r\n    const prevVz = previousVelocities ? previousVelocities[basePos + 2] : 0;\r\n    const prevLen = Math.hypot(prevVx, prevVy, prevVz);\r\n    let turnAmount = 0;\r\n    if (prevLen > 1e-5 && speed > 1e-5) {\r\n      const crossY = prevVz * vx - prevVx * vz;\r\n      const dot = prevVx * vx + prevVy * vy + prevVz * vz;\r\n      turnAmount = Math.atan2(crossY, dot);\r\n    }\r\n    const tailSpeed = speed;\r\n    const tailTurn = turnAmount;\r\n\r\n    // LOD制御: 近距離ならハイポリ、中距離以降はLODモデル\r\n    if (isNear) {\r\n      highPosArray[basePos] = px;\r\n      highPosArray[basePos + 1] = py;\r\n      highPosArray[basePos + 2] = pz;\r\n      highQuatArray[baseQuat] = qx;\r\n      highQuatArray[baseQuat + 1] = qy;\r\n      highQuatArray[baseQuat + 2] = qz;\r\n      highQuatArray[baseQuat + 3] = qw;\r\n\r\n      lowPosArray[basePos] = hiddenPos;\r\n      lowPosArray[basePos + 1] = hiddenPos;\r\n      lowPosArray[basePos + 2] = hiddenPos;\r\n      lowQuatArray[baseQuat] = identityX;\r\n      lowQuatArray[baseQuat + 1] = identityY;\r\n      lowQuatArray[baseQuat + 2] = identityZ;\r\n      lowQuatArray[baseQuat + 3] = identityW;\r\n    } else {\r\n      lowPosArray[basePos] = px;\r\n      lowPosArray[basePos + 1] = py;\r\n      lowPosArray[basePos + 2] = pz;\r\n      lowQuatArray[baseQuat] = qx;\r\n      lowQuatArray[baseQuat + 1] = qy;\r\n      lowQuatArray[baseQuat + 2] = qz;\r\n      lowQuatArray[baseQuat + 3] = qw;\r\n\r\n      highPosArray[basePos] = hiddenPos;\r\n      highPosArray[basePos + 1] = hiddenPos;\r\n      highPosArray[basePos + 2] = hiddenPos;\r\n      highQuatArray[baseQuat] = identityX;\r\n      highQuatArray[baseQuat + 1] = identityY;\r\n      highQuatArray[baseQuat + 2] = identityZ;\r\n      highQuatArray[baseQuat + 3] = identityW;\r\n    }\r\n\r\n    // 尾アニメのパラメータ設定（遠距離ではdrive=0でシェーダ側で計算をスキップ）\r\n    const tailSpeedValue = animateTail ? tailSpeed : 0;\r\n    const tailTurnValue = animateTail ? tailTurn : 0;\r\n    const driveValue = animateTail ? 1 : 0; // シェーダ側で尾アニメON/OFFを制御\r\n    if (isNear) {\r\n      // 近距離: ハイポリモデルにアニメ適用\r\n      highTailSpeedArray[i] = tailSpeedValue;\r\n      highTailTurnArray[i] = tailTurnValue;\r\n      lowTailSpeedArray[i] = 0;\r\n      lowTailTurnArray[i] = 0;\r\n      highTailDriveArray[i] = driveValue;\r\n      lowTailDriveArray[i] = 0;\r\n    } else {\r\n      // 中距離/遠距離: LODモデルに切替、遠距離ではdriveValue=0で静止\r\n      highTailSpeedArray[i] = 0;\r\n      highTailTurnArray[i] = 0;\r\n      lowTailSpeedArray[i] = tailSpeedValue;\r\n      lowTailTurnArray[i] = tailTurnValue;\r\n      highTailDriveArray[i] = 0;\r\n      lowTailDriveArray[i] = driveValue;\r\n    }\r\n\r\n    if (previousVelocities) {\r\n      previousVelocities[basePos] = vx;\r\n      previousVelocities[basePos + 1] = vy;\r\n      previousVelocities[basePos + 2] = vz;\r\n    }\r\n  }\r\n  // インスタンシングメッシュの表示個体数を設定（捕食者を除く）\r\n  const visibleCount = predatorCount > 0 ? Math.max(0, count - predatorCount) : count;\r\n  instancedMeshHigh.count = visibleCount;\r\n  instancedMeshLow.count = visibleCount;\r\n\r\n  applyBufferSet(instancedMeshHigh, bufferSetHigh, currentIndex);\r\n  applyBufferSet(instancedMeshLow, bufferSetLow, currentIndex);\r\n  // トリプルバッファの更新フラグを立てる\r\n  highPosAttr.needsUpdate = true;\r\n  highQuatAttr.needsUpdate = true;\r\n  lowPosAttr.needsUpdate = true;\r\n  lowQuatAttr.needsUpdate = true;\r\n  highTailSpeedAttr.needsUpdate = true;\r\n  highTailTurnAttr.needsUpdate = true;\r\n  highTailDriveAttr.needsUpdate = true;\r\n  lowTailSpeedAttr.needsUpdate = true;\r\n  lowTailTurnAttr.needsUpdate = true;\r\n  lowTailDriveAttr.needsUpdate = true;\r\n\r\n  bufferCursor = nextIndex;\r\n\r\n  // 頂点カラーの更新（デバッグ用のUnit色分け表示）\r\n  if (showUnitColors.value) {\r\n    const mappingPtrValue = boidUnitMappingPtr();\r\n    const heapI32 = wasmModule.HEAP32.buffer;\r\n    const unitMappings = new Int32Array(heapI32, mappingPtrValue, count * 2);\r\n\r\n    for (let i = 0; i < visibleCount; i++) {\r\n      let unitId = -1;\r\n      for (let j = 0; j < unitMappings.length; j += 2) {\r\n        if (unitMappings[j] === i) {\r\n          unitId = unitMappings[j + 1];\r\n          break;\r\n        }\r\n      }\r\n\r\n      const color = unitId >= 0 ?\r\n        new THREE.Color().setHSL((unitId % 100) / 100, 0.8, 0.6) :\r\n        new THREE.Color(1, 0, 0);\r\n\r\n      instancedMeshHigh.setColorAt(i, color);\r\n      instancedMeshLow.setColorAt(i, color);\r\n    }\r\n    instancedMeshHigh.instanceColor.needsUpdate = true;\r\n    instancedMeshLow.instanceColor.needsUpdate = true;\r\n  } else if (lastShowUnitColors) {\r\n    // Unit色分けOFF: ON→OFFになった時のみ頂点カラーを白にリセット\r\n    const whiteColor = new THREE.Color(1, 1, 1);\r\n    for (let i = 0; i < visibleCount; i++) {\r\n      instancedMeshHigh.setColorAt(i, whiteColor);\r\n      instancedMeshLow.setColorAt(i, whiteColor);\r\n    }\r\n    instancedMeshHigh.instanceColor.needsUpdate = true;\r\n    instancedMeshLow.instanceColor.needsUpdate = true;\r\n    console.log('✓ Reset vertex colors to white (OFF mode)');\r\n  }\r\n\r\n  // 前回の状態を保存\r\n  lastShowUnitColors = showUnitColors.value;// マトリクスの更新\r\n\r\n  controls.update();\r\n\r\n  if (heightFogPass) {\r\n    heightFogPass.uniforms.cameraNear.value = camera.near;\r\n    heightFogPass.uniforms.cameraFar.value = camera.far;\r\n    heightFogPass.uniforms.projectionMatrixInverse.value.copy(camera.projectionMatrixInverse);\r\n    heightFogPass.uniforms.cameraMatrixWorld.value.copy(camera.matrixWorld);\r\n    if (heightFogRenderTarget?.depthTexture) {\r\n      heightFogPass.uniforms.tDepth.value = heightFogRenderTarget.depthTexture;\r\n    }\r\n  }\r\n\r\n  if (isMobileDevice() || !composer) {\r\n    renderer.render(scene, camera);\r\n  } else {\r\n    composer.render();\r\n  }\r\n\r\n  if (gpuTimerExt && glContext && gpuQueryInFlight) {\r\n    glContext.endQuery(gpuTimerExt.TIME_ELAPSED_EXT);\r\n    gpuPendingQuery = gpuQueryInFlight;\r\n    gpuQueryInFlight = null;\r\n  }\r\n\r\n  if (gpuTimerExt && glContext && gpuPendingQuery) {\r\n    const available = glContext.getQueryParameter(gpuPendingQuery, glContext.QUERY_RESULT_AVAILABLE);\r\n    const disjoint = glContext.getParameter(gpuTimerExt.GPU_DISJOINT_EXT);\r\n    if (available) {\r\n      if (!disjoint) {\r\n        const nanoseconds = glContext.getQueryParameter(gpuPendingQuery, glContext.QUERY_RESULT);\r\n        lastGpuTimeMs = nanoseconds / 1e6;\r\n        if (!gpuStatsPanel && stats && typeof Stats.Panel === 'function') {\r\n          gpuStatsPanel = stats.addPanel(new Stats.Panel('GPU (ms)', '#ff8', '#221'));\r\n          stats.showPanel(0);\r\n        }\r\n        gpuStatsPanel?.update(lastGpuTimeMs, 33);\r\n      }\r\n      glContext.deleteQuery(gpuPendingQuery);\r\n      gpuPendingQuery = null;\r\n    }\r\n  }\r\n\r\n  stats?.end();\r\n\r\n  animationTimer = setTimeout(animate, FRAME_INTERVAL);\r\n}\r\n\r\nfunction drawTreeStructure(treeData) {\r\n  const drawNode = (node, parentPosition = null) => {\r\n    const position = new THREE.Vector3(\r\n      node.center[0],\r\n      node.center[1],\r\n      node.center[2]\r\n    );\r\n\r\n    if (parentPosition) {\r\n      const geometry = new THREE.BufferGeometry().setFromPoints([\r\n        parentPosition,\r\n        position,\r\n      ]);\r\n      const material = new THREE.LineBasicMaterial({ color: 0xffffff });\r\n      const line = new THREE.Line(geometry, material);\r\n      scene.add(line);\r\n    }\r\n\r\n    if (node.children) {\r\n      node.children.forEach((child) => drawNode(child, position));\r\n    }\r\n  };\r\n\r\n  treeData.forEach((rootNode) => drawNode(rootNode));\r\n}\r\nfunction startSimulation() {\r\n  reinitializeFlockNow();\r\n  animate();\r\n}\r\n\r\nonMounted(() => {\r\n  initThreeJS();\r\n  loadBoidModel(() => {\r\n    console.log('Boid model loaded successfully.');\r\n    // stats.jsの初期化とDOM追加\r\n    stats = new Stats();\r\n    stats.showPanel(0);\r\n    document.body.appendChild(stats.dom);\r\n    // 右上に移動させる\r\n    stats.dom.style.position = 'fixed';\r\n    stats.dom.style.right = '0px';\r\n    stats.dom.style.top = '0px';\r\n    stats.dom.style.left = 'auto';\r\n    stats.dom.style.zIndex = 1000;\r\n    if (gpuTimerExt && typeof Stats.Panel === 'function' && !gpuStatsPanel) {\r\n      gpuStatsPanel = stats.addPanel(new Stats.Panel('GPU (ms)', '#ff8', '#221'));\r\n      stats.showPanel(0);\r\n    }\r\n\r\n    startSimulation();\r\n  });\r\n\r\n  window.addEventListener('keydown', handleKeydown);\r\n});\r\n\r\nwatch(\r\n  settings,\r\n  () => {\r\n    if (wasmModule && wasmModule.setGlobalSpeciesParamsFromJS) {\r\n      wasmModule.setGlobalSpeciesParamsFromJS(createSpeciesParamsVector(), 1);\r\n      try {\r\n        const plainSettings = settings.map((s) => ({ ...toRaw(s) }));\r\n        localStorage.setItem('boids_settings', JSON.stringify(plainSettings));\r\n      } catch (error) {\r\n        console.error('Failed to save settings to localStorage:', error);\r\n      }\r\n    }\r\n\r\n    const signature = getSpeciesSignature(settings);\r\n    if (signature !== lastSpeciesSignature) {\r\n      scheduleFlockReinitialize();\r\n    } else {\r\n      if (flockReinitTimer) {\r\n        clearTimeout(flockReinitTimer);\r\n        flockReinitTimer = null;\r\n      }\r\n      pendingStateForReinitialize = null;\r\n      pendingSettingsSnapshot = null;\r\n      previousSettingsSnapshot = snapshotSettingsList(settings);\r\n    }\r\n\r\n    const predators = getPredatorCount();\r\n    if (ensurePredatorMeshes(predators)) {\r\n      predatorMeshCountCache = predators;\r\n    }\r\n    for (const mesh of predatorMeshes) mesh.visible = false;\r\n  },\r\n  { deep: true }\r\n);\r\n\r\nfunction resetSettings() {\r\n  settings.length = 0;\r\n  DEFAULT_SETTINGS.forEach(s => settings.push({ ...s }));\r\n}\r\n\r\n// Unit可視化の変更を監視\r\nwatch(showUnits, (newValue) => {\r\n  console.log('showUnits changed to:', newValue);\r\n  if (!newValue) {\r\n    // Unit可視化をオフにした場合、既存の可視化要素をクリア\r\n    clearUnitVisuals();\r\n  }\r\n});\r\n\r\n// Unit表示モードの変更を監視\r\nwatch([showUnitSpheres, showUnitLines], ([newSpheres, newLines]) => {\r\n  console.log('Unit display mode changed - Spheres:', newSpheres, 'Lines:', newLines);\r\n  // 表示モードが変更されたら既存の表示をクリアして再描画\r\n  if (showUnits.value) {\r\n    clearUnitVisuals();\r\n  }\r\n});\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Arial, sans-serif;\r\n  padding: 0;\r\n  margin: 0;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.settings {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.info {\r\n  margin-top: 20px;\r\n}\r\n\r\n.three-container {\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 0;\r\n  display: block;\r\n  border: none;\r\n  overflow: hidden;\r\n  background: #0a1e3a;\r\n}\r\n\r\n.ui-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  color: #fff;\r\n  z-index: 2;\r\n  pointer-events: none;\r\n}\r\n\r\n.ui-overlay * {\r\n  pointer-events: auto;\r\n}\r\n\r\n.add-species-button {\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n</style>","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=0c3dc7cf&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from 'vue';\r\nimport App from './App.vue';\r\n\r\n// COI対応によりSharedArrayBuffer等を利用する関係で、WASMファイルは固定パスにコピーしている\r\nconst publicBase = (process.env.BASE_URL || '/').replace(/\\/*$/, '/');\r\nconst wasmPublicBase = `${publicBase}static/js`;\r\nconst wasmJsUrl = `${wasmPublicBase}/wasm_boids.js`;\r\nconst wasmBinaryUrl = `${wasmPublicBase}/wasm_boids.wasm`;\r\n\r\nimport(/* webpackIgnore: true */ wasmJsUrl)\r\n    .then((BoidsModule) => {\r\n        if (!BoidsModule?.default) {\r\n            throw new Error('WASM module loader not found at: ' + wasmJsUrl);\r\n        }\r\n            return BoidsModule.default({\r\n                locateFile: (path) => (path.endsWith('.wasm') ? wasmBinaryUrl : path),\r\n            });\r\n    })\r\n    .then((Module) => {\r\n        // デバッグ確認用にグローバルへ公開しつつ初期化ログを出力\r\n        if (typeof window !== 'undefined') {\r\n            window.wasmModule = Module;\r\n        }\r\n        console.log('Wasm module initialized:', Module);\r\n        const app = createApp(App);\r\n        app.provide('wasmModule', Module);\r\n        app.mount('#app');\r\n    })\r\n    .catch((error) => {\r\n        console.error('Failed to initialise WASM module:', error);\r\n    });","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t57: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkwasm_boids\"] = self[\"webpackChunkwasm_boids\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], () => (__webpack_require__(225)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["emit","props","settings","editingCount","editingCohesion","editingCohesionRange","editingSeparation","editingSeparationRange","editingAlignment","editingAlignmentRange","editingMaxSpeed","editingMaxTurnAngle","editingMaxNeighbors","editingHorizontalTorque","editingTorqueStrength","editingLambda","editingTau","countInput","cohesionInput","cohesionRangeInput","separationInput","separationRangeInput","alignmentInput","alignmentRangeInput","maxSpeedInput","maxTurnAngleInput","maxNeighborsInput","horizontalTorqueInput","torqueStrengthInput","lambdaInput","tauInput","countDraft","count","async","startEditCount","value","focus","select","cancelCountEdit","applyCountDraft","nextValue","Math","max","round","Number","isFinite","commitCountFromSlider","commitCountFromInput","emitRemove","startEditCohesion","startEditCohesionRange","startEditSeparation","startEditSeparationRange","startEditAlignment","startEditAlignmentRange","startEditMaxSpeed","startEditMaxTurnAngle","startEditMaxNeighbors","startEditHorizontalTorque","startEditTorqueStrength","startEditLambda","startEditTau","stopEditCohesion","stopEditCohesionRange","stopEditSeparation","stopEditSeparationRange","stopEditAlignment","stopEditAlignmentRange","stopEditMaxSpeed","stopEditMaxTurnAngle","stopEditMaxNeighbors","stopEditHorizontalTorque","stopEditTorqueStrength","stopEditLambda","stopEditTau","__exports__","FRAME_INTERVAL","COUNT_REINIT_DELAY_MS","TRIPLE_BUFFER_SIZE","HIDDEN_POSITION","LOD_NEAR_DISTANCE_SQ","LOD_MID_DISTANCE_SQ","wasmModule","console","error","stepSimulation","cwrap","build","boidUnitMappingPtr","currentFirstBoidX","speciesIdsPtr","syncReadToWriteBuffers","isMobileDevice","navigator","test","userAgent","mobileBoidCount","DEFAULT_SETTINGS","species","cohesion","cohesionRange","separation","separationRange","alignment","alignmentRange","maxSpeed","maxTurnAngle","maxNeighbors","horizontalTorque","torqueStrength","lambda","tau","minSpeed","isPredator","loadSettings","saved","localStorage","getItem","parsed","JSON","parse","Array","isArray","snapshotSettingsList","list","map","item","stringify","cachedTotalBoidCount","lastSpeciesSignature","totalBoids","getTotalBoidCount","getSpeciesSignature","previousSettingsSnapshot","pendingStateForReinitialize","pendingSettingsSnapshot","generateUniqueSpeciesName","baseName","taken","Set","s","has","index","candidate","cloneSpeciesTemplate","template","addSpecies","next","push","removeSpecies","length","splice","threeContainer","scene","camera","renderer","controls","composer","heightFogPass","heightFogRenderTarget","paused","showUnits","showUnitSpheres","showUnitLines","showUnitColors","unitLayer","unitSpheres","unitLines","stats","gpuStatsPanel","glContext","gpuTimerExt","gpuQueryInFlight","gpuPendingQuery","lastGpuTimeMs","latestStatePtr","latestStateHeaderPtr","latestStateHeaderView","latestPositionsPtr","latestVelocitiesPtr","latestOrientationsPtr","latestBoidCountFromWasm","frameCounter","flockReinitTimer","animationTimer","handleKeydown","e","code","initThreeJS","width","window","innerWidth","height","innerHeight","background","OCEAN_COLORS","DEEP_BLUE","createOceanSphere","position","set","lookAt","antialias","depth","setPixelRatio","devicePixelRatio","setSize","shadowMap","enabled","type","getContext","WebGL2RenderingContext","getExtension","warn","appendChild","domElement","aspect","updateProjectionMatrix","OrbitControls","enableDamping","dampingFactor","groundGeo","groundMat","createFadeOutGroundMaterial","depthTest","ground","rotation","x","PI","y","receiveShadow","add","ambientLight","toHex","AMBIENT_LIGHT","dirLight","SUN_LIGHT","castShadow","shadow","left","right","top","bottom","near","far","mapSize","bias","normalBias","renderTargetOptions","depthBuffer","stencilBuffer","depthTexture","format","needsUpdate","EffectComposer","renderPass","RenderPass","addPass","ssaoPass","SSAOPass","kernelRadius","minDistance","maxDistance","bloomPass","UnrealBloomPass","ShaderPass","HeightFogShader","uniforms","tDepth","fogColor","copy","heightFogConfig","color","distanceStart","distanceEnd","distanceExponent","distanceControlPoint1","distanceControlPoint2","surfaceLevel","heightFalloff","heightExponent","maxOpacity","material","depthWrite","transparent","blending","toneMapped","renderToScreen","addEventListener","onWindowResize","instancedMeshHigh","instancedMeshLow","instancingMaterials","IDENTITY_QUATERNION","STREAM_USAGE","tailAnimation","uTailTime","uTailAmplitude","uTailFrequency","uTailPhaseStride","uTailTurnStrength","uTailSpeedScale","uTailRight","uTailForward","uTailUp","uTailEnable","SKY_HIGHLIGHT","SKY_BLUE","SEAFLOOR","FOG","SIDE_LIGHT1","SIDE_LIGHT2","BOTTOM_LIGHT","colorStr","parseInt","replace","tDiffuse","cameraNear","cameraFar","projectionMatrixInverse","cameraMatrixWorld","clone","vertexShader","fragmentShader","canvas","document","createElement","context","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","texture","colorSpace","generateMipmaps","minFilter","magFilter","sphereGeo","sphereMat","side","fog","oceanSphere","textureLoader","alphaMap","load","wrapS","wrapT","roughness","metalness","updateInstancingMaterialUniforms","time","bufferCursor","bufferSetHigh","bufferSetLow","cachedHeapBuffer","cachedPositionsPtr","cachedOrientationsPtr","cachedPositionsView","cachedOrientationsView","cachedPositionsCount","cachedOrientationsCount","shaderTime","cachedVelocitiesPtr","cachedVelocitiesView","cachedVelocitiesCount","tailPhaseSeeds","previousVelocities","cachedSpeciesIdsView","cachedSpeciesIdsPtr","cachedSpeciesIdsCount","cachedSpeciesIdsBuffer","createAttributeSet","itemSize","attributes","i","attr","Float32Array","setUsage","createBufferSet","pos","quat","tailPhase","tailSpeed","tailTurn","tailDrive","resetBufferSetToHidden","bufferSet","array","fill","applyBufferSet","mesh","geometry","setAttribute","patchQuaternionInstancing","userData","quaternionInstancingPatched","onBeforeCompile","shader","Object","entries","forEach","key","uniform","createInstancedDepthMaterial","sourceMaterial","depthMaterial","depthPacking","alphaTest","createInstancedDistanceMaterial","distanceMaterial","stepSimulationAndUpdateState","deltaTime","statePtr","heapU8Buffer","HEAPU8","buffer","DataView","getUint32","getInt32","getWasmViews","heapBuffer","HEAPF32","posPointer","oriPointer","velPointer","positions","orientations","velocities","getSpeciesIdView","ptr","Int32Array","heapBuffer32","HEAP32","buildSpeciesRanges","ranges","offset","name","start","captureFlockState","currentCount","speciesIdsView","speciesIds","restoreFlockState","previousState","oldSettings","newSettings","prevPositions","prevVelocities","prevOrientations","oldRanges","newRanges","oldRangeMap","Map","info","restored","newInfo","oldInfo","get","transferable","min","srcIndex","dstIndex","srcPosBase","dstPosBase","srcVelBase","dstVelBase","srcOriBase","dstOriBase","boidGeometryHigh","boidGeometryLow","scale","boidModel","boidModelLod","originalMaterial","originalMaterialLod","predatorModel","predatorMaterial","predatorMeshes","predatorMeshCountCache","lastShowUnitColors","getPredatorCount","reduce","sum","ensurePredatorMeshes","pop","remove","traverse","child","isMesh","visible","createTailPhaseArray","random","applyTailPhaseSeeds","seeds","ensureTailRuntimeBuffers","ensureBodyCoordAttribute","getAttribute","minX","Infinity","minY","minZ","maxX","maxY","maxZ","ix","z","rangeX","rangeY","rangeZ","axis","range","bodyCoord","denom","specList","join","createSpeciesParamsVector","vector","VectorSpeciesParams","push_back","speciesId","velocityEpsilon","reinitializeFlockNow","pendingState","state","oldSettingsRef","newSettingsRef","targetSignature","callInitBoids","total","initInstancedBoids","scheduleFlockReinitialize","clearTimeout","setTimeout","children","delete","clear","highMaterial","vertexColors","lowMaterial","highGeometry","lowGeometry","frustumCulled","customDepthMaterial","customDistanceMaterial","whiteColor","setColorAt","instanceColor","instanceMatrix","predators","log","loadBoidModel","callback","loader","GLTFLoader","pendingAssets","notifyReady","undefined","textureLod","flipY","predatorTexture","boidMaterial","vertexColor","boidLodMaterial","gltf","clearUnitVisuals","line","lastTime","performance","now","animate","begin","currentTime","update","render","end","query","createQuery","beginQuery","TIME_ELAPSED_EXT","currentIndex","nextIndex","highPosAttr","highQuatAttr","lowPosAttr","lowQuatAttr","highTailSpeedAttr","highTailTurnAttr","highTailDriveAttr","lowTailSpeedAttr","lowTailTurnAttr","lowTailDriveAttr","highPosArray","highQuatArray","lowPosArray","lowQuatArray","highTailSpeedArray","highTailTurnArray","highTailDriveArray","lowTailSpeedArray","lowTailTurnArray","lowTailDriveArray","camPos","camX","camY","camZ","predatorCount","predatorStartIndex","hiddenPos","identityX","identityY","identityZ","identityW","basePos","px","py","pz","vx","vy","vz","dx","dy","dz","distSq","isNear","isMid","animateTail","baseQuat","qx","qy","qz","qw","meshIndex","predatorMesh","quaternion","speed","hypot","prevVx","prevVy","prevVz","prevLen","turnAmount","crossY","dot","atan2","tailSpeedValue","tailTurnValue","driveValue","visibleCount","mappingPtrValue","heapI32","unitMappings","unitId","j","setHSL","matrixWorld","endQuery","available","getQueryParameter","QUERY_RESULT_AVAILABLE","disjoint","getParameter","GPU_DISJOINT_EXT","nanoseconds","QUERY_RESULT","Panel","addPanel","showPanel","deleteQuery","startSimulation","resetSettings","body","dom","style","zIndex","setGlobalSpeciesParamsFromJS","plainSettings","setItem","signature","deep","newValue","newSpheres","newLines","publicBase","wasmPublicBase","wasmJsUrl","wasmBinaryUrl","import","then","BoidsModule","default","Error","locateFile","path","endsWith","Module","app","App","provide","mount","catch","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","fulfilled","keys","every","r","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}