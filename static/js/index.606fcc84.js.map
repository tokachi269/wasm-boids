{"version":3,"file":"static/js/index.606fcc84.js","mappings":"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","sources":["webpack://wasm-boids/./src/components/Settings.vue","webpack://wasm-boids/./src/components/Settings.vue?b3ff","webpack://wasm-boids/./src/rendering/BoidInstancing.js","webpack://wasm-boids/./src/rendering/FogPipeline.js","webpack://wasm-boids/./src/rendering/ParticleField.js","webpack://wasm-boids/./src/simulation/WasmtimeBridge.js","webpack://wasm-boids/./src/state/FlockSettingsStore.js","webpack://wasm-boids/./src/App.vue","webpack://wasm-boids/./src/App.vue?7ccd","webpack://wasm-boids/./src/main.js","webpack://wasm-boids/webpack/bootstrap","webpack://wasm-boids/webpack/runtime/chunk loaded","webpack://wasm-boids/webpack/runtime/define property getters","webpack://wasm-boids/webpack/runtime/global","webpack://wasm-boids/webpack/runtime/hasOwnProperty shorthand","webpack://wasm-boids/webpack/runtime/jsonp chunk loading","webpack://wasm-boids/webpack/startup"],"sourcesContent":["// filepath: d:\\GitHub\\wasm-boids\\src\\components\\Settings.vue\r\n<template>\r\n  <div class=\"settings\">\r\n    <details class=\"species-section\" :open=\"false\">\r\n      <summary class=\"species-header\">\r\n        <span class=\"species-title\">{{ settings.species }} ({{ settings.count }}匹)</span>\r\n        <button\r\n          v-if=\"canRemove\"\r\n          class=\"species-remove\"\r\n          type=\"button\"\r\n          @click.stop=\"emitRemove\"\r\n        >削除</button>\r\n      </summary>\r\n      <div class=\"species-content\">\r\n        <div class=\"setting-row\">\r\n          <label>種族名<br>(Species):</label>\r\n          <span>{{ settings.species }}</span>\r\n        </div>\r\n        <div class=\"setting-row\">\r\n          <label>群れの数(要更新)<br>(Count):</label>\r\n          <input\r\n            type=\"range\"\r\n            v-model.number=\"countDraft\"\r\n            min=\"0\"\r\n            max=\"50000\"\r\n            step=\"1\"\r\n            @change=\"commitCountFromSlider\"\r\n          />\r\n          <span \r\n            v-if=\"!editingCount\" \r\n            class=\"editable-value\" \r\n            @click=\"startEditCount\"\r\n            title=\"クリックして編集\"\r\n          >{{ settings.count }}</span>\r\n          <input \r\n            v-if=\"editingCount\"\r\n            type=\"number\" \r\n            v-model.number=\"countDraft\" \r\n            min=\"0\" \r\n            max=\"20000\"\r\n            class=\"value-input\"\r\n            @blur=\"cancelCountEdit\"\r\n            @keyup.enter=\"commitCountFromInput\"\r\n            ref=\"countInput\"\r\n          />\r\n        </div><div class=\"setting-row\">\r\n      <label>凝集<br>(Cohesion):</label>\r\n      <input type=\"range\" v-model.number=\"settings.cohesion\" min=\"0\" max=\"40\" step=\"0.01\" />\r\n      <span \r\n        v-if=\"!editingCohesion\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditCohesion\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.cohesion }}</span>\r\n      <input \r\n        v-if=\"editingCohesion\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.cohesion\" \r\n        min=\"0\" \r\n        max=\"40\"\r\n        step=\"0.01\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditCohesion\"\r\n        @keyup.enter=\"stopEditCohesion\"\r\n        ref=\"cohesionInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>凝集範囲<br>(Cohesion Range):</label>\r\n      <input type=\"range\" v-model.number=\"settings.cohesionRange\" min=\"1\" max=\"300\" step=\"1\" />\r\n      <span \r\n        v-if=\"!editingCohesionRange\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditCohesionRange\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.cohesionRange }}</span>\r\n      <input \r\n        v-if=\"editingCohesionRange\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.cohesionRange\" \r\n        min=\"1\" \r\n        max=\"300\"\r\n        step=\"1\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditCohesionRange\"\r\n        @keyup.enter=\"stopEditCohesionRange\"\r\n        ref=\"cohesionRangeInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>分離<br>(Separation):</label>\r\n      <input type=\"range\" v-model.number=\"settings.separation\" min=\"0\" max=\"10\" step=\"0.01\" />\r\n      <span \r\n        v-if=\"!editingSeparation\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditSeparation\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.separation }}</span>\r\n      <input \r\n        v-if=\"editingSeparation\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.separation\" \r\n        min=\"0\" \r\n        max=\"10\"\r\n        step=\"0.01\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditSeparation\"\r\n        @keyup.enter=\"stopEditSeparation\"\r\n        ref=\"separationInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>分離範囲<br>(Separation Range):</label>\r\n      <input type=\"range\" v-model.number=\"settings.separationRange\" min=\"0.1\" max=\"10\" step=\"0.1\" />\r\n      <span \r\n        v-if=\"!editingSeparationRange\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditSeparationRange\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.separationRange }}</span>\r\n      <input \r\n        v-if=\"editingSeparationRange\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.separationRange\" \r\n        min=\"0.1\" \r\n        max=\"10\"\r\n        step=\"0.1\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditSeparationRange\"\r\n        @keyup.enter=\"stopEditSeparationRange\"\r\n        ref=\"separationRangeInput\"\r\n      />\r\n    </div>    <div class=\"setting-row\">\r\n      <label>整列<br>(Alignment):</label>\r\n      <input type=\"range\" v-model.number=\"settings.alignment\" min=\"0\" max=\"20\" step=\"0.01\" />\r\n      <span \r\n        v-if=\"!editingAlignment\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditAlignment\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.alignment }}</span>\r\n      <input \r\n        v-if=\"editingAlignment\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.alignment\" \r\n        min=\"0\" \r\n        max=\"20\"\r\n        step=\"0.01\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditAlignment\"\r\n        @keyup.enter=\"stopEditAlignment\"\r\n        ref=\"alignmentInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>整列範囲<br>(Alignment Range):</label>\r\n      <input type=\"range\" v-model.number=\"settings.alignmentRange\" min=\"1\" max=\"100\" step=\"1\" />\r\n      <span \r\n        v-if=\"!editingAlignmentRange\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditAlignmentRange\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.alignmentRange }}</span>\r\n      <input \r\n        v-if=\"editingAlignmentRange\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.alignmentRange\" \r\n        min=\"1\" \r\n        max=\"100\"\r\n        step=\"1\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditAlignmentRange\"\r\n        @keyup.enter=\"stopEditAlignmentRange\"\r\n        ref=\"alignmentRangeInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>最大速度<br>(Max Speed):</label>\r\n      <input type=\"range\" v-model.number=\"settings.maxSpeed\" min=\"0.1\" max=\"2\" step=\"0.01\" />\r\n      <span \r\n        v-if=\"!editingMaxSpeed\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditMaxSpeed\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.maxSpeed }}</span>\r\n      <input \r\n        v-if=\"editingMaxSpeed\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.maxSpeed\" \r\n        min=\"0.1\" \r\n        max=\"2\"\r\n        step=\"0.01\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditMaxSpeed\"\r\n        @keyup.enter=\"stopEditMaxSpeed\"\r\n        ref=\"maxSpeedInput\"\r\n      />\r\n    </div>    <div class=\"setting-row\">\r\n      <label>最大旋回角<br>(Max Turn Angle):</label>\r\n      <input type=\"range\" v-model.number=\"settings.maxTurnAngle\" min=\"0.001\" max=\"0.3\" step=\"0.001\" />\r\n      <span \r\n        v-if=\"!editingMaxTurnAngle\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditMaxTurnAngle\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.maxTurnAngle }}</span>\r\n      <input \r\n        v-if=\"editingMaxTurnAngle\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.maxTurnAngle\" \r\n        min=\"0.001\" \r\n        max=\"0.3\"\r\n        step=\"0.001\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditMaxTurnAngle\"\r\n        @keyup.enter=\"stopEditMaxTurnAngle\"\r\n        ref=\"maxTurnAngleInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>最大近傍数<br>(Max Neighbors):</label>\r\n      <input type=\"range\" v-model.number=\"settings.maxNeighbors\" min=\"0\" max=\"32\" step=\"1\" />\r\n      <span \r\n        v-if=\"!editingMaxNeighbors\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditMaxNeighbors\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.maxNeighbors }}</span>\r\n      <input \r\n        v-if=\"editingMaxNeighbors\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.maxNeighbors\" \r\n        min=\"0\" \r\n        max=\"32\"\r\n        step=\"1\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditMaxNeighbors\"\r\n        @keyup.enter=\"stopEditMaxNeighbors\"\r\n        ref=\"maxNeighborsInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>水平化トルク<br>(Horizontal Torque):</label>\r\n      <input type=\"range\" v-model.number=\"settings.horizontalTorque\" min=\"0.0\" max=\"0.2\" step=\"0.001\" />\r\n      <span \r\n        v-if=\"!editingHorizontalTorque\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditHorizontalTorque\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.horizontalTorque }}</span>\r\n      <input \r\n        v-if=\"editingHorizontalTorque\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.horizontalTorque\" \r\n        min=\"0.0\" \r\n        max=\"0.2\"\r\n        step=\"0.001\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditHorizontalTorque\"\r\n        @keyup.enter=\"stopEditHorizontalTorque\"\r\n        ref=\"horizontalTorqueInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>回転トルク強度<br>(Torque Strength):</label>\r\n      <input type=\"range\" v-model.number=\"settings.torqueStrength\" min=\"0.0\" max=\"20\" step=\"0.001\" />\r\n      <span \r\n        v-if=\"!editingTorqueStrength\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditTorqueStrength\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.torqueStrength }}</span>\r\n      <input \r\n        v-if=\"editingTorqueStrength\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.torqueStrength\" \r\n        min=\"0.0\" \r\n        max=\"5\"\r\n        step=\"0.001\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditTorqueStrength\"\r\n        @keyup.enter=\"stopEditTorqueStrength\"\r\n        ref=\"torqueStrengthInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>減衰係数<br>(Damping Coefficient):</label>\r\n      <input type=\"range\" v-model.number=\"settings.lambda\" min=\"0\" max=\"1\" step=\"0.001\" />\r\n      <span \r\n        v-if=\"!editingLambda\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditLambda\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.lambda }}</span>\r\n      <input \r\n        v-if=\"editingLambda\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.lambda\" \r\n        min=\"0\" \r\n        max=\"1\"\r\n        step=\"0.001\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditLambda\"\r\n        @keyup.enter=\"stopEditLambda\"\r\n        ref=\"lambdaInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>記憶時間<br>(Memory Time):</label>\r\n      <input type=\"range\" v-model.number=\"settings.tau\" min=\"0\" max=\"5\" step=\"0.01\" />\r\n      <span \r\n        v-if=\"!editingTau\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditTau\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.tau }}</span>\r\n      <input \r\n        v-if=\"editingTau\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.tau\" \r\n        min=\"0\" \r\n        max=\"5\"\r\n        step=\"0.01\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditTau\"\r\n        @keyup.enter=\"stopEditTau\"\r\n        ref=\"tauInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>捕食者フラグ<br>(Is Predator):</label>\r\n      <input type=\"checkbox\" v-model=\"settings.isPredator\" />\r\n      <span>{{ settings.isPredator }}</span>\r\n    </div>\r\n      </div>\r\n    </details>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, nextTick, watch } from 'vue';\r\n\r\nconst emit = defineEmits(['remove']);\r\n\r\nconst props = defineProps({\r\n  settings: {\r\n    type: Object,\r\n    required: true\r\n  },\r\n  canRemove: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n});\r\n\r\nconst settings = props.settings;\r\n\r\n// 編集状態のref\r\nconst editingCount = ref(false);\r\nconst editingCohesion = ref(false);\r\nconst editingCohesionRange = ref(false);\r\nconst editingSeparation = ref(false);\r\nconst editingSeparationRange = ref(false);\r\nconst editingAlignment = ref(false);\r\nconst editingAlignmentRange = ref(false);\r\nconst editingMaxSpeed = ref(false);\r\nconst editingMaxTurnAngle = ref(false);\r\nconst editingMaxNeighbors = ref(false);\r\nconst editingHorizontalTorque = ref(false);\r\nconst editingTorqueStrength = ref(false);\r\nconst editingLambda = ref(false);\r\nconst editingTau = ref(false);\r\n\r\n// 入力フィールドのref\r\nconst countInput = ref(null);\r\nconst cohesionInput = ref(null);\r\nconst cohesionRangeInput = ref(null);\r\nconst separationInput = ref(null);\r\nconst separationRangeInput = ref(null);\r\nconst alignmentInput = ref(null);\r\nconst alignmentRangeInput = ref(null);\r\nconst maxSpeedInput = ref(null);\r\nconst maxTurnAngleInput = ref(null);\r\nconst maxNeighborsInput = ref(null);\r\nconst horizontalTorqueInput = ref(null);\r\nconst torqueStrengthInput = ref(null);\r\nconst lambdaInput = ref(null);\r\nconst tauInput = ref(null);\r\n\r\nconst countDraft = ref(settings.count ?? 0);\r\n\r\nwatch(\r\n  () => settings.count,\r\n  (value) => {\r\n    if (!editingCount.value) {\r\n      countDraft.value = value ?? 0;\r\n    }\r\n  }\r\n);\r\n\r\n// 編集開始関数\r\nasync function startEditCount() {\r\n  editingCount.value = true;\r\n  countDraft.value = settings.count ?? 0;\r\n  await nextTick();\r\n  if (countInput.value) {\r\n    countInput.value.focus();\r\n    countInput.value.select();\r\n  }\r\n}\r\n\r\nfunction cancelCountEdit() {\r\n  editingCount.value = false;\r\n  countDraft.value = settings.count ?? 0;\r\n}\r\n\r\nfunction applyCountDraft() {\r\n  const nextValue = Math.max(0, Math.round(Number.isFinite(countDraft.value) ? countDraft.value : 0));\r\n  if (settings.count !== nextValue) {\r\n    settings.count = nextValue;\r\n  }\r\n}\r\n\r\nfunction commitCountFromSlider() {\r\n  applyCountDraft();\r\n}\r\n\r\nfunction commitCountFromInput() {\r\n  applyCountDraft();\r\n  cancelCountEdit();\r\n}\r\n\r\nfunction emitRemove() {\r\n  emit('remove');\r\n}\r\n\r\nasync function startEditCohesion() {\r\n  editingCohesion.value = true;\r\n  await nextTick();\r\n  if (cohesionInput.value) {\r\n    cohesionInput.value.focus();\r\n    cohesionInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditCohesionRange() {\r\n  editingCohesionRange.value = true;\r\n  await nextTick();\r\n  if (cohesionRangeInput.value) {\r\n    cohesionRangeInput.value.focus();\r\n    cohesionRangeInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditSeparation() {\r\n  editingSeparation.value = true;\r\n  await nextTick();\r\n  if (separationInput.value) {\r\n    separationInput.value.focus();\r\n    separationInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditSeparationRange() {\r\n  editingSeparationRange.value = true;\r\n  await nextTick();\r\n  if (separationRangeInput.value) {\r\n    separationRangeInput.value.focus();\r\n    separationRangeInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditAlignment() {\r\n  editingAlignment.value = true;\r\n  await nextTick();\r\n  if (alignmentInput.value) {\r\n    alignmentInput.value.focus();\r\n    alignmentInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditAlignmentRange() {\r\n  editingAlignmentRange.value = true;\r\n  await nextTick();\r\n  if (alignmentRangeInput.value) {\r\n    alignmentRangeInput.value.focus();\r\n    alignmentRangeInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditMaxSpeed() {\r\n  editingMaxSpeed.value = true;\r\n  await nextTick();\r\n  if (maxSpeedInput.value) {\r\n    maxSpeedInput.value.focus();\r\n    maxSpeedInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditMaxTurnAngle() {\r\n  editingMaxTurnAngle.value = true;\r\n  await nextTick();\r\n  if (maxTurnAngleInput.value) {\r\n    maxTurnAngleInput.value.focus();\r\n    maxTurnAngleInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditMaxNeighbors() {\r\n  editingMaxNeighbors.value = true;\r\n  await nextTick();\r\n  if (maxNeighborsInput.value) {\r\n    maxNeighborsInput.value.focus();\r\n    maxNeighborsInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditHorizontalTorque() {\r\n  editingHorizontalTorque.value = true;\r\n  await nextTick();\r\n  if (horizontalTorqueInput.value) {\r\n    horizontalTorqueInput.value.focus();\r\n    horizontalTorqueInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditTorqueStrength() {\r\n  editingTorqueStrength.value = true;\r\n  await nextTick();\r\n  if (torqueStrengthInput.value) {\r\n    torqueStrengthInput.value.focus();\r\n    torqueStrengthInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditLambda() {\r\n  editingLambda.value = true;\r\n  await nextTick();\r\n  if (lambdaInput.value) {\r\n    lambdaInput.value.focus();\r\n    lambdaInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditTau() {\r\n  editingTau.value = true;\r\n  await nextTick();\r\n  if (tauInput.value) {\r\n    tauInput.value.focus();\r\n    tauInput.value.select();\r\n  }\r\n}\r\n\r\nfunction stopEditCohesion() {\r\n  editingCohesion.value = false;\r\n}\r\n\r\nfunction stopEditCohesionRange() {\r\n  editingCohesionRange.value = false;\r\n}\r\n\r\nfunction stopEditSeparation() {\r\n  editingSeparation.value = false;\r\n}\r\n\r\nfunction stopEditSeparationRange() {\r\n  editingSeparationRange.value = false;\r\n}\r\n\r\nfunction stopEditAlignment() {\r\n  editingAlignment.value = false;\r\n}\r\n\r\nfunction stopEditAlignmentRange() {\r\n  editingAlignmentRange.value = false;\r\n}\r\n\r\nfunction stopEditMaxSpeed() {\r\n  editingMaxSpeed.value = false;\r\n}\r\n\r\nfunction stopEditMaxTurnAngle() {\r\n  editingMaxTurnAngle.value = false;\r\n}\r\n\r\nfunction stopEditMaxNeighbors() {\r\n  editingMaxNeighbors.value = false;\r\n}\r\n\r\nfunction stopEditHorizontalTorque() {\r\n  editingHorizontalTorque.value = false;\r\n}\r\n\r\nfunction stopEditTorqueStrength() {\r\n  editingTorqueStrength.value = false;\r\n}\r\n\r\nfunction stopEditLambda() {\r\n  editingLambda.value = false;\r\n}\r\n\r\nfunction stopEditTau() {\r\n  editingTau.value = false;\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.settings {\r\n  margin-bottom: 20px;\r\n  width: 100%;\r\n  min-width: 260px;\r\n  max-width: 520px;\r\n  box-sizing: border-box;\r\n  pointer-events: auto;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n.setting-row {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 8px;\r\n  width: 100%;\r\n}\r\n.setting-row label {\r\n  width: 130px;\r\n  text-align: left;\r\n  margin-right: 10px;\r\n  flex-shrink: 0;\r\n  display: inline-block;\r\n}\r\n.setting-row input[type=\"range\"] {\r\n  width: 120px;\r\n  min-width: 80px;\r\n  max-width: 200px;\r\n  margin: 0 10px;\r\n  flex: none;\r\n  display: inline-block;\r\n}\r\n.setting-row span {\r\n  width: 60px;\r\n  text-align: left;\r\n  display: inline-block;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.editable-value {\r\n  cursor: pointer;\r\n  padding: 2px 4px;\r\n  border-radius: 3px;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.editable-value:hover {\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  text-decoration: underline;\r\n}\r\n\r\n.value-input {\r\n  width: 60px;\r\n  padding: 2px 4px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 3px;\r\n  background: transparent;\r\n  color: inherit;\r\n  font-size: inherit;\r\n  text-align: left;\r\n}\r\n\r\n.value-input:focus {\r\n  outline: none;\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 3px rgba(0, 123, 255, 0.3);\r\n}\r\n\r\n.species-section {\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n  background-color: rgba(255, 255, 255, 0.05);\r\n  pointer-events: auto;\r\n  position: relative;\r\n  overflow: visible;\r\n  max-width: 100%;\r\n  width: fit-content;\r\n  min-width: 260px;\r\n}\r\n\r\n.species-header {\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  border-radius: 5px 5px 0 0;\r\n  user-select: none;\r\n  pointer-events: auto;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  gap: 8px;\r\n}\r\n\r\n.species-title {\r\n  flex: 1;\r\n}\r\n\r\n.species-remove {\r\n  pointer-events: auto;\r\n  background: #d9534f;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 4px 8px;\r\n  font-size: 0.8rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.species-remove:hover {\r\n  background: #c9302c;\r\n}\r\n\r\n.species-header:hover {\r\n  background-color: rgba(255, 255, 255, 0.15);\r\n}\r\n\r\n.species-content {\r\n  padding: 10px;\r\n  pointer-events: auto;\r\n  position: relative;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n}\r\n</style>","import script from \"./Settings.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Settings.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Settings.vue?vue&type=style&index=0&id=5992d372&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5992d372\"]])\n\nexport default __exports__","import * as THREE from 'three';\r\n\r\n/**\r\n * Boid のインスタンシング描画管理クラス。\r\n * ハイ/ロー LOD インスタンスを三重バッファで更新し、尾びれアニメ用の uniform を注入します。\r\n */\r\nexport class BoidInstancing {\r\n  constructor({\r\n    tailAnimation,\r\n    tripleBufferSize = 3,        // インスタンス更新に用いるバッファ数（遅延許容量）\r\n    hiddenPosition = 1e6,        // 非表示時に退避させる座標\r\n    identityQuaternion = [0, 0, 0, 1], // 非表示時に適用する無回転クォータニオン\r\n    lodNearDistanceSq = 4,       // ハイポリ表示に切り替える距離²（約2m）\r\n    lodMidDistanceSq = 25,       // LOD メッシュ＋アニメを行う距離²（約5m）\r\n  } = {}) {\r\n    this.tailAnimation = tailAnimation;\r\n    this.tripleBufferSize = tripleBufferSize;\r\n    this.hiddenPosition = hiddenPosition;\r\n    this.identityQuaternion = identityQuaternion;\r\n    this.lodNearDistanceSq = lodNearDistanceSq;\r\n    this.lodMidDistanceSq = lodMidDistanceSq;\r\n    this.streamUsage = THREE.StreamDrawUsage ?? THREE.DynamicDrawUsage;\r\n\r\n    this.scene = null;\r\n    this.count = 0;\r\n\r\n    this.instancedMeshHigh = null;\r\n    this.instancedMeshLow = null;\r\n    this.instancingMaterials = new Set();\r\n\r\n    this.bufferSetHigh = null;\r\n    this.bufferSetLow = null;\r\n    this.tailPhaseSeeds = null;\r\n    this.bufferCursor = 0;\r\n\r\n    this.previousVelocities = null;\r\n    this.previousLodFlags = null;\r\n\r\n    this.predatorModel = null;\r\n    this.predatorMeshes = [];\r\n    this.predatorMeshCountCache = -1;\r\n  }\r\n\r\n  init(scene, {\r\n    count,\r\n    boidModel,\r\n    boidModelLod,\r\n    highMaterial,\r\n    lowMaterial,\r\n    predatorModel = null,\r\n  }) {\r\n    if (!scene || !boidModel || !boidModelLod || !highMaterial || !lowMaterial) {\r\n      console.error('BoidInstancing.init: missing required arguments.');\r\n      return false;\r\n    }\r\n    if (!boidModel.children?.length || !boidModel.children[0].geometry) {\r\n      console.error('BoidInstancing.init: invalid high model.');\r\n      return false;\r\n    }\r\n    if (!boidModelLod.children?.length || !boidModelLod.children[0].geometry) {\r\n      console.error('BoidInstancing.init: invalid LOD model.');\r\n      return false;\r\n    }\r\n\r\n    this.dispose(scene);\r\n\r\n    this.scene = scene;\r\n    this.count = count;\r\n    if (predatorModel) {\r\n      this.predatorModel = predatorModel;\r\n    }\r\n\r\n    const highMaterialClone = highMaterial.clone();\r\n    const lowMaterialClone = lowMaterial.clone();\r\n    this.patchMaterial(highMaterialClone);\r\n    this.patchMaterial(lowMaterialClone);\r\n\r\n    // モデルごとの頂点属性を複製してから必要な属性を追加する\r\n    const highGeometry = boidModel.children[0].geometry.clone();\r\n    const lowGeometry = boidModelLod.children[0].geometry.clone();\r\n    this.ensureBodyCoordAttribute(highGeometry);\r\n    this.ensureBodyCoordAttribute(lowGeometry);\r\n\r\n    this.instancedMeshHigh = new THREE.InstancedMesh(highGeometry, highMaterialClone, count);\r\n    this.configureInstancedMesh(this.instancedMeshHigh, highMaterialClone);\r\n\r\n    this.instancedMeshLow = new THREE.InstancedMesh(lowGeometry, lowMaterialClone, count);\r\n    this.configureInstancedMesh(this.instancedMeshLow, lowMaterialClone);\r\n\r\n    scene.add(this.instancedMeshHigh);\r\n    scene.add(this.instancedMeshLow);\r\n\r\n    this.bufferSetHigh = this.createBufferSet(count);\r\n    this.bufferSetLow = this.createBufferSet(count);\r\n    this.resetBufferSetToHidden(this.bufferSetHigh);\r\n    this.resetBufferSetToHidden(this.bufferSetLow);\r\n\r\n    this.tailPhaseSeeds = this.createTailPhaseArray(count);\r\n    this.applyTailPhaseSeeds(this.bufferSetHigh, this.tailPhaseSeeds);\r\n    this.applyTailPhaseSeeds(this.bufferSetLow, this.tailPhaseSeeds);\r\n\r\n    this.bufferCursor = 0;\r\n    this.applyBufferSet(this.instancedMeshHigh, this.bufferSetHigh, this.bufferCursor);\r\n    this.applyBufferSet(this.instancedMeshLow, this.bufferSetLow, this.bufferCursor);\r\n\r\n    this.instancedMeshHigh.instanceMatrix.setUsage(THREE.StaticDrawUsage);\r\n    this.instancedMeshLow.instanceMatrix.setUsage(THREE.StaticDrawUsage);\r\n    this.instancedMeshHigh.count = count;\r\n    this.instancedMeshLow.count = count;\r\n\r\n    this.previousVelocities = null;\r\n    this.previousLodFlags = null;\r\n\r\n    if (this.scene && this.predatorModel) {\r\n      this.ensurePredatorMeshes(0);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * シミュレーション出力を三重バッファへ書き込み、LOD ごとにインスタンスを切り替える。\r\n   */\r\n  update({\r\n    count,\r\n    positions,\r\n    orientations,\r\n    velocities,\r\n    cameraPosition,\r\n    predatorCount = 0,\r\n  }) {\r\n    if (!this.instancedMeshHigh || !this.instancedMeshLow || !this.bufferSetHigh || !this.bufferSetLow) {\r\n      return { visibleCount: 0 };\r\n    }\r\n    if (!positions || !orientations) {\r\n      return { visibleCount: 0 };\r\n    }\r\n\r\n    this.ensureTailRuntimeBuffers(count);\r\n    const lodFlags = this.ensureLodFlagBuffer(count);\r\n\r\n    const currentIndex = this.bufferCursor;\r\n    const nextIndex = (currentIndex + 1) % this.tripleBufferSize;\r\n\r\n    const highPosAttr = this.bufferSetHigh.pos[currentIndex];\r\n    const highQuatAttr = this.bufferSetHigh.quat[currentIndex];\r\n    const highTailParamsAttr = this.bufferSetHigh.tailParams[currentIndex];\r\n    const lowPosAttr = this.bufferSetLow.pos[currentIndex];\r\n    const lowQuatAttr = this.bufferSetLow.quat[currentIndex];\r\n    const lowTailParamsAttr = this.bufferSetLow.tailParams[currentIndex];\r\n\r\n    const highPosArray = highPosAttr.array;\r\n    const highQuatArray = highQuatAttr.array;\r\n    const highTailParamsArray = highTailParamsAttr.array;\r\n    const lowPosArray = lowPosAttr.array;\r\n    const lowQuatArray = lowQuatAttr.array;\r\n    const lowTailParamsArray = lowTailParamsAttr.array;\r\n\r\n    let highTransformTouched = false;\r\n    let lowTransformTouched = false;\r\n    let highTailTouched = false;\r\n    let lowTailTouched = false;\r\n\r\n    const camX = cameraPosition?.x ?? 0;\r\n    const camY = cameraPosition?.y ?? 0;\r\n    const camZ = cameraPosition?.z ?? 0;\r\n\r\n    const predatorStartIndex = predatorCount > 0 ? Math.max(0, count - predatorCount) : count;\r\n    if (this.scene && this.predatorModel) {\r\n      if (this.ensurePredatorMeshes(predatorCount)) {\r\n        this.predatorMeshCountCache = predatorCount;\r\n      }\r\n      for (const mesh of this.predatorMeshes) {\r\n        mesh.visible = false;\r\n      }\r\n    }\r\n\r\n    const hiddenPos = this.hiddenPosition;\r\n    const idQuat = this.identityQuaternion;\r\n    const prevVel = this.previousVelocities;\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      const basePos = i * 3;\r\n      const baseQuat = i * 4;\r\n      const tailIndex = i * 3;\r\n\r\n      const px = positions[basePos];\r\n      const py = positions[basePos + 1];\r\n      const pz = positions[basePos + 2];\r\n\r\n      const dx = px - camX;\r\n      const dy = py - camY;\r\n      const dz = pz - camZ;\r\n      // 高負荷を避けるため距離で LOD を切り替える\r\n      const distSq = dx * dx + dy * dy + dz * dz;\r\n      const isNear = distSq < this.lodNearDistanceSq;\r\n      const isMid = !isNear && distSq < this.lodMidDistanceSq;\r\n      const animateTail = isNear || isMid;\r\n\r\n      const qx = orientations[baseQuat];\r\n      const qy = orientations[baseQuat + 1];\r\n      const qz = orientations[baseQuat + 2];\r\n      const qw = orientations[baseQuat + 3];\r\n\r\n      const isPredator = i >= predatorStartIndex && predatorCount > 0;\r\n      if (isPredator) {\r\n        const meshIndex = i - predatorStartIndex;\r\n        const predatorMesh = this.predatorMeshes[meshIndex];\r\n        if (predatorMesh) {\r\n          predatorMesh.visible = true;\r\n          predatorMesh.position.set(px, py, pz);\r\n          predatorMesh.quaternion.set(qx, qy, qz, qw);\r\n        }\r\n\r\n        // 捕食者は別メッシュで描画するためインスタンス側は非表示にする\r\n        if (\r\n          highPosArray[basePos] !== hiddenPos ||\r\n          highPosArray[basePos + 1] !== hiddenPos ||\r\n          highPosArray[basePos + 2] !== hiddenPos ||\r\n          highQuatArray[baseQuat] !== idQuat[0] ||\r\n          highQuatArray[baseQuat + 1] !== idQuat[1] ||\r\n          highQuatArray[baseQuat + 2] !== idQuat[2] ||\r\n          highQuatArray[baseQuat + 3] !== idQuat[3]\r\n        ) {\r\n          highPosArray[basePos] = hiddenPos;\r\n          highPosArray[basePos + 1] = hiddenPos;\r\n          highPosArray[basePos + 2] = hiddenPos;\r\n          highQuatArray[baseQuat] = idQuat[0];\r\n          highQuatArray[baseQuat + 1] = idQuat[1];\r\n          highQuatArray[baseQuat + 2] = idQuat[2];\r\n          highQuatArray[baseQuat + 3] = idQuat[3];\r\n          highTransformTouched = true;\r\n        }\r\n\r\n        if (\r\n          lowPosArray[basePos] !== hiddenPos ||\r\n          lowPosArray[basePos + 1] !== hiddenPos ||\r\n          lowPosArray[basePos + 2] !== hiddenPos ||\r\n          lowQuatArray[baseQuat] !== idQuat[0] ||\r\n          lowQuatArray[baseQuat + 1] !== idQuat[1] ||\r\n          lowQuatArray[baseQuat + 2] !== idQuat[2] ||\r\n          lowQuatArray[baseQuat + 3] !== idQuat[3]\r\n        ) {\r\n          lowPosArray[basePos] = hiddenPos;\r\n          lowPosArray[basePos + 1] = hiddenPos;\r\n          lowPosArray[basePos + 2] = hiddenPos;\r\n          lowQuatArray[baseQuat] = idQuat[0];\r\n          lowQuatArray[baseQuat + 1] = idQuat[1];\r\n          lowQuatArray[baseQuat + 2] = idQuat[2];\r\n          lowQuatArray[baseQuat + 3] = idQuat[3];\r\n          lowTransformTouched = true;\r\n        }\r\n\r\n        if (highTailParamsArray[tailIndex] !== 0 || highTailParamsArray[tailIndex + 1] !== 0 || highTailParamsArray[tailIndex + 2] !== 0) {\r\n          highTailParamsArray[tailIndex] = 0;\r\n          highTailParamsArray[tailIndex + 1] = 0;\r\n          highTailParamsArray[tailIndex + 2] = 0;\r\n          highTailTouched = true;\r\n        }\r\n        if (lowTailParamsArray[tailIndex] !== 0 || lowTailParamsArray[tailIndex + 1] !== 0 || lowTailParamsArray[tailIndex + 2] !== 0) {\r\n          lowTailParamsArray[tailIndex] = 0;\r\n          lowTailParamsArray[tailIndex + 1] = 0;\r\n          lowTailParamsArray[tailIndex + 2] = 0;\r\n          lowTailTouched = true;\r\n        }\r\n\r\n        if (lodFlags) {\r\n          lodFlags[i] = 0;\r\n        }\r\n        if (prevVel) {\r\n          prevVel[basePos] = 0;\r\n          prevVel[basePos + 1] = 0;\r\n          prevVel[basePos + 2] = 0;\r\n        }\r\n        continue;\r\n      }\r\n\r\n      const vx = velocities ? velocities[basePos] : 0;\r\n      const vy = velocities ? velocities[basePos + 1] : 0;\r\n      const vz = velocities ? velocities[basePos + 2] : 0;\r\n      const speed = Math.hypot(vx, vy, vz);\r\n      const prevVx = prevVel ? prevVel[basePos] : 0;\r\n      const prevVy = prevVel ? prevVel[basePos + 1] : 0;\r\n      const prevVz = prevVel ? prevVel[basePos + 2] : 0;\r\n      const prevLen = Math.hypot(prevVx, prevVy, prevVz);\r\n\r\n      let turnAmount = 0;\r\n      if (prevLen > 1e-5 && speed > 1e-5) {\r\n        // 前フレームからの向きの差異を Y 軸回転量として近似\r\n        const crossY = prevVz * vx - prevVx * vz;\r\n        const dot = prevVx * vx + prevVy * vy + prevVz * vz;\r\n        turnAmount = Math.atan2(crossY, dot);\r\n      }\r\n\r\n      const tailSpeedValue = animateTail ? speed : 0;\r\n      const tailTurnValue = animateTail ? turnAmount : 0;\r\n      const driveValue = animateTail ? 1 : 0;\r\n\r\n      if (isNear) {\r\n        highPosArray[basePos] = px;\r\n        highPosArray[basePos + 1] = py;\r\n        highPosArray[basePos + 2] = pz;\r\n        highQuatArray[baseQuat] = qx;\r\n        highQuatArray[baseQuat + 1] = qy;\r\n        highQuatArray[baseQuat + 2] = qz;\r\n        highQuatArray[baseQuat + 3] = qw;\r\n        highTransformTouched = true;\r\n\r\n        if (\r\n          lowPosArray[basePos] !== hiddenPos ||\r\n          lowPosArray[basePos + 1] !== hiddenPos ||\r\n          lowPosArray[basePos + 2] !== hiddenPos ||\r\n          lowQuatArray[baseQuat] !== idQuat[0] ||\r\n          lowQuatArray[baseQuat + 1] !== idQuat[1] ||\r\n          lowQuatArray[baseQuat + 2] !== idQuat[2] ||\r\n          lowQuatArray[baseQuat + 3] !== idQuat[3]\r\n        ) {\r\n          lowPosArray[basePos] = hiddenPos;\r\n          lowPosArray[basePos + 1] = hiddenPos;\r\n          lowPosArray[basePos + 2] = hiddenPos;\r\n          lowQuatArray[baseQuat] = idQuat[0];\r\n          lowQuatArray[baseQuat + 1] = idQuat[1];\r\n          lowQuatArray[baseQuat + 2] = idQuat[2];\r\n          lowQuatArray[baseQuat + 3] = idQuat[3];\r\n          lowTransformTouched = true;\r\n        }\r\n\r\n        highTailParamsArray[tailIndex] = tailSpeedValue;\r\n        highTailParamsArray[tailIndex + 1] = tailTurnValue;\r\n        highTailParamsArray[tailIndex + 2] = driveValue;\r\n        highTailTouched = true;\r\n\r\n        if (\r\n          lowTailParamsArray[tailIndex] !== 0 ||\r\n          lowTailParamsArray[tailIndex + 1] !== 0 ||\r\n          lowTailParamsArray[tailIndex + 2] !== 0\r\n        ) {\r\n          lowTailParamsArray[tailIndex] = 0;\r\n          lowTailParamsArray[tailIndex + 1] = 0;\r\n          lowTailParamsArray[tailIndex + 2] = 0;\r\n          lowTailTouched = true;\r\n        }\r\n      } else {\r\n        lowPosArray[basePos] = px;\r\n        lowPosArray[basePos + 1] = py;\r\n        lowPosArray[basePos + 2] = pz;\r\n        lowQuatArray[baseQuat] = qx;\r\n        lowQuatArray[baseQuat + 1] = qy;\r\n        lowQuatArray[baseQuat + 2] = qz;\r\n        lowQuatArray[baseQuat + 3] = qw;\r\n        lowTransformTouched = true;\r\n\r\n        if (\r\n          highPosArray[basePos] !== hiddenPos ||\r\n          highPosArray[basePos + 1] !== hiddenPos ||\r\n          highPosArray[basePos + 2] !== hiddenPos ||\r\n          highQuatArray[baseQuat] !== idQuat[0] ||\r\n          highQuatArray[baseQuat + 1] !== idQuat[1] ||\r\n          highQuatArray[baseQuat + 2] !== idQuat[2] ||\r\n          highQuatArray[baseQuat + 3] !== idQuat[3]\r\n        ) {\r\n          highPosArray[basePos] = hiddenPos;\r\n          highPosArray[basePos + 1] = hiddenPos;\r\n          highPosArray[basePos + 2] = hiddenPos;\r\n          highQuatArray[baseQuat] = idQuat[0];\r\n          highQuatArray[baseQuat + 1] = idQuat[1];\r\n          highQuatArray[baseQuat + 2] = idQuat[2];\r\n          highQuatArray[baseQuat + 3] = idQuat[3];\r\n          highTransformTouched = true;\r\n        }\r\n\r\n        lowTailParamsArray[tailIndex] = tailSpeedValue;\r\n        lowTailParamsArray[tailIndex + 1] = tailTurnValue;\r\n        lowTailParamsArray[tailIndex + 2] = driveValue;\r\n        lowTailTouched = true;\r\n\r\n        if (\r\n          highTailParamsArray[tailIndex] !== 0 ||\r\n          highTailParamsArray[tailIndex + 1] !== 0 ||\r\n          highTailParamsArray[tailIndex + 2] !== 0\r\n        ) {\r\n          highTailParamsArray[tailIndex] = 0;\r\n          highTailParamsArray[tailIndex + 1] = 0;\r\n          highTailParamsArray[tailIndex + 2] = 0;\r\n          highTailTouched = true;\r\n        }\r\n      }\r\n\r\n      if (lodFlags) {\r\n        lodFlags[i] = isNear ? 1 : 2;\r\n      }\r\n\r\n      if (prevVel) {\r\n        prevVel[basePos] = vx;\r\n        prevVel[basePos + 1] = vy;\r\n        prevVel[basePos + 2] = vz;\r\n      }\r\n    }\r\n\r\n    const visibleCount = predatorCount > 0 ? Math.max(0, count - predatorCount) : count;\r\n    this.instancedMeshHigh.count = visibleCount;\r\n    this.instancedMeshLow.count = visibleCount;\r\n\r\n    this.applyBufferSet(this.instancedMeshHigh, this.bufferSetHigh, currentIndex);\r\n    this.applyBufferSet(this.instancedMeshLow, this.bufferSetLow, currentIndex);\r\n\r\n    highPosAttr.needsUpdate = highTransformTouched;\r\n    highQuatAttr.needsUpdate = highTransformTouched;\r\n    lowPosAttr.needsUpdate = lowTransformTouched;\r\n    lowQuatAttr.needsUpdate = lowTransformTouched;\r\n    highTailParamsAttr.needsUpdate = highTailTouched;\r\n    lowTailParamsAttr.needsUpdate = lowTailTouched;\r\n\r\n    this.bufferCursor = nextIndex;\r\n\r\n    return {\r\n      visibleCount,\r\n      lodFlags,\r\n    };\r\n  }\r\n\r\n  forEachInstancingMaterial(callback) {\r\n    for (const material of this.instancingMaterials) {\r\n      callback(material);\r\n    }\r\n  }\r\n\r\n  getMeshes() {\r\n    return {\r\n      high: this.instancedMeshHigh,\r\n      low: this.instancedMeshLow,\r\n    };\r\n  }\r\n\r\n  getPredatorMeshes() {\r\n    return this.predatorMeshes;\r\n  }\r\n\r\n  setTailUniformTime(time) {\r\n    if (!this.tailAnimation?.uniforms) return;\r\n    if (this.tailAnimation.uniforms.uTailTime) {\r\n      this.tailAnimation.uniforms.uTailTime.value = time;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 元マテリアルへ尾びれアニメ用 uniform と頂点シェーダ拡張を差し込みます。\r\n   */\r\n  patchMaterial(material) {\r\n    if (!material || material.userData?.instancingPatched) return;\r\n    const uniforms = this.tailAnimation?.uniforms;\r\n    if (!uniforms) {\r\n      console.warn('BoidInstancing.patchMaterial: tailAnimation.uniforms が未設定です');\r\n    }\r\n\r\n    material.onBeforeCompile = (shader) => {\r\n      if (uniforms) {\r\n        // 元シェーダーへ尾びれアニメ用の uniform を全て注入\r\n        Object.entries(uniforms).forEach(([key, uniform]) => {\r\n          shader.uniforms[key] = uniform;\r\n        });\r\n      }\r\n\r\n      shader.vertexShader = shader.vertexShader\r\n        .replace(\r\n          '#include <common>',\r\n          `#include <common>\\nattribute vec3 instancePos;\\nattribute vec4 instanceQuat;\\nattribute float aBodyCoord;\\nattribute float instanceTailPhase;\\nattribute vec3 instanceTailParams;\\nuniform float uTailTime;\\nuniform float uTailAmplitude;\\nuniform float uTailFrequency;\\nuniform float uTailPhaseStride;\\nuniform float uTailTurnStrength;\\nuniform float uTailSpeedScale;\\nuniform vec3 uTailRight;\\nuniform vec3 uTailForward;\\nuniform vec3 uTailUp;\\nuniform float uTailEnable;\\nuniform sampler2D uSinLut;\\nuniform float uLutSize;\\nvec3 quatTransform(vec3 v, vec4 q) {\\n  vec3 t = 2.0 * cross(q.xyz, v);\\n  return v + q.w * t + cross(q.xyz, t);\\n}\\nvec2 sampleSinCos(float angle) {\\n  float u = fract(angle * 0.15915494309189535);\\n  u = u * (uLutSize - 1.0) + 0.5;\\n  vec4 lutSample = texture(uSinLut, vec2(u / uLutSize, 0.5));\\n  return lutSample.rg * 2.0 - 1.0;\\n}`\r\n        )\r\n        .replace(\r\n          '#include <instancing_vertex>',\r\n          `#ifdef USE_INSTANCING\r\n#endif\r\n#ifdef USE_INSTANCING_COLOR\r\n  vColor.xyz *= instanceColor.xyz;\r\n#endif`\r\n        )\r\n        .replace(\r\n          '#include <begin_vertex>',\r\n          `#include <begin_vertex>\\nvec3 tailParams = instanceTailParams;\\nif (uTailEnable > 0.5) {\\n  float driveRaw = tailParams.z;\\n  if (driveRaw > 0.01) {\\n    float drive = clamp(driveRaw, 0.0, 1.0);\\n    vec3 originalPos = transformed;\\n    vec3 right = normalize(uTailRight);\\n    vec3 forward = normalize(uTailForward);\\n    vec3 up = normalize(uTailUp);\\n\\n    float localX = dot(originalPos, right);\\n    float localY = dot(originalPos, forward);\\n    float localZ = dot(originalPos, up);\\n\\n    float bodyCoord = clamp(aBodyCoord, 0.0, 1.0);\\n    float tailWeight = smoothstep(0.0, 0.35, bodyCoord);\\n    float speedFactor = clamp(tailParams.x * uTailSpeedScale, 0.0, 2.0);\\n\\n    float phase = instanceTailPhase + uTailTime * uTailFrequency;\\n    float wavePhase = phase + bodyCoord * uTailPhaseStride;\\n    vec2 waveSC = sampleSinCos(wavePhase);\\n    float wag = waveSC.x * uTailAmplitude * drive;\\n    float turnOffset = tailParams.y * uTailTurnStrength * drive;\\n    float motion = wag * (0.4 + 0.6 * speedFactor) + turnOffset;\\n\\n    float tipDamping = 1.0 - smoothstep(0.7, 1.0, bodyCoord) * 0.3;\\n    float bendStrength = mix(0.02, 1.0, tailWeight) * tipDamping;\\n\\n    float bendAngle = motion * bendStrength;\\n    vec2 bendSC = sampleSinCos(bendAngle);\\n    float s = bendSC.x;\\n    float c = bendSC.y;\\n    float rotX = localX * c - localY * s;\\n    float rotY = localX * s + localY * c;\\n\\n    float sway = motion * 0.4 * tipDamping;\\n    rotX += sway * (0.05 + 0.95 * bodyCoord);\\n\\n    vec3 rotated = right * rotX + forward * rotY + up * localZ;\\n    transformed = rotated;\\n  }\\n}\\ntransformed = quatTransform(transformed, instanceQuat) + instancePos;`\r\n        )\r\n        .replace(\r\n          '#include <beginnormal_vertex>',\r\n          '#include <beginnormal_vertex>\\nobjectNormal = quatTransform(objectNormal, instanceQuat);'\r\n        )\r\n        .replace(\r\n          '#include <project_vertex>',\r\n          `#include <project_vertex>\\n#ifdef DEPTH_PACKING\\nvec3 tailParams = instanceTailParams;\\nif (uTailEnable > 0.5) {\\n  float driveRaw = tailParams.z;\\n  if (driveRaw > 0.01) {\\n    float drive = clamp(driveRaw, 0.0, 1.0);\\n    vec3 viewPos = mvPosition.xyz;\\n    mat3 normalMatrix3 = mat3(normalMatrix);\\n    vec3 right = normalize(normalMatrix3 * uTailRight);\\n    vec3 forward = normalize(normalMatrix3 * uTailForward);\\n    vec3 up = normalize(normalMatrix3 * uTailUp);\\n\\n    float localX = dot(viewPos, right);\\n    float localY = dot(viewPos, forward);\\n    float localZ = dot(viewPos, up);\\n\\n    float bodyCoord = clamp(aBodyCoord, 0.0, 1.0);\\n    float tailWeight = smoothstep(0.0, 0.35, bodyCoord);\\n    float speedFactor = clamp(tailParams.x * uTailSpeedScale, 0.0, 2.0);\\n\\n    float phase = instanceTailPhase + uTailTime * uTailFrequency;\\n    float wavePhase = phase + bodyCoord * uTailPhaseStride;\\n    vec2 waveSC = sampleSinCos(wavePhase);\\n    float wag = waveSC.x * uTailAmplitude * drive;\\n    float turnOffset = tailParams.y * uTailTurnStrength * drive;\\n    float motion = wag * (0.4 + 0.6 * speedFactor) + turnOffset;\\n\\n    float tipDamping = 1.0 - smoothstep(0.7, 1.0, bodyCoord) * 0.3;\\n    float bendStrength = mix(0.02, 1.0, tailWeight) * tipDamping;\\n\\n    float bendAngle = motion * bendStrength;\\n    vec2 bendSC = sampleSinCos(bendAngle);\\n    float s = bendSC.x;\\n    float c = bendSC.y;\\n    float rotX = localX * c - localY * s;\\n    float rotY = localX * s + localY * c;\\n\\n    float sway = motion * 0.4 * tipDamping;\\n    rotX += sway * (0.05 + 0.95 * bodyCoord);\\n\\n    vec3 rotated = right * rotX + forward * rotY + up * localZ;\\n    mvPosition.xyz = rotated;\\n    gl_Position = projectionMatrix * mvPosition;\\n  }\\n}\\n#endif`\r\n        );\r\n\r\n      material.userData = {\r\n        ...(material.userData || {}),\r\n        instancingPatched: true,\r\n      };\r\n    };\r\n\r\n    material.needsUpdate = true;\r\n    this.instancingMaterials.add(material);\r\n  }\r\n\r\n  createDepthMaterial(sourceMaterial) {\r\n    const depthMaterial = new THREE.MeshDepthMaterial({\r\n      depthPacking: THREE.RGBADepthPacking,\r\n      alphaTest: sourceMaterial.alphaTest ?? 0,\r\n    });\r\n    depthMaterial.map = sourceMaterial.map ?? null;\r\n    depthMaterial.alphaMap = sourceMaterial.alphaMap ?? null;\r\n    depthMaterial.transparent = sourceMaterial.transparent ?? false;\r\n    this.patchMaterial(depthMaterial);\r\n    return depthMaterial;\r\n  }\r\n\r\n  createDistanceMaterial(sourceMaterial) {\r\n    const distanceMaterial = new THREE.MeshDistanceMaterial({\r\n      alphaTest: sourceMaterial.alphaTest ?? 0,\r\n    });\r\n    distanceMaterial.map = sourceMaterial.map ?? null;\r\n    distanceMaterial.alphaMap = sourceMaterial.alphaMap ?? null;\r\n    distanceMaterial.transparent = sourceMaterial.transparent ?? false;\r\n    this.patchMaterial(distanceMaterial);\r\n    return distanceMaterial;\r\n  }\r\n\r\n  configureInstancedMesh(mesh, material) {\r\n    mesh.castShadow = true;\r\n    mesh.receiveShadow = true;\r\n    mesh.frustumCulled = false;\r\n    mesh.customDepthMaterial = this.createDepthMaterial(material);\r\n    mesh.customDistanceMaterial = this.createDistanceMaterial(material);\r\n\r\n    const white = new THREE.Color(1, 1, 1);\r\n    for (let i = 0; i < mesh.count; i++) {\r\n      mesh.setColorAt(i, white);\r\n    }\r\n    if (mesh.instanceColor) {\r\n      mesh.instanceColor.needsUpdate = true;\r\n    }\r\n  }\r\n\r\n  createAttributeSet(count, itemSize, ArrayType = Float32Array) {\r\n    const length = count * itemSize;\r\n    const attributes = [];\r\n    for (let i = 0; i < this.tripleBufferSize; i++) {\r\n      const attr = new THREE.InstancedBufferAttribute(new ArrayType(length), itemSize);\r\n      attr.setUsage(this.streamUsage);\r\n      attributes.push(attr);\r\n    }\r\n    return attributes;\r\n  }\r\n\r\n  createBufferSet(count) {\r\n    return {\r\n      pos: this.createAttributeSet(count, 3),\r\n      quat: this.createAttributeSet(count, 4),\r\n      tailPhase: this.createAttributeSet(count, 1),\r\n      tailParams: this.createAttributeSet(count, 3),\r\n    };\r\n  }\r\n\r\n  resetBufferSetToHidden(bufferSet) {\r\n    // 初期状態では全インスタンスを画面外へ退避させておく\r\n    for (const attr of bufferSet.pos) {\r\n      const array = attr.array;\r\n      for (let i = 0; i < array.length; i += 3) {\r\n        array[i] = this.hiddenPosition;\r\n        array[i + 1] = this.hiddenPosition;\r\n        array[i + 2] = this.hiddenPosition;\r\n      }\r\n    }\r\n    for (const attr of bufferSet.quat) {\r\n      const array = attr.array;\r\n      for (let i = 0; i < array.length; i += 4) {\r\n        array[i] = this.identityQuaternion[0];\r\n        array[i + 1] = this.identityQuaternion[1];\r\n        array[i + 2] = this.identityQuaternion[2];\r\n        array[i + 3] = this.identityQuaternion[3];\r\n      }\r\n    }\r\n    for (const attr of bufferSet.tailPhase) {\r\n      attr.array.fill(0);\r\n    }\r\n    for (const attr of bufferSet.tailParams) {\r\n      attr.array.fill(0);\r\n    }\r\n  }\r\n\r\n  applyBufferSet(mesh, bufferSet, index) {\r\n    mesh.geometry.setAttribute('instancePos', bufferSet.pos[index]);\r\n    mesh.geometry.setAttribute('instanceQuat', bufferSet.quat[index]);\r\n    mesh.geometry.setAttribute('instanceTailPhase', bufferSet.tailPhase[index]);\r\n    mesh.geometry.setAttribute('instanceTailParams', bufferSet.tailParams[index]);\r\n  }\r\n\r\n  createTailPhaseArray(count) {\r\n    const array = new Float32Array(count);\r\n    for (let i = 0; i < count; i++) {\r\n      array[i] = Math.random() * Math.PI * 2;\r\n    }\r\n    return array;\r\n  }\r\n\r\n  applyTailPhaseSeeds(bufferSet, seeds) {\r\n    if (!bufferSet?.tailPhase) return;\r\n    for (const attr of bufferSet.tailPhase) {\r\n      attr.array.set(seeds);\r\n      attr.needsUpdate = true;\r\n    }\r\n  }\r\n\r\n  ensureTailRuntimeBuffers(count) {\r\n    const targetLength = count * 3;\r\n    if (!this.previousVelocities || this.previousVelocities.length !== targetLength) {\r\n      this.previousVelocities = new Float32Array(targetLength);\r\n    }\r\n  }\r\n\r\n  ensureLodFlagBuffer(count) {\r\n    if (count <= 0) {\r\n      this.previousLodFlags = null;\r\n      return null;\r\n    }\r\n    if (!this.previousLodFlags || this.previousLodFlags.length !== count) {\r\n      this.previousLodFlags = new Uint8Array(count);\r\n    }\r\n    return this.previousLodFlags;\r\n  }\r\n\r\n  ensureBodyCoordAttribute(geometry) {\r\n    if (geometry.getAttribute('aBodyCoord')) return;\r\n    const position = geometry.getAttribute('position');\r\n    if (!position) return;\r\n\r\n    const count = position.count;\r\n    const array = position.array;\r\n    let minX = Infinity;\r\n    let minY = Infinity;\r\n    let minZ = Infinity;\r\n    let maxX = -Infinity;\r\n    let maxY = -Infinity;\r\n    let maxZ = -Infinity;\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      const ix = i * 3;\r\n      const x = array[ix];\r\n      const y = array[ix + 1];\r\n      const z = array[ix + 2];\r\n      if (x < minX) minX = x;\r\n      if (x > maxX) maxX = x;\r\n      if (y < minY) minY = y;\r\n      if (y > maxY) maxY = y;\r\n      if (z < minZ) minZ = z;\r\n      if (z > maxZ) maxZ = z;\r\n    }\r\n\r\n    const rangeX = maxX - minX;\r\n    const rangeY = maxY - minY;\r\n    const rangeZ = maxZ - minZ;\r\n\r\n    let axis = 'z';\r\n    let min = minZ;\r\n    let range = rangeZ;\r\n    if (rangeX > rangeY && rangeX > rangeZ) {\r\n      axis = 'x';\r\n      min = minX;\r\n      range = rangeX;\r\n    } else if (rangeY > rangeZ) {\r\n      axis = 'y';\r\n      min = minY;\r\n      range = rangeY;\r\n    }\r\n\r\n    const bodyCoord = new Float32Array(count);\r\n    const denom = range > 0 ? range : 1;\r\n    for (let i = 0; i < count; i++) {\r\n      const ix = i * 3;\r\n      const value = axis === 'x' ? array[ix] : axis === 'y' ? array[ix + 1] : array[ix + 2];\r\n      bodyCoord[i] = (value - min) / denom;\r\n    }\r\n\r\n    // 魚体長に沿った 0-1 の指標を埋め込むことで尾びれアニメの重み付けを制御\r\n    geometry.setAttribute('aBodyCoord', new THREE.BufferAttribute(bodyCoord, 1));\r\n  }\r\n\r\n  ensurePredatorMeshes(count) {\r\n    if (!this.scene || !this.predatorModel) return false;\r\n\r\n    const target = Math.max(0, count);\r\n    while (this.predatorMeshes.length > target) {\r\n      const mesh = this.predatorMeshes.pop();\r\n      if (mesh) {\r\n        this.scene.remove(mesh);\r\n      }\r\n    }\r\n\r\n    while (this.predatorMeshes.length < target) {\r\n      const clone = this.predatorModel.clone(true);\r\n      clone.traverse((child) => {\r\n        if (child.isMesh) {\r\n          child.castShadow = true;\r\n          child.receiveShadow = true;\r\n        }\r\n      });\r\n      clone.visible = false;\r\n      this.scene.add(clone);\r\n      this.predatorMeshes.push(clone);\r\n    }\r\n    return this.predatorMeshes.length === target;\r\n  }\r\n\r\n  dispose(scene = this.scene) {\r\n    if (this.instancedMeshHigh) {\r\n      scene?.remove(this.instancedMeshHigh);\r\n      this.instancedMeshHigh.geometry?.dispose?.();\r\n      this.instancedMeshHigh.material?.dispose?.();\r\n      this.instancedMeshHigh = null;\r\n    }\r\n    if (this.instancedMeshLow) {\r\n      scene?.remove(this.instancedMeshLow);\r\n      this.instancedMeshLow.geometry?.dispose?.();\r\n      this.instancedMeshLow.material?.dispose?.();\r\n      this.instancedMeshLow = null;\r\n    }\r\n    if (scene) {\r\n      for (const mesh of this.predatorMeshes) {\r\n        scene.remove(mesh);\r\n      }\r\n    }\r\n    this.instancingMaterials.clear();\r\n    this.bufferSetHigh = null;\r\n    this.bufferSetLow = null;\r\n    this.tailPhaseSeeds = null;\r\n    this.bufferCursor = 0;\r\n    this.previousVelocities = null;\r\n    this.previousLodFlags = null;\r\n    this.predatorMeshes = [];\r\n    this.predatorMeshCountCache = -1;\r\n    this.scene = scene ?? null;\r\n    this.count = 0;\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\r\nimport { SSAOPass } from 'three/examples/jsm/postprocessing/SSAOPass.js';\r\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js';\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js';\r\n\r\n/**\r\n * フォグやポストプロセスのセットアップを担当。\r\n * Three.js の EffectComposer をまとめて初期化し、フォグ用シェーダーへ\r\n * 深度テクスチャを受け渡す責務を持ちます。\r\n */\r\nexport class FogPipeline {\r\n  constructor(fogConfig) {\r\n    this.config = fogConfig;\r\n    this.composer = null;\r\n    this.heightFogPass = null;\r\n    this.heightFogRenderTarget = null;\r\n    this.renderer = null;\r\n    this.scene = null;\r\n    this.camera = null;\r\n  }\r\n\r\n  /** HeightFog 用の ShaderPass を返します。 */\r\n  get heightFog() {\r\n    return this.heightFogPass;\r\n  }\r\n\r\n  /**\r\n   * レンダラ・シーン・カメラからポストプロセスチェーンを初期化。\r\n   * レンダリング結果 + 深度テクスチャを HeightFogShader に渡します。\r\n   */\r\n  init(renderer, scene, camera, width, height) {\r\n    if (!renderer || !scene || !camera) {\r\n      console.warn('FogPipeline.init: renderer / scene / camera が未設定です');\r\n      return;\r\n    }\r\n\r\n    this.dispose();\r\n\r\n    this.renderer = renderer;\r\n    this.scene = scene;\r\n    this.camera = camera;\r\n\r\n    // 深度テクスチャ付きのターゲットを確保し、fog パスへ共有する\r\n    const rtOptions = { depthBuffer: true, stencilBuffer: false };\r\n    this.heightFogRenderTarget = new THREE.WebGLRenderTarget(width, height, rtOptions);\r\n    this.heightFogRenderTarget.depthTexture = new THREE.DepthTexture(width, height, THREE.FloatType);\r\n    this.heightFogRenderTarget.depthTexture.format = THREE.DepthFormat;\r\n    this.heightFogRenderTarget.depthTexture.type = THREE.FloatType;\r\n    this.heightFogRenderTarget.depthTexture.needsUpdate = true;\r\n\r\n    this.composer = new EffectComposer(renderer, this.heightFogRenderTarget);\r\n\r\n    // ベースとなるレンダリング結果を取得\r\n    const renderPass = new RenderPass(scene, camera);\r\n    this.composer.addPass(renderPass);\r\n\r\n    // 環境の陰影を補強する SSAO\r\n    const ssaoPass = new SSAOPass(scene, camera, width, height);\r\n    ssaoPass.kernelRadius = 5;     // サンプル半径（大きいほど広範囲な AO）\r\n    ssaoPass.minDistance = 0.01;   // オクルージョン開始距離\r\n    ssaoPass.maxDistance = 0.3;    // 影響を与える最大距離\r\n    this.composer.addPass(ssaoPass);\r\n\r\n    // ハイライトを強調するブルーム\r\n    const bloomStrength = 1.5;   // ブルームの強さ\r\n    const bloomRadius = 0.4;     // 発光の広がり\r\n    const bloomThreshold = 0.85; // ブルームを適用する輝度\r\n    const bloomPass = new UnrealBloomPass(new THREE.Vector2(width, height), bloomStrength, bloomRadius, bloomThreshold);\r\n    this.composer.addPass(bloomPass);\r\n\r\n    const shader = createHeightFogShader(this.config);\r\n    this.heightFogPass = new ShaderPass(shader);\r\n    // 深度テクスチャを毎フレーム差し替え、霧の密度を距離で制御\r\n    const originalRender = this.heightFogPass.render.bind(this.heightFogPass);\r\n    this.heightFogPass.render = (passRenderer, writeBuffer, readBuffer, deltaTime, maskActive) => {\r\n      if (this.heightFogPass.uniforms.tDepth) {\r\n        const depthTexture = readBuffer?.depthTexture ?? this.heightFogRenderTarget?.depthTexture ?? null;\r\n        if (depthTexture) {\r\n          this.heightFogPass.uniforms.tDepth.value = depthTexture;\r\n        }\r\n      }\r\n      originalRender(passRenderer, writeBuffer, readBuffer, deltaTime, maskActive);\r\n    };\r\n    this.heightFogPass.needsSwap = false;\r\n    this.heightFogPass.uniforms.tDepth.value = this.heightFogRenderTarget.depthTexture;\r\n\r\n    applyFogConfigToUniforms(this.heightFogPass.uniforms, this.config);\r\n\r\n    const material = this.heightFogPass.material;\r\n    if (material) {\r\n      material.depthTest = false;\r\n      material.depthWrite = false;\r\n      material.transparent = false;\r\n      material.blending = THREE.NoBlending;\r\n      material.toneMapped = true;\r\n      material.needsUpdate = true;\r\n    }\r\n\r\n    this.heightFogPass.renderToScreen = true;\r\n    this.composer.addPass(this.heightFogPass);\r\n  }\r\n\r\n  /** ウィンドウリサイズ時に呼び出してバッファサイズを調整。 */\r\n  resize(width, height) {\r\n    if (!this.composer) {\r\n      return;\r\n    }\r\n    this.composer.setSize(width, height);\r\n    this.heightFogRenderTarget?.setSize(width, height);\r\n  }\r\n\r\n  /** composer を使ってレンダリングするヘルパー。 */\r\n  render(delta) {\r\n    if (!this.composer) {\r\n      return;\r\n    }\r\n    this.composer.render(delta);\r\n  }\r\n\r\n  /** composer が準備できているか確認。 */\r\n  isReady() {\r\n    return !!this.composer;\r\n  }\r\n\r\n  /** カメラ行列やパラメータをフォグシェーダーへ転送。 */\r\n  updateCameraUniforms(camera) {\r\n    const pass = this.heightFogPass;\r\n    const targetCamera = camera || this.camera;\r\n    if (!pass || !targetCamera) {\r\n      return;\r\n    }\r\n    const { uniforms } = pass;\r\n    if (uniforms.cameraNear) {\r\n      uniforms.cameraNear.value = targetCamera.near;\r\n    }\r\n    if (uniforms.cameraFar) {\r\n      uniforms.cameraFar.value = targetCamera.far;\r\n    }\r\n    if (uniforms.projectionMatrixInverse?.value) {\r\n      uniforms.projectionMatrixInverse.value.copy(targetCamera.projectionMatrixInverse);\r\n    }\r\n    if (uniforms.cameraMatrixWorld?.value) {\r\n      uniforms.cameraMatrixWorld.value.copy(targetCamera.matrixWorld);\r\n    }\r\n  }\r\n\r\n  /** フォグ設定を更新し、シェーダーのユニフォームへ反映。 */\r\n  updateConfig(nextConfig = {}) {\r\n    this.config = { ...this.config, ...nextConfig };\r\n    if (!this.heightFogPass) {\r\n      return;\r\n    }\r\n    applyFogConfigToUniforms(this.heightFogPass.uniforms, this.config);\r\n  }\r\n\r\n  /** リソース解放。 */\r\n  dispose() {\r\n    this.heightFogPass = null;\r\n    this.composer?.dispose?.();\r\n    this.composer = null;\r\n    this.heightFogRenderTarget?.dispose?.();\r\n    this.heightFogRenderTarget = null;\r\n    this.renderer = null;\r\n    this.scene = null;\r\n    this.camera = null;\r\n  }\r\n}\r\n\r\n/**\r\n * HeightFogShader 定義をそのまま移植するためのプレースホルダ。\r\n */\r\nexport function createHeightFogShader(config = {}) {\r\n  const defaults = buildFogDefaults();\r\n  const finalConfig = { ...defaults, ...config };\r\n\r\n  return {\r\n    uniforms: {\r\n      tDiffuse: { value: null },\r\n      tDepth: { value: null },\r\n      cameraNear: { value: 0.1 },\r\n      cameraFar: { value: 1000 },\r\n      projectionMatrixInverse: { value: new THREE.Matrix4() },\r\n      cameraMatrixWorld: { value: new THREE.Matrix4() },\r\n      fogColor: { value: cloneColor(finalConfig.color) },                     // 霧の色\r\n      distanceStart: { value: finalConfig.distanceStart },                   // 距離フォグ開始位置\r\n      distanceEnd: { value: finalConfig.distanceEnd },                       // 距離フォグ最大濃度距離\r\n      distanceExponent: { value: finalConfig.distanceExponent },             // 距離カーブの鋭さ\r\n      distanceControlPoint1: { value: cloneVector2(finalConfig.distanceControlPoint1) }, // ベジェ制御点1\r\n      distanceControlPoint2: { value: cloneVector2(finalConfig.distanceControlPoint2) }, // ベジェ制御点2\r\n      surfaceLevel: { value: finalConfig.surfaceLevel },                     // 水面高さ（y）\r\n      heightFalloff: { value: finalConfig.heightFalloff },                   // 深度減衰率\r\n      heightExponent: { value: finalConfig.heightExponent },                 // 深度カーブの鋭さ\r\n      maxOpacity: { value: finalConfig.maxOpacity },                         // 霧の最大不透明度\r\n    },\r\n    vertexShader: /* glsl */`\r\n    varying vec2 vUv;\r\n    void main() {\r\n      vUv = uv;\r\n      gl_Position = vec4(position.xy, 0.0, 1.0);\r\n    }\r\n  `,\r\n    fragmentShader: /* glsl */`\r\n    precision highp float;\r\n    varying vec2 vUv;\r\n\r\n    uniform sampler2D tDiffuse;\r\n    uniform sampler2D tDepth;\r\n    uniform float cameraNear;\r\n    uniform float cameraFar;\r\n    uniform vec3 fogColor;\r\n    uniform float distanceStart;\r\n    uniform float distanceEnd;\r\n    uniform float distanceExponent;\r\n    uniform vec2 distanceControlPoint1;\r\n    uniform vec2 distanceControlPoint2;\r\n    uniform float surfaceLevel;\r\n    uniform float heightFalloff;\r\n    uniform float heightExponent;\r\n    uniform float maxOpacity;\r\n    uniform mat4 projectionMatrixInverse;\r\n    uniform mat4 cameraMatrixWorld;\r\n\r\n    float cubicBezier1D(float t, float p0, float p1, float p2, float p3) {\r\n      float u = 1.0 - t;\r\n      float uu = u * u;\r\n      float tt = t * t;\r\n      return u * uu * p0 + 3.0 * uu * t * p1 + 3.0 * u * tt * p2 + tt * t * p3;\r\n    }\r\n\r\n    float cubicBezierDerivative1D(float t, float p0, float p1, float p2, float p3) {\r\n      float u = 1.0 - t;\r\n      return 3.0 * u * u * (p1 - p0)\r\n           + 6.0 * u * t * (p2 - p1)\r\n           + 3.0 * t * t * (p3 - p2);\r\n    }\r\n\r\n    float cubicBezierInverse(float x, vec2 c1, vec2 c2) {\r\n      float t = clamp(x, 0.0, 1.0);\r\n      for (int i = 0; i < 5; i++) {\r\n        float current = cubicBezier1D(t, 0.0, c1.x, c2.x, 1.0) - x;\r\n        float slope = cubicBezierDerivative1D(t, 0.0, c1.x, c2.x, 1.0);\r\n        if (abs(slope) < 1e-5) {\r\n          break;\r\n        }\r\n        t -= current / slope;\r\n        t = clamp(t, 0.0, 1.0);\r\n      }\r\n      return t;\r\n    }\r\n\r\n    float sampleDistanceCurve(float x, vec2 c1, vec2 c2) {\r\n      float t = cubicBezierInverse(x, c1, c2);\r\n      return cubicBezier1D(t, 0.0, c1.y, c2.y, 1.0);\r\n    }\r\n\r\n    void main() {\r\n      vec4 baseColor = texture2D(tDiffuse, vUv);\r\n      float depth = texture2D(tDepth, vUv).x;\r\n\r\n      if (depth >= 1.0) {\r\n        gl_FragColor = baseColor;\r\n        return;\r\n      }\r\n\r\n      vec2 ndc = vUv * 2.0 - 1.0;\r\n      float ndcZ = depth * 2.0 - 1.0;\r\n      vec4 clipPos = vec4(ndc, ndcZ, 1.0);\r\n      vec4 viewPos = projectionMatrixInverse * clipPos;\r\n      viewPos /= max(viewPos.w, 1e-5);\r\n      vec4 worldPos = cameraMatrixWorld * viewPos;\r\n\r\n      float viewDistance = length(viewPos.xyz);\r\n      float distanceFogNorm = clamp(\r\n        (viewDistance - distanceStart) / max(distanceEnd - distanceStart, 1e-5),\r\n        0.0,\r\n        1.0\r\n      );\r\n      float distanceFog = sampleDistanceCurve(distanceFogNorm, distanceControlPoint1, distanceControlPoint2);\r\n      distanceFog = pow(distanceFog, distanceExponent);\r\n\r\n      float depthBelowSurface = max(surfaceLevel - worldPos.y, 0.0);\r\n      float heightFactor = 1.0 - exp(-depthBelowSurface * heightFalloff);\r\n      heightFactor = clamp(pow(heightFactor, heightExponent), 0.0, 1.0);\r\n\r\n      float fogFactor = clamp(distanceFog * heightFactor, 0.0, 1.0);\r\n      fogFactor = mix(0.0, maxOpacity, fogFactor);\r\n\r\n      vec3 fogged = mix(baseColor.rgb, fogColor, fogFactor);\r\n      gl_FragColor = vec4(fogged, baseColor.a);\r\n      #include <tonemapping_fragment>\r\n      #include <colorspace_fragment>\r\n    }\r\n  `,\r\n  };\r\n}\r\n\r\nexport const HeightFogShader = createHeightFogShader();\r\n\r\nfunction buildFogDefaults() {\r\n  return {\r\n    color: new THREE.Color('#153a6c'),                // 霧の基本色\r\n    distanceStart: 4,                                 // カメラからこの距離でフォグ開始\r\n    distanceEnd: 60,                                  // この距離でフォグが最大\r\n    distanceExponent: 0.4,                            // 距離カーブの緩急\r\n    distanceControlPoint1: new THREE.Vector2(0.4, 0.75), // ベジェ制御点（開始側）\r\n    distanceControlPoint2: new THREE.Vector2(0.75, 0.95), // ベジェ制御点（終端側）\r\n    surfaceLevel: 100,                                // 海面の World Y 値\r\n    heightFalloff: 0.01,                              // 深度方向の減衰係数\r\n    heightExponent: 1,                                // 深度カーブの鋭さ\r\n    maxOpacity: 1,                                    // 霧の上限不透明度\r\n  };\r\n}\r\n\r\nfunction cloneColor(value) {\r\n  if (value instanceof THREE.Color) {\r\n    return value.clone();\r\n  }\r\n  if (typeof value === 'string' || typeof value === 'number') {\r\n    return new THREE.Color(value);\r\n  }\r\n  return new THREE.Color('#000000');\r\n}\r\n\r\nfunction cloneVector2(value) {\r\n  if (value instanceof THREE.Vector2) {\r\n    return value.clone();\r\n  }\r\n  if (value && typeof value.x === 'number' && typeof value.y === 'number') {\r\n    return new THREE.Vector2(value.x, value.y);\r\n  }\r\n  return new THREE.Vector2();\r\n}\r\n\r\nfunction applyFogConfigToUniforms(uniforms, config = {}) {\r\n  const defaults = buildFogDefaults();\r\n  const finalConfig = { ...defaults, ...config };\r\n\r\n  if (uniforms.fogColor?.value) {\r\n    uniforms.fogColor.value.copy(cloneColor(finalConfig.color));\r\n  }\r\n  if (uniforms.distanceStart) {\r\n    uniforms.distanceStart.value = finalConfig.distanceStart;\r\n  }\r\n  if (uniforms.distanceEnd) {\r\n    uniforms.distanceEnd.value = finalConfig.distanceEnd;\r\n  }\r\n  if (uniforms.distanceExponent) {\r\n    uniforms.distanceExponent.value = finalConfig.distanceExponent;\r\n  }\r\n  if (uniforms.distanceControlPoint1?.value) {\r\n    uniforms.distanceControlPoint1.value.copy(cloneVector2(finalConfig.distanceControlPoint1));\r\n  }\r\n  if (uniforms.distanceControlPoint2?.value) {\r\n    uniforms.distanceControlPoint2.value.copy(cloneVector2(finalConfig.distanceControlPoint2));\r\n  }\r\n  if (uniforms.surfaceLevel) {\r\n    uniforms.surfaceLevel.value = finalConfig.surfaceLevel;\r\n  }\r\n  if (uniforms.heightFalloff) {\r\n    uniforms.heightFalloff.value = finalConfig.heightFalloff;\r\n  }\r\n  if (uniforms.heightExponent) {\r\n    uniforms.heightExponent.value = finalConfig.heightExponent;\r\n  }\r\n  if (uniforms.maxOpacity) {\r\n    uniforms.maxOpacity.value = finalConfig.maxOpacity;\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\n\r\n// 粒子帯の初期広がり（XYZ）: モバイルは控えめにして描画負荷を抑える\r\nconst PARTICLE_BASE_SPREAD_DESKTOP = new THREE.Vector3(24, 12, 26);\r\nconst PARTICLE_BASE_SPREAD_MOBILE = new THREE.Vector3(16, 9, 18);\r\n// 粒子が描画対象となる最大距離: 広がりから導出\r\nconst PARTICLE_BASE_MAX_DISTANCE_DESKTOP = PARTICLE_BASE_SPREAD_DESKTOP.z * 1.2;\r\nconst PARTICLE_BASE_MAX_DISTANCE_MOBILE = PARTICLE_BASE_SPREAD_MOBILE.z * 1.2;\r\n// ワールド基底（流れ方向および左右上下の初期値）\r\nconst DEFAULT_FLOW_DIR = new THREE.Vector3(1, 0, 0);\r\nconst DEFAULT_LAT1 = new THREE.Vector3(0, 0, 1);\r\nconst DEFAULT_LAT2 = new THREE.Vector3(0, 1, 0);\r\n\r\n// 頻度の高い計算で毎回 new しないようにモジュールスコープで共有\r\nconst TEMP_DIR = new THREE.Vector3();\r\nconst TEMP_AXIS = new THREE.Vector3();\r\nconst TEMP_LAT1 = new THREE.Vector3();\r\nconst TEMP_LAT2 = new THREE.Vector3();\r\n\r\n/**\r\n * 軽量パーティクルシステムを司るヘルパークラス。\r\n * App.vue から init/update/dispose を呼び出し、内部で Three.js の Points を管理します。\r\n */\r\nexport class ParticleField {\r\n  constructor(isMobileDevice) {\r\n    this.isMobileDevice = Boolean(isMobileDevice);\r\n    this.scene = null;\r\n    this.renderer = null;\r\n    this.camera = null;\r\n    this.controls = null;\r\n\r\n    this.particlePoints = null;\r\n    this.particleMaterial = null;\r\n    this.elapsedTime = 0;\r\n  }\r\n\r\n  /**\r\n   * Three.js のシーンとカメラ、コントロール類を受け取りパーティクルを初期化します。\r\n   */\r\n  init(scene, renderer, camera, controls) {\r\n    if (!scene || !renderer?.capabilities?.isWebGL2) {\r\n      console.warn('Skipping particle system: WebGL2 required.');\r\n      return false;\r\n    }\r\n\r\n    this.dispose(scene);\r\n\r\n    this.scene = scene;\r\n    this.renderer = renderer;\r\n    this.camera = camera;\r\n    this.controls = controls;\r\n    this.elapsedTime = 0;\r\n\r\n    const count = this.isMobileDevice ? 800 : 2000; // 端末の性能差に合わせて頂点数を抑制\r\n    const geometry = new THREE.BufferGeometry();\r\n    geometry.setAttribute('position', new THREE.BufferAttribute(new Float32Array(count * 3), 3));\r\n    geometry.setDrawRange(0, count);\r\n\r\n    const baseSpread = (this.isMobileDevice ? PARTICLE_BASE_SPREAD_MOBILE : PARTICLE_BASE_SPREAD_DESKTOP).clone();\r\n    const baseMaxDistance = this.isMobileDevice ? PARTICLE_BASE_MAX_DISTANCE_MOBILE : PARTICLE_BASE_MAX_DISTANCE_DESKTOP;\r\n\r\n    const material = new THREE.ShaderMaterial({\r\n      glslVersion: THREE.GLSL3,\r\n      transparent: true,\r\n      depthWrite: false,\r\n      depthTest: true,\r\n      blending: THREE.AdditiveBlending,\r\n      uniforms: {\r\n        uTime: { value: 0 }, // 経過時間（CPUから制御）\r\n        uOrigin: { value: new THREE.Vector3() }, // 粒子帯の基準座標（カメラ位置）\r\n        uFlowDir: { value: DEFAULT_FLOW_DIR.clone() }, // 流れ方向の基準ベクトル\r\n        uLat1: { value: DEFAULT_LAT1.clone() }, // 流れに直交するラテラル軸1\r\n        uLat2: { value: DEFAULT_LAT2.clone() }, // 同ラテラル軸2\r\n        uSpread: { value: baseSpread.clone() }, // 粒子の広がり（XYZ スケール）\r\n        uMaxDistance: { value: baseMaxDistance }, // 描画対象とする最大距離\r\n        uBaseSpeed: { value: 0.6 }, // 流れ方向への基本速度倍率\r\n        uJitterAmp: { value: 0.22 }, // ランダム揺らぎの振幅\r\n        uSizePx: { value: this.isMobileDevice ? 5.0 : 12.0 }, // スクリーン上の粒子サイズ（px）\r\n        uFadeNear: { value: 1.5 }, // 手前でフェードアウトを開始する距離\r\n        uFadeFar: { value: 14.0 }, // フェードアウトが完了する距離\r\n        uColorNear: { value: new THREE.Color(0x72a1c4) }, // カメラ近傍の粒子色\r\n        uColorFar: { value: new THREE.Color(0x0a5270) }, // 遠方の粒子色\r\n      },\r\n      vertexShader: PARTICLE_VERTEX_SHADER,\r\n      fragmentShader: PARTICLE_FRAGMENT_SHADER,\r\n    });\r\n\r\n    const baseTargetDistance = controls\r\n      ? camera.position.distanceTo(controls.target)\r\n      : camera.position.length();\r\n    material.userData = {\r\n      baseSpread: baseSpread.clone(),\r\n      baseMaxDistance,\r\n      baseTargetDistance: Math.max(baseTargetDistance, 0.1), // OrbitControls の距離を初期参照距離として記録\r\n    };\r\n\r\n    this.particlePoints = new THREE.Points(geometry, material);\r\n    this.particlePoints.frustumCulled = false;\r\n    this.particlePoints.renderOrder = 2;\r\n    scene.add(this.particlePoints);\r\n\r\n    this.particleMaterial = material;\r\n    this.setWorldBasis(material.uniforms.uFlowDir.value);\r\n    this.update(camera, controls);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * uTime を直接設定します。\r\n   */\r\n  setTime(timeSeconds) {\r\n    this.elapsedTime = timeSeconds ?? this.elapsedTime;\r\n    if (this.particleMaterial?.uniforms?.uTime) {\r\n      this.particleMaterial.uniforms.uTime.value = this.elapsedTime;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 経過時間を加算します。\r\n   */\r\n  advanceTime(deltaSeconds) {\r\n    if (!Number.isFinite(deltaSeconds) || deltaSeconds === 0) {\r\n      return;\r\n    }\r\n    this.elapsedTime += deltaSeconds;\r\n    if (this.particleMaterial?.uniforms?.uTime) {\r\n      this.particleMaterial.uniforms.uTime.value = this.elapsedTime;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * フロー方向から直交基底を生成し、uniform に反映します。\r\n   */\r\n  setWorldBasis(flowDir) {\r\n    if (!this.particleMaterial || !flowDir) {\r\n      return;\r\n    }\r\n\r\n    const dir = TEMP_DIR.copy(flowDir).normalize();\r\n    // 極付近で cross がゼロに近づくのを避けるため適当な補助軸を選ぶ\r\n    const axis = Math.abs(dir.y) < 0.99\r\n      ? TEMP_AXIS.set(0, 1, 0)\r\n      : TEMP_AXIS.set(1, 0, 0);\r\n\r\n    const lat1 = TEMP_LAT1.copy(dir).cross(axis);\r\n    if (lat1.lengthSq() < 1e-6) {\r\n      lat1.set(0, 0, 1);\r\n      lat1.cross(dir);\r\n    }\r\n    lat1.normalize();\r\n\r\n    const lat2 = TEMP_LAT2.copy(dir).cross(lat1).normalize();\r\n\r\n    const uniforms = this.particleMaterial.uniforms;\r\n    uniforms.uFlowDir.value.copy(dir);\r\n    uniforms.uLat1.value.copy(lat1);\r\n    uniforms.uLat2.value.copy(lat2);\r\n  }\r\n\r\n  /**\r\n   * カメラに合わせて uniform を更新します。\r\n   */\r\n  update(camera, controls) {\r\n    const targetCamera = camera || this.camera;\r\n    if (!this.particleMaterial || !targetCamera) {\r\n      return;\r\n    }\r\n\r\n    const uniforms = this.particleMaterial.uniforms;\r\n    uniforms.uOrigin.value.copy(targetCamera.position);\r\n\r\n    const { baseSpread, baseMaxDistance, baseTargetDistance } = this.particleMaterial.userData || {};\r\n    if (!baseSpread || !baseMaxDistance) {\r\n      return;\r\n    }\r\n\r\n    // ズーム時に密度が変化しないよう、常に初期値を適用する\r\n    uniforms.uSpread.value.copy(baseSpread);\r\n    uniforms.uMaxDistance.value = baseMaxDistance;\r\n  }\r\n\r\n  /**\r\n   * シーンからパーティクルオブジェクトを取り除き、GPUリソースを解放します。\r\n   */\r\n  dispose(scene) {\r\n    const targetScene = scene || this.scene;\r\n    if (this.particlePoints && targetScene) {\r\n      targetScene.remove(this.particlePoints);\r\n    }\r\n    this.particlePoints?.geometry?.dispose();\r\n    this.particlePoints?.material?.dispose();\r\n\r\n    this.particlePoints = null;\r\n    this.particleMaterial = null;\r\n    this.scene = null;\r\n    this.renderer = null;\r\n    this.camera = null;\r\n    this.controls = null;\r\n  }\r\n\r\n  /** 現在のマテリアル参照を返します。 */\r\n  getMaterial() {\r\n    return this.particleMaterial;\r\n  }\r\n}\r\n\r\nconst PARTICLE_VERTEX_SHADER = /* glsl */`\r\nprecision highp float;\r\nprecision highp int;\r\n\r\nuniform float uTime;\r\nuniform vec3 uOrigin;\r\nuniform vec3 uFlowDir;\r\nuniform vec3 uLat1;\r\nuniform vec3 uLat2;\r\nuniform vec3 uSpread;\r\nuniform float uMaxDistance;\r\nuniform float uBaseSpeed;\r\nuniform float uJitterAmp;\r\nuniform float uSizePx;\r\nuniform float uFadeNear;\r\nuniform float uFadeFar;\r\n\r\nout float vFade;\r\nout float vColorMix;\r\n\r\nuint hashUint(uint n) {\r\n  n ^= (n << 13);\r\n  n ^= (n >> 17);\r\n  n ^= (n << 5);\r\n  return n * 0x27d4eb2du;\r\n}\r\n\r\nfloat hashFloat(uint n) {\r\n  return float(hashUint(n)) / 4294967296.0;\r\n}\r\n\r\nvec3 hashVec3(uint n) {\r\n  return vec3(\r\n    hashFloat(n),\r\n    hashFloat(n * 1664525u + 1013904223u),\r\n    hashFloat(n * 22695477u + 1u)\r\n  );\r\n}\r\n\r\nvoid main() {\r\n  uint id = uint(gl_VertexID);\r\n  vec3 randSeed = hashVec3(id) - 0.5;\r\n\r\n  vec3 flowDir = normalize(uFlowDir);\r\n  vec3 lateral = uLat1 * (randSeed.x * uSpread.x)\r\n    + uLat2 * (randSeed.y * uSpread.y);\r\n\r\n  float speedSeed = hashFloat(id * 747796405u);\r\n  float speed = uBaseSpeed * (0.7 + 0.6 * speedSeed);\r\n  float flowCycle = max(uSpread.z, 1e-3);\r\n  float flowParam = randSeed.z + (uTime * speed) / flowCycle;\r\n  float wrappedZ = fract(flowParam) - 0.5;\r\n  vec3 pos = uOrigin + lateral + flowDir * (wrappedZ * flowCycle);\r\n\r\n  float phase = hashFloat(id * 1664525u) * 6.28318530718;\r\n  float driftSeed = hashFloat(id * 22695477u);\r\n  float triangle = 1.0 - abs(fract((phase + uTime * (0.8 + 0.4 * driftSeed)) / 3.14159265) * 2.0 - 1.0);\r\n\r\n  vec3 jitter1 = normalize(uLat1);\r\n  vec3 jitter2 = normalize(uLat2);\r\n  pos += jitter1 * ((triangle - 0.5) * uJitterAmp);\r\n  pos += jitter2 * ((hashFloat(id * 1103515245u) - 0.5) * uJitterAmp * 0.6);\r\n\r\n  vec4 mvPosition = modelViewMatrix * vec4(pos, 1.0);\r\n  float dist = -mvPosition.z;\r\n  float forwardMask = step(0.0, dist);\r\n\r\n  vec4 clipPosition = projectionMatrix * mvPosition;\r\n  float invW = 1.0 / max(abs(clipPosition.w), 1e-3);\r\n  vec2 ndc = clipPosition.xy * invW;\r\n\r\n  float screenMask = 1.0 - smoothstep(0.96, 1.16, max(abs(ndc.x), abs(ndc.y)));\r\n  float rangeMask = 1.0 - smoothstep(uMaxDistance * 0.7, uMaxDistance, dist);\r\n\r\n  float fadeT = clamp((dist - uFadeNear) / max(uFadeFar - uFadeNear, 1e-3), 0.0, 1.0);\r\n  float fade = (1.0 - fadeT) * screenMask * rangeMask * forwardMask;\r\n  vFade = fade;\r\n  vColorMix = fade;\r\n\r\n  float sizeBase = uSizePx * projectionMatrix[1][1] / max(dist, 1e-3);\r\n  float attenuatedSize = sizeBase * fade;\r\n  gl_PointSize = max(attenuatedSize, 0.75) * step(0.001, fade);\r\n  gl_Position = clipPosition;\r\n}\r\n`;\r\n\r\nconst PARTICLE_FRAGMENT_SHADER = /* glsl */`\r\nprecision highp float;\r\n\r\nin float vFade;\r\nin float vColorMix;\r\n\r\nuniform vec3 uColorNear;\r\nuniform vec3 uColorFar;\r\n\r\nout vec4 fragColor;\r\n\r\nvoid main() {\r\n  vec2 coord = gl_PointCoord - vec2(0.5);\r\n  float falloff = exp(-8.0 * dot(coord, coord));\r\n  float alpha = vFade * falloff * 0.6;\r\n  if (alpha < 0.004) {\r\n    discard;\r\n  }\r\n  vec3 color = mix(uColorFar, uColorNear, vColorMix);\r\n  fragColor = vec4(color, alpha);\r\n}\r\n`;\r\n","/**\r\n * WASM モジュールとのやり取りをまとめるラッパークラス。\r\n * Vue レイヤーでの wasm 呼び出しを一元化し、ポインタのキャッシュと\r\n * DataView の再利用で GC 負荷を抑えます。\r\n */\r\nexport class WasmtimeBridge {\r\n  constructor(wasmModule) {\r\n    if (!wasmModule) {\r\n      throw new Error('WasmtimeBridge: wasmModule が未定義です');\r\n    }\r\n\r\n    this.wasm = wasmModule;\r\n    this.latestStatePtr = 0;\r\n    this.latestStateHeaderPtr = 0;\r\n    this.latestStateHeaderView = null;\r\n    this.latestPositionsPtr = 0;\r\n    this.latestVelocitiesPtr = 0;\r\n    this.latestOrientationsPtr = 0;\r\n    this.latestBoidCount = 0;\r\n\r\n    this.cachedHeapBuffer = null;\r\n    this.cachedPositionsPtr = 0;\r\n    this.cachedOrientationsPtr = 0;\r\n    this.cachedVelocitiesPtr = 0;\r\n    this.cachedSpeciesIdsPtr = 0;\r\n    this.cachedPositionsView = null;\r\n    this.cachedOrientationsView = null;\r\n    this.cachedVelocitiesView = null;\r\n    this.cachedSpeciesIdsView = null;\r\n    this.cachedPositionsCount = 0;\r\n    this.cachedOrientationsCount = 0;\r\n    this.cachedVelocitiesCount = 0;\r\n    this.cachedSpeciesIdsCount = 0;\r\n    this.cachedSpeciesIdsBuffer = null;\r\n\r\n    // cwrap された wasm 関数を遅延束縛で保持\r\n    this.stepSimulationHandle = this.createWrappedFunction('stepSimulation', 'number', ['number']);\r\n    this.buildHandle = this.createWrappedFunction('build', 'void', ['number', 'number']);\r\n    this.exportTreeStructureHandle = this.createWrappedFunction('exportTreeStructure', 'object', []);\r\n    this.boidUnitMappingPtrHandle = this.createWrappedFunction('boidUnitMappingPtr', 'number', []);\r\n    this.currentFirstBoidXHandle = this.createWrappedFunction('currentFirstBoidX', 'number', []);\r\n    this.speciesIdsPtrHandle = this.createWrappedFunction('speciesIdsPtr', 'number', []);\r\n    this.syncReadToWriteBuffersHandle = this.createWrappedFunction('syncReadToWriteBuffers', 'void', []);\r\n  }\r\n\r\n  /**\r\n   * 種族設定から wasm に渡すベクタを生成。\r\n   * App.vue::createSpeciesParamsVector を移植してください。\r\n   */\r\n  buildSpeciesParams(settings) {\r\n    if (!Array.isArray(settings)) {\r\n      return null;\r\n    }\r\n\r\n    // wasm 側の VectorSpeciesParams を生成し、一件ずつ型を整えて push\r\n    const vector = new this.wasm.VectorSpeciesParams();\r\n    settings.forEach((raw, index) => {\r\n      if (!raw) {\r\n        return;\r\n      }\r\n\r\n      const toNumber = (value, fallback = 0) => {\r\n        const num = Number(value);\r\n        return Number.isFinite(num) ? num : fallback;\r\n      };\r\n\r\n      vector.push_back({\r\n        species: typeof raw.species === 'string' ? raw.species : `Species ${index + 1}`,\r\n        count: Math.max(0, Math.floor(toNumber(raw.count, 0))),\r\n        speciesId: Math.max(0, Math.floor(toNumber(raw.speciesId, index))),\r\n        cohesion: toNumber(raw.cohesion, 0),\r\n        separation: toNumber(raw.separation, 0),\r\n        alignment: toNumber(raw.alignment, 0),\r\n        maxSpeed: toNumber(raw.maxSpeed, 1),\r\n        minSpeed: toNumber(raw.minSpeed, 0),\r\n        maxTurnAngle: toNumber(raw.maxTurnAngle, 0),\r\n        separationRange: toNumber(raw.separationRange, 0),\r\n        alignmentRange: toNumber(raw.alignmentRange, 0),\r\n        cohesionRange: toNumber(raw.cohesionRange, 0),\r\n        maxNeighbors: Math.max(0, Math.floor(toNumber(raw.maxNeighbors, 0))),\r\n        lambda: toNumber(raw.lambda, 0),\r\n        tau: toNumber(raw.tau, 0),\r\n        horizontalTorque: toNumber(raw.horizontalTorque, 0),\r\n        velocityEpsilon: toNumber(raw.velocityEpsilon, 0.0001),\r\n        torqueStrength: toNumber(raw.torqueStrength, 0),\r\n        // 形状パラメータは省略された場合もデフォルト値で補完しておく。\r\n        bodyHeadLength: toNumber(raw.bodyHeadLength, -0.15),\r\n        bodyTailLength: toNumber(raw.bodyTailLength, 0.33),\r\n        bodyRadius: toNumber(raw.bodyRadius, 0.035),\r\n        isPredator: Boolean(raw.isPredator),\r\n      });\r\n    });\r\n    return vector;\r\n  }\r\n\r\n  /**\r\n   * シミュレーションを 1 ステップ進めて最新ポインタを更新します。\r\n   * App.vue::stepSimulationAndUpdateState を移植。\r\n   */\r\n  stepSimulation(deltaTime) {\r\n    const handle = this.ensureHandle(this.stepSimulationHandle, 'stepSimulation');\r\n\r\n    const { wasm } = this;\r\n    const dt = Number.isFinite(deltaTime) ? deltaTime : 0;\r\n    const statePtr = handle(dt);\r\n    if (!statePtr) {\r\n      this.latestStatePtr = 0;\r\n      this.latestStateHeaderPtr = 0;\r\n      this.latestPositionsPtr = 0;\r\n      this.latestVelocitiesPtr = 0;\r\n      this.latestOrientationsPtr = 0;\r\n      this.latestStateHeaderView = null;\r\n      this.latestBoidCount = 0;\r\n      return 0;\r\n    }\r\n\r\n    const heapU8Buffer = wasm.HEAPU8.buffer;\r\n    if (\r\n      !this.latestStateHeaderView ||\r\n      this.latestStateHeaderPtr !== statePtr ||\r\n      this.latestStateHeaderView.buffer !== heapU8Buffer\r\n    ) {\r\n      this.latestStateHeaderView = new DataView(heapU8Buffer, statePtr, 16);\r\n      this.latestStateHeaderPtr = statePtr;\r\n    }\r\n\r\n    this.latestStatePtr = statePtr;\r\n    this.latestPositionsPtr = this.latestStateHeaderView.getUint32(0, true);\r\n    this.latestVelocitiesPtr = this.latestStateHeaderView.getUint32(4, true);\r\n    this.latestOrientationsPtr = this.latestStateHeaderView.getUint32(8, true);\r\n    this.latestBoidCount = this.latestStateHeaderView.getInt32(12, true);\r\n\r\n    return this.latestBoidCount;\r\n  }\r\n\r\n  /**\r\n   * wasm 側の positions / orientations 等のビューを再利用して返す。\r\n   * buffer が差し替わった場合のみ新しい TypedArray を生成する。\r\n   */\r\n  getBuffers(count) {\r\n    if (!this.wasm) {\r\n      return {\r\n        positions: new Float32Array(0),\r\n        orientations: new Float32Array(0),\r\n        velocities: new Float32Array(0),\r\n        speciesIds: new Int32Array(0),\r\n      };\r\n    }\r\n\r\n    const heapBuffer = this.wasm.HEAPF32.buffer;\r\n    const heapBufferI32 = this.wasm.HEAP32.buffer;\r\n\r\n    if (this.cachedHeapBuffer !== heapBuffer || this.cachedSpeciesIdsBuffer !== heapBufferI32) {\r\n      this.cachedHeapBuffer = heapBuffer;\r\n      this.cachedSpeciesIdsBuffer = heapBufferI32;\r\n      this.cachedPositionsPtr = 0;\r\n      this.cachedOrientationsPtr = 0;\r\n      this.cachedVelocitiesPtr = 0;\r\n      this.cachedSpeciesIdsPtr = 0;\r\n      this.cachedPositionsView = null;\r\n      this.cachedOrientationsView = null;\r\n      this.cachedVelocitiesView = null;\r\n      this.cachedSpeciesIdsView = null;\r\n      this.cachedPositionsCount = 0;\r\n      this.cachedOrientationsCount = 0;\r\n      this.cachedVelocitiesCount = 0;\r\n      this.cachedSpeciesIdsCount = 0;\r\n    }\r\n\r\n    if (!this.latestPositionsPtr || !this.latestOrientationsPtr || !this.latestVelocitiesPtr || count <= 0) {\r\n      return {\r\n        positions: this.cachedPositionsView ?? new Float32Array(0),\r\n        orientations: this.cachedOrientationsView ?? new Float32Array(0),\r\n        velocities: this.cachedVelocitiesView ?? new Float32Array(0),\r\n        speciesIds: this.cachedSpeciesIdsView ?? new Int32Array(0),\r\n      };\r\n    }\r\n\r\n    if (\r\n      this.cachedPositionsView === null ||\r\n      this.cachedPositionsCount !== count ||\r\n      this.cachedPositionsPtr !== this.latestPositionsPtr\r\n    ) {\r\n      this.cachedPositionsPtr = this.latestPositionsPtr;\r\n      this.cachedPositionsView = new Float32Array(heapBuffer, this.cachedPositionsPtr, count * 3);\r\n      this.cachedPositionsCount = count;\r\n    }\r\n\r\n    if (\r\n      this.cachedOrientationsView === null ||\r\n      this.cachedOrientationsCount !== count ||\r\n      this.cachedOrientationsPtr !== this.latestOrientationsPtr\r\n    ) {\r\n      this.cachedOrientationsPtr = this.latestOrientationsPtr;\r\n      this.cachedOrientationsView = new Float32Array(heapBuffer, this.cachedOrientationsPtr, count * 4);\r\n      this.cachedOrientationsCount = count;\r\n    }\r\n\r\n    if (\r\n      this.cachedVelocitiesView === null ||\r\n      this.cachedVelocitiesCount !== count ||\r\n      this.cachedVelocitiesPtr !== this.latestVelocitiesPtr\r\n    ) {\r\n      this.cachedVelocitiesPtr = this.latestVelocitiesPtr;\r\n      this.cachedVelocitiesView = new Float32Array(heapBuffer, this.cachedVelocitiesPtr, count * 3);\r\n      this.cachedVelocitiesCount = count;\r\n    }\r\n\r\n    const speciesPtr = typeof this.speciesIdsPtrHandle === 'function' ? this.speciesIdsPtrHandle() : 0;\r\n    if (\r\n      speciesPtr && (\r\n        this.cachedSpeciesIdsView === null ||\r\n        this.cachedSpeciesIdsPtr !== speciesPtr ||\r\n        this.cachedSpeciesIdsCount !== count ||\r\n        this.cachedSpeciesIdsBuffer !== heapBufferI32\r\n      )\r\n    ) {\r\n      this.cachedSpeciesIdsPtr = speciesPtr;\r\n      this.cachedSpeciesIdsCount = count;\r\n      this.cachedSpeciesIdsBuffer = heapBufferI32;\r\n      this.cachedSpeciesIdsView = new Int32Array(heapBufferI32, speciesPtr, count);\r\n    }\r\n\r\n    return {\r\n      positions: this.cachedPositionsView,\r\n      orientations: this.cachedOrientationsView,\r\n      velocities: this.cachedVelocitiesView,\r\n      speciesIds: this.cachedSpeciesIdsView,\r\n    };\r\n  }\r\n\r\n  /** wasm の triple buffer から現状態をコピーしてスナップショットを作る */\r\n  captureState() {\r\n    if (!this.wasm) {\r\n      return null;\r\n    }\r\n\r\n    const currentCount = this.stepSimulation(0);\r\n    if (!currentCount || currentCount <= 0) {\r\n      return { count: 0 };\r\n    }\r\n\r\n    const { positions, velocities, orientations, speciesIds } = this.getBuffers(currentCount);\r\n\r\n    return {\r\n      count: currentCount,\r\n      positions: positions ? new Float32Array(positions) : null,\r\n      velocities: velocities ? new Float32Array(velocities) : null,\r\n      orientations: orientations ? new Float32Array(orientations) : null,\r\n      speciesIds: speciesIds ? new Int32Array(speciesIds) : null,\r\n    };\r\n  }\r\n\r\n  /** 過去の状態を復元。restoreFlockState を移植。 */\r\n  /** 過去のスナップショットを現在のバッファへ復元する */\r\n  restoreState(previousState, oldSettings, newSettings) {\r\n    if (!previousState || previousState.count <= 0) {\r\n      return;\r\n    }\r\n\r\n    const currentCount = this.stepSimulation(0);\r\n    if (!currentCount || currentCount <= 0) {\r\n      return;\r\n    }\r\n\r\n    const { positions, velocities, orientations } = this.getBuffers(currentCount);\r\n    if (!positions || !velocities || !orientations) {\r\n      return;\r\n    }\r\n\r\n    const prevPositions = previousState.positions;\r\n    const prevVelocities = previousState.velocities;\r\n    const prevOrientations = previousState.orientations;\r\n\r\n    const oldRanges = buildSpeciesRanges(oldSettings);\r\n    const newRanges = buildSpeciesRanges(newSettings);\r\n    const oldRangeMap = new Map(oldRanges.map((info) => [info.name, info]));\r\n\r\n    let restored = 0;\r\n\r\n    for (const newInfo of newRanges) {\r\n      if (!newInfo.count) continue;\r\n      const oldInfo = oldRangeMap.get(newInfo.name);\r\n      if (!oldInfo || !oldInfo.count) continue;\r\n\r\n      const transferable = Math.min(oldInfo.count, newInfo.count);\r\n      for (let i = 0; i < transferable; i += 1) {\r\n        const srcIndex = oldInfo.start + i;\r\n        const dstIndex = newInfo.start + i;\r\n        if (srcIndex >= previousState.count || dstIndex >= currentCount) {\r\n          break;\r\n        }\r\n\r\n        if (prevPositions) {\r\n          const srcPosBase = srcIndex * 3;\r\n          const dstPosBase = dstIndex * 3;\r\n          positions[dstPosBase] = prevPositions[srcPosBase];\r\n          positions[dstPosBase + 1] = prevPositions[srcPosBase + 1];\r\n          positions[dstPosBase + 2] = prevPositions[srcPosBase + 2];\r\n        }\r\n\r\n        if (prevVelocities) {\r\n          const srcVelBase = srcIndex * 3;\r\n          const dstVelBase = dstIndex * 3;\r\n          velocities[dstVelBase] = prevVelocities[srcVelBase];\r\n          velocities[dstVelBase + 1] = prevVelocities[srcVelBase + 1];\r\n          velocities[dstVelBase + 2] = prevVelocities[srcVelBase + 2];\r\n        }\r\n\r\n        if (prevOrientations) {\r\n          const srcOriBase = srcIndex * 4;\r\n          const dstOriBase = dstIndex * 4;\r\n          orientations[dstOriBase] = prevOrientations[srcOriBase];\r\n          orientations[dstOriBase + 1] = prevOrientations[srcOriBase + 1];\r\n          orientations[dstOriBase + 2] = prevOrientations[srcOriBase + 2];\r\n          orientations[dstOriBase + 3] = prevOrientations[srcOriBase + 3];\r\n        }\r\n        restored += 1;\r\n      }\r\n    }\r\n\r\n    if (restored > 0) {\r\n      this.syncReadToWriteBuffers();\r\n    }\r\n  }\r\n\r\n  /** wasm 側の空間インデックス生成をトリガー */\r\n  buildSpatialIndex(arg0, arg1) {\r\n    const handle = this.ensureHandle(this.buildHandle, 'build');\r\n    handle(arg0, arg1);\r\n  }\r\n\r\n  /** wasm から木構造データを取得 */\r\n  exportTreeStructure() {\r\n    if (typeof this.exportTreeStructureHandle !== 'function') {\r\n      return null;\r\n    }\r\n    return this.exportTreeStructureHandle();\r\n  }\r\n\r\n  /** デバッグ用の先頭 Boid の X 座標取得 */\r\n  currentFirstBoidX() {\r\n    if (typeof this.currentFirstBoidXHandle !== 'function') {\r\n      return 0;\r\n    }\r\n    return this.currentFirstBoidXHandle();\r\n  }\r\n\r\n  /** ユニット ID と Boid インデックスのマッピングバッファを返す */\r\n  getUnitMappings(count) {\r\n    if (!count || count <= 0 || typeof this.boidUnitMappingPtrHandle !== 'function') {\r\n      return null;\r\n    }\r\n\r\n    const ptr = this.boidUnitMappingPtrHandle();\r\n    if (!ptr) {\r\n      return null;\r\n    }\r\n\r\n    return new Int32Array(this.wasm.HEAP32.buffer, ptr, count * 2);\r\n  }\r\n\r\n  /** wasm の triple buffer 読み書きを同期 */\r\n  syncReadToWriteBuffers() {\r\n    if (typeof this.syncReadToWriteBuffersHandle === 'function') {\r\n      this.syncReadToWriteBuffersHandle();\r\n    }\r\n  }\r\n\r\n  /** cwrap または素の関数を返し、存在しなければ null */\r\n  createWrappedFunction(name, returnType, argTypes) {\r\n    const { wasm } = this;\r\n    if (!wasm) {\r\n      return null;\r\n    }\r\n\r\n    if (typeof wasm[name] === 'function') {\r\n      return wasm[name].bind(wasm);\r\n    }\r\n\r\n    if (typeof wasm.cwrap === 'function') {\r\n      try {\r\n        return wasm.cwrap(name, returnType, argTypes);\r\n      } catch (error) {\r\n        console.warn(`WasmtimeBridge: ${name} のラップに失敗`, error);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** ハンドルが未初期化でないことを確認 */\r\n  ensureHandle(handle, name) {\r\n    if (typeof handle !== 'function') {\r\n      throw new Error(`WasmtimeBridge: ${name} ハンドルが初期化されていません`);\r\n    }\r\n    return handle;\r\n  }\r\n}\r\n\r\n// 連番の設定配列から {name,start,count} を生成し種族ごとの範囲を求める\r\nfunction buildSpeciesRanges(list = []) {\r\n  const ranges = [];\r\n  let offset = 0;\r\n  for (const item of list) {\r\n    if (!item) continue;\r\n    const count = Math.max(0, Number(item.count) || 0);\r\n    ranges.push({\r\n      name: item.species || '',\r\n      start: offset,\r\n      count,\r\n    });\r\n    offset += count;\r\n  }\r\n  return ranges;\r\n}\r\n","import { reactive, computed, toRaw } from 'vue';\r\n\r\nconst STORAGE_KEY = 'boids_settings';\r\nconst DEFAULT_SPECIES_FALLBACK = {\r\n  species: 'Species',\r\n  count: 0,\r\n  cohesion: 20,\r\n  cohesionRange: 30,\r\n  separation: 5,\r\n  separationRange: 1,\r\n  alignment: 10,\r\n  alignmentRange: 6,\r\n  maxSpeed: 0.3,\r\n  minSpeed: 0,\r\n  maxTurnAngle: 0.2,\r\n  maxNeighbors: 6,\r\n  horizontalTorque: 0.02,\r\n  torqueStrength: 5,\r\n  lambda: 0.5,\r\n  tau: 1.5,\r\n  velocityEpsilon: 0.0001,\r\n  isPredator: false,\r\n  speciesId: 0,\r\n};\r\n\r\n/**\r\n * Flock 設定のロード/保存/編集を司る小さなストアヘルパー。\r\n * localStorage に保存された配列を復元し、Vue からはこのストア経由で操作します。\r\n */\r\nexport function createFlockSettingsStore(defaultSettings = []) {\r\n  const defaultTemplates = sanitizeSpeciesList(defaultSettings, defaultSettings);\r\n  const settings = reactive([]);\r\n\r\n  replaceSettings(defaultTemplates);\r\n  if (!loadFromStorage()) {\r\n    replaceSettings(defaultTemplates);\r\n  }\r\n\r\n  const totalBoids = computed(() => getTotalBoidCount(settings));\r\n\r\n  function loadFromStorage() {\r\n    if (typeof localStorage === 'undefined') {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const saved = localStorage.getItem(STORAGE_KEY);\r\n      if (!saved) {\r\n        return false;\r\n      }\r\n      const parsed = JSON.parse(saved);\r\n      if (Array.isArray(parsed) && parsed.length > 0) {\r\n        replaceSettings(parsed);\r\n        return true;\r\n      }\r\n    } catch (error) {\r\n      console.warn('Failed to load settings from localStorage:', error);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function saveToStorage() {\r\n    if (typeof localStorage === 'undefined') {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const snapshot = settings.map((entry) => ({ ...toRaw(entry) }));\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(snapshot));\r\n      return true;\r\n    } catch (error) {\r\n      console.warn('Failed to save settings to localStorage:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function replaceSettings(nextList) {\r\n    const sanitized = sanitizeSpeciesList(nextList, defaultTemplates);\r\n    settings.splice(0, settings.length, ...sanitized);\r\n    return sanitized;\r\n  }\r\n\r\n  function resetToDefaults() {\r\n    replaceSettings(defaultTemplates);\r\n    saveToStorage();\r\n  }\r\n\r\n  function addSpecies(template) {\r\n    const basePool = settings.length > 0 ? settings : defaultTemplates;\r\n    const fallbackTemplate =\r\n      basePool.find((item) => item && !item.isPredator) ||\r\n      defaultTemplates.find((item) => item && !item.isPredator) ||\r\n      DEFAULT_SPECIES_FALLBACK;\r\n\r\n    const candidate = template\r\n      ? sanitizeSpeciesEntry(template, fallbackTemplate)\r\n      : cloneSpeciesTemplate(fallbackTemplate);\r\n\r\n    candidate.isPredator = false;\r\n    candidate.count = 0;\r\n    candidate.species = ensureUniqueName(candidate.species, new Set(settings.map((s) => s.species)));\r\n    settings.push(candidate);\r\n    return candidate;\r\n  }\r\n\r\n  function removeSpecies(index) {\r\n    if (index < 0 || index >= settings.length) {\r\n      return null;\r\n    }\r\n    const removed = settings.splice(index, 1);\r\n    return removed.length ? removed[0] : null;\r\n  }\r\n\r\n  return {\r\n    settings,\r\n    totalBoids,\r\n    loadFromStorage,\r\n    saveToStorage,\r\n    replaceSettings,\r\n    resetToDefaults,\r\n    addSpecies,\r\n    removeSpecies,\r\n  };\r\n}\r\n\r\nfunction getTotalBoidCount(list) {\r\n  return list.reduce((sum, entry) => sum + Math.max(0, Number(entry?.count) || 0), 0);\r\n}\r\n\r\nfunction sanitizeSpeciesList(list = [], fallbackList = []) {\r\n  if (!Array.isArray(list)) {\r\n    return [];\r\n  }\r\n\r\n  const sanitized = [];\r\n  const takenNames = new Set();\r\n\r\n  list.forEach((entry, index) => {\r\n    const fallback = fallbackList[index] || fallbackList[0] || DEFAULT_SPECIES_FALLBACK;\r\n    const clean = sanitizeSpeciesEntry(entry, fallback);\r\n    clean.species = ensureUniqueName(clean.species, takenNames);\r\n    sanitized.push(clean);\r\n  });\r\n\r\n  return sanitized;\r\n}\r\n\r\nfunction sanitizeSpeciesEntry(entry = {}, fallback = DEFAULT_SPECIES_FALLBACK) {\r\n  const base = { ...DEFAULT_SPECIES_FALLBACK, ...fallback };\r\n  const merged = { ...base, ...entry };\r\n\r\n  const toFinite = (value, fallbackValue = 0) => {\r\n    const num = Number(value);\r\n    return Number.isFinite(num) ? num : fallbackValue;\r\n  };\r\n\r\n  const result = { ...merged };\r\n  result.count = Math.max(0, Math.floor(toFinite(merged.count, base.count ?? 0)));\r\n  result.maxNeighbors = Math.max(0, Math.floor(toFinite(merged.maxNeighbors, base.maxNeighbors ?? 0)));\r\n  result.speciesId = Math.max(0, Math.floor(toFinite(merged.speciesId, base.speciesId ?? 0)));\r\n\r\n  result.cohesion = toFinite(merged.cohesion, base.cohesion ?? 0);\r\n  result.cohesionRange = Math.max(0, toFinite(merged.cohesionRange, base.cohesionRange ?? 0));\r\n  result.separation = toFinite(merged.separation, base.separation ?? 0);\r\n  result.separationRange = Math.max(0, toFinite(merged.separationRange, base.separationRange ?? 0));\r\n  result.alignment = toFinite(merged.alignment, base.alignment ?? 0);\r\n  result.alignmentRange = Math.max(0, toFinite(merged.alignmentRange, base.alignmentRange ?? 0));\r\n  result.maxSpeed = Math.max(0, toFinite(merged.maxSpeed, base.maxSpeed ?? 0));\r\n  result.minSpeed = Math.max(0, toFinite(merged.minSpeed, base.minSpeed ?? 0));\r\n  result.maxTurnAngle = toFinite(merged.maxTurnAngle, base.maxTurnAngle ?? 0);\r\n  result.horizontalTorque = toFinite(merged.horizontalTorque, base.horizontalTorque ?? 0);\r\n  result.torqueStrength = toFinite(merged.torqueStrength, base.torqueStrength ?? 0);\r\n  result.lambda = toFinite(merged.lambda, base.lambda ?? 0);\r\n  result.tau = toFinite(merged.tau, base.tau ?? 0);\r\n  result.velocityEpsilon = Math.max(0, toFinite(merged.velocityEpsilon, base.velocityEpsilon ?? 0.0001));\r\n\r\n  const speciesName = typeof merged.species === 'string' ? merged.species.trim() : '';\r\n  result.species = speciesName || base.species || DEFAULT_SPECIES_FALLBACK.species;\r\n  result.isPredator = Boolean(merged.isPredator);\r\n\r\n  return result;\r\n}\r\n\r\nfunction ensureUniqueName(name, taken, defaultName = 'Species') {\r\n  const base = typeof name === 'string' && name.trim() ? name.trim() : defaultName;\r\n  let candidate = base;\r\n  let index = 2;\r\n  while (taken.has(candidate)) {\r\n    candidate = `${base} ${index}`;\r\n    index += 1;\r\n  }\r\n  taken.add(candidate);\r\n  return candidate;\r\n}\r\n\r\nfunction cloneSpeciesTemplate(template) {\r\n  return JSON.parse(JSON.stringify(template));\r\n}\r\n","<template>\r\n  <div id=\"app\">\r\n    <div class=\"ui-overlay\">\r\n      <h1>Boids Simulation</h1>\r\n      <details>\r\n        <summary>Settings</summary>\r\n        <div v-for=\"(s, i) in settings\" :key=\"i\">\r\n          <Settings :settings=\"s\" :can-remove=\"settings.length > 1\" @remove=\"removeSpecies(i)\" />\r\n        </div>\r\n        <button class=\"add-species-button\" @click=\"addSpecies\">種族を追加</button>\r\n        <button @click=\"resetSettings\" style=\"margin-bottom:1em;\">リセット</button>\r\n        <div>\r\n          <label>\r\n            <input type=\"checkbox\" v-model=\"showUnits\" />\r\n            Unit可視化\r\n          </label>\r\n          <label style=\"margin-left:1em;\">\r\n            <input type=\"checkbox\" v-model=\"showUnitSpheres\" />\r\n            スフィアのみ表示\r\n          </label>\r\n          <label style=\"margin-left:1em;\">\r\n            <input type=\"checkbox\" v-model=\"showUnitLines\" />\r\n            線のみ表示\r\n          </label>\r\n          <label style=\"margin-left:1em;\">\r\n            <input type=\"checkbox\" v-model=\"showUnitColors\" />\r\n            Unit色分け\r\n          </label>\r\n          <label style=\"margin-left:1em;\">\r\n            表示レイヤ下限: <input type=\"range\" min=\"1\" max=\"20\" v-model=\"unitLayer\" />\r\n            {{ unitLayer }}\r\n          </label>\r\n        </div>\r\n      </details>\r\n      <div class=\"info\">\r\n        <p>Boids Count: {{ totalBoids }}</p>\r\n      </div>\r\n    </div>\r\n    <div ref=\"threeContainer\" class=\"three-container\" />\r\n    <audio ref=\"backgroundAudio\" src=\"/UnderWater.mp3\" loop style=\"display:none\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { inject, onMounted, ref, watch, toRaw } from 'vue';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport Settings from './components/Settings.vue';\r\nimport StatsGl from 'stats-gl';\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { BoidInstancing } from './rendering/BoidInstancing.js';\r\nimport { FogPipeline } from './rendering/FogPipeline.js';\r\nimport { ParticleField } from './rendering/ParticleField.js';\r\nimport { WasmtimeBridge } from './simulation/WasmtimeBridge.js';\r\nimport { createFlockSettingsStore } from './state/FlockSettingsStore.js';\r\n\r\nconst wasmModule = inject('wasmModule');\r\nif (!wasmModule) {\r\n  console.error('wasmModule not provided');\r\n}\r\n\r\nconst wasmBridge = wasmModule ? new WasmtimeBridge(wasmModule) : null;\r\n\r\n// const getUnitCount = wasmModule.cwrap('getUnitCount', 'number', []);\r\n// const getUnitParentIndicesPtr = wasmModule.cwrap('getUnitParentIndicesPtr', 'number', []);\r\n\r\nfunction isMobileDevice() {\r\n  if (typeof navigator === 'undefined') {\r\n    return false;\r\n  }\r\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n}\r\n\r\nfunction fetchTreeStructure() {\r\n  return wasmBridge?.exportTreeStructure() ?? null;\r\n}\r\nconst mobileBoidCount = isMobileDevice() ? 6000 : 10000;\r\n\r\nconst DEFAULT_SETTINGS = [{\r\n  species: 'Boids',         // 種族名\r\n  count: mobileBoidCount,   // 群れの数（スマホなら6000、PCなら10000）\r\n  cohesion: 38,             // 凝集\r\n  cohesionRange: 30,        // 凝集範囲\r\n  separation: 8,            // 分離\r\n  separationRange: 0.6,     // 分離範囲\r\n  alignment: 19,            // 整列\r\n  alignmentRange: 6,        // 整列範囲\r\n  maxSpeed: 0.26,           // 最大速度\r\n  maxTurnAngle: 0.25,       // 最大旋回角\r\n  maxNeighbors: 6,          // 最大近傍数\r\n  horizontalTorque: 0.019,  // 水平化トルク\r\n  torqueStrength: 10,       // 回転トルク強度\r\n  lambda: 0.62,             // 速度調整係数\r\n  tau: 1.0                  // 記憶時間スケール\r\n}, {\r\n  species: 'Predator',\r\n  count: 1,\r\n  cohesion: 5.58,                     // 捕食者には使わない\r\n  separation: 0.0,\r\n  alignment: 0.0,\r\n  maxSpeed: 1.37,                     // 速く逃げられるよう速度は大きめ\r\n  minSpeed: 0.4,\r\n  maxTurnAngle: 0.2,\r\n  separationRange: 14.0,\r\n  alignmentRange: 11.0,\r\n  cohesionRange: 77.0,\r\n  maxNeighbors: 0,\r\n  lambda: 0.05,\r\n  tau: 1.0, // 捕食者は常に追いかける\r\n  horizontalTorque: 0.022,\r\n  torqueStrength: 0.0,\r\n  isPredator: true                // ← 捕食者フラグ\r\n}];\r\n\r\nconst flockStore = createFlockSettingsStore(DEFAULT_SETTINGS);\r\nconst {\r\n  settings,\r\n  totalBoids,\r\n  replaceSettings,\r\n  resetToDefaults,\r\n  addSpecies: addSpeciesFromStore,\r\n  removeSpecies: removeSpeciesFromStore,\r\n  saveToStorage,\r\n} = flockStore;\r\n\r\nfunction snapshotSettingsList(list) {\r\n  return list.map((item) => JSON.parse(JSON.stringify(toRaw(item))));\r\n}\r\n\r\nlet cachedTotalBoidCount = totalBoids.value;\r\nlet lastSpeciesSignature = getSpeciesSignature(settings);\r\nlet previousSettingsSnapshot = snapshotSettingsList(settings);\r\nlet pendingStateForReinitialize = null;\r\nlet pendingSettingsSnapshot = null;\r\n\r\nfunction applySettingsSnapshot(snapshot) {\r\n  if (!Array.isArray(snapshot) || snapshot.length === 0) {\r\n    return null;\r\n  }\r\n  const sanitized = replaceSettings(snapshot);\r\n  saveToStorage();\r\n  previousSettingsSnapshot = snapshotSettingsList(settings);\r\n  return sanitized;\r\n}\r\n\r\nfunction addSpecies(template) {\r\n  const added = addSpeciesFromStore(template);\r\n  saveToStorage();\r\n  return added;\r\n}\r\n\r\nfunction removeSpecies(index) {\r\n  if (settings.length <= 1) {\r\n    return null;\r\n  }\r\n  const removed = removeSpeciesFromStore(index);\r\n  if (removed) {\r\n    saveToStorage();\r\n  }\r\n  return removed;\r\n}\r\n\r\nconst threeContainer = ref(null);\r\nconst backgroundAudio = ref(null);\r\nlet scene, camera, renderer, controls;\r\nlet fogPipeline = null;\r\nlet particleField = null;\r\n\r\nconst paused = ref(false);\r\n\r\nconst showUnits = ref(true);\r\nconst showUnitSpheres = ref(false);\r\nconst showUnitLines = ref(false);\r\nconst showUnitColors = ref(false);\r\nconst unitLayer = ref(1);\r\n\r\nlet unitSpheres = [];\r\nlet unitLines = [];\r\n\r\nlet maxDepth = 1;\r\nlet stats = null;\r\nlet glContext = null;\r\nlet frameCounter = 0;\r\nlet flockReinitTimer = null;\r\n\r\nlet animationTimer = null;\r\nconst FRAME_INTERVAL = 1000 / 1000;//1000 / 60; // 60FPS\r\nconst COUNT_REINIT_DELAY_MS = 400;\r\n\r\nfunction positionStatsOverlay(element) {\r\n  if (!element) return;\r\n  element.style.position = 'fixed';\r\n  element.style.padding = '80px';\r\n  element.style.pointerEvents = 'none';\r\n  element.style.display = 'flex';\r\n  element.style.flexDirection = 'column';\r\n  element.style.alignItems = 'flex-end';\r\n  element.style.gap = '6px';\r\n  element.style.maxWidth = '200px';\r\n  element.style.width = 'auto';\r\n  element.style.boxSizing = 'border-box';\r\n  element.style.zIndex = 1000;\r\n}\r\n\r\n// ツリーの最大深さを計算\r\nfunction calcMaxDepth(unit, depth = 0) {\r\n  if (!unit || !unit.children || typeof unit.children.size !== 'function' || unit.children.size() === 0) {\r\n    return depth;\r\n  }\r\n  let max = depth;\r\n  for (let i = 0; i < unit.children.size(); i++) {\r\n    const child = unit.children.get(i);\r\n    max = Math.max(max, calcMaxDepth(child, depth + 1));\r\n  }\r\n  return max;\r\n}\r\n\r\nfunction handleKeydown(e) {\r\n  if (e.code === 'Space') {\r\n    paused.value = !paused.value;\r\n  }\r\n}\r\n\r\nfunction initThreeJS() {\r\n  const width = window.innerWidth;\r\n  const height = window.innerHeight;\r\n\r\n  scene = new THREE.Scene();\r\n  scene.background = new THREE.Color(OCEAN_COLORS.DEEP_BLUE);\r\n  createOceanSphere();\r\n\r\n  camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\r\n  camera.position.set(3, -5, 3);\r\n  camera.lookAt(0, 0, 0);\r\n\r\n  renderer = new THREE.WebGLRenderer({\r\n    antialias: true,\r\n    depth: true, // 深度バッファを有効化\r\n\r\n  });\r\n  renderer.setPixelRatio(window.devicePixelRatio); // 高DPI対応\r\n  renderer.setSize(width, height);\r\n  renderer.shadowMap.enabled = true;\r\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap; // 影を柔らかく\r\n\r\n  glContext = renderer.getContext();\r\n\r\n  threeContainer.value.appendChild(renderer.domElement);\r\n\r\n  camera.aspect = width / height;\r\n  camera.updateProjectionMatrix();\r\n\r\n  controls = new OrbitControls(camera, renderer.domElement);\r\n  controls.enableDamping = true; // なめらかな操作\r\n  controls.dampingFactor = 0.1;\r\n\r\n  // 地面メッシュ追加\r\n  const groundGeo = new THREE.PlaneGeometry(300, 300);\r\n  const groundMat = createFadeOutGroundMaterial();\r\n  groundMat.depthTest = true;\r\n  const ground = new THREE.Mesh(groundGeo, groundMat);\r\n  ground.rotation.x = -Math.PI / 2;\r\n  ground.position.y = -10;\r\n  ground.receiveShadow = true; // 影を受ける\r\n  scene.add(ground);\r\n\r\n  // ライト\r\n  const ambientLight = new THREE.AmbientLight(toHex(OCEAN_COLORS.AMBIENT_LIGHT), 0.9);\r\n  scene.add(ambientLight);\r\n\r\n  // 太陽光（やや暖色のDirectionalLight）\r\n  const dirLight = new THREE.DirectionalLight(toHex(OCEAN_COLORS.SUN_LIGHT), 20); // 暖色＆強め\r\n  dirLight.position.set(300, 500, 200); // 高い位置から照らす\r\n  dirLight.castShadow = true;\r\n\r\n  // 影カメラの範囲を広げる\r\n  dirLight.shadow.camera.left = -100;\r\n  dirLight.shadow.camera.right = 100;\r\n  dirLight.shadow.camera.top = 100;\r\n  dirLight.shadow.camera.bottom = -100;\r\n  dirLight.shadow.camera.near = 1;\r\n  dirLight.shadow.camera.far = 1000;\r\n\r\n  dirLight.shadow.mapSize.width = 1024;\r\n  dirLight.shadow.mapSize.height = 1024;\r\n  dirLight.shadow.bias = -0.01;\r\n  dirLight.shadow.normalBias = 0.01;\r\n\r\n  scene.add(dirLight);\r\n  initParticleSystem();\r\n  if (!isMobileDevice()) {\r\n    fogPipeline?.dispose();\r\n    fogPipeline = new FogPipeline(heightFogConfig);\r\n    fogPipeline.init(renderer, scene, camera, width, height);\r\n  } else if (fogPipeline) {\r\n    fogPipeline.dispose();\r\n    fogPipeline = null;\r\n  }\r\n  // ウィンドウリサイズ対応\r\n  window.addEventListener('resize', onWindowResize);\r\n}\r\n\r\nfunction onWindowResize() {\r\n  const width = window.innerWidth;\r\n  const height = window.innerHeight;\r\n  camera.aspect = width / height;\r\n  camera.updateProjectionMatrix();\r\n  renderer.setSize(width, height);\r\n  fogPipeline?.resize(width, height);\r\n}\r\n\r\nfunction createSinCosLutTexture(size) {\r\n  const data = new Uint8Array(size * 4);\r\n  for (let i = 0; i < size; i++) {\r\n    const angle = (i / size) * Math.PI * 2;\r\n    const sinValue = Math.sin(angle);\r\n    const cosValue = Math.cos(angle);\r\n    data[i * 4] = Math.round((sinValue * 0.5 + 0.5) * 255);\r\n    data[i * 4 + 1] = Math.round((cosValue * 0.5 + 0.5) * 255);\r\n    data[i * 4 + 2] = 0;\r\n    data[i * 4 + 3] = 255;\r\n  }\r\n  const texture = new THREE.DataTexture(data, size, 1, THREE.RGBAFormat);\r\n  texture.needsUpdate = true;\r\n  texture.wrapS = THREE.RepeatWrapping;\r\n  texture.wrapT = THREE.ClampToEdgeWrapping;\r\n  texture.magFilter = THREE.LinearFilter;\r\n  texture.minFilter = THREE.LinearFilter;\r\n  texture.generateMipmaps = false;\r\n  texture.flipY = false;\r\n  return texture;\r\n}\r\n\r\nconst TRIPLE_BUFFER_SIZE = 3;               // BoidInstancing のトリプルバッファ数\r\nconst HIDDEN_POSITION = 1e6;                // 非表示インスタンスを退避させる座標値\r\nconst IDENTITY_QUATERNION = [0, 0, 0, 1];   // 非表示インスタンスに適用する無回転クォータニオン\r\nconst SIN_LUT_SIZE = 256;                   // 尾びれアニメ用サイン LUT サイズ\r\nconst sinCosLutTexture = createSinCosLutTexture(SIN_LUT_SIZE);\r\n// LOD距離閾値（平方距離）: 近距離はハイポリ、中距離はLOD+アニメ、遠距離はLOD静止\r\nconst LOD_NEAR_DISTANCE_SQ = 4; // 2m以内はメインモデル\r\nconst LOD_MID_DISTANCE_SQ = 25; // 5m以内はLODモデル＋アニメ\r\nconst tailAnimation = {\r\n  uniforms: {\r\n    uTailTime: { value: 0 },            // 時間（波形生成用）\r\n    uTailAmplitude: { value: 0.14 },    // 振幅（全身の揺れ幅）\r\n    uTailFrequency: { value: 10.0 },    // 周波数（くねり速度）\r\n    uTailPhaseStride: { value: 5.0 },   // 体の長さ方向の位相差（波長に相当）\r\n    uTailTurnStrength: { value: 0.1 },  // 旋回時の強度\r\n    uTailSpeedScale: { value: 1 },      // 速度による影響度\r\n    uTailRight: { value: new THREE.Vector3(1, 0, 0) },     // 尾アニメの右方向ベクトル\r\n    uTailForward: { value: new THREE.Vector3(0, 0, 1) },   // 尾アニメの進行方向ベクトル\r\n    uTailUp: { value: new THREE.Vector3(0, 1, 0) },        // 尾アニメの上方向ベクトル\r\n    uTailEnable: { value: 1 },          // アニメーション有効/無効\r\n    uSinLut: { value: sinCosLutTexture },\r\n    uLutSize: { value: SIN_LUT_SIZE },\r\n  },\r\n};\r\n\r\nconst boidInstancing = new BoidInstancing({\r\n  tailAnimation,\r\n  tripleBufferSize: TRIPLE_BUFFER_SIZE,\r\n  hiddenPosition: HIDDEN_POSITION,\r\n  identityQuaternion: IDENTITY_QUATERNION,\r\n  lodNearDistanceSq: LOD_NEAR_DISTANCE_SQ,\r\n  lodMidDistanceSq: LOD_MID_DISTANCE_SQ,\r\n});\r\n\r\nlet instancedMeshHigh = null;\r\nlet instancedMeshLow = null;\r\n\r\n\r\n// 海中シーンの色味をまとめて管理する定数群\r\nconst OCEAN_COLORS = {\r\n  SKY_HIGHLIGHT: '#4fbaff',\r\n  SKY_BLUE: '#15a1ff',\r\n  DEEP_BLUE: '#002968',\r\n  SEAFLOOR: '#777465',\r\n  FOG: '#153a6c',\r\n  AMBIENT_LIGHT: '#2c9aff',\r\n  SUN_LIGHT: '#5389b7',\r\n  SIDE_LIGHT1: '#6ba3d0',\r\n  SIDE_LIGHT2: '#2d5f7a',\r\n  BOTTOM_LIGHT: '#0f2635',\r\n};\r\n\r\n// '#rrggbb' 形式の色を three.js の整数表現に変換\r\nconst toHex = (colorStr) => parseInt(colorStr.replace('#', '0x'), 16);\r\n\r\n// 距離と深度で濃さが変わる海中フォグ設定\r\nconst heightFogConfig = {\r\n  color: new THREE.Color(OCEAN_COLORS.DEEP_BLUE),       // 遠景で溶け込む深海色\r\n  distanceStart: 4.0,                      // カメラからこの距離まではフォグゼロ\r\n  distanceEnd: 60.0,                       // この距離でフォグが最大になる\r\n  distanceExponent: 0.4,                   // 距離カーブの滑らかさ\r\n  distanceControlPoint1: new THREE.Vector2(0.2, 0.8),    // 距離ベジェ曲線の制御点（開始側）\r\n  distanceControlPoint2: new THREE.Vector2(0.75, 0.95),  // 距離ベジェ曲線の制御点（終端側）\r\n  surfaceLevel: 100.0,                       // 水面の高さ。ここから下がるほど暗くなる\r\n  heightFalloff: 0.01,                       // 深度による減衰率\r\n  heightExponent: 1,                          // 深度カーブの強さ\r\n  maxOpacity: 1.2,                            // 最大フォグ率\r\n};\r\n\r\nfunction createOceanSphere() {\r\n  if (!scene) return null;\r\n\r\n  // 上層→深層のグラデーションで海中の空気感を演出\r\n  const canvas = document.createElement('canvas');\r\n  const context = canvas.getContext('2d');\r\n  canvas.width = 512;\r\n  canvas.height = 512;\r\n\r\n  const gradient = context.createLinearGradient(0, 0, 0, canvas.height);\r\n  gradient.addColorStop(0, OCEAN_COLORS.SKY_HIGHLIGHT);\r\n  gradient.addColorStop(0.2, OCEAN_COLORS.SKY_BLUE);\r\n  gradient.addColorStop(0.6, OCEAN_COLORS.DEEP_BLUE);\r\n  gradient.addColorStop(1, OCEAN_COLORS.DEEP_BLUE);\r\n\r\n  context.fillStyle = gradient;\r\n  context.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n  const texture = new THREE.CanvasTexture(canvas);\r\n  texture.colorSpace = THREE.SRGBColorSpace;\r\n  texture.generateMipmaps = false;\r\n  texture.minFilter = THREE.LinearFilter;\r\n  texture.magFilter = THREE.LinearFilter;\r\n\r\n  const sphereGeo = new THREE.SphereGeometry(300, 32, 32);\r\n  const sphereMat = new THREE.MeshBasicMaterial({\r\n    map: texture,\r\n    side: THREE.BackSide,\r\n    fog: false,\r\n  });\r\n\r\n  const oceanSphere = new THREE.Mesh(sphereGeo, sphereMat);\r\n  scene.add(oceanSphere);\r\n  return oceanSphere;\r\n}\r\n\r\nfunction createFadeOutGroundMaterial() {\r\n  const textureLoader = new THREE.TextureLoader();\r\n  const alphaMap = textureLoader.load('./models/groundAlfa.png');\r\n\r\n  alphaMap.minFilter = THREE.LinearFilter;\r\n  alphaMap.magFilter = THREE.LinearFilter;\r\n  alphaMap.wrapS = THREE.ClampToEdgeWrapping;\r\n  alphaMap.wrapT = THREE.ClampToEdgeWrapping;\r\n\r\n  const material = new THREE.MeshStandardMaterial({\r\n    color: toHex(OCEAN_COLORS.SEAFLOOR),\r\n    transparent: true,\r\n    alphaMap,\r\n    depthWrite: true,\r\n  });\r\n\r\n  material.roughness = 0.85;\r\n  material.metalness = 0.0;\r\n  return material;\r\n}\r\n\r\nfunction updateInstancingMaterialUniforms(time) {\r\n  boidInstancing.setTailUniformTime(time);\r\n  particleField?.setTime(time);\r\n}\r\n\r\nlet shaderTime = 0;\r\n\r\n// WebGL2専用の軽量パーティクルを初期化\r\nfunction initParticleSystem() {\r\n  if (!scene || !renderer) {\r\n    return;\r\n  }\r\n  if (!particleField) {\r\n    particleField = new ParticleField(isMobileDevice());\r\n  }\r\n  particleField.init(scene, renderer, camera, controls);\r\n}\r\n\r\n// カメラ操作に応じて粒子ボリュームの中心とスケールを更新\r\nfunction updateParticleUniforms() {\r\n  particleField?.update(camera, controls);\r\n}\r\n\r\nfunction initBackgroundAudioPlayback() {\r\n  const audioEl = backgroundAudio.value;\r\n  if (!audioEl) {\r\n    return;\r\n  }\r\n\r\n  audioEl.volume = 0.1;\r\n  audioEl.loop = true;\r\n\r\n  const tryPlay = () => {\r\n    const playResult = audioEl.play();\r\n    if (playResult && typeof playResult.then === 'function') {\r\n      playResult.catch(() => {\r\n        const resume = () => {\r\n          document.removeEventListener('pointerdown', resume);\r\n          document.removeEventListener('keydown', resume);\r\n          audioEl.play().catch(() => {\r\n            /* ignored */\r\n          });\r\n        };\r\n        document.addEventListener('pointerdown', resume, { once: true });\r\n        document.addEventListener('keydown', resume, { once: true });\r\n      });\r\n    }\r\n  };\r\n\r\n  tryPlay();\r\n}\r\n\r\nfunction stepSimulationAndUpdateState(deltaTime) {\r\n  if (!wasmBridge) {\r\n    return 0;\r\n  }\r\n  return wasmBridge.stepSimulation(deltaTime);\r\n}\r\n\r\nfunction getWasmViews(count) {\r\n  if (!wasmBridge) {\r\n    return {\r\n      positions: new Float32Array(0),\r\n      orientations: new Float32Array(0),\r\n      velocities: new Float32Array(0),\r\n      speciesIds: new Int32Array(0),\r\n    };\r\n  }\r\n  return wasmBridge.getBuffers(count);\r\n}\r\n\r\nfunction captureFlockState() {\r\n  return wasmBridge?.captureState() ?? null;\r\n}\r\n\r\nfunction restoreFlockState(previousState, oldSettings, newSettings) {\r\n  wasmBridge?.restoreState(previousState, oldSettings, newSettings);\r\n}\r\n\r\nlet boidModel = null; // 読み込んだモデルを保持\r\nlet boidModelLod = null; // 読み込んだモデルを保持\r\nlet originalMaterial = null; // 元のマテリアルを保持\r\nlet originalMaterialLod = null; // 元のLODマテリアルを保持\r\nlet predatorModel = null;\r\nlet predatorMaterial = null;\r\n\r\n// 前回のshowUnitColorsの状態を保持（OFF→ONの検知用）\r\nlet lastShowUnitColors = false;\r\n\r\nfunction getPredatorCount() {\r\n  return settings.reduce((sum, s) => sum + ((s.isPredator && s.count) ? s.count : 0), 0);\r\n}\r\n\r\nfunction getTotalBoidCount() {\r\n  return totalBoids.value;\r\n}\r\n\r\nfunction getSpeciesSignature(specList = settings) {\r\n  if (!Array.isArray(specList)) {\r\n    return '';\r\n  }\r\n  return specList\r\n    .map((s, index) => `${index}:${(s && s.count) || 0}:${s && s.isPredator ? 1 : 0}`)\r\n    .join('|');\r\n}\r\n\r\nfunction createSpeciesParamsVector() {\r\n  if (!wasmBridge) {\r\n    console.warn('WasmtimeBridge が初期化されていません');\r\n    return null;\r\n  }\r\n\r\n  const rawSettings = toRaw(settings);\r\n  const source = Array.isArray(rawSettings) ? rawSettings : Array.from(settings ?? []);\r\n  const vector = wasmBridge.buildSpeciesParams(source);\r\n  if (!vector) {\r\n    console.warn('WasmtimeBridge.buildSpeciesParams の呼び出しに失敗しました');\r\n  }\r\n  return vector;\r\n}\r\n\r\nfunction reinitializeFlockNow() {\r\n  if (!wasmModule || !wasmBridge) return;\r\n\r\n  const pendingState = pendingStateForReinitialize?.state || null;\r\n  const oldSettingsRef = pendingStateForReinitialize?.oldSettings || previousSettingsSnapshot;\r\n  const newSettingsRef = pendingSettingsSnapshot || snapshotSettingsList(settings);\r\n  const targetSignature = getSpeciesSignature(newSettingsRef);\r\n\r\n  const vector = createSpeciesParamsVector();\r\n  if (!vector) {\r\n    console.error('Failed to create species parameter vector');\r\n    applySettingsSnapshot(previousSettingsSnapshot);\r\n    pendingStateForReinitialize = null;\r\n    pendingSettingsSnapshot = null;\r\n    return;\r\n  }\r\n\r\n  try {\r\n    wasmModule.callInitBoids(vector, 1, 6, 0.25);\r\n  } finally {\r\n    if (typeof vector.delete === 'function') {\r\n      vector.delete();\r\n    }\r\n  }\r\n  try {\r\n    wasmBridge.buildSpatialIndex(16, 0);\r\n  } catch (error) {\r\n    console.error('WasmtimeBridge.buildSpatialIndex の呼び出しに失敗しました', error);\r\n  }\r\n  const total = getTotalBoidCount();\r\n  cachedTotalBoidCount = total;\r\n  initInstancedBoids(total);\r\n\r\n  if (pendingState?.count > 0) {\r\n    restoreFlockState(pendingState, oldSettingsRef, newSettingsRef);\r\n  }\r\n\r\n  lastSpeciesSignature = targetSignature;\r\n  previousSettingsSnapshot = newSettingsRef;\r\n  pendingStateForReinitialize = null;\r\n  pendingSettingsSnapshot = null;\r\n}\r\n\r\nfunction scheduleFlockReinitialize() {\r\n  if (flockReinitTimer) {\r\n    clearTimeout(flockReinitTimer);\r\n  }\r\n\r\n  if (!pendingStateForReinitialize) {\r\n    pendingStateForReinitialize = {\r\n      state: captureFlockState(),\r\n      oldSettings: previousSettingsSnapshot,\r\n    };\r\n  }\r\n\r\n  pendingSettingsSnapshot = snapshotSettingsList(settings);\r\n\r\n  flockReinitTimer = setTimeout(() => {\r\n    flockReinitTimer = null;\r\n    reinitializeFlockNow();\r\n  }, COUNT_REINIT_DELAY_MS);\r\n}\r\n\r\nfunction initInstancedBoids(count) {\r\n  if (!scene || !boidModel || !boidModelLod || !originalMaterial || !originalMaterialLod) {\r\n    console.warn('initInstancedBoids: required assets are not ready');\r\n    return;\r\n  }\r\n\r\n  const initialized = boidInstancing.init(scene, {\r\n    count,\r\n    boidModel,\r\n    boidModelLod,\r\n    highMaterial: originalMaterial,\r\n    lowMaterial: originalMaterialLod,\r\n    predatorModel,\r\n  });\r\n\r\n  if (!initialized) {\r\n    console.error('Failed to initialize boid instancing');\r\n    return;\r\n  }\r\n\r\n  const meshes = boidInstancing.getMeshes();\r\n  instancedMeshHigh = meshes.high;\r\n  instancedMeshLow = meshes.low;\r\n\r\n  // 捕食者メッシュも最新設定に合わせて生成しておく\r\n  const predatorCount = getPredatorCount();\r\n  if (typeof boidInstancing.ensurePredatorMeshes === 'function') {\r\n    boidInstancing.ensurePredatorMeshes(predatorCount);\r\n  }\r\n\r\n  if (instancedMeshHigh?.instanceColor) {\r\n    instancedMeshHigh.instanceColor.needsUpdate = true;\r\n  }\r\n  if (instancedMeshLow?.instanceColor) {\r\n    instancedMeshLow.instanceColor.needsUpdate = true;\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction loadBoidModel(callback) {\r\n  const loader = new GLTFLoader();\r\n  const basePath = process.env.BASE_URL || '/'; // publicPath を取得\r\n  const textureLoader = new THREE.TextureLoader();\r\n  let pendingAssets = 3;\r\n  const notifyReady = () => {\r\n    pendingAssets = Math.max(0, pendingAssets - 1);\r\n    if (pendingAssets === 0) {\r\n      callback();\r\n    }\r\n  };\r\n  const texture = textureLoader.load(\r\n    './models/fish.png', // テクスチャのパス\r\n    () => {\r\n      console.log('Texture loaded successfully.');\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the texture:', error);\r\n    }\r\n  );\r\n  const textureLod = textureLoader.load(\r\n    './models/fish_lod.png', // テクスチャのパス\r\n    () => {\r\n      console.log('Texture loaded successfully.');\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the texture:', error);\r\n    }\r\n  );\r\n  texture.flipY = false;\r\n  texture.colorSpace = THREE.SRGBColorSpace; // sRGBカラー空間を使用\r\n  textureLod.flipY = false;\r\n  textureLod.colorSpace = THREE.SRGBColorSpace;\r\n\r\n  const predatorTexture = textureLoader.load(\r\n    './models/fishPredetor.png',\r\n    () => {\r\n      console.log('Predator texture loaded successfully.');\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the predator texture:', error);\r\n    }\r\n  );\r\n  predatorTexture.flipY = false;\r\n  predatorTexture.colorSpace = THREE.SRGBColorSpace;\r\n\r\n  let boidMaterial = new THREE.MeshStandardMaterial({\r\n    color: 0xffffff, // 白色\r\n    roughness: 0.5,\r\n    metalness: 0.2,\r\n    transparent: false, // 半透明を有効化\r\n    alphaTest: 0.5,    // アルファテストを設定\r\n    map: texture,      // テクスチャを設定\r\n    vertexColors: false, // 通常時は無効\r\n    vertexColor: 0xffffff\r\n  });\r\n\r\n  let boidLodMaterial = new THREE.MeshStandardMaterial({\r\n    color: 0xffffff, // 白色\r\n    roughness: 0.5,\r\n    metalness: 0.2,\r\n    transparent: false, // 半透明を有効化\r\n    alphaTest: 0.5,    // アルファテストを設定\r\n    map: textureLod,      // テクスチャを設定\r\n    vertexColors: false, // 通常時は無効\r\n    vertexColor: 0xffffff\r\n\r\n  });\r\n\r\n  originalMaterial = boidMaterial;\r\n  originalMaterialLod = boidLodMaterial;\r\n  predatorMaterial = new THREE.MeshStandardMaterial({\r\n    color: 0xffffff,\r\n    roughness: 0.5,\r\n    metalness: 0,\r\n    transparent: false,\r\n    alphaTest: 0.5,\r\n    map: predatorTexture,\r\n    vertexColors: false,\r\n    vertexColor: 0xffffff,\r\n  });\r\n  loader.load(\r\n    `./models/boidModel.glb`, // モデルのパス\r\n    (gltf) => {\r\n      boidModel = gltf.scene;\r\n\r\n      // マテリアルの transparent と alphaTest を変更\r\n      boidModel.traverse((child) => {\r\n        if (child.isMesh) {\r\n          child.material = boidMaterial; // 半透明を有効化\r\n        }\r\n      });\r\n\r\n      notifyReady();\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the model:', error);\r\n      notifyReady();\r\n    }\r\n  );\r\n\r\n  loader.load(\r\n    `./models/boidModel_lod.glb`, // LODモデルのパス\r\n    (gltf) => {\r\n      boidModelLod = gltf.scene;\r\n\r\n      // マテリアルの transparent と alphaTest を変更\r\n      boidModelLod.traverse((child) => {\r\n        if (child.isMesh) {\r\n          child.material = boidLodMaterial; // 半透明を有効化\r\n        }\r\n      });\r\n\r\n      notifyReady();\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the LOD model:', error);\r\n      notifyReady();\r\n    }\r\n  );\r\n\r\n  loader.load(\r\n    `./models/boidPredetorModel.glb`,\r\n    (gltf) => {\r\n      predatorModel = gltf.scene;\r\n      predatorModel.traverse((child) => {\r\n        if (child.isMesh) {\r\n          child.material = predatorMaterial;\r\n          child.castShadow = true;\r\n          child.receiveShadow = true;\r\n        }\r\n      });\r\n      notifyReady();\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the predator model:', error);\r\n      notifyReady();\r\n    }\r\n  );\r\n}\r\n\r\nfunction clearUnitVisuals() {\r\n  for (const mesh of unitSpheres) scene.remove(mesh);\r\n  for (const line of unitLines) scene.remove(line);\r\n  unitSpheres = [];\r\n  unitLines = [];\r\n}\r\n\r\n// レイヤ制限付き再帰描画\r\nfunction drawUnitTree(unit, layer = 0) {\r\n  // スフィア: スライダで制御\r\n  if (\r\n    layer >= (maxDepth - unitLayer.value + 1) &&\r\n    (unit.children == null || unit.children.size() === 0 || layer === maxDepth)\r\n  ) {\r\n    let sphere;\r\n    if (unitSpheres.length > 0) {\r\n      sphere = unitSpheres.pop(); // 再利用\r\n      sphere.visible = true;\r\n    } else {\r\n      const geometry = new THREE.SphereGeometry(unit.radius, 16, 16);\r\n      const material = new THREE.MeshBasicMaterial({\r\n        color: new THREE.Color().setHSL(0.1, 1, 0.7 - 0.4 * (layer / maxDepth)),\r\n        wireframe: true,\r\n        opacity: 0.3,\r\n        transparent: true,\r\n      });\r\n      sphere = new THREE.Mesh(geometry, material);\r\n      scene.add(sphere);\r\n    }\r\n    sphere.position.set(unit.center.x, unit.center.y, unit.center.z);\r\n    unitSpheres.push(sphere);\r\n  }\r\n\r\n  // 線: チェックボックスで全て表示、色は深さでグラデ\r\n  if (showUnitLines.value && unit.children && typeof unit.children.size === 'function' && unit.children.size() > 0) {\r\n    for (let i = 0; i < unit.children.size(); i++) {\r\n      const child = unit.children.get(i);\r\n      let line;\r\n      if (unitLines.length > 0) {\r\n        line = unitLines.pop(); // 再利用\r\n        line.visible = true;\r\n      } else {\r\n        const lineGeometry = new THREE.BufferGeometry();\r\n        const lineMaterial = new THREE.LineBasicMaterial({\r\n          color: new THREE.Color().setHSL(0.35, 1, 0.7 - 0.4 * (layer / maxDepth)),\r\n        });\r\n        line = new THREE.Line(lineGeometry, lineMaterial);\r\n        scene.add(line);\r\n      }\r\n      const points = [\r\n        new THREE.Vector3(unit.center.x, unit.center.y, unit.center.z),\r\n        new THREE.Vector3(child.center.x, child.center.y, child.center.z),\r\n      ];\r\n      line.geometry.setFromPoints(points);\r\n      unitLines.push(line);\r\n    }\r\n  }\r\n\r\n  // 再帰\r\n  if (unit.children && typeof unit.children.size === 'function' && unit.children.size() > 0) {\r\n    for (let i = 0; i < unit.children.size(); i++) {\r\n      const child = unit.children.get(i);\r\n      drawUnitTree(child, layer + 1);\r\n    }\r\n  }\r\n}\r\nlet lastTime = performance.now(); // 前回のフレームのタイムスタンプ\r\n\r\nfunction animate() {\r\n  stats?.begin();\r\n\r\n  const currentTime = performance.now();\r\n  const deltaTime = (currentTime - lastTime) / 1000;\r\n  lastTime = currentTime;\r\n\r\n  if (!paused.value) {\r\n    shaderTime += deltaTime;\r\n  }\r\n  updateInstancingMaterialUniforms(shaderTime);\r\n\r\n  const count = stepSimulationAndUpdateState(paused.value ? 0 : deltaTime);\r\n\r\n  const meshes = boidInstancing.getMeshes();\r\n  instancedMeshHigh = meshes.high;\r\n  instancedMeshLow = meshes.low;\r\n  const pipelineReady = fogPipeline?.isReady?.() ?? false;\r\n\r\n  if (!instancedMeshHigh || !instancedMeshLow) {\r\n    controls.update();\r\n    updateParticleUniforms();\r\n    if (pipelineReady) {\r\n      fogPipeline.updateCameraUniforms(camera);\r\n      fogPipeline.render(deltaTime);\r\n    } else {\r\n      renderer.render(scene, camera);\r\n    }\r\n    stats?.end();\r\n    stats?.update();\r\n    animationTimer = setTimeout(animate, FRAME_INTERVAL);\r\n    return;\r\n  }\r\n\r\n  const { positions, orientations, velocities } = getWasmViews(count);\r\n  if ((frameCounter++ & 63) === 0) {\r\n    wasmBridge?.currentFirstBoidX();\r\n  }\r\n\r\n  const predatorCount = getPredatorCount();\r\n  const updateInfo = boidInstancing.update({\r\n    count,\r\n    positions,\r\n    orientations,\r\n    velocities,\r\n    cameraPosition: camera.position,\r\n    predatorCount,\r\n  });\r\n\r\n  const visibleCount = updateInfo.visibleCount ?? Math.max(0, count - predatorCount);\r\n\r\n  if (showUnitColors.value && instancedMeshHigh.instanceColor && instancedMeshLow.instanceColor) {\r\n    const unitMappings = wasmBridge?.getUnitMappings(count);\r\n    if (unitMappings) {\r\n      for (let i = 0; i < visibleCount; i++) {\r\n        let unitId = -1;\r\n        for (let j = 0; j < unitMappings.length; j += 2) {\r\n          if (unitMappings[j] === i) {\r\n            unitId = unitMappings[j + 1];\r\n            break;\r\n          }\r\n        }\r\n\r\n        const color = unitId >= 0\r\n          ? new THREE.Color().setHSL((unitId % 100) / 100, 0.8, 0.6)\r\n          : new THREE.Color(1, 0, 0);\r\n\r\n        instancedMeshHigh.setColorAt(i, color);\r\n        instancedMeshLow.setColorAt(i, color);\r\n      }\r\n      instancedMeshHigh.instanceColor.needsUpdate = true;\r\n      instancedMeshLow.instanceColor.needsUpdate = true;\r\n    }\r\n  } else if (lastShowUnitColors && instancedMeshHigh.instanceColor && instancedMeshLow.instanceColor) {\r\n    const whiteColor = new THREE.Color(1, 1, 1);\r\n    for (let i = 0; i < visibleCount; i++) {\r\n      instancedMeshHigh.setColorAt(i, whiteColor);\r\n      instancedMeshLow.setColorAt(i, whiteColor);\r\n    }\r\n    instancedMeshHigh.instanceColor.needsUpdate = true;\r\n    instancedMeshLow.instanceColor.needsUpdate = true;\r\n    console.log('✓ Reset vertex colors to white (OFF mode)');\r\n  }\r\n\r\n  lastShowUnitColors = showUnitColors.value;\r\n\r\n  controls.update();\r\n  updateParticleUniforms();\r\n  if (pipelineReady) {\r\n    fogPipeline.updateCameraUniforms(camera);\r\n    fogPipeline.render(deltaTime);\r\n  } else {\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  stats?.end();\r\n  stats?.update();\r\n\r\n  animationTimer = setTimeout(animate, FRAME_INTERVAL);\r\n}\r\n\r\nfunction drawTreeStructure(treeData) {\r\n  const drawNode = (node, parentPosition = null) => {\r\n    const position = new THREE.Vector3(\r\n      node.center[0],\r\n      node.center[1],\r\n      node.center[2]\r\n    );\r\n    if (parentPosition) {\r\n      controls.update();\r\n      updateParticleUniforms();\r\n      const geometry = new THREE.BufferGeometry().setFromPoints([\r\n        parentPosition,\r\n        position,\r\n      ]);\r\n      const material = new THREE.LineBasicMaterial({ color: 0xffffff });\r\n      const line = new THREE.Line(geometry, material);\r\n      scene.add(line);\r\n    }\r\n\r\n    if (node.children) {\r\n      node.children.forEach((child) => drawNode(child, position));\r\n    }\r\n  };\r\n\r\n  treeData.forEach((rootNode) => drawNode(rootNode));\r\n}\r\nfunction startSimulation() {\r\n  reinitializeFlockNow();\r\n  animate();\r\n}\r\n\r\nonMounted(() => {\r\n  initThreeJS();\r\n  loadBoidModel(() => {\r\n    console.log('Boid model loaded successfully.');\r\n\r\n    stats = new StatsGl({\r\n      trackGPU: true,\r\n      trackHz: true,\r\n      trackCPT: true,\r\n      logsPerSecond: 4,\r\n      graphsPerSecond: 30,\r\n      samplesLog: 40,\r\n      samplesGraph: 10,\r\n      precision: 2,\r\n      horizontal: true,\r\n      minimal: false,\r\n      mode: 0,\r\n    });\r\n\r\n    const statsInitTarget = renderer?.domElement ?? document.body;\r\n\r\n    const ensureStatsOverlay = () => {\r\n      const statsElement =\r\n        (typeof stats?.domElement !== 'undefined' ? stats.domElement : null) ||\r\n        (typeof stats?.getDom === 'function' ? stats.getDom() : null) ||\r\n        stats?.dom ||\r\n        stats?.container ||\r\n        stats?.wrapper ||\r\n        null;\r\n\r\n      if (statsElement) {\r\n        if (!statsElement.parentElement) {\r\n          document.body.appendChild(statsElement);\r\n        }\r\n        positionStatsOverlay(statsElement);\r\n      }\r\n    };\r\n\r\n    const initPromise =\r\n      stats && typeof stats.init === 'function'\r\n        ? Promise.resolve(stats.init(statsInitTarget))\r\n        : Promise.resolve();\r\n\r\n    initPromise\r\n      .then(() => {\r\n        if (typeof stats?.patchThreeRenderer === 'function') {\r\n          stats.patchThreeRenderer(renderer);\r\n        }\r\n        ensureStatsOverlay();\r\n      })\r\n      .catch((error) => {\r\n        console.error('Failed to initialize stats-gl:', error);\r\n        ensureStatsOverlay();\r\n      });\r\n\r\n    startSimulation();\r\n    initBackgroundAudioPlayback();\r\n  });\r\n\r\n  window.addEventListener('keydown', handleKeydown);\r\n});\r\n\r\nwatch(\r\n  settings,\r\n  () => {\r\n    if (wasmModule && wasmModule.setGlobalSpeciesParamsFromJS) {\r\n      const vector = createSpeciesParamsVector();\r\n      if (vector) {\r\n        try {\r\n          wasmModule.setGlobalSpeciesParamsFromJS(vector, 1);\r\n        } finally {\r\n          if (typeof vector.delete === 'function') {\r\n            vector.delete();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    saveToStorage();\r\n\r\n    const signature = getSpeciesSignature(settings);\r\n    if (signature !== lastSpeciesSignature) {\r\n      scheduleFlockReinitialize();\r\n    } else {\r\n      if (flockReinitTimer) {\r\n        clearTimeout(flockReinitTimer);\r\n        flockReinitTimer = null;\r\n      }\r\n      pendingStateForReinitialize = null;\r\n      pendingSettingsSnapshot = null;\r\n      previousSettingsSnapshot = snapshotSettingsList(settings);\r\n    }\r\n\r\n    const predators = getPredatorCount();\r\n    if (typeof boidInstancing.ensurePredatorMeshes === 'function') {\r\n      boidInstancing.ensurePredatorMeshes(predators);\r\n    }\r\n    const predatorMeshes =\r\n      typeof boidInstancing.getPredatorMeshes === 'function'\r\n        ? boidInstancing.getPredatorMeshes()\r\n        : [];\r\n    for (const mesh of predatorMeshes) {\r\n      mesh.visible = false;\r\n    }\r\n  },\r\n  { deep: true }\r\n);\r\n\r\nfunction resetSettings(presetList) {\r\n  if (Array.isArray(presetList) && presetList.length > 0) {\r\n    applySettingsSnapshot(presetList);\r\n  } else {\r\n    resetToDefaults();\r\n  }\r\n}\r\n\r\n// Unit可視化の変更を監視\r\nwatch(showUnits, (newValue) => {\r\n  console.log('showUnits changed to:', newValue);\r\n  if (!newValue) {\r\n    // Unit可視化をオフにした場合、既存の可視化要素をクリア\r\n    clearUnitVisuals();\r\n  }\r\n});\r\n\r\n// Unit表示モードの変更を監視\r\nwatch([showUnitSpheres, showUnitLines], ([newSpheres, newLines]) => {\r\n  console.log('Unit display mode changed - Spheres:', newSpheres, 'Lines:', newLines);\r\n  // 表示モードが変更されたら既存の表示をクリアして再描画\r\n  if (showUnits.value) {\r\n    clearUnitVisuals();\r\n  }\r\n});\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Arial, sans-serif;\r\n  padding: 0;\r\n  margin: 0;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.settings {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.info {\r\n  margin-top: 20px;\r\n}\r\n\r\n.three-container {\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 0;\r\n  display: block;\r\n  border: none;\r\n  overflow: hidden;\r\n  background: #0a1e3a;\r\n}\r\n\r\n.ui-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  color: #fff;\r\n  z-index: 2;\r\n  pointer-events: none;\r\n}\r\n\r\n.ui-overlay * {\r\n  pointer-events: auto;\r\n}\r\n\r\n.add-species-button {\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n</style>","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=3ff6d0f6&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from 'vue';\r\nimport App from './App.vue';\r\n\r\n// SharedArrayBuffer を利用するため COOP/COEP が成立する固定パスから wasm をロードする\r\nconst publicBase = (process.env.BASE_URL || '/').replace(/\\/*$/, '/');\r\nconst wasmPublicBase = `${publicBase}static/js`;\r\nconst wasmJsUrl = `${wasmPublicBase}/wasm_boids.js`;\r\nconst wasmBinaryUrl = `${wasmPublicBase}/wasm_boids.wasm`;\r\n\r\nasync function bootstrap() {\r\n    try {\r\n        const BoidsModule = await import(/* webpackIgnore: true */ wasmJsUrl);\r\n        if (!BoidsModule?.default) {\r\n            throw new Error(`WASM module loader not found at: ${wasmJsUrl}`);\r\n        }\r\n\r\n        const Module = await BoidsModule.default({\r\n            locateFile: (path) => (path.endsWith('.wasm') ? wasmBinaryUrl : path),\r\n        });\r\n\r\n        // デバッグ確認用にグローバルへ公開しつつ初期化ログを出力\r\n        if (typeof window !== 'undefined') {\r\n            window.wasmModule = Module;\r\n        }\r\n        console.log('Wasm module initialized:', Module);\r\n\r\n        const app = createApp(App);\r\n        app.provide('wasmModule', Module);\r\n        app.mount('#app');\r\n    } catch (error) {\r\n        console.error('Failed to initialise WASM module:', error);\r\n    }\r\n}\r\n\r\nbootstrap();","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t57: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkwasm_boids\"] = self[\"webpackChunkwasm_boids\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], () => (__webpack_require__(457)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["emit","props","settings","editingCount","editingCohesion","editingCohesionRange","editingSeparation","editingSeparationRange","editingAlignment","editingAlignmentRange","editingMaxSpeed","editingMaxTurnAngle","editingMaxNeighbors","editingHorizontalTorque","editingTorqueStrength","editingLambda","editingTau","countInput","cohesionInput","cohesionRangeInput","separationInput","separationRangeInput","alignmentInput","alignmentRangeInput","maxSpeedInput","maxTurnAngleInput","maxNeighborsInput","horizontalTorqueInput","torqueStrengthInput","lambdaInput","tauInput","countDraft","count","async","startEditCount","value","focus","select","cancelCountEdit","applyCountDraft","nextValue","Math","max","round","Number","isFinite","commitCountFromSlider","commitCountFromInput","emitRemove","startEditCohesion","startEditCohesionRange","startEditSeparation","startEditSeparationRange","startEditAlignment","startEditAlignmentRange","startEditMaxSpeed","startEditMaxTurnAngle","startEditMaxNeighbors","startEditHorizontalTorque","startEditTorqueStrength","startEditLambda","startEditTau","stopEditCohesion","stopEditCohesionRange","stopEditSeparation","stopEditSeparationRange","stopEditAlignment","stopEditAlignmentRange","stopEditMaxSpeed","stopEditMaxTurnAngle","stopEditMaxNeighbors","stopEditHorizontalTorque","stopEditTorqueStrength","stopEditLambda","stopEditTau","__exports__","BoidInstancing","constructor","tailAnimation","tripleBufferSize","hiddenPosition","identityQuaternion","lodNearDistanceSq","lodMidDistanceSq","this","streamUsage","scene","instancedMeshHigh","instancedMeshLow","instancingMaterials","Set","bufferSetHigh","bufferSetLow","tailPhaseSeeds","bufferCursor","previousVelocities","previousLodFlags","predatorModel","predatorMeshes","predatorMeshCountCache","init","boidModel","boidModelLod","highMaterial","lowMaterial","console","error","children","length","geometry","dispose","highMaterialClone","clone","lowMaterialClone","patchMaterial","highGeometry","lowGeometry","ensureBodyCoordAttribute","configureInstancedMesh","add","createBufferSet","resetBufferSetToHidden","createTailPhaseArray","applyTailPhaseSeeds","applyBufferSet","instanceMatrix","setUsage","ensurePredatorMeshes","update","positions","orientations","velocities","cameraPosition","predatorCount","visibleCount","ensureTailRuntimeBuffers","lodFlags","ensureLodFlagBuffer","currentIndex","nextIndex","highPosAttr","pos","highQuatAttr","quat","highTailParamsAttr","tailParams","lowPosAttr","lowQuatAttr","lowTailParamsAttr","highPosArray","array","highQuatArray","highTailParamsArray","lowPosArray","lowQuatArray","lowTailParamsArray","highTransformTouched","lowTransformTouched","highTailTouched","lowTailTouched","camX","x","camY","y","camZ","z","predatorStartIndex","mesh","visible","hiddenPos","idQuat","prevVel","i","basePos","baseQuat","tailIndex","px","py","pz","dx","dy","dz","distSq","isNear","isMid","animateTail","qx","qy","qz","qw","isPredator","meshIndex","predatorMesh","position","set","quaternion","vx","vy","vz","speed","hypot","prevVx","prevVy","prevVz","prevLen","turnAmount","crossY","dot","atan2","tailSpeedValue","tailTurnValue","driveValue","needsUpdate","forEachInstancingMaterial","callback","material","getMeshes","high","low","getPredatorMeshes","setTailUniformTime","time","uniforms","uTailTime","userData","instancingPatched","warn","onBeforeCompile","shader","Object","entries","forEach","key","uniform","vertexShader","replace","createDepthMaterial","sourceMaterial","depthMaterial","depthPacking","alphaTest","map","alphaMap","transparent","createDistanceMaterial","distanceMaterial","castShadow","receiveShadow","frustumCulled","customDepthMaterial","customDistanceMaterial","white","setColorAt","instanceColor","createAttributeSet","itemSize","ArrayType","Float32Array","attributes","attr","push","tailPhase","bufferSet","fill","index","setAttribute","random","PI","seeds","targetLength","Uint8Array","getAttribute","minX","Infinity","minY","minZ","maxX","maxY","maxZ","ix","rangeX","rangeY","rangeZ","axis","min","range","bodyCoord","denom","target","pop","remove","traverse","child","isMesh","clear","FogPipeline","fogConfig","config","composer","heightFogPass","heightFogRenderTarget","renderer","camera","heightFog","width","height","rtOptions","depthBuffer","stencilBuffer","depthTexture","format","type","EffectComposer","renderPass","RenderPass","addPass","ssaoPass","SSAOPass","kernelRadius","minDistance","maxDistance","bloomStrength","bloomRadius","bloomThreshold","bloomPass","UnrealBloomPass","createHeightFogShader","ShaderPass","originalRender","render","bind","passRenderer","writeBuffer","readBuffer","deltaTime","maskActive","tDepth","needsSwap","applyFogConfigToUniforms","depthTest","depthWrite","blending","toneMapped","renderToScreen","resize","setSize","delta","isReady","updateCameraUniforms","pass","targetCamera","cameraNear","near","cameraFar","far","projectionMatrixInverse","copy","cameraMatrixWorld","matrixWorld","updateConfig","nextConfig","defaults","buildFogDefaults","finalConfig","tDiffuse","fogColor","cloneColor","color","distanceStart","distanceEnd","distanceExponent","distanceControlPoint1","cloneVector2","distanceControlPoint2","surfaceLevel","heightFalloff","heightExponent","maxOpacity","fragmentShader","PARTICLE_BASE_SPREAD_DESKTOP","PARTICLE_BASE_SPREAD_MOBILE","PARTICLE_BASE_MAX_DISTANCE_DESKTOP","PARTICLE_BASE_MAX_DISTANCE_MOBILE","DEFAULT_FLOW_DIR","DEFAULT_LAT1","DEFAULT_LAT2","TEMP_DIR","TEMP_AXIS","TEMP_LAT1","TEMP_LAT2","ParticleField","isMobileDevice","Boolean","controls","particlePoints","particleMaterial","elapsedTime","capabilities","isWebGL2","setDrawRange","baseSpread","baseMaxDistance","glslVersion","uTime","uOrigin","uFlowDir","uLat1","uLat2","uSpread","uMaxDistance","uBaseSpeed","uJitterAmp","uSizePx","uFadeNear","uFadeFar","uColorNear","uColorFar","PARTICLE_VERTEX_SHADER","PARTICLE_FRAGMENT_SHADER","baseTargetDistance","distanceTo","renderOrder","setWorldBasis","setTime","timeSeconds","advanceTime","deltaSeconds","flowDir","dir","normalize","abs","lat1","cross","lengthSq","lat2","targetScene","getMaterial","WasmtimeBridge","wasmModule","Error","wasm","latestStatePtr","latestStateHeaderPtr","latestStateHeaderView","latestPositionsPtr","latestVelocitiesPtr","latestOrientationsPtr","latestBoidCount","cachedHeapBuffer","cachedPositionsPtr","cachedOrientationsPtr","cachedVelocitiesPtr","cachedSpeciesIdsPtr","cachedPositionsView","cachedOrientationsView","cachedVelocitiesView","cachedSpeciesIdsView","cachedPositionsCount","cachedOrientationsCount","cachedVelocitiesCount","cachedSpeciesIdsCount","cachedSpeciesIdsBuffer","stepSimulationHandle","createWrappedFunction","buildHandle","exportTreeStructureHandle","boidUnitMappingPtrHandle","currentFirstBoidXHandle","speciesIdsPtrHandle","syncReadToWriteBuffersHandle","buildSpeciesParams","Array","isArray","vector","VectorSpeciesParams","raw","toNumber","fallback","num","push_back","species","floor","speciesId","cohesion","separation","alignment","maxSpeed","minSpeed","maxTurnAngle","separationRange","alignmentRange","cohesionRange","maxNeighbors","lambda","tau","horizontalTorque","velocityEpsilon","torqueStrength","bodyHeadLength","bodyTailLength","bodyRadius","stepSimulation","handle","ensureHandle","dt","statePtr","heapU8Buffer","HEAPU8","buffer","DataView","getUint32","getInt32","getBuffers","speciesIds","Int32Array","heapBuffer","HEAPF32","heapBufferI32","HEAP32","speciesPtr","captureState","currentCount","restoreState","previousState","oldSettings","newSettings","prevPositions","prevVelocities","prevOrientations","oldRanges","buildSpeciesRanges","newRanges","oldRangeMap","Map","info","name","restored","newInfo","oldInfo","get","transferable","srcIndex","start","dstIndex","srcPosBase","dstPosBase","srcVelBase","dstVelBase","srcOriBase","dstOriBase","syncReadToWriteBuffers","buildSpatialIndex","arg0","arg1","exportTreeStructure","currentFirstBoidX","getUnitMappings","ptr","returnType","argTypes","cwrap","list","ranges","offset","item","STORAGE_KEY","DEFAULT_SPECIES_FALLBACK","createFlockSettingsStore","defaultSettings","defaultTemplates","sanitizeSpeciesList","replaceSettings","loadFromStorage","totalBoids","getTotalBoidCount","localStorage","saved","getItem","parsed","JSON","parse","saveToStorage","snapshot","entry","setItem","stringify","nextList","sanitized","splice","resetToDefaults","addSpecies","template","basePool","fallbackTemplate","find","candidate","sanitizeSpeciesEntry","cloneSpeciesTemplate","ensureUniqueName","s","removeSpecies","removed","reduce","sum","fallbackList","takenNames","clean","base","merged","toFinite","fallbackValue","result","speciesName","trim","taken","defaultName","has","FRAME_INTERVAL","COUNT_REINIT_DELAY_MS","TRIPLE_BUFFER_SIZE","HIDDEN_POSITION","SIN_LUT_SIZE","LOD_NEAR_DISTANCE_SQ","LOD_MID_DISTANCE_SQ","wasmBridge","navigator","test","userAgent","mobileBoidCount","DEFAULT_SETTINGS","flockStore","addSpeciesFromStore","removeSpeciesFromStore","snapshotSettingsList","cachedTotalBoidCount","lastSpeciesSignature","getSpeciesSignature","previousSettingsSnapshot","pendingStateForReinitialize","pendingSettingsSnapshot","applySettingsSnapshot","added","threeContainer","backgroundAudio","fogPipeline","particleField","paused","showUnits","showUnitSpheres","showUnitLines","showUnitColors","unitLayer","unitSpheres","unitLines","stats","glContext","frameCounter","flockReinitTimer","animationTimer","positionStatsOverlay","element","style","padding","pointerEvents","display","flexDirection","alignItems","gap","maxWidth","boxSizing","zIndex","handleKeydown","e","code","initThreeJS","window","innerWidth","innerHeight","background","OCEAN_COLORS","DEEP_BLUE","createOceanSphere","lookAt","antialias","depth","setPixelRatio","devicePixelRatio","shadowMap","enabled","getContext","appendChild","domElement","aspect","updateProjectionMatrix","OrbitControls","enableDamping","dampingFactor","groundGeo","groundMat","createFadeOutGroundMaterial","ground","rotation","ambientLight","toHex","AMBIENT_LIGHT","dirLight","SUN_LIGHT","shadow","left","right","top","bottom","mapSize","bias","normalBias","initParticleSystem","heightFogConfig","addEventListener","onWindowResize","createSinCosLutTexture","size","data","angle","sinValue","sin","cosValue","cos","texture","wrapS","wrapT","magFilter","minFilter","generateMipmaps","flipY","IDENTITY_QUATERNION","sinCosLutTexture","uTailAmplitude","uTailFrequency","uTailPhaseStride","uTailTurnStrength","uTailSpeedScale","uTailRight","uTailForward","uTailUp","uTailEnable","uSinLut","uLutSize","boidInstancing","SKY_HIGHLIGHT","SKY_BLUE","SEAFLOOR","FOG","SIDE_LIGHT1","SIDE_LIGHT2","BOTTOM_LIGHT","colorStr","parseInt","canvas","document","createElement","context","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","colorSpace","sphereGeo","sphereMat","side","fog","oceanSphere","textureLoader","load","roughness","metalness","updateInstancingMaterialUniforms","shaderTime","updateParticleUniforms","initBackgroundAudioPlayback","audioEl","volume","loop","tryPlay","playResult","play","then","catch","resume","removeEventListener","once","stepSimulationAndUpdateState","getWasmViews","captureFlockState","restoreFlockState","originalMaterial","originalMaterialLod","predatorMaterial","lastShowUnitColors","getPredatorCount","specList","join","createSpeciesParamsVector","rawSettings","source","from","reinitializeFlockNow","pendingState","state","oldSettingsRef","newSettingsRef","targetSignature","callInitBoids","delete","total","initInstancedBoids","scheduleFlockReinitialize","clearTimeout","setTimeout","initialized","meshes","loadBoidModel","loader","GLTFLoader","pendingAssets","notifyReady","log","undefined","textureLod","predatorTexture","boidMaterial","vertexColors","vertexColor","boidLodMaterial","gltf","clearUnitVisuals","line","lastTime","performance","now","animate","begin","currentTime","pipelineReady","end","updateInfo","unitMappings","unitId","j","setHSL","whiteColor","startSimulation","resetSettings","presetList","trackGPU","trackHz","trackCPT","logsPerSecond","graphsPerSecond","samplesLog","samplesGraph","precision","horizontal","minimal","mode","statsInitTarget","body","ensureStatsOverlay","statsElement","getDom","dom","container","wrapper","parentElement","initPromise","Promise","resolve","patchThreeRenderer","setGlobalSpeciesParamsFromJS","signature","predators","deep","newValue","newSpheres","newLines","publicBase","wasmPublicBase","wasmJsUrl","wasmBinaryUrl","bootstrap","BoidsModule","import","default","Module","locateFile","path","endsWith","app","App","provide","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","fulfilled","keys","every","r","d","definition","o","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}