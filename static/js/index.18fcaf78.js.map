{"version":3,"file":"static/js/index.18fcaf78.js","mappings":"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","sources":["webpack://wasm-boids/./src/components/Settings.vue","webpack://wasm-boids/./src/components/Settings.vue?b3ff","webpack://wasm-boids/./src/rendering/BoidInstancing.js","webpack://wasm-boids/./src/rendering/FogPipeline.js","webpack://wasm-boids/./src/rendering/ParticleField.js","webpack://wasm-boids/./src/simulation/WasmtimeBridge.js","webpack://wasm-boids/./src/state/FlockSettingsStore.js","webpack://wasm-boids/./src/App.vue","webpack://wasm-boids/./src/App.vue?7ccd","webpack://wasm-boids/./src/main.js","webpack://wasm-boids/webpack/bootstrap","webpack://wasm-boids/webpack/runtime/chunk loaded","webpack://wasm-boids/webpack/runtime/define property getters","webpack://wasm-boids/webpack/runtime/global","webpack://wasm-boids/webpack/runtime/hasOwnProperty shorthand","webpack://wasm-boids/webpack/runtime/jsonp chunk loading","webpack://wasm-boids/webpack/startup"],"sourcesContent":["// filepath: d:\\GitHub\\wasm-boids\\src\\components\\Settings.vue\r\n<template>\r\n  <div class=\"settings\">\r\n    <details class=\"species-section\" :open=\"false\">\r\n      <summary class=\"species-header\">\r\n        <span class=\"species-title\">{{ settings.species }} ({{ settings.count }}匹)</span>\r\n        <button\r\n          v-if=\"canRemove\"\r\n          class=\"species-remove\"\r\n          type=\"button\"\r\n          @click.stop=\"emitRemove\"\r\n        >削除</button>\r\n      </summary>\r\n      <div class=\"species-content\">\r\n        <div class=\"setting-row\">\r\n          <label>種族名<br>(Species):</label>\r\n          <span>{{ settings.species }}</span>\r\n        </div>\r\n        <div class=\"setting-row\">\r\n          <label>群れの数(要更新)<br>(Count):</label>\r\n          <input\r\n            type=\"range\"\r\n            v-model.number=\"countDraft\"\r\n            min=\"0\"\r\n            max=\"50000\"\r\n            step=\"1\"\r\n            @change=\"commitCountFromSlider\"\r\n          />\r\n          <span \r\n            v-if=\"!editingCount\" \r\n            class=\"editable-value\" \r\n            @click=\"startEditCount\"\r\n            title=\"クリックして編集\"\r\n          >{{ settings.count }}</span>\r\n          <input \r\n            v-if=\"editingCount\"\r\n            type=\"number\" \r\n            v-model.number=\"countDraft\" \r\n            min=\"0\" \r\n            max=\"20000\"\r\n            class=\"value-input\"\r\n            @blur=\"cancelCountEdit\"\r\n            @keyup.enter=\"commitCountFromInput\"\r\n            ref=\"countInput\"\r\n          />\r\n        </div><div class=\"setting-row\">\r\n      <label>凝集<br>(Cohesion):</label>\r\n      <input type=\"range\" v-model.number=\"settings.cohesion\" min=\"0\" max=\"40\" step=\"0.01\" />\r\n      <span \r\n        v-if=\"!editingCohesion\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditCohesion\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.cohesion }}</span>\r\n      <input \r\n        v-if=\"editingCohesion\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.cohesion\" \r\n        min=\"0\" \r\n        max=\"40\"\r\n        step=\"0.01\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditCohesion\"\r\n        @keyup.enter=\"stopEditCohesion\"\r\n        ref=\"cohesionInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>凝集範囲<br>(Cohesion Range):</label>\r\n      <input type=\"range\" v-model.number=\"settings.cohesionRange\" min=\"1\" max=\"300\" step=\"1\" />\r\n      <span \r\n        v-if=\"!editingCohesionRange\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditCohesionRange\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.cohesionRange }}</span>\r\n      <input \r\n        v-if=\"editingCohesionRange\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.cohesionRange\" \r\n        min=\"1\" \r\n        max=\"300\"\r\n        step=\"1\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditCohesionRange\"\r\n        @keyup.enter=\"stopEditCohesionRange\"\r\n        ref=\"cohesionRangeInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>分離<br>(Separation):</label>\r\n      <input type=\"range\" v-model.number=\"settings.separation\" min=\"0\" max=\"10\" step=\"0.01\" />\r\n      <span \r\n        v-if=\"!editingSeparation\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditSeparation\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.separation }}</span>\r\n      <input \r\n        v-if=\"editingSeparation\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.separation\" \r\n        min=\"0\" \r\n        max=\"10\"\r\n        step=\"0.01\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditSeparation\"\r\n        @keyup.enter=\"stopEditSeparation\"\r\n        ref=\"separationInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>分離範囲<br>(Separation Range):</label>\r\n      <input type=\"range\" v-model.number=\"settings.separationRange\" min=\"0.1\" max=\"10\" step=\"0.1\" />\r\n      <span \r\n        v-if=\"!editingSeparationRange\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditSeparationRange\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.separationRange }}</span>\r\n      <input \r\n        v-if=\"editingSeparationRange\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.separationRange\" \r\n        min=\"0.1\" \r\n        max=\"10\"\r\n        step=\"0.1\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditSeparationRange\"\r\n        @keyup.enter=\"stopEditSeparationRange\"\r\n        ref=\"separationRangeInput\"\r\n      />\r\n    </div>    <div class=\"setting-row\">\r\n      <label>整列<br>(Alignment):</label>\r\n      <input type=\"range\" v-model.number=\"settings.alignment\" min=\"0\" max=\"20\" step=\"0.01\" />\r\n      <span \r\n        v-if=\"!editingAlignment\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditAlignment\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.alignment }}</span>\r\n      <input \r\n        v-if=\"editingAlignment\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.alignment\" \r\n        min=\"0\" \r\n        max=\"20\"\r\n        step=\"0.01\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditAlignment\"\r\n        @keyup.enter=\"stopEditAlignment\"\r\n        ref=\"alignmentInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>整列範囲<br>(Alignment Range):</label>\r\n      <input type=\"range\" v-model.number=\"settings.alignmentRange\" min=\"1\" max=\"100\" step=\"1\" />\r\n      <span \r\n        v-if=\"!editingAlignmentRange\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditAlignmentRange\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.alignmentRange }}</span>\r\n      <input \r\n        v-if=\"editingAlignmentRange\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.alignmentRange\" \r\n        min=\"1\" \r\n        max=\"100\"\r\n        step=\"1\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditAlignmentRange\"\r\n        @keyup.enter=\"stopEditAlignmentRange\"\r\n        ref=\"alignmentRangeInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>逃避開始距離<br>(Predator Alert):</label>\r\n      <input type=\"range\" v-model.number=\"settings.predatorAlertRadius\" min=\"0\" max=\"10\" step=\"0.05\" />\r\n      <span \r\n        v-if=\"!editingPredatorAlertRadius\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditPredatorAlertRadius\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.predatorAlertRadius }}</span>\r\n      <input \r\n        v-if=\"editingPredatorAlertRadius\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.predatorAlertRadius\" \r\n        min=\"0\" \r\n        max=\"20\"\r\n        step=\"0.05\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditPredatorAlertRadius\"\r\n        @keyup.enter=\"stopEditPredatorAlertRadius\"\r\n        ref=\"predatorAlertRadiusInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>最大速度<br>(Max Speed):</label>\r\n      <input type=\"range\" v-model.number=\"settings.maxSpeed\" min=\"0.1\" max=\"2\" step=\"0.01\" />\r\n      <span \r\n        v-if=\"!editingMaxSpeed\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditMaxSpeed\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.maxSpeed }}</span>\r\n      <input \r\n        v-if=\"editingMaxSpeed\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.maxSpeed\" \r\n        min=\"0.1\" \r\n        max=\"2\"\r\n        step=\"0.01\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditMaxSpeed\"\r\n        @keyup.enter=\"stopEditMaxSpeed\"\r\n        ref=\"maxSpeedInput\"\r\n      />\r\n    </div>    <div class=\"setting-row\">\r\n      <label>最大旋回角<br>(Max Turn Angle):</label>\r\n      <input type=\"range\" v-model.number=\"settings.maxTurnAngle\" min=\"0.001\" max=\"0.3\" step=\"0.001\" />\r\n      <span \r\n        v-if=\"!editingMaxTurnAngle\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditMaxTurnAngle\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.maxTurnAngle }}</span>\r\n      <input \r\n        v-if=\"editingMaxTurnAngle\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.maxTurnAngle\" \r\n        min=\"0.001\" \r\n        max=\"0.3\"\r\n        step=\"0.001\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditMaxTurnAngle\"\r\n        @keyup.enter=\"stopEditMaxTurnAngle\"\r\n        ref=\"maxTurnAngleInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>最大近傍数<br>(Max Neighbors):</label>\r\n      <input type=\"range\" v-model.number=\"settings.maxNeighbors\" min=\"0\" max=\"32\" step=\"1\" />\r\n      <span \r\n        v-if=\"!editingMaxNeighbors\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditMaxNeighbors\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.maxNeighbors }}</span>\r\n      <input \r\n        v-if=\"editingMaxNeighbors\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.maxNeighbors\" \r\n        min=\"0\" \r\n        max=\"32\"\r\n        step=\"1\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditMaxNeighbors\"\r\n        @keyup.enter=\"stopEditMaxNeighbors\"\r\n        ref=\"maxNeighborsInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>水平化トルク<br>(Horizontal Torque):</label>\r\n      <input type=\"range\" v-model.number=\"settings.horizontalTorque\" min=\"0.0\" max=\"0.2\" step=\"0.001\" />\r\n      <span \r\n        v-if=\"!editingHorizontalTorque\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditHorizontalTorque\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.horizontalTorque }}</span>\r\n      <input \r\n        v-if=\"editingHorizontalTorque\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.horizontalTorque\" \r\n        min=\"0.0\" \r\n        max=\"0.2\"\r\n        step=\"0.001\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditHorizontalTorque\"\r\n        @keyup.enter=\"stopEditHorizontalTorque\"\r\n        ref=\"horizontalTorqueInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>回転トルク強度<br>(Torque Strength):</label>\r\n      <input type=\"range\" v-model.number=\"settings.torqueStrength\" min=\"0.0\" max=\"20\" step=\"0.001\" />\r\n      <span \r\n        v-if=\"!editingTorqueStrength\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditTorqueStrength\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.torqueStrength }}</span>\r\n      <input \r\n        v-if=\"editingTorqueStrength\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.torqueStrength\" \r\n        min=\"0.0\" \r\n        max=\"5\"\r\n        step=\"0.001\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditTorqueStrength\"\r\n        @keyup.enter=\"stopEditTorqueStrength\"\r\n        ref=\"torqueStrengthInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>減衰係数<br>(Damping Coefficient):</label>\r\n      <input type=\"range\" v-model.number=\"settings.lambda\" min=\"0\" max=\"1\" step=\"0.001\" />\r\n      <span \r\n        v-if=\"!editingLambda\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditLambda\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.lambda }}</span>\r\n      <input \r\n        v-if=\"editingLambda\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.lambda\" \r\n        min=\"0\" \r\n        max=\"1\"\r\n        step=\"0.001\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditLambda\"\r\n        @keyup.enter=\"stopEditLambda\"\r\n        ref=\"lambdaInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>記憶時間<br>(Memory Time):</label>\r\n      <input type=\"range\" v-model.number=\"settings.tau\" min=\"0\" max=\"5\" step=\"0.01\" />\r\n      <span \r\n        v-if=\"!editingTau\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditTau\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.tau }}</span>\r\n      <input \r\n        v-if=\"editingTau\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.tau\" \r\n        min=\"0\" \r\n        max=\"5\"\r\n        step=\"0.01\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditTau\"\r\n        @keyup.enter=\"stopEditTau\"\r\n        ref=\"tauInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>捕食者フラグ<br>(Is Predator):</label>\r\n      <input type=\"checkbox\" v-model=\"settings.isPredator\" />\r\n      <span>{{ settings.isPredator }}</span>\r\n    </div>\r\n      </div>\r\n    </details>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, nextTick, watch } from 'vue';\r\n\r\nconst emit = defineEmits(['remove']);\r\n\r\nconst props = defineProps({\r\n  settings: {\r\n    type: Object,\r\n    required: true\r\n  },\r\n  canRemove: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n});\r\n\r\nconst settings = props.settings;\r\n\r\n// 編集状態のref\r\nconst editingCount = ref(false);\r\nconst editingCohesion = ref(false);\r\nconst editingCohesionRange = ref(false);\r\nconst editingSeparation = ref(false);\r\nconst editingSeparationRange = ref(false);\r\nconst editingAlignment = ref(false);\r\nconst editingAlignmentRange = ref(false);\r\nconst editingMaxSpeed = ref(false);\r\nconst editingMaxTurnAngle = ref(false);\r\nconst editingMaxNeighbors = ref(false);\r\nconst editingHorizontalTorque = ref(false);\r\nconst editingTorqueStrength = ref(false);\r\nconst editingLambda = ref(false);\r\nconst editingTau = ref(false);\r\nconst editingPredatorAlertRadius = ref(false);\r\n\r\n// 入力フィールドのref\r\nconst countInput = ref(null);\r\nconst cohesionInput = ref(null);\r\nconst cohesionRangeInput = ref(null);\r\nconst separationInput = ref(null);\r\nconst separationRangeInput = ref(null);\r\nconst alignmentInput = ref(null);\r\nconst alignmentRangeInput = ref(null);\r\nconst maxSpeedInput = ref(null);\r\nconst maxTurnAngleInput = ref(null);\r\nconst maxNeighborsInput = ref(null);\r\nconst horizontalTorqueInput = ref(null);\r\nconst torqueStrengthInput = ref(null);\r\nconst lambdaInput = ref(null);\r\nconst tauInput = ref(null);\r\nconst predatorAlertRadiusInput = ref(null);\r\n\r\nconst countDraft = ref(settings.count ?? 0);\r\n\r\nwatch(\r\n  () => settings.count,\r\n  (value) => {\r\n    if (!editingCount.value) {\r\n      countDraft.value = value ?? 0;\r\n    }\r\n  }\r\n);\r\n\r\n// 編集開始関数\r\nasync function startEditCount() {\r\n  editingCount.value = true;\r\n  countDraft.value = settings.count ?? 0;\r\n  await nextTick();\r\n  if (countInput.value) {\r\n    countInput.value.focus();\r\n    countInput.value.select();\r\n  }\r\n}\r\n\r\nfunction cancelCountEdit() {\r\n  editingCount.value = false;\r\n  countDraft.value = settings.count ?? 0;\r\n}\r\n\r\nfunction applyCountDraft() {\r\n  const nextValue = Math.max(0, Math.round(Number.isFinite(countDraft.value) ? countDraft.value : 0));\r\n  if (settings.count !== nextValue) {\r\n    settings.count = nextValue;\r\n  }\r\n}\r\n\r\nfunction commitCountFromSlider() {\r\n  applyCountDraft();\r\n}\r\n\r\nfunction commitCountFromInput() {\r\n  applyCountDraft();\r\n  cancelCountEdit();\r\n}\r\n\r\nfunction emitRemove() {\r\n  emit('remove');\r\n}\r\n\r\nasync function startEditCohesion() {\r\n  editingCohesion.value = true;\r\n  await nextTick();\r\n  if (cohesionInput.value) {\r\n    cohesionInput.value.focus();\r\n    cohesionInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditCohesionRange() {\r\n  editingCohesionRange.value = true;\r\n  await nextTick();\r\n  if (cohesionRangeInput.value) {\r\n    cohesionRangeInput.value.focus();\r\n    cohesionRangeInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditSeparation() {\r\n  editingSeparation.value = true;\r\n  await nextTick();\r\n  if (separationInput.value) {\r\n    separationInput.value.focus();\r\n    separationInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditSeparationRange() {\r\n  editingSeparationRange.value = true;\r\n  await nextTick();\r\n  if (separationRangeInput.value) {\r\n    separationRangeInput.value.focus();\r\n    separationRangeInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditAlignment() {\r\n  editingAlignment.value = true;\r\n  await nextTick();\r\n  if (alignmentInput.value) {\r\n    alignmentInput.value.focus();\r\n    alignmentInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditAlignmentRange() {\r\n  editingAlignmentRange.value = true;\r\n  await nextTick();\r\n  if (alignmentRangeInput.value) {\r\n    alignmentRangeInput.value.focus();\r\n    alignmentRangeInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditPredatorAlertRadius() {\r\n  editingPredatorAlertRadius.value = true;\r\n  await nextTick();\r\n  if (predatorAlertRadiusInput.value) {\r\n    predatorAlertRadiusInput.value.focus();\r\n    predatorAlertRadiusInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditMaxSpeed() {\r\n  editingMaxSpeed.value = true;\r\n  await nextTick();\r\n  if (maxSpeedInput.value) {\r\n    maxSpeedInput.value.focus();\r\n    maxSpeedInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditMaxTurnAngle() {\r\n  editingMaxTurnAngle.value = true;\r\n  await nextTick();\r\n  if (maxTurnAngleInput.value) {\r\n    maxTurnAngleInput.value.focus();\r\n    maxTurnAngleInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditMaxNeighbors() {\r\n  editingMaxNeighbors.value = true;\r\n  await nextTick();\r\n  if (maxNeighborsInput.value) {\r\n    maxNeighborsInput.value.focus();\r\n    maxNeighborsInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditHorizontalTorque() {\r\n  editingHorizontalTorque.value = true;\r\n  await nextTick();\r\n  if (horizontalTorqueInput.value) {\r\n    horizontalTorqueInput.value.focus();\r\n    horizontalTorqueInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditTorqueStrength() {\r\n  editingTorqueStrength.value = true;\r\n  await nextTick();\r\n  if (torqueStrengthInput.value) {\r\n    torqueStrengthInput.value.focus();\r\n    torqueStrengthInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditLambda() {\r\n  editingLambda.value = true;\r\n  await nextTick();\r\n  if (lambdaInput.value) {\r\n    lambdaInput.value.focus();\r\n    lambdaInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditTau() {\r\n  editingTau.value = true;\r\n  await nextTick();\r\n  if (tauInput.value) {\r\n    tauInput.value.focus();\r\n    tauInput.value.select();\r\n  }\r\n}\r\n\r\nfunction stopEditCohesion() {\r\n  editingCohesion.value = false;\r\n}\r\n\r\nfunction stopEditCohesionRange() {\r\n  editingCohesionRange.value = false;\r\n}\r\n\r\nfunction stopEditSeparation() {\r\n  editingSeparation.value = false;\r\n}\r\n\r\nfunction stopEditSeparationRange() {\r\n  editingSeparationRange.value = false;\r\n}\r\n\r\nfunction stopEditAlignment() {\r\n  editingAlignment.value = false;\r\n}\r\n\r\nfunction stopEditAlignmentRange() {\r\n  editingAlignmentRange.value = false;\r\n}\r\n\r\nfunction stopEditPredatorAlertRadius() {\r\n  editingPredatorAlertRadius.value = false;\r\n}\r\n\r\nfunction stopEditMaxSpeed() {\r\n  editingMaxSpeed.value = false;\r\n}\r\n\r\nfunction stopEditMaxTurnAngle() {\r\n  editingMaxTurnAngle.value = false;\r\n}\r\n\r\nfunction stopEditMaxNeighbors() {\r\n  editingMaxNeighbors.value = false;\r\n}\r\n\r\nfunction stopEditHorizontalTorque() {\r\n  editingHorizontalTorque.value = false;\r\n}\r\n\r\nfunction stopEditTorqueStrength() {\r\n  editingTorqueStrength.value = false;\r\n}\r\n\r\nfunction stopEditLambda() {\r\n  editingLambda.value = false;\r\n}\r\n\r\nfunction stopEditTau() {\r\n  editingTau.value = false;\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.settings {\r\n  margin-bottom: 20px;\r\n  width: 100%;\r\n  min-width: 260px;\r\n  max-width: 520px;\r\n  box-sizing: border-box;\r\n  pointer-events: auto;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n.setting-row {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 8px;\r\n  width: 100%;\r\n}\r\n.setting-row label {\r\n  width: 130px;\r\n  text-align: left;\r\n  margin-right: 10px;\r\n  flex-shrink: 0;\r\n  display: inline-block;\r\n}\r\n.setting-row input[type=\"range\"] {\r\n  width: 120px;\r\n  min-width: 80px;\r\n  max-width: 200px;\r\n  margin: 0 10px;\r\n  flex: none;\r\n  display: inline-block;\r\n}\r\n.setting-row span {\r\n  width: 60px;\r\n  text-align: left;\r\n  display: inline-block;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.editable-value {\r\n  cursor: pointer;\r\n  padding: 2px 4px;\r\n  border-radius: 3px;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.editable-value:hover {\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  text-decoration: underline;\r\n}\r\n\r\n.value-input {\r\n  width: 60px;\r\n  padding: 2px 4px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 3px;\r\n  background: transparent;\r\n  color: inherit;\r\n  font-size: inherit;\r\n  text-align: left;\r\n}\r\n\r\n.value-input:focus {\r\n  outline: none;\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 3px rgba(0, 123, 255, 0.3);\r\n}\r\n\r\n.species-section {\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n  background-color: rgba(255, 255, 255, 0.05);\r\n  pointer-events: auto;\r\n  position: relative;\r\n  overflow: visible;\r\n  max-width: 100%;\r\n  width: fit-content;\r\n  min-width: 260px;\r\n}\r\n\r\n.species-header {\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  border-radius: 5px 5px 0 0;\r\n  user-select: none;\r\n  pointer-events: auto;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  gap: 8px;\r\n}\r\n\r\n.species-title {\r\n  flex: 1;\r\n}\r\n\r\n.species-remove {\r\n  pointer-events: auto;\r\n  background: #d9534f;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 4px 8px;\r\n  font-size: 0.8rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.species-remove:hover {\r\n  background: #c9302c;\r\n}\r\n\r\n.species-header:hover {\r\n  background-color: rgba(255, 255, 255, 0.15);\r\n}\r\n\r\n.species-content {\r\n  padding: 10px;\r\n  pointer-events: auto;\r\n  position: relative;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n}\r\n</style>","import script from \"./Settings.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Settings.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Settings.vue?vue&type=style&index=0&id=255c5208&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-255c5208\"]])\n\nexport default __exports__","import * as THREE from 'three';\r\n\r\n/**\r\n * Boid のインスタンシング描画管理クラス。\r\n * ハイ/ロー LOD インスタンスを三重バッファで更新し、尾びれアニメ用の uniform を注入します。\r\n */\r\nexport class BoidInstancing {\r\n  constructor({\r\n    tailAnimation,\r\n    tripleBufferSize = 3,        // インスタンス更新に用いるバッファ数（遅延許容量）\r\n    hiddenPosition = 1e6,        // 非表示時に退避させる座標\r\n    identityQuaternion = [0, 0, 0, 1], // 非表示時に適用する無回転クォータニオン\r\n    lodNearDistanceSq = 4,       // ハイポリ表示に切り替える距離²（約2m）\r\n    lodMidDistanceSq = 25,       // LOD メッシュ＋アニメを行う距離²（約5m）\r\n  } = {}) {\r\n    this.tailAnimation = tailAnimation;\r\n    this.tripleBufferSize = tripleBufferSize;\r\n    this.hiddenPosition = hiddenPosition;\r\n    this.identityQuaternion = identityQuaternion;\r\n    this.lodNearDistanceSq = lodNearDistanceSq;\r\n    this.lodMidDistanceSq = lodMidDistanceSq;\r\n    this.streamUsage = THREE.StreamDrawUsage ?? THREE.DynamicDrawUsage;\r\n\r\n    this.scene = null;\r\n    this.count = 0;\r\n\r\n    this.instancedMeshHigh = null;\r\n    this.instancedMeshLow = null;\r\n    this.instancingMaterials = new Set();\r\n\r\n    this.bufferSetHigh = null;\r\n    this.bufferSetLow = null;\r\n    this.tailPhaseSeeds = null;\r\n    this.bufferCursor = 0;\r\n\r\n    this.previousVelocities = null;\r\n    this.previousLodFlags = null;\r\n\r\n    this.predatorModel = null;\r\n    this.predatorMeshes = [];\r\n    this.predatorMeshCountCache = -1;\r\n  }\r\n\r\n  init(scene, {\r\n    count,\r\n    boidModel,\r\n    boidModelLod,\r\n    highMaterial,\r\n    lowMaterial,\r\n    predatorModel = null,\r\n  }) {\r\n    if (!scene || !boidModel || !boidModelLod || !highMaterial || !lowMaterial) {\r\n      console.error('BoidInstancing.init: missing required arguments.');\r\n      return false;\r\n    }\r\n    if (!boidModel.children?.length || !boidModel.children[0].geometry) {\r\n      console.error('BoidInstancing.init: invalid high model.');\r\n      return false;\r\n    }\r\n    if (!boidModelLod.children?.length || !boidModelLod.children[0].geometry) {\r\n      console.error('BoidInstancing.init: invalid LOD model.');\r\n      return false;\r\n    }\r\n\r\n    this.dispose(scene);\r\n\r\n    this.scene = scene;\r\n    this.count = count;\r\n    if (predatorModel) {\r\n      this.predatorModel = predatorModel;\r\n    }\r\n\r\n    const highMaterialClone = highMaterial.clone();\r\n    const lowMaterialClone = lowMaterial.clone();\r\n    this.patchMaterial(highMaterialClone);\r\n    this.patchMaterial(lowMaterialClone);\r\n\r\n    // モデルごとの頂点属性を複製してから必要な属性を追加する\r\n    const highGeometry = boidModel.children[0].geometry.clone();\r\n    const lowGeometry = boidModelLod.children[0].geometry.clone();\r\n    this.ensureBodyCoordAttribute(highGeometry);\r\n    this.ensureBodyCoordAttribute(lowGeometry);\r\n\r\n    this.instancedMeshHigh = new THREE.InstancedMesh(highGeometry, highMaterialClone, count);\r\n    this.configureInstancedMesh(this.instancedMeshHigh, highMaterialClone);\r\n\r\n    this.instancedMeshLow = new THREE.InstancedMesh(lowGeometry, lowMaterialClone, count);\r\n    this.configureInstancedMesh(this.instancedMeshLow, lowMaterialClone);\r\n\r\n    scene.add(this.instancedMeshHigh);\r\n    scene.add(this.instancedMeshLow);\r\n\r\n    this.bufferSetHigh = this.createBufferSet(count);\r\n    this.bufferSetLow = this.createBufferSet(count);\r\n    this.resetBufferSetToHidden(this.bufferSetHigh);\r\n    this.resetBufferSetToHidden(this.bufferSetLow);\r\n\r\n    this.tailPhaseSeeds = this.createTailPhaseArray(count);\r\n    this.applyTailPhaseSeeds(this.bufferSetHigh, this.tailPhaseSeeds);\r\n    this.applyTailPhaseSeeds(this.bufferSetLow, this.tailPhaseSeeds);\r\n\r\n    this.bufferCursor = 0;\r\n    this.applyBufferSet(this.instancedMeshHigh, this.bufferSetHigh, this.bufferCursor);\r\n    this.applyBufferSet(this.instancedMeshLow, this.bufferSetLow, this.bufferCursor);\r\n\r\n    this.instancedMeshHigh.instanceMatrix.setUsage(THREE.StaticDrawUsage);\r\n    this.instancedMeshLow.instanceMatrix.setUsage(THREE.StaticDrawUsage);\r\n    this.instancedMeshHigh.count = count;\r\n    this.instancedMeshLow.count = count;\r\n\r\n    this.previousVelocities = null;\r\n    this.previousLodFlags = null;\r\n\r\n    if (this.scene && this.predatorModel) {\r\n      this.ensurePredatorMeshes(0);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * シミュレーション出力を三重バッファへ書き込み、LOD ごとにインスタンスを切り替える。\r\n   */\r\n  update({\r\n    count,\r\n    positions,\r\n    orientations,\r\n    velocities,\r\n    cameraPosition,\r\n    predatorCount = 0,\r\n  }) {\r\n    if (!this.instancedMeshHigh || !this.instancedMeshLow || !this.bufferSetHigh || !this.bufferSetLow) {\r\n      return { visibleCount: 0 };\r\n    }\r\n    if (!positions || !orientations) {\r\n      return { visibleCount: 0 };\r\n    }\r\n\r\n    this.ensureTailRuntimeBuffers(count);\r\n    const lodFlags = this.ensureLodFlagBuffer(count);\r\n\r\n    const currentIndex = this.bufferCursor;\r\n    const nextIndex = (currentIndex + 1) % this.tripleBufferSize;\r\n\r\n    const highPosAttr = this.bufferSetHigh.pos[currentIndex];\r\n    const highQuatAttr = this.bufferSetHigh.quat[currentIndex];\r\n    const highTailParamsAttr = this.bufferSetHigh.tailParams[currentIndex];\r\n    const lowPosAttr = this.bufferSetLow.pos[currentIndex];\r\n    const lowQuatAttr = this.bufferSetLow.quat[currentIndex];\r\n    const lowTailParamsAttr = this.bufferSetLow.tailParams[currentIndex];\r\n\r\n    const highPosArray = highPosAttr.array;\r\n    const highQuatArray = highQuatAttr.array;\r\n    const highTailParamsArray = highTailParamsAttr.array;\r\n    const lowPosArray = lowPosAttr.array;\r\n    const lowQuatArray = lowQuatAttr.array;\r\n    const lowTailParamsArray = lowTailParamsAttr.array;\r\n\r\n    let highTransformTouched = false;\r\n    let lowTransformTouched = false;\r\n    let highTailTouched = false;\r\n    let lowTailTouched = false;\r\n\r\n    const camX = cameraPosition?.x ?? 0;\r\n    const camY = cameraPosition?.y ?? 0;\r\n    const camZ = cameraPosition?.z ?? 0;\r\n\r\n    const predatorStartIndex = predatorCount > 0 ? Math.max(0, count - predatorCount) : count;\r\n    if (this.scene && this.predatorModel) {\r\n      if (this.ensurePredatorMeshes(predatorCount)) {\r\n        this.predatorMeshCountCache = predatorCount;\r\n      }\r\n      for (const mesh of this.predatorMeshes) {\r\n        mesh.visible = false;\r\n      }\r\n    }\r\n\r\n    const hiddenPos = this.hiddenPosition;\r\n    const idQuat = this.identityQuaternion;\r\n    const prevVel = this.previousVelocities;\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      const basePos = i * 3;\r\n      const baseQuat = i * 4;\r\n      const tailIndex = i * 3;\r\n\r\n      const px = positions[basePos];\r\n      const py = positions[basePos + 1];\r\n      const pz = positions[basePos + 2];\r\n\r\n      const dx = px - camX;\r\n      const dy = py - camY;\r\n      const dz = pz - camZ;\r\n      // 高負荷を避けるため距離で LOD を切り替える\r\n      const distSq = dx * dx + dy * dy + dz * dz;\r\n      const isNear = distSq < this.lodNearDistanceSq;\r\n      const isMid = !isNear && distSq < this.lodMidDistanceSq;\r\n      const animateTail = isNear || isMid;\r\n\r\n      const qx = orientations[baseQuat];\r\n      const qy = orientations[baseQuat + 1];\r\n      const qz = orientations[baseQuat + 2];\r\n      const qw = orientations[baseQuat + 3];\r\n\r\n      const isPredator = i >= predatorStartIndex && predatorCount > 0;\r\n      if (isPredator) {\r\n        const meshIndex = i - predatorStartIndex;\r\n        const predatorMesh = this.predatorMeshes[meshIndex];\r\n        if (predatorMesh) {\r\n          predatorMesh.visible = true;\r\n          predatorMesh.position.set(px, py, pz);\r\n          predatorMesh.quaternion.set(qx, qy, qz, qw);\r\n        }\r\n\r\n        // 捕食者は別メッシュで描画するためインスタンス側は非表示にする\r\n        if (\r\n          highPosArray[basePos] !== hiddenPos ||\r\n          highPosArray[basePos + 1] !== hiddenPos ||\r\n          highPosArray[basePos + 2] !== hiddenPos ||\r\n          highQuatArray[baseQuat] !== idQuat[0] ||\r\n          highQuatArray[baseQuat + 1] !== idQuat[1] ||\r\n          highQuatArray[baseQuat + 2] !== idQuat[2] ||\r\n          highQuatArray[baseQuat + 3] !== idQuat[3]\r\n        ) {\r\n          highPosArray[basePos] = hiddenPos;\r\n          highPosArray[basePos + 1] = hiddenPos;\r\n          highPosArray[basePos + 2] = hiddenPos;\r\n          highQuatArray[baseQuat] = idQuat[0];\r\n          highQuatArray[baseQuat + 1] = idQuat[1];\r\n          highQuatArray[baseQuat + 2] = idQuat[2];\r\n          highQuatArray[baseQuat + 3] = idQuat[3];\r\n          highTransformTouched = true;\r\n        }\r\n\r\n        if (\r\n          lowPosArray[basePos] !== hiddenPos ||\r\n          lowPosArray[basePos + 1] !== hiddenPos ||\r\n          lowPosArray[basePos + 2] !== hiddenPos ||\r\n          lowQuatArray[baseQuat] !== idQuat[0] ||\r\n          lowQuatArray[baseQuat + 1] !== idQuat[1] ||\r\n          lowQuatArray[baseQuat + 2] !== idQuat[2] ||\r\n          lowQuatArray[baseQuat + 3] !== idQuat[3]\r\n        ) {\r\n          lowPosArray[basePos] = hiddenPos;\r\n          lowPosArray[basePos + 1] = hiddenPos;\r\n          lowPosArray[basePos + 2] = hiddenPos;\r\n          lowQuatArray[baseQuat] = idQuat[0];\r\n          lowQuatArray[baseQuat + 1] = idQuat[1];\r\n          lowQuatArray[baseQuat + 2] = idQuat[2];\r\n          lowQuatArray[baseQuat + 3] = idQuat[3];\r\n          lowTransformTouched = true;\r\n        }\r\n\r\n        if (highTailParamsArray[tailIndex] !== 0 || highTailParamsArray[tailIndex + 1] !== 0 || highTailParamsArray[tailIndex + 2] !== 0) {\r\n          highTailParamsArray[tailIndex] = 0;\r\n          highTailParamsArray[tailIndex + 1] = 0;\r\n          highTailParamsArray[tailIndex + 2] = 0;\r\n          highTailTouched = true;\r\n        }\r\n        if (lowTailParamsArray[tailIndex] !== 0 || lowTailParamsArray[tailIndex + 1] !== 0 || lowTailParamsArray[tailIndex + 2] !== 0) {\r\n          lowTailParamsArray[tailIndex] = 0;\r\n          lowTailParamsArray[tailIndex + 1] = 0;\r\n          lowTailParamsArray[tailIndex + 2] = 0;\r\n          lowTailTouched = true;\r\n        }\r\n\r\n        if (lodFlags) {\r\n          lodFlags[i] = 0;\r\n        }\r\n        if (prevVel) {\r\n          prevVel[basePos] = 0;\r\n          prevVel[basePos + 1] = 0;\r\n          prevVel[basePos + 2] = 0;\r\n        }\r\n        continue;\r\n      }\r\n\r\n      const vx = velocities ? velocities[basePos] : 0;\r\n      const vy = velocities ? velocities[basePos + 1] : 0;\r\n      const vz = velocities ? velocities[basePos + 2] : 0;\r\n      const speed = Math.hypot(vx, vy, vz);\r\n      const prevVx = prevVel ? prevVel[basePos] : 0;\r\n      const prevVy = prevVel ? prevVel[basePos + 1] : 0;\r\n      const prevVz = prevVel ? prevVel[basePos + 2] : 0;\r\n      const prevLen = Math.hypot(prevVx, prevVy, prevVz);\r\n\r\n      let turnAmount = 0;\r\n      if (prevLen > 1e-5 && speed > 1e-5) {\r\n        // 前フレームからの向きの差異を Y 軸回転量として近似\r\n        const crossY = prevVz * vx - prevVx * vz;\r\n        const dot = prevVx * vx + prevVy * vy + prevVz * vz;\r\n        turnAmount = Math.atan2(crossY, dot);\r\n      }\r\n\r\n      const tailSpeedValue = animateTail ? speed : 0;\r\n      const tailTurnValue = animateTail ? turnAmount : 0;\r\n      const driveValue = animateTail ? 1 : 0;\r\n\r\n      if (isNear) {\r\n        highPosArray[basePos] = px;\r\n        highPosArray[basePos + 1] = py;\r\n        highPosArray[basePos + 2] = pz;\r\n        highQuatArray[baseQuat] = qx;\r\n        highQuatArray[baseQuat + 1] = qy;\r\n        highQuatArray[baseQuat + 2] = qz;\r\n        highQuatArray[baseQuat + 3] = qw;\r\n        highTransformTouched = true;\r\n\r\n        if (\r\n          lowPosArray[basePos] !== hiddenPos ||\r\n          lowPosArray[basePos + 1] !== hiddenPos ||\r\n          lowPosArray[basePos + 2] !== hiddenPos ||\r\n          lowQuatArray[baseQuat] !== idQuat[0] ||\r\n          lowQuatArray[baseQuat + 1] !== idQuat[1] ||\r\n          lowQuatArray[baseQuat + 2] !== idQuat[2] ||\r\n          lowQuatArray[baseQuat + 3] !== idQuat[3]\r\n        ) {\r\n          lowPosArray[basePos] = hiddenPos;\r\n          lowPosArray[basePos + 1] = hiddenPos;\r\n          lowPosArray[basePos + 2] = hiddenPos;\r\n          lowQuatArray[baseQuat] = idQuat[0];\r\n          lowQuatArray[baseQuat + 1] = idQuat[1];\r\n          lowQuatArray[baseQuat + 2] = idQuat[2];\r\n          lowQuatArray[baseQuat + 3] = idQuat[3];\r\n          lowTransformTouched = true;\r\n        }\r\n\r\n        highTailParamsArray[tailIndex] = tailSpeedValue;\r\n        highTailParamsArray[tailIndex + 1] = tailTurnValue;\r\n        highTailParamsArray[tailIndex + 2] = driveValue;\r\n        highTailTouched = true;\r\n\r\n        if (\r\n          lowTailParamsArray[tailIndex] !== 0 ||\r\n          lowTailParamsArray[tailIndex + 1] !== 0 ||\r\n          lowTailParamsArray[tailIndex + 2] !== 0\r\n        ) {\r\n          lowTailParamsArray[tailIndex] = 0;\r\n          lowTailParamsArray[tailIndex + 1] = 0;\r\n          lowTailParamsArray[tailIndex + 2] = 0;\r\n          lowTailTouched = true;\r\n        }\r\n      } else {\r\n        lowPosArray[basePos] = px;\r\n        lowPosArray[basePos + 1] = py;\r\n        lowPosArray[basePos + 2] = pz;\r\n        lowQuatArray[baseQuat] = qx;\r\n        lowQuatArray[baseQuat + 1] = qy;\r\n        lowQuatArray[baseQuat + 2] = qz;\r\n        lowQuatArray[baseQuat + 3] = qw;\r\n        lowTransformTouched = true;\r\n\r\n        if (\r\n          highPosArray[basePos] !== hiddenPos ||\r\n          highPosArray[basePos + 1] !== hiddenPos ||\r\n          highPosArray[basePos + 2] !== hiddenPos ||\r\n          highQuatArray[baseQuat] !== idQuat[0] ||\r\n          highQuatArray[baseQuat + 1] !== idQuat[1] ||\r\n          highQuatArray[baseQuat + 2] !== idQuat[2] ||\r\n          highQuatArray[baseQuat + 3] !== idQuat[3]\r\n        ) {\r\n          highPosArray[basePos] = hiddenPos;\r\n          highPosArray[basePos + 1] = hiddenPos;\r\n          highPosArray[basePos + 2] = hiddenPos;\r\n          highQuatArray[baseQuat] = idQuat[0];\r\n          highQuatArray[baseQuat + 1] = idQuat[1];\r\n          highQuatArray[baseQuat + 2] = idQuat[2];\r\n          highQuatArray[baseQuat + 3] = idQuat[3];\r\n          highTransformTouched = true;\r\n        }\r\n\r\n        lowTailParamsArray[tailIndex] = tailSpeedValue;\r\n        lowTailParamsArray[tailIndex + 1] = tailTurnValue;\r\n        lowTailParamsArray[tailIndex + 2] = driveValue;\r\n        lowTailTouched = true;\r\n\r\n        if (\r\n          highTailParamsArray[tailIndex] !== 0 ||\r\n          highTailParamsArray[tailIndex + 1] !== 0 ||\r\n          highTailParamsArray[tailIndex + 2] !== 0\r\n        ) {\r\n          highTailParamsArray[tailIndex] = 0;\r\n          highTailParamsArray[tailIndex + 1] = 0;\r\n          highTailParamsArray[tailIndex + 2] = 0;\r\n          highTailTouched = true;\r\n        }\r\n      }\r\n\r\n      if (lodFlags) {\r\n        lodFlags[i] = isNear ? 1 : 2;\r\n      }\r\n\r\n      if (prevVel) {\r\n        prevVel[basePos] = vx;\r\n        prevVel[basePos + 1] = vy;\r\n        prevVel[basePos + 2] = vz;\r\n      }\r\n    }\r\n\r\n    const visibleCount = predatorCount > 0 ? Math.max(0, count - predatorCount) : count;\r\n    this.instancedMeshHigh.count = visibleCount;\r\n    this.instancedMeshLow.count = visibleCount;\r\n\r\n    this.applyBufferSet(this.instancedMeshHigh, this.bufferSetHigh, currentIndex);\r\n    this.applyBufferSet(this.instancedMeshLow, this.bufferSetLow, currentIndex);\r\n\r\n    highPosAttr.needsUpdate = highTransformTouched;\r\n    highQuatAttr.needsUpdate = highTransformTouched;\r\n    lowPosAttr.needsUpdate = lowTransformTouched;\r\n    lowQuatAttr.needsUpdate = lowTransformTouched;\r\n    highTailParamsAttr.needsUpdate = highTailTouched;\r\n    lowTailParamsAttr.needsUpdate = lowTailTouched;\r\n\r\n    this.bufferCursor = nextIndex;\r\n\r\n    return {\r\n      visibleCount,\r\n      lodFlags,\r\n    };\r\n  }\r\n\r\n  forEachInstancingMaterial(callback) {\r\n    for (const material of this.instancingMaterials) {\r\n      callback(material);\r\n    }\r\n  }\r\n\r\n  getMeshes() {\r\n    return {\r\n      high: this.instancedMeshHigh,\r\n      low: this.instancedMeshLow,\r\n    };\r\n  }\r\n\r\n  getPredatorMeshes() {\r\n    return this.predatorMeshes;\r\n  }\r\n\r\n  setTailUniformTime(time) {\r\n    if (!this.tailAnimation?.uniforms) return;\r\n    if (this.tailAnimation.uniforms.uTailTime) {\r\n      this.tailAnimation.uniforms.uTailTime.value = time;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 元マテリアルへ尾びれアニメ用 uniform と頂点シェーダ拡張を差し込みます。\r\n   */\r\n  patchMaterial(material) {\r\n    if (!material || material.userData?.instancingPatched) return;\r\n    const uniforms = this.tailAnimation?.uniforms;\r\n    if (!uniforms) {\r\n      console.warn('BoidInstancing.patchMaterial: tailAnimation.uniforms が未設定です');\r\n    }\r\n\r\n    material.onBeforeCompile = (shader) => {\r\n      if (uniforms) {\r\n        // 元シェーダーへ尾びれアニメ用の uniform を全て注入\r\n        Object.entries(uniforms).forEach(([key, uniform]) => {\r\n          shader.uniforms[key] = uniform;\r\n        });\r\n      }\r\n\r\n      shader.vertexShader = shader.vertexShader\r\n        .replace(\r\n          '#include <common>',\r\n          `#include <common>\\nattribute vec3 instancePos;\\nattribute vec4 instanceQuat;\\nattribute float aBodyCoord;\\nattribute float instanceTailPhase;\\nattribute vec3 instanceTailParams;\\nuniform float uTailTime;\\nuniform float uTailAmplitude;\\nuniform float uTailFrequency;\\nuniform float uTailPhaseStride;\\nuniform float uTailTurnStrength;\\nuniform float uTailSpeedScale;\\nuniform vec3 uTailRight;\\nuniform vec3 uTailForward;\\nuniform vec3 uTailUp;\\nuniform float uTailEnable;\\nuniform sampler2D uSinLut;\\nuniform float uLutSize;\\nvec3 quatTransform(vec3 v, vec4 q) {\\n  vec3 t = 2.0 * cross(q.xyz, v);\\n  return v + q.w * t + cross(q.xyz, t);\\n}\\nvec2 sampleSinCos(float angle) {\\n  float u = fract(angle * 0.15915494309189535);\\n  u = u * (uLutSize - 1.0) + 0.5;\\n  vec4 lutSample = texture(uSinLut, vec2(u / uLutSize, 0.5));\\n  return lutSample.rg * 2.0 - 1.0;\\n}`\r\n        )\r\n        .replace(\r\n          '#include <instancing_vertex>',\r\n          `#ifdef USE_INSTANCING\r\n#endif\r\n#ifdef USE_INSTANCING_COLOR\r\n  vColor.xyz *= instanceColor.xyz;\r\n#endif`\r\n        )\r\n        .replace(\r\n          '#include <begin_vertex>',\r\n          `#include <begin_vertex>\\nvec3 tailParams = instanceTailParams;\\nif (uTailEnable > 0.5) {\\n  float driveRaw = tailParams.z;\\n  if (driveRaw > 0.01) {\\n    float drive = clamp(driveRaw, 0.0, 1.0);\\n    vec3 originalPos = transformed;\\n    vec3 right = normalize(uTailRight);\\n    vec3 forward = normalize(uTailForward);\\n    vec3 up = normalize(uTailUp);\\n\\n    float localX = dot(originalPos, right);\\n    float localY = dot(originalPos, forward);\\n    float localZ = dot(originalPos, up);\\n\\n    float bodyCoord = clamp(aBodyCoord, 0.0, 1.0);\\n    float tailWeight = smoothstep(0.0, 0.35, bodyCoord);\\n    float speedFactor = clamp(tailParams.x * uTailSpeedScale, 0.0, 2.0);\\n\\n    float phase = instanceTailPhase + uTailTime * uTailFrequency;\\n    float wavePhase = phase + bodyCoord * uTailPhaseStride;\\n    vec2 waveSC = sampleSinCos(wavePhase);\\n    float wag = waveSC.x * uTailAmplitude * drive;\\n    float turnOffset = tailParams.y * uTailTurnStrength * drive;\\n    float motion = wag * (0.4 + 0.6 * speedFactor) + turnOffset;\\n\\n    float tipDamping = 1.0 - smoothstep(0.7, 1.0, bodyCoord) * 0.3;\\n    float bendStrength = mix(0.02, 1.0, tailWeight) * tipDamping;\\n\\n    float bendAngle = motion * bendStrength;\\n    vec2 bendSC = sampleSinCos(bendAngle);\\n    float s = bendSC.x;\\n    float c = bendSC.y;\\n    float rotX = localX * c - localY * s;\\n    float rotY = localX * s + localY * c;\\n\\n    float sway = motion * 0.4 * tipDamping;\\n    rotX += sway * (0.05 + 0.95 * bodyCoord);\\n\\n    vec3 rotated = right * rotX + forward * rotY + up * localZ;\\n    transformed = rotated;\\n  }\\n}\\ntransformed = quatTransform(transformed, instanceQuat) + instancePos;`\r\n        )\r\n        .replace(\r\n          '#include <beginnormal_vertex>',\r\n          '#include <beginnormal_vertex>\\nobjectNormal = quatTransform(objectNormal, instanceQuat);'\r\n        )\r\n        .replace(\r\n          '#include <project_vertex>',\r\n          `#include <project_vertex>\\n#ifdef DEPTH_PACKING\\nvec3 tailParams = instanceTailParams;\\nif (uTailEnable > 0.5) {\\n  float driveRaw = tailParams.z;\\n  if (driveRaw > 0.01) {\\n    float drive = clamp(driveRaw, 0.0, 1.0);\\n    vec3 viewPos = mvPosition.xyz;\\n    mat3 normalMatrix3 = mat3(normalMatrix);\\n    vec3 right = normalize(normalMatrix3 * uTailRight);\\n    vec3 forward = normalize(normalMatrix3 * uTailForward);\\n    vec3 up = normalize(normalMatrix3 * uTailUp);\\n\\n    float localX = dot(viewPos, right);\\n    float localY = dot(viewPos, forward);\\n    float localZ = dot(viewPos, up);\\n\\n    float bodyCoord = clamp(aBodyCoord, 0.0, 1.0);\\n    float tailWeight = smoothstep(0.0, 0.35, bodyCoord);\\n    float speedFactor = clamp(tailParams.x * uTailSpeedScale, 0.0, 2.0);\\n\\n    float phase = instanceTailPhase + uTailTime * uTailFrequency;\\n    float wavePhase = phase + bodyCoord * uTailPhaseStride;\\n    vec2 waveSC = sampleSinCos(wavePhase);\\n    float wag = waveSC.x * uTailAmplitude * drive;\\n    float turnOffset = tailParams.y * uTailTurnStrength * drive;\\n    float motion = wag * (0.4 + 0.6 * speedFactor) + turnOffset;\\n\\n    float tipDamping = 1.0 - smoothstep(0.7, 1.0, bodyCoord) * 0.3;\\n    float bendStrength = mix(0.02, 1.0, tailWeight) * tipDamping;\\n\\n    float bendAngle = motion * bendStrength;\\n    vec2 bendSC = sampleSinCos(bendAngle);\\n    float s = bendSC.x;\\n    float c = bendSC.y;\\n    float rotX = localX * c - localY * s;\\n    float rotY = localX * s + localY * c;\\n\\n    float sway = motion * 0.4 * tipDamping;\\n    rotX += sway * (0.05 + 0.95 * bodyCoord);\\n\\n    vec3 rotated = right * rotX + forward * rotY + up * localZ;\\n    mvPosition.xyz = rotated;\\n    gl_Position = projectionMatrix * mvPosition;\\n  }\\n}\\n#endif`\r\n        );\r\n\r\n      material.userData = {\r\n        ...(material.userData || {}),\r\n        instancingPatched: true,\r\n      };\r\n    };\r\n\r\n    material.needsUpdate = true;\r\n    this.instancingMaterials.add(material);\r\n  }\r\n\r\n  createDepthMaterial(sourceMaterial) {\r\n    const depthMaterial = new THREE.MeshDepthMaterial({\r\n      depthPacking: THREE.RGBADepthPacking,\r\n      alphaTest: sourceMaterial.alphaTest ?? 0,\r\n    });\r\n    depthMaterial.map = sourceMaterial.map ?? null;\r\n    depthMaterial.alphaMap = sourceMaterial.alphaMap ?? null;\r\n    depthMaterial.transparent = sourceMaterial.transparent ?? false;\r\n    this.patchMaterial(depthMaterial);\r\n    return depthMaterial;\r\n  }\r\n\r\n  createDistanceMaterial(sourceMaterial) {\r\n    const distanceMaterial = new THREE.MeshDistanceMaterial({\r\n      alphaTest: sourceMaterial.alphaTest ?? 0,\r\n    });\r\n    distanceMaterial.map = sourceMaterial.map ?? null;\r\n    distanceMaterial.alphaMap = sourceMaterial.alphaMap ?? null;\r\n    distanceMaterial.transparent = sourceMaterial.transparent ?? false;\r\n    this.patchMaterial(distanceMaterial);\r\n    return distanceMaterial;\r\n  }\r\n\r\n  configureInstancedMesh(mesh, material) {\r\n    mesh.castShadow = true;\r\n    mesh.receiveShadow = true;\r\n    mesh.frustumCulled = false;\r\n    mesh.customDepthMaterial = this.createDepthMaterial(material);\r\n    mesh.customDistanceMaterial = this.createDistanceMaterial(material);\r\n\r\n    const white = new THREE.Color(1, 1, 1);\r\n    for (let i = 0; i < mesh.count; i++) {\r\n      mesh.setColorAt(i, white);\r\n    }\r\n    if (mesh.instanceColor) {\r\n      mesh.instanceColor.needsUpdate = true;\r\n    }\r\n  }\r\n\r\n  createAttributeSet(count, itemSize, ArrayType = Float32Array) {\r\n    const length = count * itemSize;\r\n    const attributes = [];\r\n    for (let i = 0; i < this.tripleBufferSize; i++) {\r\n      const attr = new THREE.InstancedBufferAttribute(new ArrayType(length), itemSize);\r\n      attr.setUsage(this.streamUsage);\r\n      attributes.push(attr);\r\n    }\r\n    return attributes;\r\n  }\r\n\r\n  createBufferSet(count) {\r\n    return {\r\n      pos: this.createAttributeSet(count, 3),\r\n      quat: this.createAttributeSet(count, 4),\r\n      tailPhase: this.createAttributeSet(count, 1),\r\n      tailParams: this.createAttributeSet(count, 3),\r\n    };\r\n  }\r\n\r\n  resetBufferSetToHidden(bufferSet) {\r\n    // 初期状態では全インスタンスを画面外へ退避させておく\r\n    for (const attr of bufferSet.pos) {\r\n      const array = attr.array;\r\n      for (let i = 0; i < array.length; i += 3) {\r\n        array[i] = this.hiddenPosition;\r\n        array[i + 1] = this.hiddenPosition;\r\n        array[i + 2] = this.hiddenPosition;\r\n      }\r\n    }\r\n    for (const attr of bufferSet.quat) {\r\n      const array = attr.array;\r\n      for (let i = 0; i < array.length; i += 4) {\r\n        array[i] = this.identityQuaternion[0];\r\n        array[i + 1] = this.identityQuaternion[1];\r\n        array[i + 2] = this.identityQuaternion[2];\r\n        array[i + 3] = this.identityQuaternion[3];\r\n      }\r\n    }\r\n    for (const attr of bufferSet.tailPhase) {\r\n      attr.array.fill(0);\r\n    }\r\n    for (const attr of bufferSet.tailParams) {\r\n      attr.array.fill(0);\r\n    }\r\n  }\r\n\r\n  applyBufferSet(mesh, bufferSet, index) {\r\n    mesh.geometry.setAttribute('instancePos', bufferSet.pos[index]);\r\n    mesh.geometry.setAttribute('instanceQuat', bufferSet.quat[index]);\r\n    mesh.geometry.setAttribute('instanceTailPhase', bufferSet.tailPhase[index]);\r\n    mesh.geometry.setAttribute('instanceTailParams', bufferSet.tailParams[index]);\r\n  }\r\n\r\n  createTailPhaseArray(count) {\r\n    const array = new Float32Array(count);\r\n    for (let i = 0; i < count; i++) {\r\n      array[i] = Math.random() * Math.PI * 2;\r\n    }\r\n    return array;\r\n  }\r\n\r\n  applyTailPhaseSeeds(bufferSet, seeds) {\r\n    if (!bufferSet?.tailPhase) return;\r\n    for (const attr of bufferSet.tailPhase) {\r\n      attr.array.set(seeds);\r\n      attr.needsUpdate = true;\r\n    }\r\n  }\r\n\r\n  ensureTailRuntimeBuffers(count) {\r\n    const targetLength = count * 3;\r\n    if (!this.previousVelocities || this.previousVelocities.length !== targetLength) {\r\n      this.previousVelocities = new Float32Array(targetLength);\r\n    }\r\n  }\r\n\r\n  ensureLodFlagBuffer(count) {\r\n    if (count <= 0) {\r\n      this.previousLodFlags = null;\r\n      return null;\r\n    }\r\n    if (!this.previousLodFlags || this.previousLodFlags.length !== count) {\r\n      this.previousLodFlags = new Uint8Array(count);\r\n    }\r\n    return this.previousLodFlags;\r\n  }\r\n\r\n  ensureBodyCoordAttribute(geometry) {\r\n    if (geometry.getAttribute('aBodyCoord')) return;\r\n    const position = geometry.getAttribute('position');\r\n    if (!position) return;\r\n\r\n    const count = position.count;\r\n    const array = position.array;\r\n    let minX = Infinity;\r\n    let minY = Infinity;\r\n    let minZ = Infinity;\r\n    let maxX = -Infinity;\r\n    let maxY = -Infinity;\r\n    let maxZ = -Infinity;\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      const ix = i * 3;\r\n      const x = array[ix];\r\n      const y = array[ix + 1];\r\n      const z = array[ix + 2];\r\n      if (x < minX) minX = x;\r\n      if (x > maxX) maxX = x;\r\n      if (y < minY) minY = y;\r\n      if (y > maxY) maxY = y;\r\n      if (z < minZ) minZ = z;\r\n      if (z > maxZ) maxZ = z;\r\n    }\r\n\r\n    const rangeX = maxX - minX;\r\n    const rangeY = maxY - minY;\r\n    const rangeZ = maxZ - minZ;\r\n\r\n    let axis = 'z';\r\n    let min = minZ;\r\n    let range = rangeZ;\r\n    if (rangeX > rangeY && rangeX > rangeZ) {\r\n      axis = 'x';\r\n      min = minX;\r\n      range = rangeX;\r\n    } else if (rangeY > rangeZ) {\r\n      axis = 'y';\r\n      min = minY;\r\n      range = rangeY;\r\n    }\r\n\r\n    const bodyCoord = new Float32Array(count);\r\n    const denom = range > 0 ? range : 1;\r\n    for (let i = 0; i < count; i++) {\r\n      const ix = i * 3;\r\n      const value = axis === 'x' ? array[ix] : axis === 'y' ? array[ix + 1] : array[ix + 2];\r\n      bodyCoord[i] = (value - min) / denom;\r\n    }\r\n\r\n    // 魚体長に沿った 0-1 の指標を埋め込むことで尾びれアニメの重み付けを制御\r\n    geometry.setAttribute('aBodyCoord', new THREE.BufferAttribute(bodyCoord, 1));\r\n  }\r\n\r\n  ensurePredatorMeshes(count) {\r\n    if (!this.scene || !this.predatorModel) return false;\r\n\r\n    const target = Math.max(0, count);\r\n    while (this.predatorMeshes.length > target) {\r\n      const mesh = this.predatorMeshes.pop();\r\n      if (mesh) {\r\n        this.scene.remove(mesh);\r\n      }\r\n    }\r\n\r\n    while (this.predatorMeshes.length < target) {\r\n      const clone = this.predatorModel.clone(true);\r\n      clone.traverse((child) => {\r\n        if (child.isMesh) {\r\n          child.castShadow = true;\r\n          child.receiveShadow = true;\r\n        }\r\n      });\r\n      clone.visible = false;\r\n      this.scene.add(clone);\r\n      this.predatorMeshes.push(clone);\r\n    }\r\n    return this.predatorMeshes.length === target;\r\n  }\r\n\r\n  dispose(scene = this.scene) {\r\n    if (this.instancedMeshHigh) {\r\n      scene?.remove(this.instancedMeshHigh);\r\n      this.instancedMeshHigh.geometry?.dispose?.();\r\n      this.instancedMeshHigh.material?.dispose?.();\r\n      this.instancedMeshHigh = null;\r\n    }\r\n    if (this.instancedMeshLow) {\r\n      scene?.remove(this.instancedMeshLow);\r\n      this.instancedMeshLow.geometry?.dispose?.();\r\n      this.instancedMeshLow.material?.dispose?.();\r\n      this.instancedMeshLow = null;\r\n    }\r\n    if (scene) {\r\n      for (const mesh of this.predatorMeshes) {\r\n        scene.remove(mesh);\r\n      }\r\n    }\r\n    this.instancingMaterials.clear();\r\n    this.bufferSetHigh = null;\r\n    this.bufferSetLow = null;\r\n    this.tailPhaseSeeds = null;\r\n    this.bufferCursor = 0;\r\n    this.previousVelocities = null;\r\n    this.previousLodFlags = null;\r\n    this.predatorMeshes = [];\r\n    this.predatorMeshCountCache = -1;\r\n    this.scene = scene ?? null;\r\n    this.count = 0;\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\r\nimport { SSAOPass } from 'three/examples/jsm/postprocessing/SSAOPass.js';\r\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js';\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js';\r\n\r\n/**\r\n * フォグやポストプロセスのセットアップを担当。\r\n * Three.js の EffectComposer をまとめて初期化し、フォグ用シェーダーへ\r\n * 深度テクスチャを受け渡す責務を持ちます。\r\n */\r\nexport class FogPipeline {\r\n  constructor(fogConfig) {\r\n    this.config = fogConfig;\r\n    this.composer = null;\r\n    this.heightFogPass = null;\r\n    this.heightFogRenderTarget = null;\r\n    this.renderer = null;\r\n    this.scene = null;\r\n    this.camera = null;\r\n  }\r\n\r\n  /** HeightFog 用の ShaderPass を返します。 */\r\n  get heightFog() {\r\n    return this.heightFogPass;\r\n  }\r\n\r\n  /**\r\n   * レンダラ・シーン・カメラからポストプロセスチェーンを初期化。\r\n   * レンダリング結果 + 深度テクスチャを HeightFogShader に渡します。\r\n   */\r\n  init(renderer, scene, camera, width, height) {\r\n    if (!renderer || !scene || !camera) {\r\n      console.warn('FogPipeline.init: renderer / scene / camera が未設定です');\r\n      return;\r\n    }\r\n\r\n    this.dispose();\r\n\r\n    this.renderer = renderer;\r\n    this.scene = scene;\r\n    this.camera = camera;\r\n\r\n    // 深度テクスチャ付きのターゲットを確保し、fog パスへ共有する\r\n    const rtOptions = { depthBuffer: true, stencilBuffer: false };\r\n    this.heightFogRenderTarget = new THREE.WebGLRenderTarget(width, height, rtOptions);\r\n    this.heightFogRenderTarget.depthTexture = new THREE.DepthTexture(width, height, THREE.FloatType);\r\n    this.heightFogRenderTarget.depthTexture.format = THREE.DepthFormat;\r\n    this.heightFogRenderTarget.depthTexture.type = THREE.FloatType;\r\n    this.heightFogRenderTarget.depthTexture.needsUpdate = true;\r\n\r\n    this.composer = new EffectComposer(renderer, this.heightFogRenderTarget);\r\n\r\n    // ベースとなるレンダリング結果を取得\r\n    const renderPass = new RenderPass(scene, camera);\r\n    this.composer.addPass(renderPass);\r\n\r\n    // 環境の陰影を補強する SSAO\r\n    const ssaoPass = new SSAOPass(scene, camera, width, height);\r\n    ssaoPass.kernelRadius = 5;     // サンプル半径（大きいほど広範囲な AO）\r\n    ssaoPass.minDistance = 0.01;   // オクルージョン開始距離\r\n    ssaoPass.maxDistance = 0.3;    // 影響を与える最大距離\r\n    this.composer.addPass(ssaoPass);\r\n\r\n    // ハイライトを強調するブルーム\r\n    const bloomStrength = 1.5;   // ブルームの強さ\r\n    const bloomRadius = 0.4;     // 発光の広がり\r\n    const bloomThreshold = 0.85; // ブルームを適用する輝度\r\n    const bloomPass = new UnrealBloomPass(new THREE.Vector2(width, height), bloomStrength, bloomRadius, bloomThreshold);\r\n    this.composer.addPass(bloomPass);\r\n\r\n    const shader = createHeightFogShader(this.config);\r\n    this.heightFogPass = new ShaderPass(shader);\r\n    // 深度テクスチャを毎フレーム差し替え、霧の密度を距離で制御\r\n    const originalRender = this.heightFogPass.render.bind(this.heightFogPass);\r\n    this.heightFogPass.render = (passRenderer, writeBuffer, readBuffer, deltaTime, maskActive) => {\r\n      if (this.heightFogPass.uniforms.tDepth) {\r\n        const depthTexture = readBuffer?.depthTexture ?? this.heightFogRenderTarget?.depthTexture ?? null;\r\n        if (depthTexture) {\r\n          this.heightFogPass.uniforms.tDepth.value = depthTexture;\r\n        }\r\n      }\r\n      originalRender(passRenderer, writeBuffer, readBuffer, deltaTime, maskActive);\r\n    };\r\n    this.heightFogPass.needsSwap = false;\r\n    this.heightFogPass.uniforms.tDepth.value = this.heightFogRenderTarget.depthTexture;\r\n\r\n    applyFogConfigToUniforms(this.heightFogPass.uniforms, this.config);\r\n\r\n    const material = this.heightFogPass.material;\r\n    if (material) {\r\n      material.depthTest = false;\r\n      material.depthWrite = false;\r\n      material.transparent = false;\r\n      material.blending = THREE.NoBlending;\r\n      material.toneMapped = true;\r\n      material.needsUpdate = true;\r\n    }\r\n\r\n    this.heightFogPass.renderToScreen = true;\r\n    this.composer.addPass(this.heightFogPass);\r\n  }\r\n\r\n  /** ウィンドウリサイズ時に呼び出してバッファサイズを調整。 */\r\n  resize(width, height) {\r\n    if (!this.composer) {\r\n      return;\r\n    }\r\n    this.composer.setSize(width, height);\r\n    this.heightFogRenderTarget?.setSize(width, height);\r\n  }\r\n\r\n  /** composer を使ってレンダリングするヘルパー。 */\r\n  render(delta) {\r\n    if (!this.composer) {\r\n      return;\r\n    }\r\n    this.composer.render(delta);\r\n  }\r\n\r\n  /** composer が準備できているか確認。 */\r\n  isReady() {\r\n    return !!this.composer;\r\n  }\r\n\r\n  /** カメラ行列やパラメータをフォグシェーダーへ転送。 */\r\n  updateCameraUniforms(camera) {\r\n    const pass = this.heightFogPass;\r\n    const targetCamera = camera || this.camera;\r\n    if (!pass || !targetCamera) {\r\n      return;\r\n    }\r\n    const { uniforms } = pass;\r\n    if (uniforms.cameraNear) {\r\n      uniforms.cameraNear.value = targetCamera.near;\r\n    }\r\n    if (uniforms.cameraFar) {\r\n      uniforms.cameraFar.value = targetCamera.far;\r\n    }\r\n    if (uniforms.projectionMatrixInverse?.value) {\r\n      uniforms.projectionMatrixInverse.value.copy(targetCamera.projectionMatrixInverse);\r\n    }\r\n    if (uniforms.cameraMatrixWorld?.value) {\r\n      uniforms.cameraMatrixWorld.value.copy(targetCamera.matrixWorld);\r\n    }\r\n  }\r\n\r\n  /** フォグ設定を更新し、シェーダーのユニフォームへ反映。 */\r\n  updateConfig(nextConfig = {}) {\r\n    this.config = { ...this.config, ...nextConfig };\r\n    if (!this.heightFogPass) {\r\n      return;\r\n    }\r\n    applyFogConfigToUniforms(this.heightFogPass.uniforms, this.config);\r\n  }\r\n\r\n  /** リソース解放。 */\r\n  dispose() {\r\n    this.heightFogPass = null;\r\n    this.composer?.dispose?.();\r\n    this.composer = null;\r\n    this.heightFogRenderTarget?.dispose?.();\r\n    this.heightFogRenderTarget = null;\r\n    this.renderer = null;\r\n    this.scene = null;\r\n    this.camera = null;\r\n  }\r\n}\r\n\r\n/**\r\n * HeightFogShader 定義をそのまま移植するためのプレースホルダ。\r\n */\r\nexport function createHeightFogShader(config = {}) {\r\n  const defaults = buildFogDefaults();\r\n  const finalConfig = { ...defaults, ...config };\r\n\r\n  return {\r\n    uniforms: {\r\n      tDiffuse: { value: null },\r\n      tDepth: { value: null },\r\n      cameraNear: { value: 0.1 },\r\n      cameraFar: { value: 1000 },\r\n      projectionMatrixInverse: { value: new THREE.Matrix4() },\r\n      cameraMatrixWorld: { value: new THREE.Matrix4() },\r\n      fogColor: { value: cloneColor(finalConfig.color) },                     // 霧の色\r\n      distanceStart: { value: finalConfig.distanceStart },                   // 距離フォグ開始位置\r\n      distanceEnd: { value: finalConfig.distanceEnd },                       // 距離フォグ最大濃度距離\r\n      distanceExponent: { value: finalConfig.distanceExponent },             // 距離カーブの鋭さ\r\n      distanceControlPoint1: { value: cloneVector2(finalConfig.distanceControlPoint1) }, // ベジェ制御点1\r\n      distanceControlPoint2: { value: cloneVector2(finalConfig.distanceControlPoint2) }, // ベジェ制御点2\r\n      surfaceLevel: { value: finalConfig.surfaceLevel },                     // 水面高さ（y）\r\n      heightFalloff: { value: finalConfig.heightFalloff },                   // 深度減衰率\r\n      heightExponent: { value: finalConfig.heightExponent },                 // 深度カーブの鋭さ\r\n      maxOpacity: { value: finalConfig.maxOpacity },                         // 霧の最大不透明度\r\n    },\r\n    vertexShader: /* glsl */`\r\n    varying vec2 vUv;\r\n    void main() {\r\n      vUv = uv;\r\n      gl_Position = vec4(position.xy, 0.0, 1.0);\r\n    }\r\n  `,\r\n    fragmentShader: /* glsl */`\r\n    precision highp float;\r\n    varying vec2 vUv;\r\n\r\n    uniform sampler2D tDiffuse;\r\n    uniform sampler2D tDepth;\r\n    uniform float cameraNear;\r\n    uniform float cameraFar;\r\n    uniform vec3 fogColor;\r\n    uniform float distanceStart;\r\n    uniform float distanceEnd;\r\n    uniform float distanceExponent;\r\n    uniform vec2 distanceControlPoint1;\r\n    uniform vec2 distanceControlPoint2;\r\n    uniform float surfaceLevel;\r\n    uniform float heightFalloff;\r\n    uniform float heightExponent;\r\n    uniform float maxOpacity;\r\n    uniform mat4 projectionMatrixInverse;\r\n    uniform mat4 cameraMatrixWorld;\r\n\r\n    float cubicBezier1D(float t, float p0, float p1, float p2, float p3) {\r\n      float u = 1.0 - t;\r\n      float uu = u * u;\r\n      float tt = t * t;\r\n      return u * uu * p0 + 3.0 * uu * t * p1 + 3.0 * u * tt * p2 + tt * t * p3;\r\n    }\r\n\r\n    float cubicBezierDerivative1D(float t, float p0, float p1, float p2, float p3) {\r\n      float u = 1.0 - t;\r\n      return 3.0 * u * u * (p1 - p0)\r\n           + 6.0 * u * t * (p2 - p1)\r\n           + 3.0 * t * t * (p3 - p2);\r\n    }\r\n\r\n    float cubicBezierInverse(float x, vec2 c1, vec2 c2) {\r\n      float t = clamp(x, 0.0, 1.0);\r\n      for (int i = 0; i < 5; i++) {\r\n        float current = cubicBezier1D(t, 0.0, c1.x, c2.x, 1.0) - x;\r\n        float slope = cubicBezierDerivative1D(t, 0.0, c1.x, c2.x, 1.0);\r\n        if (abs(slope) < 1e-5) {\r\n          break;\r\n        }\r\n        t -= current / slope;\r\n        t = clamp(t, 0.0, 1.0);\r\n      }\r\n      return t;\r\n    }\r\n\r\n    float sampleDistanceCurve(float x, vec2 c1, vec2 c2) {\r\n      float t = cubicBezierInverse(x, c1, c2);\r\n      return cubicBezier1D(t, 0.0, c1.y, c2.y, 1.0);\r\n    }\r\n\r\n    void main() {\r\n      vec4 baseColor = texture2D(tDiffuse, vUv);\r\n      float depth = texture2D(tDepth, vUv).x;\r\n\r\n      if (depth >= 1.0) {\r\n        gl_FragColor = baseColor;\r\n        return;\r\n      }\r\n\r\n      vec2 ndc = vUv * 2.0 - 1.0;\r\n      float ndcZ = depth * 2.0 - 1.0;\r\n      vec4 clipPos = vec4(ndc, ndcZ, 1.0);\r\n      vec4 viewPos = projectionMatrixInverse * clipPos;\r\n      viewPos /= max(viewPos.w, 1e-5);\r\n      vec4 worldPos = cameraMatrixWorld * viewPos;\r\n\r\n      float viewDistance = length(viewPos.xyz);\r\n      float distanceFogNorm = clamp(\r\n        (viewDistance - distanceStart) / max(distanceEnd - distanceStart, 1e-5),\r\n        0.0,\r\n        1.0\r\n      );\r\n      float distanceFog = sampleDistanceCurve(distanceFogNorm, distanceControlPoint1, distanceControlPoint2);\r\n      distanceFog = pow(distanceFog, distanceExponent);\r\n\r\n      float depthBelowSurface = max(surfaceLevel - worldPos.y, 0.0);\r\n      float heightFactor = 1.0 - exp(-depthBelowSurface * heightFalloff);\r\n      heightFactor = clamp(pow(heightFactor, heightExponent), 0.0, 1.0);\r\n\r\n      float fogFactor = clamp(distanceFog * heightFactor, 0.0, 1.0);\r\n      fogFactor = mix(0.0, maxOpacity, fogFactor);\r\n\r\n      vec3 fogged = mix(baseColor.rgb, fogColor, fogFactor);\r\n      gl_FragColor = vec4(fogged, baseColor.a);\r\n      #include <tonemapping_fragment>\r\n      #include <colorspace_fragment>\r\n    }\r\n  `,\r\n  };\r\n}\r\n\r\nexport const HeightFogShader = createHeightFogShader();\r\n\r\nfunction buildFogDefaults() {\r\n  return {\r\n    color: new THREE.Color('#153a6c'),                // 霧の基本色\r\n    distanceStart: 4,                                 // カメラからこの距離でフォグ開始\r\n    distanceEnd: 60,                                  // この距離でフォグが最大\r\n    distanceExponent: 0.4,                            // 距離カーブの緩急\r\n    distanceControlPoint1: new THREE.Vector2(0.4, 0.75), // ベジェ制御点（開始側）\r\n    distanceControlPoint2: new THREE.Vector2(0.75, 0.95), // ベジェ制御点（終端側）\r\n    surfaceLevel: 100,                                // 海面の World Y 値\r\n    heightFalloff: 0.01,                              // 深度方向の減衰係数\r\n    heightExponent: 1,                                // 深度カーブの鋭さ\r\n    maxOpacity: 1,                                    // 霧の上限不透明度\r\n  };\r\n}\r\n\r\nfunction cloneColor(value) {\r\n  if (value instanceof THREE.Color) {\r\n    return value.clone();\r\n  }\r\n  if (typeof value === 'string' || typeof value === 'number') {\r\n    return new THREE.Color(value);\r\n  }\r\n  return new THREE.Color('#000000');\r\n}\r\n\r\nfunction cloneVector2(value) {\r\n  if (value instanceof THREE.Vector2) {\r\n    return value.clone();\r\n  }\r\n  if (value && typeof value.x === 'number' && typeof value.y === 'number') {\r\n    return new THREE.Vector2(value.x, value.y);\r\n  }\r\n  return new THREE.Vector2();\r\n}\r\n\r\nfunction applyFogConfigToUniforms(uniforms, config = {}) {\r\n  const defaults = buildFogDefaults();\r\n  const finalConfig = { ...defaults, ...config };\r\n\r\n  if (uniforms.fogColor?.value) {\r\n    uniforms.fogColor.value.copy(cloneColor(finalConfig.color));\r\n  }\r\n  if (uniforms.distanceStart) {\r\n    uniforms.distanceStart.value = finalConfig.distanceStart;\r\n  }\r\n  if (uniforms.distanceEnd) {\r\n    uniforms.distanceEnd.value = finalConfig.distanceEnd;\r\n  }\r\n  if (uniforms.distanceExponent) {\r\n    uniforms.distanceExponent.value = finalConfig.distanceExponent;\r\n  }\r\n  if (uniforms.distanceControlPoint1?.value) {\r\n    uniforms.distanceControlPoint1.value.copy(cloneVector2(finalConfig.distanceControlPoint1));\r\n  }\r\n  if (uniforms.distanceControlPoint2?.value) {\r\n    uniforms.distanceControlPoint2.value.copy(cloneVector2(finalConfig.distanceControlPoint2));\r\n  }\r\n  if (uniforms.surfaceLevel) {\r\n    uniforms.surfaceLevel.value = finalConfig.surfaceLevel;\r\n  }\r\n  if (uniforms.heightFalloff) {\r\n    uniforms.heightFalloff.value = finalConfig.heightFalloff;\r\n  }\r\n  if (uniforms.heightExponent) {\r\n    uniforms.heightExponent.value = finalConfig.heightExponent;\r\n  }\r\n  if (uniforms.maxOpacity) {\r\n    uniforms.maxOpacity.value = finalConfig.maxOpacity;\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\n\r\n// 粒子帯の初期広がり（XYZ）: モバイルは控えめにして描画負荷を抑える\r\nconst PARTICLE_BASE_SPREAD_DESKTOP = new THREE.Vector3(24, 12, 26);\r\nconst PARTICLE_BASE_SPREAD_MOBILE = new THREE.Vector3(16, 9, 18);\r\n// 粒子が描画対象となる最大距離: 広がりから導出\r\nconst PARTICLE_BASE_MAX_DISTANCE_DESKTOP = PARTICLE_BASE_SPREAD_DESKTOP.z * 1.2;\r\nconst PARTICLE_BASE_MAX_DISTANCE_MOBILE = PARTICLE_BASE_SPREAD_MOBILE.z * 1.2;\r\n// ワールド基底（流れ方向および左右上下の初期値）\r\nconst DEFAULT_FLOW_DIR = new THREE.Vector3(1, 0, 0);\r\nconst DEFAULT_LAT1 = new THREE.Vector3(0, 0, 1);\r\nconst DEFAULT_LAT2 = new THREE.Vector3(0, 1, 0);\r\n\r\n// 頻度の高い計算で毎回 new しないようにモジュールスコープで共有\r\nconst TEMP_DIR = new THREE.Vector3();\r\nconst TEMP_AXIS = new THREE.Vector3();\r\nconst TEMP_LAT1 = new THREE.Vector3();\r\nconst TEMP_LAT2 = new THREE.Vector3();\r\n\r\n/**\r\n * 軽量パーティクルシステムを司るヘルパークラス。\r\n * App.vue から init/update/dispose を呼び出し、内部で Three.js の Points を管理します。\r\n */\r\nexport class ParticleField {\r\n  constructor(isMobileDevice) {\r\n    this.isMobileDevice = Boolean(isMobileDevice);\r\n    this.scene = null;\r\n    this.renderer = null;\r\n    this.camera = null;\r\n    this.controls = null;\r\n\r\n    this.particlePoints = null;\r\n    this.particleMaterial = null;\r\n    this.elapsedTime = 0;\r\n  }\r\n\r\n  /**\r\n   * Three.js のシーンとカメラ、コントロール類を受け取りパーティクルを初期化します。\r\n   */\r\n  init(scene, renderer, camera, controls) {\r\n    if (!scene || !renderer?.capabilities?.isWebGL2) {\r\n      console.warn('Skipping particle system: WebGL2 required.');\r\n      return false;\r\n    }\r\n\r\n    this.dispose(scene);\r\n\r\n    this.scene = scene;\r\n    this.renderer = renderer;\r\n    this.camera = camera;\r\n    this.controls = controls;\r\n    this.elapsedTime = 0;\r\n\r\n    const count = this.isMobileDevice ? 800 : 2000; // 端末の性能差に合わせて頂点数を抑制\r\n    const geometry = new THREE.BufferGeometry();\r\n    geometry.setAttribute('position', new THREE.BufferAttribute(new Float32Array(count * 3), 3));\r\n    geometry.setDrawRange(0, count);\r\n\r\n    const baseSpread = (this.isMobileDevice ? PARTICLE_BASE_SPREAD_MOBILE : PARTICLE_BASE_SPREAD_DESKTOP).clone();\r\n    const baseMaxDistance = this.isMobileDevice ? PARTICLE_BASE_MAX_DISTANCE_MOBILE : PARTICLE_BASE_MAX_DISTANCE_DESKTOP;\r\n\r\n    const material = new THREE.ShaderMaterial({\r\n      glslVersion: THREE.GLSL3,\r\n      transparent: true,\r\n      depthWrite: false,\r\n      depthTest: true,\r\n      blending: THREE.AdditiveBlending,\r\n      uniforms: {\r\n        uTime: { value: 0 }, // 経過時間（CPUから制御）\r\n        uOrigin: { value: new THREE.Vector3() }, // 粒子帯の基準座標（カメラ位置）\r\n        uFlowDir: { value: DEFAULT_FLOW_DIR.clone() }, // 流れ方向の基準ベクトル\r\n        uLat1: { value: DEFAULT_LAT1.clone() }, // 流れに直交するラテラル軸1\r\n        uLat2: { value: DEFAULT_LAT2.clone() }, // 同ラテラル軸2\r\n        uSpread: { value: baseSpread.clone() }, // 粒子の広がり（XYZ スケール）\r\n        uMaxDistance: { value: baseMaxDistance }, // 描画対象とする最大距離\r\n        uBaseSpeed: { value: 0.6 }, // 流れ方向への基本速度倍率\r\n        uJitterAmp: { value: 0.22 }, // ランダム揺らぎの振幅\r\n        uSizePx: { value: this.isMobileDevice ? 5.0 : 12.0 }, // スクリーン上の粒子サイズ（px）\r\n        uFadeNear: { value: 1.5 }, // 手前でフェードアウトを開始する距離\r\n        uFadeFar: { value: 14.0 }, // フェードアウトが完了する距離\r\n        uColorNear: { value: new THREE.Color(0x72a1c4) }, // カメラ近傍の粒子色\r\n        uColorFar: { value: new THREE.Color(0x0a5270) }, // 遠方の粒子色\r\n      },\r\n      vertexShader: PARTICLE_VERTEX_SHADER,\r\n      fragmentShader: PARTICLE_FRAGMENT_SHADER,\r\n    });\r\n\r\n    const baseTargetDistance = controls\r\n      ? camera.position.distanceTo(controls.target)\r\n      : camera.position.length();\r\n    material.userData = {\r\n      baseSpread: baseSpread.clone(),\r\n      baseMaxDistance,\r\n      baseTargetDistance: Math.max(baseTargetDistance, 0.1), // OrbitControls の距離を初期参照距離として記録\r\n    };\r\n\r\n    this.particlePoints = new THREE.Points(geometry, material);\r\n    this.particlePoints.frustumCulled = false;\r\n    this.particlePoints.renderOrder = 2;\r\n    scene.add(this.particlePoints);\r\n\r\n    this.particleMaterial = material;\r\n    this.setWorldBasis(material.uniforms.uFlowDir.value);\r\n    this.update(camera, controls);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * uTime を直接設定します。\r\n   */\r\n  setTime(timeSeconds) {\r\n    this.elapsedTime = timeSeconds ?? this.elapsedTime;\r\n    if (this.particleMaterial?.uniforms?.uTime) {\r\n      this.particleMaterial.uniforms.uTime.value = this.elapsedTime;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 経過時間を加算します。\r\n   */\r\n  advanceTime(deltaSeconds) {\r\n    if (!Number.isFinite(deltaSeconds) || deltaSeconds === 0) {\r\n      return;\r\n    }\r\n    this.elapsedTime += deltaSeconds;\r\n    if (this.particleMaterial?.uniforms?.uTime) {\r\n      this.particleMaterial.uniforms.uTime.value = this.elapsedTime;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * フロー方向から直交基底を生成し、uniform に反映します。\r\n   */\r\n  setWorldBasis(flowDir) {\r\n    if (!this.particleMaterial || !flowDir) {\r\n      return;\r\n    }\r\n\r\n    const dir = TEMP_DIR.copy(flowDir).normalize();\r\n    // 極付近で cross がゼロに近づくのを避けるため適当な補助軸を選ぶ\r\n    const axis = Math.abs(dir.y) < 0.99\r\n      ? TEMP_AXIS.set(0, 1, 0)\r\n      : TEMP_AXIS.set(1, 0, 0);\r\n\r\n    const lat1 = TEMP_LAT1.copy(dir).cross(axis);\r\n    if (lat1.lengthSq() < 1e-6) {\r\n      lat1.set(0, 0, 1);\r\n      lat1.cross(dir);\r\n    }\r\n    lat1.normalize();\r\n\r\n    const lat2 = TEMP_LAT2.copy(dir).cross(lat1).normalize();\r\n\r\n    const uniforms = this.particleMaterial.uniforms;\r\n    uniforms.uFlowDir.value.copy(dir);\r\n    uniforms.uLat1.value.copy(lat1);\r\n    uniforms.uLat2.value.copy(lat2);\r\n  }\r\n\r\n  /**\r\n   * カメラに合わせて uniform を更新します。\r\n   */\r\n  update(camera, controls) {\r\n    const targetCamera = camera || this.camera;\r\n    if (!this.particleMaterial || !targetCamera) {\r\n      return;\r\n    }\r\n\r\n    const uniforms = this.particleMaterial.uniforms;\r\n    uniforms.uOrigin.value.copy(targetCamera.position);\r\n\r\n    const { baseSpread, baseMaxDistance, baseTargetDistance } = this.particleMaterial.userData || {};\r\n    if (!baseSpread || !baseMaxDistance) {\r\n      return;\r\n    }\r\n\r\n    // ズーム時に密度が変化しないよう、常に初期値を適用する\r\n    uniforms.uSpread.value.copy(baseSpread);\r\n    uniforms.uMaxDistance.value = baseMaxDistance;\r\n  }\r\n\r\n  /**\r\n   * シーンからパーティクルオブジェクトを取り除き、GPUリソースを解放します。\r\n   */\r\n  dispose(scene) {\r\n    const targetScene = scene || this.scene;\r\n    if (this.particlePoints && targetScene) {\r\n      targetScene.remove(this.particlePoints);\r\n    }\r\n    this.particlePoints?.geometry?.dispose();\r\n    this.particlePoints?.material?.dispose();\r\n\r\n    this.particlePoints = null;\r\n    this.particleMaterial = null;\r\n    this.scene = null;\r\n    this.renderer = null;\r\n    this.camera = null;\r\n    this.controls = null;\r\n  }\r\n\r\n  /** 現在のマテリアル参照を返します。 */\r\n  getMaterial() {\r\n    return this.particleMaterial;\r\n  }\r\n}\r\n\r\nconst PARTICLE_VERTEX_SHADER = /* glsl */`\r\nprecision highp float;\r\nprecision highp int;\r\n\r\nuniform float uTime;\r\nuniform vec3 uOrigin;\r\nuniform vec3 uFlowDir;\r\nuniform vec3 uLat1;\r\nuniform vec3 uLat2;\r\nuniform vec3 uSpread;\r\nuniform float uMaxDistance;\r\nuniform float uBaseSpeed;\r\nuniform float uJitterAmp;\r\nuniform float uSizePx;\r\nuniform float uFadeNear;\r\nuniform float uFadeFar;\r\n\r\nout float vFade;\r\nout float vColorMix;\r\n\r\nuint hashUint(uint n) {\r\n  n ^= (n << 13);\r\n  n ^= (n >> 17);\r\n  n ^= (n << 5);\r\n  return n * 0x27d4eb2du;\r\n}\r\n\r\nfloat hashFloat(uint n) {\r\n  return float(hashUint(n)) / 4294967296.0;\r\n}\r\n\r\nvec3 hashVec3(uint n) {\r\n  return vec3(\r\n    hashFloat(n),\r\n    hashFloat(n * 1664525u + 1013904223u),\r\n    hashFloat(n * 22695477u + 1u)\r\n  );\r\n}\r\n\r\nvoid main() {\r\n  uint id = uint(gl_VertexID);\r\n  vec3 randSeed = hashVec3(id) - 0.5;\r\n\r\n  vec3 flowDir = normalize(uFlowDir);\r\n  vec3 lateral = uLat1 * (randSeed.x * uSpread.x)\r\n    + uLat2 * (randSeed.y * uSpread.y);\r\n\r\n  float speedSeed = hashFloat(id * 747796405u);\r\n  float speed = uBaseSpeed * (0.7 + 0.6 * speedSeed);\r\n  float flowCycle = max(uSpread.z, 1e-3);\r\n  float flowParam = randSeed.z + (uTime * speed) / flowCycle;\r\n  float wrappedZ = fract(flowParam) - 0.5;\r\n  vec3 pos = uOrigin + lateral + flowDir * (wrappedZ * flowCycle);\r\n\r\n  float phase = hashFloat(id * 1664525u) * 6.28318530718;\r\n  float driftSeed = hashFloat(id * 22695477u);\r\n  float triangle = 1.0 - abs(fract((phase + uTime * (0.8 + 0.4 * driftSeed)) / 3.14159265) * 2.0 - 1.0);\r\n\r\n  vec3 jitter1 = normalize(uLat1);\r\n  vec3 jitter2 = normalize(uLat2);\r\n  pos += jitter1 * ((triangle - 0.5) * uJitterAmp);\r\n  pos += jitter2 * ((hashFloat(id * 1103515245u) - 0.5) * uJitterAmp * 0.6);\r\n\r\n  vec4 mvPosition = modelViewMatrix * vec4(pos, 1.0);\r\n  float dist = -mvPosition.z;\r\n  float forwardMask = step(0.0, dist);\r\n\r\n  vec4 clipPosition = projectionMatrix * mvPosition;\r\n  float invW = 1.0 / max(abs(clipPosition.w), 1e-3);\r\n  vec2 ndc = clipPosition.xy * invW;\r\n\r\n  float screenMask = 1.0 - smoothstep(0.96, 1.16, max(abs(ndc.x), abs(ndc.y)));\r\n  float rangeMask = 1.0 - smoothstep(uMaxDistance * 0.7, uMaxDistance, dist);\r\n\r\n  float fadeT = clamp((dist - uFadeNear) / max(uFadeFar - uFadeNear, 1e-3), 0.0, 1.0);\r\n  float fade = (1.0 - fadeT) * screenMask * rangeMask * forwardMask;\r\n  vFade = fade;\r\n  vColorMix = fade;\r\n\r\n  float sizeBase = uSizePx * projectionMatrix[1][1] / max(dist, 1e-3);\r\n  float attenuatedSize = sizeBase * fade;\r\n  gl_PointSize = max(attenuatedSize, 0.75) * step(0.001, fade);\r\n  gl_Position = clipPosition;\r\n}\r\n`;\r\n\r\nconst PARTICLE_FRAGMENT_SHADER = /* glsl */`\r\nprecision highp float;\r\n\r\nin float vFade;\r\nin float vColorMix;\r\n\r\nuniform vec3 uColorNear;\r\nuniform vec3 uColorFar;\r\n\r\nout vec4 fragColor;\r\n\r\nvoid main() {\r\n  vec2 coord = gl_PointCoord - vec2(0.5);\r\n  float falloff = exp(-8.0 * dot(coord, coord));\r\n  float alpha = vFade * falloff * 0.6;\r\n  if (alpha < 0.004) {\r\n    discard;\r\n  }\r\n  vec3 color = mix(uColorFar, uColorNear, vColorMix);\r\n  fragColor = vec4(color, alpha);\r\n}\r\n`;\r\n","/**\r\n * WASM モジュールとのやり取りをまとめるラッパークラス。\r\n * Vue レイヤーでの wasm 呼び出しを一元化し、ポインタのキャッシュと\r\n * DataView の再利用で GC 負荷を抑えます。\r\n */\r\nexport class WasmtimeBridge {\r\n  constructor(wasmModule) {\r\n    if (!wasmModule) {\r\n      throw new Error('WasmtimeBridge: wasmModule が未定義です');\r\n    }\r\n\r\n    this.wasm = wasmModule;\r\n    this.latestStatePtr = 0;\r\n    this.latestStateHeaderPtr = 0;\r\n    this.latestStateHeaderView = null;\r\n    this.latestPositionsPtr = 0;\r\n    this.latestVelocitiesPtr = 0;\r\n    this.latestOrientationsPtr = 0;\r\n    this.latestBoidCount = 0;\r\n\r\n    this.cachedHeapBuffer = null;\r\n    this.cachedPositionsPtr = 0;\r\n    this.cachedOrientationsPtr = 0;\r\n    this.cachedVelocitiesPtr = 0;\r\n    this.cachedSpeciesIdsPtr = 0;\r\n    this.cachedPositionsView = null;\r\n    this.cachedOrientationsView = null;\r\n    this.cachedVelocitiesView = null;\r\n    this.cachedSpeciesIdsView = null;\r\n    this.cachedPositionsCount = 0;\r\n    this.cachedOrientationsCount = 0;\r\n    this.cachedVelocitiesCount = 0;\r\n    this.cachedSpeciesIdsCount = 0;\r\n    this.cachedSpeciesIdsBuffer = null;\r\n\r\n    // cwrap された wasm 関数を遅延束縛で保持\r\n    this.stepSimulationHandle = this.createWrappedFunction('stepSimulation', 'number', ['number']);\r\n    this.buildHandle = this.createWrappedFunction('build', 'void', ['number', 'number']);\r\n    this.exportTreeStructureHandle = this.createWrappedFunction('exportTreeStructure', 'object', []);\r\n    this.boidUnitMappingPtrHandle = this.createWrappedFunction('boidUnitMappingPtr', 'number', []);\r\n    this.currentFirstBoidXHandle = this.createWrappedFunction('currentFirstBoidX', 'number', []);\r\n    this.speciesIdsPtrHandle = this.createWrappedFunction('speciesIdsPtr', 'number', []);\r\n    this.syncReadToWriteBuffersHandle = this.createWrappedFunction('syncReadToWriteBuffers', 'void', []);\r\n    this.getSimulationTuningParamsHandle = this.createWrappedFunction('getSimulationTuningParams', 'object', []);\r\n    this.setSimulationTuningParamsHandle = this.createWrappedFunction('setSimulationTuningParams', 'void', ['object']);\r\n  }\r\n\r\n  getSimulationTuningParams() {\r\n    if (!this.wasm) {\r\n      return null;\r\n    }\r\n    const handle = this.ensureHandle(this.getSimulationTuningParamsHandle, 'getSimulationTuningParams');\r\n    return handle ? handle() : null;\r\n  }\r\n\r\n  setSimulationTuningParams(params) {\r\n    if (!this.wasm) {\r\n      return;\r\n    }\r\n    const handle = this.ensureHandle(this.setSimulationTuningParamsHandle, 'setSimulationTuningParams');\r\n    if (!handle || !params) {\r\n      return;\r\n    }\r\n    const toNumber = (value, fallback) => {\r\n      const num = Number(value);\r\n      return Number.isFinite(num) ? num : fallback;\r\n    };\r\n    handle({\r\n      threatDecay: toNumber(params.threatDecay, 0.5),\r\n      threatGain: toNumber(params.threatGain, 2.0),\r\n      maxEscapeWeight: toNumber(params.maxEscapeWeight, 1.0),\r\n      baseEscapeStrength: toNumber(params.baseEscapeStrength, 3.0),\r\n      escapeStrengthPerThreat: toNumber(params.escapeStrengthPerThreat, 10.0),\r\n      cohesionBoost: toNumber(params.cohesionBoost, 2.0),\r\n      separationMinFactor: toNumber(params.separationMinFactor, 1.0),\r\n      alignmentBoost: toNumber(params.alignmentBoost, 1.2),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 種族設定から wasm に渡すベクタを生成。\r\n   * App.vue::createSpeciesParamsVector を移植してください。\r\n   */\r\n  buildSpeciesParams(settings) {\r\n    if (!Array.isArray(settings)) {\r\n      return null;\r\n    }\r\n\r\n    // wasm 側の VectorSpeciesParams を生成し、一件ずつ型を整えて push\r\n    const vector = new this.wasm.VectorSpeciesParams();\r\n    settings.forEach((raw, index) => {\r\n      if (!raw) {\r\n        return;\r\n      }\r\n\r\n      const toNumber = (value, fallback = 0) => {\r\n        const num = Number(value);\r\n        return Number.isFinite(num) ? num : fallback;\r\n      };\r\n\r\n      vector.push_back({\r\n        species: typeof raw.species === 'string' ? raw.species : `Species ${index + 1}`,\r\n        count: Math.max(0, Math.floor(toNumber(raw.count, 0))),\r\n        speciesId: Math.max(0, Math.floor(toNumber(raw.speciesId, index))),\r\n        cohesion: toNumber(raw.cohesion, 0),\r\n        separation: toNumber(raw.separation, 0),\r\n        alignment: toNumber(raw.alignment, 0),\r\n        maxSpeed: toNumber(raw.maxSpeed, 1),\r\n        minSpeed: toNumber(raw.minSpeed, 0),\r\n        maxTurnAngle: toNumber(raw.maxTurnAngle, 0),\r\n        separationRange: toNumber(raw.separationRange, 0),\r\n        alignmentRange: toNumber(raw.alignmentRange, 0),\r\n        cohesionRange: toNumber(raw.cohesionRange, 0),\r\n        maxNeighbors: Math.max(0, Math.floor(toNumber(raw.maxNeighbors, 0))),\r\n        lambda: toNumber(raw.lambda, 0),\r\n        tau: toNumber(raw.tau, 0),\r\n        horizontalTorque: toNumber(raw.horizontalTorque, 0),\r\n        velocityEpsilon: toNumber(raw.velocityEpsilon, 0.0001),\r\n        torqueStrength: toNumber(raw.torqueStrength, 0),\r\n        // 形状パラメータは省略された場合もデフォルト値で補完しておく。\r\n        bodyHeadLength: toNumber(raw.bodyHeadLength, -0.15),\r\n        bodyTailLength: toNumber(raw.bodyTailLength, 0.33),\r\n        bodyRadius: toNumber(raw.bodyRadius, 0.035),\r\n        predatorAlertRadius: toNumber(raw.predatorAlertRadius, 1.0),\r\n        isPredator: Boolean(raw.isPredator),\r\n      });\r\n    });\r\n    return vector;\r\n  }\r\n\r\n  /**\r\n   * シミュレーションを 1 ステップ進めて最新ポインタを更新します。\r\n   * App.vue::stepSimulationAndUpdateState を移植。\r\n   */\r\n  stepSimulation(deltaTime) {\r\n    const handle = this.ensureHandle(this.stepSimulationHandle, 'stepSimulation');\r\n\r\n    const { wasm } = this;\r\n    const dt = Number.isFinite(deltaTime) ? deltaTime : 0;\r\n    const statePtr = handle(dt);\r\n    if (!statePtr) {\r\n      this.latestStatePtr = 0;\r\n      this.latestStateHeaderPtr = 0;\r\n      this.latestPositionsPtr = 0;\r\n      this.latestVelocitiesPtr = 0;\r\n      this.latestOrientationsPtr = 0;\r\n      this.latestStateHeaderView = null;\r\n      this.latestBoidCount = 0;\r\n      return 0;\r\n    }\r\n\r\n    const heapU8Buffer = wasm.HEAPU8.buffer;\r\n    if (\r\n      !this.latestStateHeaderView ||\r\n      this.latestStateHeaderPtr !== statePtr ||\r\n      this.latestStateHeaderView.buffer !== heapU8Buffer\r\n    ) {\r\n      this.latestStateHeaderView = new DataView(heapU8Buffer, statePtr, 16);\r\n      this.latestStateHeaderPtr = statePtr;\r\n    }\r\n\r\n    this.latestStatePtr = statePtr;\r\n    this.latestPositionsPtr = this.latestStateHeaderView.getUint32(0, true);\r\n    this.latestVelocitiesPtr = this.latestStateHeaderView.getUint32(4, true);\r\n    this.latestOrientationsPtr = this.latestStateHeaderView.getUint32(8, true);\r\n    this.latestBoidCount = this.latestStateHeaderView.getInt32(12, true);\r\n\r\n    return this.latestBoidCount;\r\n  }\r\n\r\n  /**\r\n   * wasm 側の positions / orientations 等のビューを再利用して返す。\r\n   * buffer が差し替わった場合のみ新しい TypedArray を生成する。\r\n   */\r\n  getBuffers(count) {\r\n    if (!this.wasm) {\r\n      return {\r\n        positions: new Float32Array(0),\r\n        orientations: new Float32Array(0),\r\n        velocities: new Float32Array(0),\r\n        speciesIds: new Int32Array(0),\r\n      };\r\n    }\r\n\r\n    const heapBuffer = this.wasm.HEAPF32.buffer;\r\n    const heapBufferI32 = this.wasm.HEAP32.buffer;\r\n\r\n    if (this.cachedHeapBuffer !== heapBuffer || this.cachedSpeciesIdsBuffer !== heapBufferI32) {\r\n      this.cachedHeapBuffer = heapBuffer;\r\n      this.cachedSpeciesIdsBuffer = heapBufferI32;\r\n      this.cachedPositionsPtr = 0;\r\n      this.cachedOrientationsPtr = 0;\r\n      this.cachedVelocitiesPtr = 0;\r\n      this.cachedSpeciesIdsPtr = 0;\r\n      this.cachedPositionsView = null;\r\n      this.cachedOrientationsView = null;\r\n      this.cachedVelocitiesView = null;\r\n      this.cachedSpeciesIdsView = null;\r\n      this.cachedPositionsCount = 0;\r\n      this.cachedOrientationsCount = 0;\r\n      this.cachedVelocitiesCount = 0;\r\n      this.cachedSpeciesIdsCount = 0;\r\n    }\r\n\r\n    if (!this.latestPositionsPtr || !this.latestOrientationsPtr || !this.latestVelocitiesPtr || count <= 0) {\r\n      return {\r\n        positions: this.cachedPositionsView ?? new Float32Array(0),\r\n        orientations: this.cachedOrientationsView ?? new Float32Array(0),\r\n        velocities: this.cachedVelocitiesView ?? new Float32Array(0),\r\n        speciesIds: this.cachedSpeciesIdsView ?? new Int32Array(0),\r\n      };\r\n    }\r\n\r\n    if (\r\n      this.cachedPositionsView === null ||\r\n      this.cachedPositionsCount !== count ||\r\n      this.cachedPositionsPtr !== this.latestPositionsPtr\r\n    ) {\r\n      this.cachedPositionsPtr = this.latestPositionsPtr;\r\n      this.cachedPositionsView = new Float32Array(heapBuffer, this.cachedPositionsPtr, count * 3);\r\n      this.cachedPositionsCount = count;\r\n    }\r\n\r\n    if (\r\n      this.cachedOrientationsView === null ||\r\n      this.cachedOrientationsCount !== count ||\r\n      this.cachedOrientationsPtr !== this.latestOrientationsPtr\r\n    ) {\r\n      this.cachedOrientationsPtr = this.latestOrientationsPtr;\r\n      this.cachedOrientationsView = new Float32Array(heapBuffer, this.cachedOrientationsPtr, count * 4);\r\n      this.cachedOrientationsCount = count;\r\n    }\r\n\r\n    if (\r\n      this.cachedVelocitiesView === null ||\r\n      this.cachedVelocitiesCount !== count ||\r\n      this.cachedVelocitiesPtr !== this.latestVelocitiesPtr\r\n    ) {\r\n      this.cachedVelocitiesPtr = this.latestVelocitiesPtr;\r\n      this.cachedVelocitiesView = new Float32Array(heapBuffer, this.cachedVelocitiesPtr, count * 3);\r\n      this.cachedVelocitiesCount = count;\r\n    }\r\n\r\n    const speciesPtr = typeof this.speciesIdsPtrHandle === 'function' ? this.speciesIdsPtrHandle() : 0;\r\n    if (\r\n      speciesPtr && (\r\n        this.cachedSpeciesIdsView === null ||\r\n        this.cachedSpeciesIdsPtr !== speciesPtr ||\r\n        this.cachedSpeciesIdsCount !== count ||\r\n        this.cachedSpeciesIdsBuffer !== heapBufferI32\r\n      )\r\n    ) {\r\n      this.cachedSpeciesIdsPtr = speciesPtr;\r\n      this.cachedSpeciesIdsCount = count;\r\n      this.cachedSpeciesIdsBuffer = heapBufferI32;\r\n      this.cachedSpeciesIdsView = new Int32Array(heapBufferI32, speciesPtr, count);\r\n    }\r\n\r\n    return {\r\n      positions: this.cachedPositionsView,\r\n      orientations: this.cachedOrientationsView,\r\n      velocities: this.cachedVelocitiesView,\r\n      speciesIds: this.cachedSpeciesIdsView,\r\n    };\r\n  }\r\n\r\n  /** wasm の triple buffer から現状態をコピーしてスナップショットを作る */\r\n  captureState() {\r\n    if (!this.wasm) {\r\n      return null;\r\n    }\r\n\r\n    const currentCount = this.stepSimulation(0);\r\n    if (!currentCount || currentCount <= 0) {\r\n      return { count: 0 };\r\n    }\r\n\r\n    const { positions, velocities, orientations, speciesIds } = this.getBuffers(currentCount);\r\n\r\n    return {\r\n      count: currentCount,\r\n      positions: positions ? new Float32Array(positions) : null,\r\n      velocities: velocities ? new Float32Array(velocities) : null,\r\n      orientations: orientations ? new Float32Array(orientations) : null,\r\n      speciesIds: speciesIds ? new Int32Array(speciesIds) : null,\r\n    };\r\n  }\r\n\r\n  /** 過去の状態を復元。restoreFlockState を移植。 */\r\n  /** 過去のスナップショットを現在のバッファへ復元する */\r\n  restoreState(previousState, oldSettings, newSettings) {\r\n    if (!previousState || previousState.count <= 0) {\r\n      return;\r\n    }\r\n\r\n    const currentCount = this.stepSimulation(0);\r\n    if (!currentCount || currentCount <= 0) {\r\n      return;\r\n    }\r\n\r\n    const { positions, velocities, orientations } = this.getBuffers(currentCount);\r\n    if (!positions || !velocities || !orientations) {\r\n      return;\r\n    }\r\n\r\n    const prevPositions = previousState.positions;\r\n    const prevVelocities = previousState.velocities;\r\n    const prevOrientations = previousState.orientations;\r\n\r\n    const oldRanges = buildSpeciesRanges(oldSettings);\r\n    const newRanges = buildSpeciesRanges(newSettings);\r\n    const oldRangeMap = new Map(oldRanges.map((info) => [info.name, info]));\r\n\r\n    let restored = 0;\r\n\r\n    for (const newInfo of newRanges) {\r\n      if (!newInfo.count) continue;\r\n      const oldInfo = oldRangeMap.get(newInfo.name);\r\n      if (!oldInfo || !oldInfo.count) continue;\r\n\r\n      const transferable = Math.min(oldInfo.count, newInfo.count);\r\n      for (let i = 0; i < transferable; i += 1) {\r\n        const srcIndex = oldInfo.start + i;\r\n        const dstIndex = newInfo.start + i;\r\n        if (srcIndex >= previousState.count || dstIndex >= currentCount) {\r\n          break;\r\n        }\r\n\r\n        if (prevPositions) {\r\n          const srcPosBase = srcIndex * 3;\r\n          const dstPosBase = dstIndex * 3;\r\n          positions[dstPosBase] = prevPositions[srcPosBase];\r\n          positions[dstPosBase + 1] = prevPositions[srcPosBase + 1];\r\n          positions[dstPosBase + 2] = prevPositions[srcPosBase + 2];\r\n        }\r\n\r\n        if (prevVelocities) {\r\n          const srcVelBase = srcIndex * 3;\r\n          const dstVelBase = dstIndex * 3;\r\n          velocities[dstVelBase] = prevVelocities[srcVelBase];\r\n          velocities[dstVelBase + 1] = prevVelocities[srcVelBase + 1];\r\n          velocities[dstVelBase + 2] = prevVelocities[srcVelBase + 2];\r\n        }\r\n\r\n        if (prevOrientations) {\r\n          const srcOriBase = srcIndex * 4;\r\n          const dstOriBase = dstIndex * 4;\r\n          orientations[dstOriBase] = prevOrientations[srcOriBase];\r\n          orientations[dstOriBase + 1] = prevOrientations[srcOriBase + 1];\r\n          orientations[dstOriBase + 2] = prevOrientations[srcOriBase + 2];\r\n          orientations[dstOriBase + 3] = prevOrientations[srcOriBase + 3];\r\n        }\r\n        restored += 1;\r\n      }\r\n    }\r\n\r\n    if (restored > 0) {\r\n      this.syncReadToWriteBuffers();\r\n    }\r\n  }\r\n\r\n  /** wasm 側の空間インデックス生成をトリガー */\r\n  buildSpatialIndex(arg0, arg1) {\r\n    const handle = this.ensureHandle(this.buildHandle, 'build');\r\n    handle(arg0, arg1);\r\n  }\r\n\r\n  /** wasm から木構造データを取得 */\r\n  exportTreeStructure() {\r\n    if (typeof this.exportTreeStructureHandle !== 'function') {\r\n      return null;\r\n    }\r\n    return this.exportTreeStructureHandle();\r\n  }\r\n\r\n  /** デバッグ用の先頭 Boid の X 座標取得 */\r\n  currentFirstBoidX() {\r\n    if (typeof this.currentFirstBoidXHandle !== 'function') {\r\n      return 0;\r\n    }\r\n    return this.currentFirstBoidXHandle();\r\n  }\r\n\r\n  /** ユニット ID と Boid インデックスのマッピングバッファを返す */\r\n  getUnitMappings(count) {\r\n    if (!count || count <= 0 || typeof this.boidUnitMappingPtrHandle !== 'function') {\r\n      return null;\r\n    }\r\n\r\n    const ptr = this.boidUnitMappingPtrHandle();\r\n    if (!ptr) {\r\n      return null;\r\n    }\r\n\r\n    return new Int32Array(this.wasm.HEAP32.buffer, ptr, count * 2);\r\n  }\r\n\r\n  /** wasm の triple buffer 読み書きを同期 */\r\n  syncReadToWriteBuffers() {\r\n    if (typeof this.syncReadToWriteBuffersHandle === 'function') {\r\n      this.syncReadToWriteBuffersHandle();\r\n    }\r\n  }\r\n\r\n  /** cwrap または素の関数を返し、存在しなければ null */\r\n  createWrappedFunction(name, returnType, argTypes) {\r\n    const { wasm } = this;\r\n    if (!wasm) {\r\n      return null;\r\n    }\r\n\r\n    if (typeof wasm[name] === 'function') {\r\n      return wasm[name].bind(wasm);\r\n    }\r\n\r\n    if (typeof wasm.cwrap === 'function') {\r\n      try {\r\n        return wasm.cwrap(name, returnType, argTypes);\r\n      } catch (error) {\r\n        console.warn(`WasmtimeBridge: ${name} のラップに失敗`, error);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** ハンドルが未初期化でないことを確認 */\r\n  ensureHandle(handle, name) {\r\n    if (typeof handle !== 'function') {\r\n      throw new Error(`WasmtimeBridge: ${name} ハンドルが初期化されていません`);\r\n    }\r\n    return handle;\r\n  }\r\n}\r\n\r\n// 連番の設定配列から {name,start,count} を生成し種族ごとの範囲を求める\r\nfunction buildSpeciesRanges(list = []) {\r\n  const ranges = [];\r\n  let offset = 0;\r\n  for (const item of list) {\r\n    if (!item) continue;\r\n    const count = Math.max(0, Number(item.count) || 0);\r\n    ranges.push({\r\n      name: item.species || '',\r\n      start: offset,\r\n      count,\r\n    });\r\n    offset += count;\r\n  }\r\n  return ranges;\r\n}\r\n","import { reactive, computed, toRaw } from 'vue';\r\n\r\nconst STORAGE_KEY = 'boids_settings';\r\nconst DEFAULT_SPECIES_FALLBACK = {\r\n  species: 'Species',\r\n  count: 0,\r\n  cohesion: 20,\r\n  cohesionRange: 30,\r\n  separation: 5,\r\n  separationRange: 1,\r\n  alignment: 10,\r\n  alignmentRange: 6,\r\n  maxSpeed: 0.3,\r\n  minSpeed: 0,\r\n  maxTurnAngle: 0.2,\r\n  maxNeighbors: 6,\r\n  horizontalTorque: 0.02,\r\n  torqueStrength: 5,\r\n  lambda: 0.5,\r\n  tau: 1.5,\r\n  velocityEpsilon: 0.0001,\r\n  predatorAlertRadius: 1,\r\n  isPredator: false,\r\n  speciesId: 0,\r\n};\r\n\r\n/**\r\n * Flock 設定のロード/保存/編集を司る小さなストアヘルパー。\r\n * localStorage に保存された配列を復元し、Vue からはこのストア経由で操作します。\r\n */\r\nexport function createFlockSettingsStore(defaultSettings = [], defaultSystem = {}) {\r\n  const defaultTemplates = sanitizeSpeciesList(defaultSettings, defaultSettings);\r\n  const systemDefaults = { ...defaultSystem };\r\n  const settings = reactive([]);\r\n  const systemSettings = reactive({});\r\n\r\n  replaceSettings(defaultTemplates);\r\n  assignSystemSettings(systemDefaults);\r\n  if (!loadFromStorage()) {\r\n    replaceSettings(defaultTemplates);\r\n    assignSystemSettings(systemDefaults);\r\n  }\r\n\r\n  const totalBoids = computed(() => getTotalBoidCount(settings));\r\n\r\n  function loadFromStorage() {\r\n    if (typeof localStorage === 'undefined') {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const saved = localStorage.getItem(STORAGE_KEY);\r\n      if (!saved) {\r\n        return false;\r\n      }\r\n      const parsed = JSON.parse(saved);\r\n      if (Array.isArray(parsed) && parsed.length > 0) {\r\n        replaceSettings(parsed);\r\n        return true;\r\n      }\r\n      if (parsed && typeof parsed === 'object') {\r\n        if (Array.isArray(parsed.species) && parsed.species.length > 0) {\r\n          replaceSettings(parsed.species);\r\n        }\r\n        if (parsed.system && typeof parsed.system === 'object') {\r\n          assignSystemSettings(parsed.system);\r\n        }\r\n        return true;\r\n      }\r\n    } catch (error) {\r\n      console.warn('Failed to load settings from localStorage:', error);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function saveToStorage() {\r\n    if (typeof localStorage === 'undefined') {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const snapshot = {\r\n        species: settings.map((entry) => ({ ...toRaw(entry) })),\r\n        system: { ...toRaw(systemSettings) },\r\n      };\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(snapshot));\r\n      return true;\r\n    } catch (error) {\r\n      console.warn('Failed to save settings to localStorage:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function replaceSettings(nextList) {\r\n    const sanitized = sanitizeSpeciesList(nextList, defaultTemplates);\r\n    settings.splice(0, settings.length, ...sanitized);\r\n    return sanitized;\r\n  }\r\n\r\n  function assignSystemSettings(patch = {}) {\r\n    const merged = { ...systemDefaults, ...(patch || {}) };\r\n    Object.keys(systemSettings).forEach((key) => {\r\n      if (!(key in merged)) {\r\n        delete systemSettings[key];\r\n      }\r\n    });\r\n    Object.entries(merged).forEach(([key, value]) => {\r\n      systemSettings[key] = value;\r\n    });\r\n    return systemSettings;\r\n  }\r\n\r\n  function resetToDefaults() {\r\n    replaceSettings(defaultTemplates);\r\n    assignSystemSettings(systemDefaults);\r\n    saveToStorage();\r\n  }\r\n\r\n  function addSpecies(template) {\r\n    const basePool = settings.length > 0 ? settings : defaultTemplates;\r\n    const fallbackTemplate =\r\n      basePool.find((item) => item && !item.isPredator) ||\r\n      defaultTemplates.find((item) => item && !item.isPredator) ||\r\n      DEFAULT_SPECIES_FALLBACK;\r\n\r\n    const candidate = template\r\n      ? sanitizeSpeciesEntry(template, fallbackTemplate)\r\n      : cloneSpeciesTemplate(fallbackTemplate);\r\n\r\n    candidate.isPredator = false;\r\n    candidate.count = 0;\r\n    candidate.species = ensureUniqueName(candidate.species, new Set(settings.map((s) => s.species)));\r\n    settings.push(candidate);\r\n    return candidate;\r\n  }\r\n\r\n  function removeSpecies(index) {\r\n    if (index < 0 || index >= settings.length) {\r\n      return null;\r\n    }\r\n    const removed = settings.splice(index, 1);\r\n    return removed.length ? removed[0] : null;\r\n  }\r\n\r\n  return {\r\n    settings,\r\n    systemSettings,\r\n    totalBoids,\r\n    loadFromStorage,\r\n    saveToStorage,\r\n    replaceSettings,\r\n    assignSystemSettings,\r\n    resetToDefaults,\r\n    addSpecies,\r\n    removeSpecies,\r\n  };\r\n}\r\n\r\nfunction getTotalBoidCount(list) {\r\n  return list.reduce((sum, entry) => sum + Math.max(0, Number(entry?.count) || 0), 0);\r\n}\r\n\r\nfunction sanitizeSpeciesList(list = [], fallbackList = []) {\r\n  if (!Array.isArray(list)) {\r\n    return [];\r\n  }\r\n\r\n  const sanitized = [];\r\n  const takenNames = new Set();\r\n\r\n  list.forEach((entry, index) => {\r\n    const fallback = fallbackList[index] || fallbackList[0] || DEFAULT_SPECIES_FALLBACK;\r\n    const clean = sanitizeSpeciesEntry(entry, fallback);\r\n    clean.species = ensureUniqueName(clean.species, takenNames);\r\n    sanitized.push(clean);\r\n  });\r\n\r\n  return sanitized;\r\n}\r\n\r\nfunction sanitizeSpeciesEntry(entry = {}, fallback = DEFAULT_SPECIES_FALLBACK) {\r\n  const base = { ...DEFAULT_SPECIES_FALLBACK, ...fallback };\r\n  const merged = { ...base, ...entry };\r\n\r\n  const toFinite = (value, fallbackValue = 0) => {\r\n    const num = Number(value);\r\n    return Number.isFinite(num) ? num : fallbackValue;\r\n  };\r\n\r\n  const result = { ...merged };\r\n  result.count = Math.max(0, Math.floor(toFinite(merged.count, base.count ?? 0)));\r\n  result.maxNeighbors = Math.max(0, Math.floor(toFinite(merged.maxNeighbors, base.maxNeighbors ?? 0)));\r\n  result.speciesId = Math.max(0, Math.floor(toFinite(merged.speciesId, base.speciesId ?? 0)));\r\n\r\n  result.cohesion = toFinite(merged.cohesion, base.cohesion ?? 0);\r\n  result.cohesionRange = Math.max(0, toFinite(merged.cohesionRange, base.cohesionRange ?? 0));\r\n  result.separation = toFinite(merged.separation, base.separation ?? 0);\r\n  result.separationRange = Math.max(0, toFinite(merged.separationRange, base.separationRange ?? 0));\r\n  result.alignment = toFinite(merged.alignment, base.alignment ?? 0);\r\n  result.alignmentRange = Math.max(0, toFinite(merged.alignmentRange, base.alignmentRange ?? 0));\r\n  result.maxSpeed = Math.max(0, toFinite(merged.maxSpeed, base.maxSpeed ?? 0));\r\n  result.minSpeed = Math.max(0, toFinite(merged.minSpeed, base.minSpeed ?? 0));\r\n  result.maxTurnAngle = toFinite(merged.maxTurnAngle, base.maxTurnAngle ?? 0);\r\n  result.horizontalTorque = toFinite(merged.horizontalTorque, base.horizontalTorque ?? 0);\r\n  result.torqueStrength = toFinite(merged.torqueStrength, base.torqueStrength ?? 0);\r\n  result.lambda = toFinite(merged.lambda, base.lambda ?? 0);\r\n  result.tau = toFinite(merged.tau, base.tau ?? 0);\r\n  result.velocityEpsilon = Math.max(0, toFinite(merged.velocityEpsilon, base.velocityEpsilon ?? 0.0001));\r\n  result.predatorAlertRadius = Math.max(0, toFinite(merged.predatorAlertRadius, base.predatorAlertRadius ?? 1));\r\n\r\n  const speciesName = typeof merged.species === 'string' ? merged.species.trim() : '';\r\n  result.species = speciesName || base.species || DEFAULT_SPECIES_FALLBACK.species;\r\n  result.isPredator = Boolean(merged.isPredator);\r\n\r\n  return result;\r\n}\r\n\r\nfunction ensureUniqueName(name, taken, defaultName = 'Species') {\r\n  const base = typeof name === 'string' && name.trim() ? name.trim() : defaultName;\r\n  let candidate = base;\r\n  let index = 2;\r\n  while (taken.has(candidate)) {\r\n    candidate = `${base} ${index}`;\r\n    index += 1;\r\n  }\r\n  taken.add(candidate);\r\n  return candidate;\r\n}\r\n\r\nfunction cloneSpeciesTemplate(template) {\r\n  return JSON.parse(JSON.stringify(template));\r\n}\r\n","<template>\r\n  <div id=\"app\">\r\n    <div class=\"ui-overlay\">\r\n      <h1>Boids Simulation</h1>\r\n      <details>\r\n        <summary>Settings</summary>\r\n        <div v-for=\"(s, i) in settings\" :key=\"i\">\r\n          <Settings :settings=\"s\" :can-remove=\"settings.length > 1\" @remove=\"removeSpecies(i)\" />\r\n        </div>\r\n        <button class=\"add-species-button\" @click=\"addSpecies\">種族を追加</button>\r\n        <button @click=\"resetSettings\" style=\"margin-bottom:1em;\">リセット</button>\r\n        <div>\r\n          <label>\r\n            <input type=\"checkbox\" v-model=\"showUnits\" />\r\n            Unit可視化\r\n          </label>\r\n          <label style=\"margin-left:1em;\">\r\n            <input type=\"checkbox\" v-model=\"showUnitSpheres\" />\r\n            スフィアのみ表示\r\n          </label>\r\n          <label style=\"margin-left:1em;\">\r\n            <input type=\"checkbox\" v-model=\"showUnitLines\" />\r\n            線のみ表示\r\n          </label>\r\n          <label style=\"margin-left:1em;\">\r\n            <input type=\"checkbox\" v-model=\"showUnitColors\" />\r\n            Unit色分け\r\n          </label>\r\n          <label style=\"margin-left:1em;\">\r\n            表示レイヤ下限: <input type=\"range\" min=\"1\" max=\"20\" v-model=\"unitLayer\" />\r\n            {{ unitLayer }}\r\n          </label>\r\n        </div>\r\n      </details>\r\n      <div class=\"settings tuning-settings\">\r\n        <details class=\"species-section\" open>\r\n          <summary class=\"species-header\">\r\n            <span class=\"species-title\">シミュレーション調整</span>\r\n          </summary>\r\n          <div class=\"species-content\">\r\n            <div class=\"setting-row\">\r\n              <label>脅威減衰<br>(threatDecay):</label>\r\n              <input type=\"range\" min=\"0\" max=\"5\" step=\"0.05\" v-model.number=\"systemSettings.threatDecay\" />\r\n              <input class=\"value-input\" type=\"number\" step=\"0.05\" v-model.number=\"systemSettings.threatDecay\" />\r\n            </div>\r\n            <div class=\"setting-row\">\r\n              <label>脅威増幅<br>(threatGain):</label>\r\n              <input type=\"range\" min=\"0\" max=\"5\" step=\"0.05\" v-model.number=\"systemSettings.threatGain\" />\r\n              <input class=\"value-input\" type=\"number\" step=\"0.05\" v-model.number=\"systemSettings.threatGain\" />\r\n            </div>\r\n            <div class=\"setting-row\">\r\n              <label>最大逃避重み<br>(maxEscapeWeight):</label>\r\n              <input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" v-model.number=\"systemSettings.maxEscapeWeight\" />\r\n              <input class=\"value-input\" type=\"number\" step=\"0.01\" v-model.number=\"systemSettings.maxEscapeWeight\" />\r\n            </div>\r\n            <div class=\"setting-row\">\r\n              <label>基本逃避強度<br>(baseEscapeStrength):</label>\r\n              <input type=\"range\" min=\"0\" max=\"15\" step=\"0.1\" v-model.number=\"systemSettings.baseEscapeStrength\" />\r\n              <input class=\"value-input\" type=\"number\" step=\"0.1\" v-model.number=\"systemSettings.baseEscapeStrength\" />\r\n            </div>\r\n            <div class=\"setting-row\">\r\n              <label>脅威ごとの逃避<br>(escapeStrengthPerThreat):</label>\r\n              <input type=\"range\" min=\"0\" max=\"40\" step=\"0.5\" v-model.number=\"systemSettings.escapeStrengthPerThreat\" />\r\n              <input class=\"value-input\" type=\"number\" step=\"0.5\"\r\n                v-model.number=\"systemSettings.escapeStrengthPerThreat\" />\r\n            </div>\r\n            <div class=\"setting-row\">\r\n              <label>凝集ブースト<br>(cohesionBoost):</label>\r\n              <input type=\"range\" min=\"0\" max=\"3\" step=\"0.05\" v-model.number=\"systemSettings.cohesionBoost\" />\r\n              <input class=\"value-input\" type=\"number\" step=\"0.05\" v-model.number=\"systemSettings.cohesionBoost\" />\r\n            </div>\r\n            <div class=\"setting-row\">\r\n              <label>分離下限係数<br>(separationMinFactor):</label>\r\n              <input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" v-model.number=\"systemSettings.separationMinFactor\" />\r\n              <input class=\"value-input\" type=\"number\" step=\"0.01\"\r\n                v-model.number=\"systemSettings.separationMinFactor\" />\r\n            </div>\r\n            <div class=\"setting-row\">\r\n              <label>整列ブースト<br>(alignmentBoost):</label>\r\n              <input type=\"range\" min=\"0\" max=\"2\" step=\"0.05\" v-model.number=\"systemSettings.alignmentBoost\" />\r\n              <input class=\"value-input\" type=\"number\" step=\"0.05\" v-model.number=\"systemSettings.alignmentBoost\" />\r\n            </div>\r\n          </div>\r\n        </details>\r\n      </div>\r\n      <div class=\"info\">\r\n        <p>Boids Count: {{ totalBoids }}</p>\r\n      </div>\r\n    </div>\r\n    <div ref=\"threeContainer\" class=\"three-container\" />\r\n    <audio ref=\"backgroundAudio\" src=\"/UnderWater.mp3\" loop style=\"display:none\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { inject, onMounted, ref, watch, toRaw } from 'vue';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport Settings from './components/Settings.vue';\r\nimport StatsGl from 'stats-gl';\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { BoidInstancing } from './rendering/BoidInstancing.js';\r\nimport { FogPipeline } from './rendering/FogPipeline.js';\r\nimport { ParticleField } from './rendering/ParticleField.js';\r\nimport { WasmtimeBridge } from './simulation/WasmtimeBridge.js';\r\nimport { createFlockSettingsStore } from './state/FlockSettingsStore.js';\r\n\r\nconst wasmModule = inject('wasmModule');\r\nif (!wasmModule) {\r\n  console.error('wasmModule not provided');\r\n}\r\n\r\nconst wasmBridge = wasmModule ? new WasmtimeBridge(wasmModule) : null;\r\n\r\n// const getUnitCount = wasmModule.cwrap('getUnitCount', 'number', []);\r\n// const getUnitParentIndicesPtr = wasmModule.cwrap('getUnitParentIndicesPtr', 'number', []);\r\n\r\nfunction isMobileDevice() {\r\n  if (typeof navigator === 'undefined') {\r\n    return false;\r\n  }\r\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n}\r\n\r\nfunction fetchTreeStructure() {\r\n  return wasmBridge?.exportTreeStructure() ?? null;\r\n}\r\nconst mobileBoidCount = isMobileDevice() ? 6000 : 10000;\r\n\r\nconst DEFAULT_SETTINGS = [{\r\n  species: 'Boids',         // 種族名\r\n  count: mobileBoidCount,   // 群れの数（スマホなら6000、PCなら10000）\r\n  cohesion: 38,             // 凝集\r\n  cohesionRange: 30,        // 凝集範囲\r\n  separation: 8,            // 分離\r\n  separationRange: 0.6,     // 分離範囲\r\n  alignment: 19,            // 整列\r\n  alignmentRange: 6,        // 整列範囲\r\n  maxSpeed: 0.26,           // 最大速度\r\n  maxTurnAngle: 0.25,       // 最大旋回角\r\n  maxNeighbors: 6,          // 最大近傍数\r\n  horizontalTorque: 0.019,  // 水平化トルク\r\n  torqueStrength: 10,       // 回転トルク強度\r\n  lambda: 0.62,             // 速度調整係数\r\n  tau: 1.0,                 // 記憶時間スケール\r\n  predatorAlertRadius: 1.0, // 捕食者を察知する距離\r\n}, {\r\n  species: 'Predator',\r\n  count: 1,\r\n  cohesion: 5.58,                     // 捕食者には使わない\r\n  separation: 0.0,\r\n  alignment: 0.0,\r\n  maxSpeed: 1.37,                     // 速く逃げられるよう速度は大きめ\r\n  minSpeed: 0.4,\r\n  maxTurnAngle: 0.13,\r\n  separationRange: 14.0,\r\n  alignmentRange: 11.0,\r\n  cohesionRange: 77.0,\r\n  maxNeighbors: 0,\r\n  lambda: 0.05,\r\n  tau: 1.0, // 捕食者は常に追いかける\r\n  horizontalTorque: 0.022,\r\n  torqueStrength: 0.0,\r\n  isPredator: true                // ← 捕食者フラグ\r\n}];\r\n\r\nconst DEFAULT_TUNING_SETTINGS = {\r\n  threatDecay: 0.75,\r\n  threatGain: 2.0,\r\n  maxEscapeWeight: 1.0,\r\n  baseEscapeStrength: 3.0,\r\n  escapeStrengthPerThreat: 10.0,\r\n  cohesionBoost: 2.0,\r\n  separationMinFactor: 1.0,\r\n  alignmentBoost: 1.2,\r\n};\r\n\r\nconst flockStore = createFlockSettingsStore(DEFAULT_SETTINGS, DEFAULT_TUNING_SETTINGS);\r\nconst {\r\n  settings,\r\n  systemSettings,\r\n  assignSystemSettings: syncSystemSettings,\r\n  totalBoids,\r\n  replaceSettings,\r\n  resetToDefaults,\r\n  addSpecies: addSpeciesFromStore,\r\n  removeSpecies: removeSpeciesFromStore,\r\n  saveToStorage,\r\n} = flockStore;\r\n\r\nconst tuningInitialized = ref(false);\r\n\r\n// シミュレーション調整値を正規化し、欠損時はデフォルトで補完する。\r\nfunction sanitizeTuningParams(raw = {}) {\r\n  const sanitized = {};\r\n  for (const [key, fallback] of Object.entries(DEFAULT_TUNING_SETTINGS)) {\r\n    const value = Number(raw[key]);\r\n    sanitized[key] = Number.isFinite(value) ? value : fallback;\r\n  }\r\n  return sanitized;\r\n}\r\n\r\n// reactive な systemSettings へ値を反映し、そのまま wasm へ渡せるプレーンオブジェクトを返す。\r\nfunction updateSystemSettings(newValues) {\r\n  const payload = sanitizeTuningParams(newValues);\r\n  syncSystemSettings(payload);\r\n  return payload;\r\n}\r\n\r\n// wasm 側へ現在のシミュレーション調整パラメータを送信する。\r\nfunction applySystemSettingsToWasm() {\r\n  if (!wasmBridge) {\r\n    return;\r\n  }\r\n  const payload = sanitizeTuningParams(systemSettings);\r\n  wasmBridge.setSimulationTuningParams(payload);\r\n}\r\n\r\nfunction snapshotSettingsList(list) {\r\n  return list.map((item) => JSON.parse(JSON.stringify(toRaw(item))));\r\n}\r\n\r\nlet cachedTotalBoidCount = totalBoids.value;\r\nlet lastSpeciesSignature = getSpeciesSignature(settings);\r\nlet previousSettingsSnapshot = snapshotSettingsList(settings);\r\nlet pendingStateForReinitialize = null;\r\nlet pendingSettingsSnapshot = null;\r\n\r\nfunction applySettingsSnapshot(snapshot) {\r\n  if (!Array.isArray(snapshot) || snapshot.length === 0) {\r\n    return null;\r\n  }\r\n  const sanitized = replaceSettings(snapshot);\r\n  saveToStorage();\r\n  previousSettingsSnapshot = snapshotSettingsList(settings);\r\n  return sanitized;\r\n}\r\n\r\nfunction addSpecies(template) {\r\n  const added = addSpeciesFromStore(template);\r\n  saveToStorage();\r\n  return added;\r\n}\r\n\r\nfunction removeSpecies(index) {\r\n  if (settings.length <= 1) {\r\n    return null;\r\n  }\r\n  const removed = removeSpeciesFromStore(index);\r\n  if (removed) {\r\n    saveToStorage();\r\n  }\r\n  return removed;\r\n}\r\n\r\nconst threeContainer = ref(null);\r\nconst backgroundAudio = ref(null);\r\nlet scene, camera, renderer, controls;\r\nlet fogPipeline = null;\r\nlet particleField = null;\r\n\r\nconst paused = ref(false);\r\n\r\nconst showUnits = ref(true);\r\nconst showUnitSpheres = ref(false);\r\nconst showUnitLines = ref(false);\r\nconst showUnitColors = ref(false);\r\nconst unitLayer = ref(1);\r\n\r\nlet unitSpheres = [];\r\nlet unitLines = [];\r\n\r\nlet maxDepth = 1;\r\nlet stats = null;\r\nlet glContext = null;\r\nlet frameCounter = 0;\r\nlet flockReinitTimer = null;\r\n\r\nlet animationTimer = null;\r\nconst FRAME_INTERVAL = 1000 / 1000;//1000 / 60; // 60FPS\r\nconst COUNT_REINIT_DELAY_MS = 400;\r\n\r\nfunction positionStatsOverlay(element) {\r\n  if (!element) return;\r\n  element.style.position = 'fixed';\r\n  element.style.padding = '80px';\r\n  element.style.pointerEvents = 'none';\r\n  element.style.display = 'flex';\r\n  element.style.flexDirection = 'column';\r\n  element.style.alignItems = 'flex-end';\r\n  element.style.gap = '6px';\r\n  element.style.maxWidth = '200px';\r\n  element.style.width = 'auto';\r\n  element.style.boxSizing = 'border-box';\r\n  element.style.zIndex = 1000;\r\n}\r\n\r\n// ツリーの最大深さを計算\r\nfunction calcMaxDepth(unit, depth = 0) {\r\n  if (!unit || !unit.children || typeof unit.children.size !== 'function' || unit.children.size() === 0) {\r\n    return depth;\r\n  }\r\n  let max = depth;\r\n  for (let i = 0; i < unit.children.size(); i++) {\r\n    const child = unit.children.get(i);\r\n    max = Math.max(max, calcMaxDepth(child, depth + 1));\r\n  }\r\n  return max;\r\n}\r\n\r\nfunction handleKeydown(e) {\r\n  if (e.code === 'Space') {\r\n    paused.value = !paused.value;\r\n  }\r\n}\r\n\r\nfunction initThreeJS() {\r\n  const width = window.innerWidth;\r\n  const height = window.innerHeight;\r\n\r\n  scene = new THREE.Scene();\r\n  scene.background = new THREE.Color(OCEAN_COLORS.DEEP_BLUE);\r\n  createOceanSphere();\r\n\r\n  camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\r\n  camera.position.set(3, -5, 3);\r\n  camera.lookAt(0, 0, 0);\r\n\r\n  renderer = new THREE.WebGLRenderer({\r\n    antialias: true,\r\n    depth: true, // 深度バッファを有効化\r\n\r\n  });\r\n  // トーンマッピングを有効化し水中ライティングのダイナミクスを保つ。\r\n  renderer.toneMapping = THREE.CineonToneMapping;\r\n  renderer.toneMappingExposure = 0.8;\r\n  renderer.outputEncoding = THREE.sRGBEncoding;\r\n  renderer.setPixelRatio(window.devicePixelRatio); // 高DPI対応\r\n  renderer.setSize(width, height);\r\n  renderer.shadowMap.enabled = true;\r\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap; // 影を柔らかく\r\n\r\n  glContext = renderer.getContext();\r\n\r\n  threeContainer.value.appendChild(renderer.domElement);\r\n\r\n  camera.aspect = width / height;\r\n  camera.updateProjectionMatrix();\r\n\r\n  controls = new OrbitControls(camera, renderer.domElement);\r\n  controls.enableDamping = true; // なめらかな操作\r\n  controls.dampingFactor = 0.1;\r\n\r\n  // 地面メッシュ追加\r\n  const groundGeo = new THREE.PlaneGeometry(300, 300);\r\n  const groundMat = createFadeOutGroundMaterial();\r\n  groundMat.depthTest = true;\r\n  const ground = new THREE.Mesh(groundGeo, groundMat);\r\n  ground.rotation.x = -Math.PI / 2;\r\n  ground.position.y = -10;\r\n  ground.receiveShadow = true; // 影を受ける\r\n  scene.add(ground);\r\n\r\n  // ライト\r\n  const ambientLight = new THREE.AmbientLight(toHex(OCEAN_COLORS.AMBIENT_LIGHT), 0.9);\r\n  scene.add(ambientLight);\r\n\r\n  // 太陽光（やや暖色のDirectionalLight）\r\n  const dirLight = new THREE.DirectionalLight(toHex(OCEAN_COLORS.SUN_LIGHT), 20); // 暖色＆強め\r\n  dirLight.position.set(300, 500, 200); // 高い位置から照らす\r\n  dirLight.castShadow = true;\r\n\r\n  // 影カメラの範囲を広げる\r\n  dirLight.shadow.camera.left = -100;\r\n  dirLight.shadow.camera.right = 100;\r\n  dirLight.shadow.camera.top = 100;\r\n  dirLight.shadow.camera.bottom = -100;\r\n  dirLight.shadow.camera.near = 1;\r\n  dirLight.shadow.camera.far = 1000;\r\n\r\n  dirLight.shadow.mapSize.width = 1024;\r\n  dirLight.shadow.mapSize.height = 1024;\r\n  dirLight.shadow.bias = -0.01;\r\n  dirLight.shadow.normalBias = 0.01;\r\n\r\n  scene.add(dirLight);\r\n  initParticleSystem();\r\n  if (!isMobileDevice()) {\r\n    fogPipeline?.dispose();\r\n    fogPipeline = new FogPipeline(heightFogConfig);\r\n    fogPipeline.init(renderer, scene, camera, width, height);\r\n  } else if (fogPipeline) {\r\n    fogPipeline.dispose();\r\n    fogPipeline = null;\r\n  }\r\n  // ウィンドウリサイズ対応\r\n  window.addEventListener('resize', onWindowResize);\r\n}\r\n\r\nfunction onWindowResize() {\r\n  const width = window.innerWidth;\r\n  const height = window.innerHeight;\r\n  camera.aspect = width / height;\r\n  camera.updateProjectionMatrix();\r\n  renderer.setSize(width, height);\r\n  fogPipeline?.resize(width, height);\r\n}\r\n\r\nfunction createSinCosLutTexture(size) {\r\n  const data = new Uint8Array(size * 4);\r\n  for (let i = 0; i < size; i++) {\r\n    const angle = (i / size) * Math.PI * 2;\r\n    const sinValue = Math.sin(angle);\r\n    const cosValue = Math.cos(angle);\r\n    data[i * 4] = Math.round((sinValue * 0.5 + 0.5) * 255);\r\n    data[i * 4 + 1] = Math.round((cosValue * 0.5 + 0.5) * 255);\r\n    data[i * 4 + 2] = 0;\r\n    data[i * 4 + 3] = 255;\r\n  }\r\n  const texture = new THREE.DataTexture(data, size, 1, THREE.RGBAFormat);\r\n  texture.needsUpdate = true;\r\n  texture.wrapS = THREE.RepeatWrapping;\r\n  texture.wrapT = THREE.ClampToEdgeWrapping;\r\n  texture.magFilter = THREE.LinearFilter;\r\n  texture.minFilter = THREE.LinearFilter;\r\n  texture.generateMipmaps = false;\r\n  texture.flipY = false;\r\n  return texture;\r\n}\r\n\r\nconst TRIPLE_BUFFER_SIZE = 3;               // BoidInstancing のトリプルバッファ数\r\nconst HIDDEN_POSITION = 1e6;                // 非表示インスタンスを退避させる座標値\r\nconst IDENTITY_QUATERNION = [0, 0, 0, 1];   // 非表示インスタンスに適用する無回転クォータニオン\r\nconst SIN_LUT_SIZE = 256;                   // 尾びれアニメ用サイン LUT サイズ\r\nconst sinCosLutTexture = createSinCosLutTexture(SIN_LUT_SIZE);\r\n// LOD距離閾値（平方距離）: 近距離はハイポリ、中距離はLOD+アニメ、遠距離はLOD静止\r\nconst LOD_NEAR_DISTANCE_SQ = 4; // 2m以内はメインモデル\r\nconst LOD_MID_DISTANCE_SQ = 25; // 5m以内はLODモデル＋アニメ\r\nconst tailAnimation = {\r\n  uniforms: {\r\n    uTailTime: { value: 0 },            // 時間（波形生成用）\r\n    uTailAmplitude: { value: 0.14 },    // 振幅（全身の揺れ幅）\r\n    uTailFrequency: { value: 10.0 },    // 周波数（くねり速度）\r\n    uTailPhaseStride: { value: 5.0 },   // 体の長さ方向の位相差（波長に相当）\r\n    uTailTurnStrength: { value: 0.1 },  // 旋回時の強度\r\n    uTailSpeedScale: { value: 1 },      // 速度による影響度\r\n    uTailRight: { value: new THREE.Vector3(1, 0, 0) },     // 尾アニメの右方向ベクトル\r\n    uTailForward: { value: new THREE.Vector3(0, 0, 1) },   // 尾アニメの進行方向ベクトル\r\n    uTailUp: { value: new THREE.Vector3(0, 1, 0) },        // 尾アニメの上方向ベクトル\r\n    uTailEnable: { value: 1 },          // アニメーション有効/無効\r\n    uSinLut: { value: sinCosLutTexture },\r\n    uLutSize: { value: SIN_LUT_SIZE },\r\n  },\r\n};\r\n\r\nconst boidInstancing = new BoidInstancing({\r\n  tailAnimation,\r\n  tripleBufferSize: TRIPLE_BUFFER_SIZE,\r\n  hiddenPosition: HIDDEN_POSITION,\r\n  identityQuaternion: IDENTITY_QUATERNION,\r\n  lodNearDistanceSq: LOD_NEAR_DISTANCE_SQ,\r\n  lodMidDistanceSq: LOD_MID_DISTANCE_SQ,\r\n});\r\n\r\nlet instancedMeshHigh = null;\r\nlet instancedMeshLow = null;\r\n\r\n\r\n// 海中シーンの色味をまとめて管理する定数群\r\nconst OCEAN_COLORS = {\r\n  SKY_HIGHLIGHT: '#4fbaff',\r\n  SKY_BLUE: '#15a1ff',\r\n  DEEP_BLUE: '#002968',\r\n  SEAFLOOR: '#777465',\r\n  FOG: '#153a6c',\r\n  AMBIENT_LIGHT: '#59a5eb',\r\n  SUN_LIGHT: '#5389b7',\r\n  SIDE_LIGHT1: '#6ba3d0',\r\n  SIDE_LIGHT2: '#2d5f7a',\r\n  BOTTOM_LIGHT: '#0f2635',\r\n};\r\n\r\n// '#rrggbb' 形式の色を three.js の整数表現に変換\r\nconst toHex = (colorStr) => parseInt(colorStr.replace('#', '0x'), 16);\r\n\r\n// 距離と深度で濃さが変わる海中フォグ設定\r\nconst heightFogConfig = {\r\n  color: new THREE.Color(OCEAN_COLORS.DEEP_BLUE),       // 遠景で溶け込む深海色\r\n  distanceStart: 4.0,                      // カメラからこの距離まではフォグゼロ\r\n  distanceEnd: 60.0,                       // この距離でフォグが最大になる\r\n  distanceExponent: 0.4,                   // 距離カーブの滑らかさ\r\n  distanceControlPoint1: new THREE.Vector2(0.2, 0.8),    // 距離ベジェ曲線の制御点（開始側）\r\n  distanceControlPoint2: new THREE.Vector2(0.75, 0.95),  // 距離ベジェ曲線の制御点（終端側）\r\n  surfaceLevel: 100.0,                       // 水面の高さ。ここから下がるほど暗くなる\r\n  heightFalloff: 0.01,                       // 深度による減衰率\r\n  heightExponent: 1,                          // 深度カーブの強さ\r\n  maxOpacity: 1.2,                            // 最大フォグ率\r\n};\r\n\r\nfunction createOceanSphere() {\r\n  if (!scene) return null;\r\n\r\n  // 上層→深層のグラデーションで海中の空気感を演出\r\n  const canvas = document.createElement('canvas');\r\n  const context = canvas.getContext('2d');\r\n  canvas.width = 512;\r\n  canvas.height = 512;\r\n\r\n  const gradient = context.createLinearGradient(0, 0, 0, canvas.height);\r\n  gradient.addColorStop(0, OCEAN_COLORS.SKY_HIGHLIGHT);\r\n  gradient.addColorStop(0.2, OCEAN_COLORS.SKY_BLUE);\r\n  gradient.addColorStop(0.6, OCEAN_COLORS.DEEP_BLUE);\r\n  gradient.addColorStop(1, OCEAN_COLORS.DEEP_BLUE);\r\n\r\n  context.fillStyle = gradient;\r\n  context.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n  const texture = new THREE.CanvasTexture(canvas);\r\n  texture.colorSpace = THREE.SRGBColorSpace;\r\n  texture.generateMipmaps = false;\r\n  texture.minFilter = THREE.LinearFilter;\r\n  texture.magFilter = THREE.LinearFilter;\r\n\r\n  const sphereGeo = new THREE.SphereGeometry(300, 32, 32);\r\n  const sphereMat = new THREE.MeshBasicMaterial({\r\n    map: texture,\r\n    side: THREE.BackSide,\r\n    fog: false,\r\n  });\r\n\r\n  const oceanSphere = new THREE.Mesh(sphereGeo, sphereMat);\r\n  scene.add(oceanSphere);\r\n  return oceanSphere;\r\n}\r\n\r\nfunction createFadeOutGroundMaterial() {\r\n  const textureLoader = new THREE.TextureLoader();\r\n  const alphaMap = textureLoader.load('./models/groundAlfa.png');\r\n\r\n  alphaMap.minFilter = THREE.LinearFilter;\r\n  alphaMap.magFilter = THREE.LinearFilter;\r\n  alphaMap.wrapS = THREE.ClampToEdgeWrapping;\r\n  alphaMap.wrapT = THREE.ClampToEdgeWrapping;\r\n\r\n  const material = new THREE.MeshStandardMaterial({\r\n    color: toHex(OCEAN_COLORS.SEAFLOOR),\r\n    transparent: true,\r\n    alphaMap,\r\n    depthWrite: true,\r\n  });\r\n\r\n  material.roughness = 0.85;\r\n  material.metalness = 0.0;\r\n  return material;\r\n}\r\n\r\nfunction updateInstancingMaterialUniforms(time) {\r\n  boidInstancing.setTailUniformTime(time);\r\n  particleField?.setTime(time);\r\n}\r\n\r\nlet shaderTime = 0;\r\n\r\n// WebGL2専用の軽量パーティクルを初期化\r\nfunction initParticleSystem() {\r\n  if (!scene || !renderer) {\r\n    return;\r\n  }\r\n  if (!particleField) {\r\n    particleField = new ParticleField(isMobileDevice());\r\n  }\r\n  particleField.init(scene, renderer, camera, controls);\r\n}\r\n\r\n// カメラ操作に応じて粒子ボリュームの中心とスケールを更新\r\nfunction updateParticleUniforms() {\r\n  particleField?.update(camera, controls);\r\n}\r\n\r\nfunction initBackgroundAudioPlayback() {\r\n  const audioEl = backgroundAudio.value;\r\n  if (!audioEl) {\r\n    return;\r\n  }\r\n\r\n  audioEl.volume = 0.1;\r\n  audioEl.loop = true;\r\n\r\n  const tryPlay = () => {\r\n    const playResult = audioEl.play();\r\n    if (playResult && typeof playResult.then === 'function') {\r\n      playResult.catch(() => {\r\n        const resume = () => {\r\n          document.removeEventListener('pointerdown', resume);\r\n          document.removeEventListener('keydown', resume);\r\n          audioEl.play().catch(() => {\r\n            /* ignored */\r\n          });\r\n        };\r\n        document.addEventListener('pointerdown', resume, { once: true });\r\n        document.addEventListener('keydown', resume, { once: true });\r\n      });\r\n    }\r\n  };\r\n\r\n  tryPlay();\r\n}\r\n\r\nfunction stepSimulationAndUpdateState(deltaTime) {\r\n  if (!wasmBridge) {\r\n    return 0;\r\n  }\r\n  return wasmBridge.stepSimulation(deltaTime);\r\n}\r\n\r\nfunction getWasmViews(count) {\r\n  if (!wasmBridge) {\r\n    return {\r\n      positions: new Float32Array(0),\r\n      orientations: new Float32Array(0),\r\n      velocities: new Float32Array(0),\r\n      speciesIds: new Int32Array(0),\r\n    };\r\n  }\r\n  return wasmBridge.getBuffers(count);\r\n}\r\n\r\nfunction captureFlockState() {\r\n  return wasmBridge?.captureState() ?? null;\r\n}\r\n\r\nfunction restoreFlockState(previousState, oldSettings, newSettings) {\r\n  wasmBridge?.restoreState(previousState, oldSettings, newSettings);\r\n}\r\n\r\nlet boidModel = null; // 読み込んだモデルを保持\r\nlet boidModelLod = null; // 読み込んだモデルを保持\r\nlet originalMaterial = null; // 元のマテリアルを保持\r\nlet originalMaterialLod = null; // 元のLODマテリアルを保持\r\nlet predatorModel = null;\r\nlet predatorMaterial = null;\r\n\r\n// 前回のshowUnitColorsの状態を保持（OFF→ONの検知用）\r\nlet lastShowUnitColors = false;\r\n\r\nfunction getPredatorCount() {\r\n  return settings.reduce((sum, s) => sum + ((s.isPredator && s.count) ? s.count : 0), 0);\r\n}\r\n\r\nfunction getTotalBoidCount() {\r\n  return totalBoids.value;\r\n}\r\n\r\nfunction getSpeciesSignature(specList = settings) {\r\n  if (!Array.isArray(specList)) {\r\n    return '';\r\n  }\r\n  return specList\r\n    .map((s, index) => `${index}:${(s && s.count) || 0}:${s && s.isPredator ? 1 : 0}`)\r\n    .join('|');\r\n}\r\n\r\nfunction createSpeciesParamsVector() {\r\n  if (!wasmBridge) {\r\n    console.warn('WasmtimeBridge が初期化されていません');\r\n    return null;\r\n  }\r\n\r\n  const rawSettings = toRaw(settings);\r\n  const source = Array.isArray(rawSettings) ? rawSettings : Array.from(settings ?? []);\r\n  const vector = wasmBridge.buildSpeciesParams(source);\r\n  if (!vector) {\r\n    console.warn('WasmtimeBridge.buildSpeciesParams の呼び出しに失敗しました');\r\n  }\r\n  return vector;\r\n}\r\n\r\nfunction reinitializeFlockNow() {\r\n  if (!wasmModule || !wasmBridge) return;\r\n\r\n  const pendingState = pendingStateForReinitialize?.state || null;\r\n  const oldSettingsRef = pendingStateForReinitialize?.oldSettings || previousSettingsSnapshot;\r\n  const newSettingsRef = pendingSettingsSnapshot || snapshotSettingsList(settings);\r\n  const targetSignature = getSpeciesSignature(newSettingsRef);\r\n\r\n  const vector = createSpeciesParamsVector();\r\n  if (!vector) {\r\n    console.error('Failed to create species parameter vector');\r\n    applySettingsSnapshot(previousSettingsSnapshot);\r\n    pendingStateForReinitialize = null;\r\n    pendingSettingsSnapshot = null;\r\n    return;\r\n  }\r\n\r\n  try {\r\n    wasmModule.callInitBoids(vector, 1, 6, 0.25);\r\n  } finally {\r\n    if (typeof vector.delete === 'function') {\r\n      vector.delete();\r\n    }\r\n  }\r\n  try {\r\n    wasmBridge.buildSpatialIndex(16, 0);\r\n  } catch (error) {\r\n    console.error('WasmtimeBridge.buildSpatialIndex の呼び出しに失敗しました', error);\r\n  }\r\n  const total = getTotalBoidCount();\r\n  cachedTotalBoidCount = total;\r\n  initInstancedBoids(total);\r\n\r\n  if (pendingState?.count > 0) {\r\n    restoreFlockState(pendingState, oldSettingsRef, newSettingsRef);\r\n  }\r\n\r\n  lastSpeciesSignature = targetSignature;\r\n  previousSettingsSnapshot = newSettingsRef;\r\n  pendingStateForReinitialize = null;\r\n  pendingSettingsSnapshot = null;\r\n}\r\n\r\nfunction scheduleFlockReinitialize() {\r\n  if (flockReinitTimer) {\r\n    clearTimeout(flockReinitTimer);\r\n  }\r\n\r\n  if (!pendingStateForReinitialize) {\r\n    pendingStateForReinitialize = {\r\n      state: captureFlockState(),\r\n      oldSettings: previousSettingsSnapshot,\r\n    };\r\n  }\r\n\r\n  pendingSettingsSnapshot = snapshotSettingsList(settings);\r\n\r\n  flockReinitTimer = setTimeout(() => {\r\n    flockReinitTimer = null;\r\n    reinitializeFlockNow();\r\n  }, COUNT_REINIT_DELAY_MS);\r\n}\r\n\r\nfunction initInstancedBoids(count) {\r\n  if (!scene || !boidModel || !boidModelLod || !originalMaterial || !originalMaterialLod) {\r\n    console.warn('initInstancedBoids: required assets are not ready');\r\n    return;\r\n  }\r\n\r\n  const initialized = boidInstancing.init(scene, {\r\n    count,\r\n    boidModel,\r\n    boidModelLod,\r\n    highMaterial: originalMaterial,\r\n    lowMaterial: originalMaterialLod,\r\n    predatorModel,\r\n  });\r\n\r\n  if (!initialized) {\r\n    console.error('Failed to initialize boid instancing');\r\n    return;\r\n  }\r\n\r\n  const meshes = boidInstancing.getMeshes();\r\n  instancedMeshHigh = meshes.high;\r\n  instancedMeshLow = meshes.low;\r\n\r\n  // 捕食者メッシュも最新設定に合わせて生成しておく\r\n  const predatorCount = getPredatorCount();\r\n  if (typeof boidInstancing.ensurePredatorMeshes === 'function') {\r\n    boidInstancing.ensurePredatorMeshes(predatorCount);\r\n  }\r\n\r\n  if (instancedMeshHigh?.instanceColor) {\r\n    instancedMeshHigh.instanceColor.needsUpdate = true;\r\n  }\r\n  if (instancedMeshLow?.instanceColor) {\r\n    instancedMeshLow.instanceColor.needsUpdate = true;\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction loadBoidModel(callback) {\r\n  const loader = new GLTFLoader();\r\n  const basePath = process.env.BASE_URL || '/'; // publicPath を取得\r\n  const textureLoader = new THREE.TextureLoader();\r\n  let pendingAssets = 3;\r\n  const notifyReady = () => {\r\n    pendingAssets = Math.max(0, pendingAssets - 1);\r\n    if (pendingAssets === 0) {\r\n      callback();\r\n    }\r\n  };\r\n  const texture = textureLoader.load(\r\n    './models/fish.png', // テクスチャのパス\r\n    () => {\r\n      console.log('Texture loaded successfully.');\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the texture:', error);\r\n    }\r\n  );\r\n  const textureLod = textureLoader.load(\r\n    './models/fish_lod.png', // テクスチャのパス\r\n    () => {\r\n      console.log('Texture loaded successfully.');\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the texture:', error);\r\n    }\r\n  );\r\n  texture.flipY = false;\r\n  texture.colorSpace = THREE.SRGBColorSpace; // sRGBカラー空間を使用\r\n  textureLod.flipY = false;\r\n  textureLod.colorSpace = THREE.SRGBColorSpace;\r\n\r\n  const predatorTexture = textureLoader.load(\r\n    './models/fishPredetor.png',\r\n    () => {\r\n      console.log('Predator texture loaded successfully.');\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the predator texture:', error);\r\n    }\r\n  );\r\n  predatorTexture.flipY = false;\r\n  predatorTexture.colorSpace = THREE.SRGBColorSpace;\r\n\r\n  let boidMaterial = new THREE.MeshStandardMaterial({\r\n    color: 0xffffff, // 白色\r\n    roughness: 0.5,\r\n    metalness: 0.2,\r\n    transparent: false, // 半透明を有効化\r\n    alphaTest: 0.5,    // アルファテストを設定\r\n    map: texture,      // テクスチャを設定\r\n    vertexColors: false, // 通常時は無効\r\n    vertexColor: 0xffffff\r\n  });\r\n\r\n  let boidLodMaterial = new THREE.MeshStandardMaterial({\r\n    color: 0xffffff, // 白色\r\n    roughness: 0.5,\r\n    metalness: 0.2,\r\n    transparent: false, // 半透明を有効化\r\n    alphaTest: 0.5,    // アルファテストを設定\r\n    map: textureLod,      // テクスチャを設定\r\n    vertexColors: false, // 通常時は無効\r\n    vertexColor: 0xffffff\r\n\r\n  });\r\n\r\n  originalMaterial = boidMaterial;\r\n  originalMaterialLod = boidLodMaterial;\r\n  predatorMaterial = new THREE.MeshStandardMaterial({\r\n    color: 0xffffff,\r\n    roughness: 0.5,\r\n    metalness: 0,\r\n    transparent: false,\r\n    alphaTest: 0.5,\r\n    map: predatorTexture,\r\n    vertexColors: false,\r\n    vertexColor: 0xffffff,\r\n  });\r\n  loader.load(\r\n    `./models/boidModel.glb`, // モデルのパス\r\n    (gltf) => {\r\n      boidModel = gltf.scene;\r\n\r\n      // マテリアルの transparent と alphaTest を変更\r\n      boidModel.traverse((child) => {\r\n        if (child.isMesh) {\r\n          child.material = boidMaterial; // 半透明を有効化\r\n        }\r\n      });\r\n\r\n      notifyReady();\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the model:', error);\r\n      notifyReady();\r\n    }\r\n  );\r\n\r\n  loader.load(\r\n    `./models/boidModel_lod.glb`, // LODモデルのパス\r\n    (gltf) => {\r\n      boidModelLod = gltf.scene;\r\n\r\n      // マテリアルの transparent と alphaTest を変更\r\n      boidModelLod.traverse((child) => {\r\n        if (child.isMesh) {\r\n          child.material = boidLodMaterial; // 半透明を有効化\r\n        }\r\n      });\r\n\r\n      notifyReady();\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the LOD model:', error);\r\n      notifyReady();\r\n    }\r\n  );\r\n\r\n  loader.load(\r\n    `./models/boidPredetorModel.glb`,\r\n    (gltf) => {\r\n      predatorModel = gltf.scene;\r\n      predatorModel.traverse((child) => {\r\n        if (child.isMesh) {\r\n          child.material = predatorMaterial;\r\n          child.castShadow = true;\r\n          child.receiveShadow = true;\r\n        }\r\n      });\r\n      notifyReady();\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the predator model:', error);\r\n      notifyReady();\r\n    }\r\n  );\r\n}\r\n\r\nfunction clearUnitVisuals() {\r\n  for (const mesh of unitSpheres) scene.remove(mesh);\r\n  for (const line of unitLines) scene.remove(line);\r\n  unitSpheres = [];\r\n  unitLines = [];\r\n}\r\n\r\n// レイヤ制限付き再帰描画\r\nfunction drawUnitTree(unit, layer = 0) {\r\n  // スフィア: スライダで制御\r\n  if (\r\n    layer >= (maxDepth - unitLayer.value + 1) &&\r\n    (unit.children == null || unit.children.size() === 0 || layer === maxDepth)\r\n  ) {\r\n    let sphere;\r\n    if (unitSpheres.length > 0) {\r\n      sphere = unitSpheres.pop(); // 再利用\r\n      sphere.visible = true;\r\n    } else {\r\n      const geometry = new THREE.SphereGeometry(unit.radius, 16, 16);\r\n      const material = new THREE.MeshBasicMaterial({\r\n        color: new THREE.Color().setHSL(0.1, 1, 0.7 - 0.4 * (layer / maxDepth)),\r\n        wireframe: true,\r\n        opacity: 0.3,\r\n        transparent: true,\r\n      });\r\n      sphere = new THREE.Mesh(geometry, material);\r\n      scene.add(sphere);\r\n    }\r\n    sphere.position.set(unit.center.x, unit.center.y, unit.center.z);\r\n    unitSpheres.push(sphere);\r\n  }\r\n\r\n  // 線: チェックボックスで全て表示、色は深さでグラデ\r\n  if (showUnitLines.value && unit.children && typeof unit.children.size === 'function' && unit.children.size() > 0) {\r\n    for (let i = 0; i < unit.children.size(); i++) {\r\n      const child = unit.children.get(i);\r\n      let line;\r\n      if (unitLines.length > 0) {\r\n        line = unitLines.pop(); // 再利用\r\n        line.visible = true;\r\n      } else {\r\n        const lineGeometry = new THREE.BufferGeometry();\r\n        const lineMaterial = new THREE.LineBasicMaterial({\r\n          color: new THREE.Color().setHSL(0.35, 1, 0.7 - 0.4 * (layer / maxDepth)),\r\n        });\r\n        line = new THREE.Line(lineGeometry, lineMaterial);\r\n        scene.add(line);\r\n      }\r\n      const points = [\r\n        new THREE.Vector3(unit.center.x, unit.center.y, unit.center.z),\r\n        new THREE.Vector3(child.center.x, child.center.y, child.center.z),\r\n      ];\r\n      line.geometry.setFromPoints(points);\r\n      unitLines.push(line);\r\n    }\r\n  }\r\n\r\n  // 再帰\r\n  if (unit.children && typeof unit.children.size === 'function' && unit.children.size() > 0) {\r\n    for (let i = 0; i < unit.children.size(); i++) {\r\n      const child = unit.children.get(i);\r\n      drawUnitTree(child, layer + 1);\r\n    }\r\n  }\r\n}\r\nlet lastTime = performance.now(); // 前回のフレームのタイムスタンプ\r\n\r\nfunction animate() {\r\n  stats?.begin();\r\n\r\n  const currentTime = performance.now();\r\n  const deltaTime = (currentTime - lastTime) / 1000;\r\n  lastTime = currentTime;\r\n\r\n  if (!paused.value) {\r\n    shaderTime += deltaTime;\r\n  }\r\n  updateInstancingMaterialUniforms(shaderTime);\r\n\r\n  const count = stepSimulationAndUpdateState(paused.value ? 0 : deltaTime);\r\n\r\n  const meshes = boidInstancing.getMeshes();\r\n  instancedMeshHigh = meshes.high;\r\n  instancedMeshLow = meshes.low;\r\n  const pipelineReady = fogPipeline?.isReady?.() ?? false;\r\n\r\n  if (!instancedMeshHigh || !instancedMeshLow) {\r\n    controls.update();\r\n    updateParticleUniforms();\r\n    if (pipelineReady) {\r\n      fogPipeline.updateCameraUniforms(camera);\r\n      fogPipeline.render(deltaTime);\r\n    } else {\r\n      renderer.render(scene, camera);\r\n    }\r\n    stats?.end();\r\n    stats?.update();\r\n    animationTimer = setTimeout(animate, FRAME_INTERVAL);\r\n    return;\r\n  }\r\n\r\n  const { positions, orientations, velocities } = getWasmViews(count);\r\n  if ((frameCounter++ & 63) === 0) {\r\n    wasmBridge?.currentFirstBoidX();\r\n  }\r\n\r\n  const predatorCount = getPredatorCount();\r\n  const updateInfo = boidInstancing.update({\r\n    count,\r\n    positions,\r\n    orientations,\r\n    velocities,\r\n    cameraPosition: camera.position,\r\n    predatorCount,\r\n  });\r\n\r\n  const visibleCount = updateInfo.visibleCount ?? Math.max(0, count - predatorCount);\r\n\r\n  if (showUnitColors.value && instancedMeshHigh.instanceColor && instancedMeshLow.instanceColor) {\r\n    const unitMappings = wasmBridge?.getUnitMappings(count);\r\n    if (unitMappings) {\r\n      for (let i = 0; i < visibleCount; i++) {\r\n        let unitId = -1;\r\n        for (let j = 0; j < unitMappings.length; j += 2) {\r\n          if (unitMappings[j] === i) {\r\n            unitId = unitMappings[j + 1];\r\n            break;\r\n          }\r\n        }\r\n\r\n        const color = unitId >= 0\r\n          ? new THREE.Color().setHSL((unitId % 100) / 100, 0.8, 0.6)\r\n          : new THREE.Color(1, 0, 0);\r\n\r\n        instancedMeshHigh.setColorAt(i, color);\r\n        instancedMeshLow.setColorAt(i, color);\r\n      }\r\n      instancedMeshHigh.instanceColor.needsUpdate = true;\r\n      instancedMeshLow.instanceColor.needsUpdate = true;\r\n    }\r\n  } else if (lastShowUnitColors && instancedMeshHigh.instanceColor && instancedMeshLow.instanceColor) {\r\n    const whiteColor = new THREE.Color(1, 1, 1);\r\n    for (let i = 0; i < visibleCount; i++) {\r\n      instancedMeshHigh.setColorAt(i, whiteColor);\r\n      instancedMeshLow.setColorAt(i, whiteColor);\r\n    }\r\n    instancedMeshHigh.instanceColor.needsUpdate = true;\r\n    instancedMeshLow.instanceColor.needsUpdate = true;\r\n    console.log('✓ Reset vertex colors to white (OFF mode)');\r\n  }\r\n\r\n  lastShowUnitColors = showUnitColors.value;\r\n\r\n  controls.update();\r\n  updateParticleUniforms();\r\n  if (pipelineReady) {\r\n    fogPipeline.updateCameraUniforms(camera);\r\n    fogPipeline.render(deltaTime);\r\n  } else {\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  stats?.end();\r\n  stats?.update();\r\n\r\n  animationTimer = setTimeout(animate, FRAME_INTERVAL);\r\n}\r\n\r\nfunction drawTreeStructure(treeData) {\r\n  const drawNode = (node, parentPosition = null) => {\r\n    const position = new THREE.Vector3(\r\n      node.center[0],\r\n      node.center[1],\r\n      node.center[2]\r\n    );\r\n    if (parentPosition) {\r\n      controls.update();\r\n      updateParticleUniforms();\r\n      const geometry = new THREE.BufferGeometry().setFromPoints([\r\n        parentPosition,\r\n        position,\r\n      ]);\r\n      const material = new THREE.LineBasicMaterial({ color: 0xffffff });\r\n      const line = new THREE.Line(geometry, material);\r\n      scene.add(line);\r\n    }\r\n\r\n    if (node.children) {\r\n      node.children.forEach((child) => drawNode(child, position));\r\n    }\r\n  };\r\n\r\n  treeData.forEach((rootNode) => drawNode(rootNode));\r\n}\r\nfunction startSimulation() {\r\n  reinitializeFlockNow();\r\n  animate();\r\n}\r\n\r\nonMounted(() => {\r\n  if (!tuningInitialized.value) {\r\n    updateSystemSettings(toRaw(systemSettings));\r\n    tuningInitialized.value = true;\r\n    applySystemSettingsToWasm();\r\n    saveToStorage();\r\n  }\r\n\r\n  initThreeJS();\r\n  loadBoidModel(() => {\r\n    console.log('Boid model loaded successfully.');\r\n\r\n    stats = new StatsGl({\r\n      trackGPU: true,\r\n      trackHz: true,\r\n      trackCPT: true,\r\n      logsPerSecond: 4,\r\n      graphsPerSecond: 30,\r\n      samplesLog: 40,\r\n      samplesGraph: 10,\r\n      precision: 2,\r\n      horizontal: true,\r\n      minimal: false,\r\n      mode: 0,\r\n    });\r\n\r\n    const statsInitTarget = renderer?.domElement ?? document.body;\r\n\r\n    const ensureStatsOverlay = () => {\r\n      const statsElement =\r\n        (typeof stats?.domElement !== 'undefined' ? stats.domElement : null) ||\r\n        (typeof stats?.getDom === 'function' ? stats.getDom() : null) ||\r\n        stats?.dom ||\r\n        stats?.container ||\r\n        stats?.wrapper ||\r\n        null;\r\n\r\n      if (statsElement) {\r\n        if (!statsElement.parentElement) {\r\n          document.body.appendChild(statsElement);\r\n        }\r\n        positionStatsOverlay(statsElement);\r\n      }\r\n    };\r\n\r\n    const initPromise =\r\n      stats && typeof stats.init === 'function'\r\n        ? Promise.resolve(stats.init(statsInitTarget))\r\n        : Promise.resolve();\r\n\r\n    initPromise\r\n      .then(() => {\r\n        if (typeof stats?.patchThreeRenderer === 'function') {\r\n          stats.patchThreeRenderer(renderer);\r\n        }\r\n        ensureStatsOverlay();\r\n      })\r\n      .catch((error) => {\r\n        console.error('Failed to initialize stats-gl:', error);\r\n        ensureStatsOverlay();\r\n      });\r\n\r\n    startSimulation();\r\n    initBackgroundAudioPlayback();\r\n  });\r\n\r\n  window.addEventListener('keydown', handleKeydown);\r\n});\r\n\r\n// グローバル調整値の変更を監視し、wasm 側へ逐次反映する。\r\nwatch(\r\n  systemSettings,\r\n  () => {\r\n    if (!tuningInitialized.value) {\r\n      return;\r\n    }\r\n    applySystemSettingsToWasm();\r\n    saveToStorage();\r\n  },\r\n  { deep: true }\r\n);\r\n\r\nwatch(\r\n  settings,\r\n  () => {\r\n    if (wasmModule && wasmModule.setGlobalSpeciesParamsFromJS) {\r\n      const vector = createSpeciesParamsVector();\r\n      if (vector) {\r\n        try {\r\n          wasmModule.setGlobalSpeciesParamsFromJS(vector, 1);\r\n        } finally {\r\n          if (typeof vector.delete === 'function') {\r\n            vector.delete();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    saveToStorage();\r\n\r\n    const signature = getSpeciesSignature(settings);\r\n    if (signature !== lastSpeciesSignature) {\r\n      scheduleFlockReinitialize();\r\n    } else {\r\n      if (flockReinitTimer) {\r\n        clearTimeout(flockReinitTimer);\r\n        flockReinitTimer = null;\r\n      }\r\n      pendingStateForReinitialize = null;\r\n      pendingSettingsSnapshot = null;\r\n      previousSettingsSnapshot = snapshotSettingsList(settings);\r\n    }\r\n\r\n    const predators = getPredatorCount();\r\n    if (typeof boidInstancing.ensurePredatorMeshes === 'function') {\r\n      boidInstancing.ensurePredatorMeshes(predators);\r\n    }\r\n    const predatorMeshes =\r\n      typeof boidInstancing.getPredatorMeshes === 'function'\r\n        ? boidInstancing.getPredatorMeshes()\r\n        : [];\r\n    for (const mesh of predatorMeshes) {\r\n      mesh.visible = false;\r\n    }\r\n  },\r\n  { deep: true }\r\n);\r\n\r\nfunction resetSettings(presetList) {\r\n  if (Array.isArray(presetList) && presetList.length > 0) {\r\n    applySettingsSnapshot(presetList);\r\n  } else {\r\n    resetToDefaults();\r\n  }\r\n  updateSystemSettings(DEFAULT_TUNING_SETTINGS);\r\n  saveToStorage();\r\n  if (tuningInitialized.value) {\r\n    applySystemSettingsToWasm();\r\n  }\r\n}\r\n\r\n// Unit可視化の変更を監視\r\nwatch(showUnits, (newValue) => {\r\n  console.log('showUnits changed to:', newValue);\r\n  if (!newValue) {\r\n    // Unit可視化をオフにした場合、既存の可視化要素をクリア\r\n    clearUnitVisuals();\r\n  }\r\n});\r\n\r\n// Unit表示モードの変更を監視\r\nwatch([showUnitSpheres, showUnitLines], ([newSpheres, newLines]) => {\r\n  console.log('Unit display mode changed - Spheres:', newSpheres, 'Lines:', newLines);\r\n  // 表示モードが変更されたら既存の表示をクリアして再描画\r\n  if (showUnits.value) {\r\n    clearUnitVisuals();\r\n  }\r\n});\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Arial, sans-serif;\r\n  padding: 0;\r\n  margin: 0;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.settings {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.info {\r\n  margin-top: 20px;\r\n}\r\n\r\n.three-container {\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 0;\r\n  display: block;\r\n  border: none;\r\n  overflow: hidden;\r\n  background: #0a1e3a;\r\n}\r\n\r\n.ui-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  color: #fff;\r\n  z-index: 2;\r\n  pointer-events: none;\r\n}\r\n\r\n.ui-overlay * {\r\n  pointer-events: auto;\r\n}\r\n\r\n.add-species-button {\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.tuning-settings {\r\n  pointer-events: none;\r\n  display: inline-block;\r\n  margin-top: 10px;\r\n}\r\n\r\n.tuning-settings * {\r\n  pointer-events: auto;\r\n}\r\n\r\n.tuning-settings .species-section {\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-radius: 5px;\r\n  background-color: rgba(255, 255, 255, 0.05);\r\n  pointer-events: auto;\r\n  position: relative;\r\n  overflow: visible;\r\n  max-width: 100%;\r\n  width: fit-content;\r\n  min-width: 260px;\r\n}\r\n\r\n.tuning-settings .species-header {\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  border-radius: 5px 5px 0 0;\r\n  user-select: none;\r\n  pointer-events: auto;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.tuning-settings .species-header:hover {\r\n  background-color: rgba(255, 255, 255, 0.15);\r\n}\r\n\r\n.tuning-settings .species-title {\r\n  flex: 1;\r\n}\r\n\r\n.tuning-settings .species-content {\r\n  padding: 10px;\r\n  pointer-events: auto;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n}\r\n\r\n.tuning-settings .setting-row {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 8px;\r\n  width: 100%;\r\n}\r\n\r\n.tuning-settings .setting-row label {\r\n  width: 150px;\r\n  text-align: left;\r\n  margin-right: 10px;\r\n  flex-shrink: 0;\r\n  line-height: 1.3;\r\n}\r\n\r\n.tuning-settings .setting-row input[type=\"range\"] {\r\n  width: 140px;\r\n  min-width: 100px;\r\n  max-width: 220px;\r\n  margin: 0 10px;\r\n}\r\n\r\n.tuning-settings .value-input {\r\n  width: 70px;\r\n  padding: 2px 4px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 3px;\r\n  background: transparent;\r\n  color: inherit;\r\n  font-size: inherit;\r\n}\r\n\r\n.tuning-settings .value-input:focus {\r\n  outline: none;\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 3px rgba(0, 123, 255, 0.3);\r\n}\r\n</style>","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=82d75b58&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from 'vue';\r\nimport App from './App.vue';\r\n\r\n// SharedArrayBuffer を利用するため COOP/COEP が成立する固定パスから wasm をロードする\r\nconst publicBase = (process.env.BASE_URL || '/').replace(/\\/*$/, '/');\r\nconst wasmPublicBase = `${publicBase}static/js`;\r\nconst wasmJsUrl = `${wasmPublicBase}/wasm_boids.js`;\r\nconst wasmBinaryUrl = `${wasmPublicBase}/wasm_boids.wasm`;\r\n\r\nasync function bootstrap() {\r\n    try {\r\n        const BoidsModule = await import(/* webpackIgnore: true */ wasmJsUrl);\r\n        if (!BoidsModule?.default) {\r\n            throw new Error(`WASM module loader not found at: ${wasmJsUrl}`);\r\n        }\r\n\r\n        const Module = await BoidsModule.default({\r\n            locateFile: (path) => (path.endsWith('.wasm') ? wasmBinaryUrl : path),\r\n        });\r\n\r\n        // デバッグ確認用にグローバルへ公開しつつ初期化ログを出力\r\n        if (typeof window !== 'undefined') {\r\n            window.wasmModule = Module;\r\n        }\r\n        console.log('Wasm module initialized:', Module);\r\n\r\n        const app = createApp(App);\r\n        app.provide('wasmModule', Module);\r\n        app.mount('#app');\r\n    } catch (error) {\r\n        console.error('Failed to initialise WASM module:', error);\r\n    }\r\n}\r\n\r\nbootstrap();","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t57: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkwasm_boids\"] = self[\"webpackChunkwasm_boids\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], () => (__webpack_require__(957)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["emit","props","settings","editingCount","editingCohesion","editingCohesionRange","editingSeparation","editingSeparationRange","editingAlignment","editingAlignmentRange","editingMaxSpeed","editingMaxTurnAngle","editingMaxNeighbors","editingHorizontalTorque","editingTorqueStrength","editingLambda","editingTau","editingPredatorAlertRadius","countInput","cohesionInput","cohesionRangeInput","separationInput","separationRangeInput","alignmentInput","alignmentRangeInput","maxSpeedInput","maxTurnAngleInput","maxNeighborsInput","horizontalTorqueInput","torqueStrengthInput","lambdaInput","tauInput","predatorAlertRadiusInput","countDraft","count","async","startEditCount","value","focus","select","cancelCountEdit","applyCountDraft","nextValue","Math","max","round","Number","isFinite","commitCountFromSlider","commitCountFromInput","emitRemove","startEditCohesion","startEditCohesionRange","startEditSeparation","startEditSeparationRange","startEditAlignment","startEditAlignmentRange","startEditPredatorAlertRadius","startEditMaxSpeed","startEditMaxTurnAngle","startEditMaxNeighbors","startEditHorizontalTorque","startEditTorqueStrength","startEditLambda","startEditTau","stopEditCohesion","stopEditCohesionRange","stopEditSeparation","stopEditSeparationRange","stopEditAlignment","stopEditAlignmentRange","stopEditPredatorAlertRadius","stopEditMaxSpeed","stopEditMaxTurnAngle","stopEditMaxNeighbors","stopEditHorizontalTorque","stopEditTorqueStrength","stopEditLambda","stopEditTau","__exports__","BoidInstancing","constructor","tailAnimation","tripleBufferSize","hiddenPosition","identityQuaternion","lodNearDistanceSq","lodMidDistanceSq","this","streamUsage","scene","instancedMeshHigh","instancedMeshLow","instancingMaterials","Set","bufferSetHigh","bufferSetLow","tailPhaseSeeds","bufferCursor","previousVelocities","previousLodFlags","predatorModel","predatorMeshes","predatorMeshCountCache","init","boidModel","boidModelLod","highMaterial","lowMaterial","console","error","children","length","geometry","dispose","highMaterialClone","clone","lowMaterialClone","patchMaterial","highGeometry","lowGeometry","ensureBodyCoordAttribute","configureInstancedMesh","add","createBufferSet","resetBufferSetToHidden","createTailPhaseArray","applyTailPhaseSeeds","applyBufferSet","instanceMatrix","setUsage","ensurePredatorMeshes","update","positions","orientations","velocities","cameraPosition","predatorCount","visibleCount","ensureTailRuntimeBuffers","lodFlags","ensureLodFlagBuffer","currentIndex","nextIndex","highPosAttr","pos","highQuatAttr","quat","highTailParamsAttr","tailParams","lowPosAttr","lowQuatAttr","lowTailParamsAttr","highPosArray","array","highQuatArray","highTailParamsArray","lowPosArray","lowQuatArray","lowTailParamsArray","highTransformTouched","lowTransformTouched","highTailTouched","lowTailTouched","camX","x","camY","y","camZ","z","predatorStartIndex","mesh","visible","hiddenPos","idQuat","prevVel","i","basePos","baseQuat","tailIndex","px","py","pz","dx","dy","dz","distSq","isNear","isMid","animateTail","qx","qy","qz","qw","isPredator","meshIndex","predatorMesh","position","set","quaternion","vx","vy","vz","speed","hypot","prevVx","prevVy","prevVz","prevLen","turnAmount","crossY","dot","atan2","tailSpeedValue","tailTurnValue","driveValue","needsUpdate","forEachInstancingMaterial","callback","material","getMeshes","high","low","getPredatorMeshes","setTailUniformTime","time","uniforms","uTailTime","userData","instancingPatched","warn","onBeforeCompile","shader","Object","entries","forEach","key","uniform","vertexShader","replace","createDepthMaterial","sourceMaterial","depthMaterial","depthPacking","alphaTest","map","alphaMap","transparent","createDistanceMaterial","distanceMaterial","castShadow","receiveShadow","frustumCulled","customDepthMaterial","customDistanceMaterial","white","setColorAt","instanceColor","createAttributeSet","itemSize","ArrayType","Float32Array","attributes","attr","push","tailPhase","bufferSet","fill","index","setAttribute","random","PI","seeds","targetLength","Uint8Array","getAttribute","minX","Infinity","minY","minZ","maxX","maxY","maxZ","ix","rangeX","rangeY","rangeZ","axis","min","range","bodyCoord","denom","target","pop","remove","traverse","child","isMesh","clear","FogPipeline","fogConfig","config","composer","heightFogPass","heightFogRenderTarget","renderer","camera","heightFog","width","height","rtOptions","depthBuffer","stencilBuffer","depthTexture","format","type","EffectComposer","renderPass","RenderPass","addPass","ssaoPass","SSAOPass","kernelRadius","minDistance","maxDistance","bloomStrength","bloomRadius","bloomThreshold","bloomPass","UnrealBloomPass","createHeightFogShader","ShaderPass","originalRender","render","bind","passRenderer","writeBuffer","readBuffer","deltaTime","maskActive","tDepth","needsSwap","applyFogConfigToUniforms","depthTest","depthWrite","blending","toneMapped","renderToScreen","resize","setSize","delta","isReady","updateCameraUniforms","pass","targetCamera","cameraNear","near","cameraFar","far","projectionMatrixInverse","copy","cameraMatrixWorld","matrixWorld","updateConfig","nextConfig","defaults","buildFogDefaults","finalConfig","tDiffuse","fogColor","cloneColor","color","distanceStart","distanceEnd","distanceExponent","distanceControlPoint1","cloneVector2","distanceControlPoint2","surfaceLevel","heightFalloff","heightExponent","maxOpacity","fragmentShader","PARTICLE_BASE_SPREAD_DESKTOP","PARTICLE_BASE_SPREAD_MOBILE","PARTICLE_BASE_MAX_DISTANCE_DESKTOP","PARTICLE_BASE_MAX_DISTANCE_MOBILE","DEFAULT_FLOW_DIR","DEFAULT_LAT1","DEFAULT_LAT2","TEMP_DIR","TEMP_AXIS","TEMP_LAT1","TEMP_LAT2","ParticleField","isMobileDevice","Boolean","controls","particlePoints","particleMaterial","elapsedTime","capabilities","isWebGL2","setDrawRange","baseSpread","baseMaxDistance","glslVersion","uTime","uOrigin","uFlowDir","uLat1","uLat2","uSpread","uMaxDistance","uBaseSpeed","uJitterAmp","uSizePx","uFadeNear","uFadeFar","uColorNear","uColorFar","PARTICLE_VERTEX_SHADER","PARTICLE_FRAGMENT_SHADER","baseTargetDistance","distanceTo","renderOrder","setWorldBasis","setTime","timeSeconds","advanceTime","deltaSeconds","flowDir","dir","normalize","abs","lat1","cross","lengthSq","lat2","targetScene","getMaterial","WasmtimeBridge","wasmModule","Error","wasm","latestStatePtr","latestStateHeaderPtr","latestStateHeaderView","latestPositionsPtr","latestVelocitiesPtr","latestOrientationsPtr","latestBoidCount","cachedHeapBuffer","cachedPositionsPtr","cachedOrientationsPtr","cachedVelocitiesPtr","cachedSpeciesIdsPtr","cachedPositionsView","cachedOrientationsView","cachedVelocitiesView","cachedSpeciesIdsView","cachedPositionsCount","cachedOrientationsCount","cachedVelocitiesCount","cachedSpeciesIdsCount","cachedSpeciesIdsBuffer","stepSimulationHandle","createWrappedFunction","buildHandle","exportTreeStructureHandle","boidUnitMappingPtrHandle","currentFirstBoidXHandle","speciesIdsPtrHandle","syncReadToWriteBuffersHandle","getSimulationTuningParamsHandle","setSimulationTuningParamsHandle","getSimulationTuningParams","handle","ensureHandle","setSimulationTuningParams","params","toNumber","fallback","num","threatDecay","threatGain","maxEscapeWeight","baseEscapeStrength","escapeStrengthPerThreat","cohesionBoost","separationMinFactor","alignmentBoost","buildSpeciesParams","Array","isArray","vector","VectorSpeciesParams","raw","push_back","species","floor","speciesId","cohesion","separation","alignment","maxSpeed","minSpeed","maxTurnAngle","separationRange","alignmentRange","cohesionRange","maxNeighbors","lambda","tau","horizontalTorque","velocityEpsilon","torqueStrength","bodyHeadLength","bodyTailLength","bodyRadius","predatorAlertRadius","stepSimulation","dt","statePtr","heapU8Buffer","HEAPU8","buffer","DataView","getUint32","getInt32","getBuffers","speciesIds","Int32Array","heapBuffer","HEAPF32","heapBufferI32","HEAP32","speciesPtr","captureState","currentCount","restoreState","previousState","oldSettings","newSettings","prevPositions","prevVelocities","prevOrientations","oldRanges","buildSpeciesRanges","newRanges","oldRangeMap","Map","info","name","restored","newInfo","oldInfo","get","transferable","srcIndex","start","dstIndex","srcPosBase","dstPosBase","srcVelBase","dstVelBase","srcOriBase","dstOriBase","syncReadToWriteBuffers","buildSpatialIndex","arg0","arg1","exportTreeStructure","currentFirstBoidX","getUnitMappings","ptr","returnType","argTypes","cwrap","list","ranges","offset","item","STORAGE_KEY","DEFAULT_SPECIES_FALLBACK","createFlockSettingsStore","defaultSettings","defaultSystem","defaultTemplates","sanitizeSpeciesList","systemDefaults","systemSettings","replaceSettings","assignSystemSettings","loadFromStorage","totalBoids","getTotalBoidCount","localStorage","saved","getItem","parsed","JSON","parse","system","saveToStorage","snapshot","entry","setItem","stringify","nextList","sanitized","splice","patch","merged","keys","resetToDefaults","addSpecies","template","basePool","fallbackTemplate","find","candidate","sanitizeSpeciesEntry","cloneSpeciesTemplate","ensureUniqueName","s","removeSpecies","removed","reduce","sum","fallbackList","takenNames","clean","base","toFinite","fallbackValue","result","speciesName","trim","taken","defaultName","has","FRAME_INTERVAL","COUNT_REINIT_DELAY_MS","TRIPLE_BUFFER_SIZE","HIDDEN_POSITION","SIN_LUT_SIZE","LOD_NEAR_DISTANCE_SQ","LOD_MID_DISTANCE_SQ","wasmBridge","navigator","test","userAgent","mobileBoidCount","DEFAULT_SETTINGS","DEFAULT_TUNING_SETTINGS","flockStore","syncSystemSettings","addSpeciesFromStore","removeSpeciesFromStore","tuningInitialized","sanitizeTuningParams","updateSystemSettings","newValues","payload","applySystemSettingsToWasm","snapshotSettingsList","cachedTotalBoidCount","lastSpeciesSignature","getSpeciesSignature","previousSettingsSnapshot","pendingStateForReinitialize","pendingSettingsSnapshot","applySettingsSnapshot","added","threeContainer","backgroundAudio","fogPipeline","particleField","paused","showUnits","showUnitSpheres","showUnitLines","showUnitColors","unitLayer","unitSpheres","unitLines","stats","glContext","frameCounter","flockReinitTimer","animationTimer","positionStatsOverlay","element","style","padding","pointerEvents","display","flexDirection","alignItems","gap","maxWidth","boxSizing","zIndex","handleKeydown","e","code","initThreeJS","window","innerWidth","innerHeight","background","OCEAN_COLORS","DEEP_BLUE","createOceanSphere","lookAt","antialias","depth","toneMapping","toneMappingExposure","outputEncoding","setPixelRatio","devicePixelRatio","shadowMap","enabled","getContext","appendChild","domElement","aspect","updateProjectionMatrix","OrbitControls","enableDamping","dampingFactor","groundGeo","groundMat","createFadeOutGroundMaterial","ground","rotation","ambientLight","toHex","AMBIENT_LIGHT","dirLight","SUN_LIGHT","shadow","left","right","top","bottom","mapSize","bias","normalBias","initParticleSystem","heightFogConfig","addEventListener","onWindowResize","createSinCosLutTexture","size","data","angle","sinValue","sin","cosValue","cos","texture","wrapS","wrapT","magFilter","minFilter","generateMipmaps","flipY","IDENTITY_QUATERNION","sinCosLutTexture","uTailAmplitude","uTailFrequency","uTailPhaseStride","uTailTurnStrength","uTailSpeedScale","uTailRight","uTailForward","uTailUp","uTailEnable","uSinLut","uLutSize","boidInstancing","SKY_HIGHLIGHT","SKY_BLUE","SEAFLOOR","FOG","SIDE_LIGHT1","SIDE_LIGHT2","BOTTOM_LIGHT","colorStr","parseInt","canvas","document","createElement","context","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","colorSpace","sphereGeo","sphereMat","side","fog","oceanSphere","textureLoader","load","roughness","metalness","updateInstancingMaterialUniforms","shaderTime","updateParticleUniforms","initBackgroundAudioPlayback","audioEl","volume","loop","tryPlay","playResult","play","then","catch","resume","removeEventListener","once","stepSimulationAndUpdateState","getWasmViews","captureFlockState","restoreFlockState","originalMaterial","originalMaterialLod","predatorMaterial","lastShowUnitColors","getPredatorCount","specList","join","createSpeciesParamsVector","rawSettings","source","from","reinitializeFlockNow","pendingState","state","oldSettingsRef","newSettingsRef","targetSignature","callInitBoids","delete","total","initInstancedBoids","scheduleFlockReinitialize","clearTimeout","setTimeout","initialized","meshes","loadBoidModel","loader","GLTFLoader","pendingAssets","notifyReady","log","undefined","textureLod","predatorTexture","boidMaterial","vertexColors","vertexColor","boidLodMaterial","gltf","clearUnitVisuals","line","lastTime","performance","now","animate","begin","currentTime","pipelineReady","end","updateInfo","unitMappings","unitId","j","setHSL","whiteColor","startSimulation","resetSettings","presetList","trackGPU","trackHz","trackCPT","logsPerSecond","graphsPerSecond","samplesLog","samplesGraph","precision","horizontal","minimal","mode","statsInitTarget","body","ensureStatsOverlay","statsElement","getDom","dom","container","wrapper","parentElement","initPromise","Promise","resolve","patchThreeRenderer","deep","setGlobalSpeciesParamsFromJS","signature","predators","newValue","newSpheres","newLines","publicBase","wasmPublicBase","wasmJsUrl","wasmBinaryUrl","bootstrap","BoidsModule","import","default","Module","locateFile","path","endsWith","app","App","provide","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","fulfilled","every","r","d","definition","o","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}