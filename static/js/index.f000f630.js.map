{"version":3,"file":"static/js/index.f000f630.js","mappings":"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","sources":["webpack://wasm-boids/./src/components/Settings.vue","webpack://wasm-boids/./src/components/Settings.vue?b3ff","webpack://wasm-boids/./src/App.vue","webpack://wasm-boids/./src/App.vue?7ccd","webpack://wasm-boids/./src/main.js","webpack://wasm-boids/./src/wasm/build/wasm_boids.js","webpack://wasm-boids/webpack/bootstrap","webpack://wasm-boids/webpack/runtime/chunk loaded","webpack://wasm-boids/webpack/runtime/define property getters","webpack://wasm-boids/webpack/runtime/get javascript chunk filename","webpack://wasm-boids/webpack/runtime/global","webpack://wasm-boids/webpack/runtime/hasOwnProperty shorthand","webpack://wasm-boids/webpack/runtime/publicPath","webpack://wasm-boids/webpack/runtime/jsonp chunk loading","webpack://wasm-boids/webpack/startup"],"sourcesContent":["// filepath: d:\\GitHub\\wasm-boids\\src\\components\\Settings.vue\r\n<template>\r\n  <div class=\"settings\">\r\n    <div class=\"setting-row\">\r\n      <label>群れの数<br> (Flock Size):</label>\r\n      <input type=\"range\" v-model.number=\"settings.flockSize\" min=\"10\" max=\"10000\" step=\"1\" />\r\n      <span>{{ settings.flockSize }}</span>\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>凝集<br> (Cohesion):</label>\r\n      <input type=\"range\" v-model.number=\"settings.cohesion\" min=\"0\" max=\"10\" step=\"0.01\" />\r\n      <span>{{ settings.cohesion }}</span>\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>凝集範囲<br> (Cohesion Range):</label>\r\n      <input type=\"range\" v-model.number=\"settings.cohesionRange\" min=\"1\" max=\"300\" step=\"1\" />\r\n      <span>{{ settings.cohesionRange }}</span>\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>分離<br> (Separation):</label>\r\n      <input type=\"range\" v-model.number=\"settings.separation\" min=\"0\" max=\"10\" step=\"0.01\" />\r\n      <span>{{ settings.separation }}</span>\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>分離範囲<br> (Separation Range):</label>\r\n      <input type=\"range\" v-model.number=\"settings.separationRange\" min=\"1\" max=\"100\" step=\"1\" />\r\n      <span>{{ settings.separationRange }}</span>\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>整列<br> (Alignment):</label>\r\n      <input type=\"range\" v-model.number=\"settings.alignment\" min=\"0\" max=\"10\" step=\"0.01\" />\r\n      <span>{{ settings.alignment }}</span>\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>整列範囲<br> (Alignment Range):</label>\r\n      <input type=\"range\" v-model.number=\"settings.alignmentRange\" min=\"1\" max=\"100\" step=\"1\" />\r\n      <span>{{ settings.alignmentRange }}</span>\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>最大速度:<br> (Max Speed):</label>\r\n      <input type=\"range\" v-model.number=\"settings.maxSpeed\" min=\"0.1\" max=\"1\" step=\"0.01\" />\r\n      <span>{{ settings.maxSpeed }}</span>\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>最大旋回角:<br> (Max Turn Angle):</label>\r\n      <input type=\"range\" v-model.number=\"settings.maxTurnAngle\" min=\"0.001\" max=\"0.2\" step=\"0.001\" />\r\n      <span>{{ settings.maxTurnAngle }}</span>\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>最大近傍数<br>(Max Neighbors):</label>\r\n      <input type=\"range\" v-model.number=\"settings.maxNeighbors\" min=\"1\" max=\"32\" step=\"1\" />\r\n      <span>{{ settings.maxNeighbors }}</span>\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>吸引減衰λ<br>(Lambda):</label>\r\n      <input type=\"range\" v-model.number=\"settings.lambda\" min=\"0.001\" max=\"0.2\" step=\"0.001\" />\r\n      <span>{{ settings.lambda }}</span>\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>水平化トルク<br>(Horizontal Torque):</label>\r\n      <input type=\"range\" v-model.number=\"settings.horizontalTorque\" min=\"0.001\" max=\"0.1\" step=\"0.001\" />\r\n      <span>{{ settings.horizontalTorque }}</span>\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>速度閾値ε<br>(Velocity Epsilon):</label>\r\n      <input type=\"range\" v-model.number=\"settings.velocityEpsilon\" min=\"0.00001\" max=\"0.01\" step=\"0.00001\" />\r\n      <span>{{ settings.velocityEpsilon }}</span>\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>回転トルク強度<br>(Torque Strength):</label>\r\n      <input type=\"range\" v-model.number=\"settings.torqueStrength\" min=\"0.001\" max=\"5\" step=\"0.001\" />\r\n      <span>{{ settings.torqueStrength }}</span>\r\n    </div>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    settings: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.settings {\r\n  margin-bottom: 20px;\r\n  width: 100%;\r\n  min-width: 260px;\r\n  max-width: 520px;\r\n  box-sizing: border-box;\r\n}\r\n.setting-row {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 8px;\r\n  width: 100%;\r\n}\r\n.setting-row label {\r\n  width: 130px;           /* ← 幅を固定して左端を揃える */\r\n  text-align: left;\r\n  margin-right: 10px;\r\n  flex-shrink: 0;\r\n  display: inline-block;\r\n}\r\n.setting-row input[type=\"range\"] {\r\n  width: 120px;           /* 全スライダーで統一 */\r\n  min-width: 80px;\r\n  max-width: 200px;\r\n  margin: 0 10px;\r\n  flex: none;\r\n  display: inline-block;\r\n}\r\n.setting-row span {\r\n  width: 60px;\r\n  text-align: left;\r\n  display: inline-block;\r\n  flex-shrink: 0;\r\n}\r\n</style>","import { render } from \"./Settings.vue?vue&type=template&id=c09bfe72&scoped=true\"\nimport script from \"./Settings.vue?vue&type=script&lang=js\"\nexport * from \"./Settings.vue?vue&type=script&lang=js\"\n\nimport \"./Settings.vue?vue&type=style&index=0&id=c09bfe72&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-c09bfe72\"]])\n\nexport default __exports__","<template>\r\n  <div id=\"app\">\r\n    <div class=\"ui-overlay\">\r\n      <h1>Boids Simulation</h1>\r\n      <details>\r\n        <summary>Settings</summary>\r\n        <Settings :settings=\"settings\" />\r\n        <button @click=\"resetSettings\" style=\"margin-bottom:1em;\">リセット</button>\r\n        <div>\r\n          <label>\r\n            <input type=\"checkbox\" v-model=\"showUnits\" />\r\n            Unit可視化\r\n          </label>\r\n          <label style=\"margin-left:1em;\">\r\n            <input type=\"checkbox\" v-model=\"showUnitSpheres\" />\r\n            スフィアのみ表示\r\n          </label>\r\n          <label style=\"margin-left:1em;\">\r\n            <input type=\"checkbox\" v-model=\"showUnitLines\" />\r\n            線のみ表示\r\n          </label>\r\n          <label style=\"margin-left:1em;\">\r\n            表示レイヤ下限: <input type=\"range\" min=\"1\" max=\"20\" v-model=\"unitLayer\" />\r\n            {{ unitLayer }}\r\n          </label>\r\n        </div>\r\n      </details>\r\n      <div class=\"info\">\r\n        <p>Boids Count: {{ settings.flockSize }}</p>\r\n      </div>\r\n    </div>\r\n    <div ref=\"threeContainer\" class=\"three-container\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { inject, onMounted, reactive, ref, watch, toRaw } from 'vue';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport Settings from './components/Settings.vue';\r\nimport Stats from 'three/examples/jsm/libs/stats.module'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\r\nimport { SSAOPass } from 'three/examples/jsm/postprocessing/SSAOPass.js';\r\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js';\r\n\r\nconst wasmModule = inject('wasmModule');\r\nif (!wasmModule) {\r\n  console.error('wasmModule not provided');\r\n}\r\n\r\nconst posPtr = wasmModule.cwrap('posPtr', 'number', [])\r\nconst velPtr = wasmModule.cwrap('velPtr', 'number', [])\r\nconst boidCount = wasmModule.cwrap('boidCount', 'number', [])\r\nconst initBoids = wasmModule.cwrap('initBoids', 'void', ['number', 'number', 'number'])\r\nconst build = wasmModule.cwrap('build', 'void', ['number', 'number'])\r\nconst update = wasmModule.cwrap('update', 'void', ['number'])\r\nconst setFlockSize = wasmModule.cwrap('setFlockSize', 'void', ['number', 'number', 'number'])\r\nconst exportTreeStructure = wasmModule.cwrap('exportTreeStructure', 'object', []);\r\n// const getUnitCount = wasmModule.cwrap('getUnitCount', 'number', []);\r\n// const getUnitCentersPtr = wasmModule.cwrap('getUnitCentersPtr', 'number', []);\r\n// const getUnitParentIndicesPtr = wasmModule.cwrap('getUnitParentIndicesPtr', 'number', []);\r\n\r\nfunction fetchTreeStructure() {\r\n  const treeData = exportTreeStructure();\r\n  return treeData;\r\n}\r\n\r\nconst DEFAULT_SETTINGS = {\r\n  flockSize: 5118,         // 群れの数\r\n  cohesion: 9.04,          // 凝集\r\n  cohesionRange: 140,      // 凝集範囲\r\n  separation: 10,          // 分離\r\n  separationRange: 6,      // 分離範囲\r\n  alignment: 8.5,          // 整列\r\n  alignmentRange: 35,      // 整列範囲\r\n  maxSpeed: 0.27,          // 最大速度\r\n  maxTurnAngle: 0.047,     // 最大旋回角\r\n  maxNeighbors: 4,         // 最大近傍数\r\n  lambda: 0.109,           // 吸引減衰 λ\r\n  horizontalTorque: 0.004, // 水平化トルク\r\n  velocityEpsilon: 0.004,  // 速度閾値 ε\r\n  torqueStrength: 3.398    // 回転トルク強度\r\n};\r\n\r\nfunction loadSettings() {\r\n  const saved = localStorage.getItem('boids_settings');\r\n  if (saved) {\r\n    try {\r\n      return { ...DEFAULT_SETTINGS, ...JSON.parse(saved) };\r\n    } catch {\r\n      return { ...DEFAULT_SETTINGS };\r\n    }\r\n  }\r\n  return { ...DEFAULT_SETTINGS };\r\n}\r\n\r\nconst settings = reactive(loadSettings());\r\n\r\nconst threeContainer = ref(null);\r\nlet scene, camera, renderer, controls, composer;\r\n\r\nconst paused = ref(false);\r\n\r\nconst showUnits = ref(true);\r\nconst showUnitSpheres = ref(false);\r\nconst showUnitLines = ref(false);\r\nconst unitLayer = ref(1);\r\n\r\nlet unitSpheres = [];\r\nlet unitLines = [];\r\n\r\nlet maxDepth = 1;\r\nlet stats = null;\r\n\r\nlet animationTimer = null;\r\nconst FRAME_INTERVAL = 1000 / 60;//1000 / 60; // 60FPS\r\n\r\n// ツリーの最大深さを計算\r\nfunction calcMaxDepth(unit, depth = 0) {\r\n  if (!unit || !unit.children || typeof unit.children.size !== 'function' || unit.children.size() === 0) {\r\n    return depth;\r\n  }\r\n  let max = depth;\r\n  for (let i = 0; i < unit.children.size(); i++) {\r\n    const child = unit.children.get(i);\r\n    max = Math.max(max, calcMaxDepth(child, depth + 1));\r\n  }\r\n  return max;\r\n}\r\n\r\nfunction handleKeydown(e) {\r\n  if (e.code === 'Space') {\r\n    paused.value = !paused.value;\r\n  }\r\n}\r\n\r\nfunction initThreeJS() {\r\n  const width = window.innerWidth;\r\n  const height = window.innerHeight;\r\n\r\n  scene = new THREE.Scene();\r\n  scene.background = new THREE.Color(0x0a1e3a);\r\n  scene.fog = new THREE.Fog(0x0a1e3a, 10, 500);\r\n\r\n  camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\r\n  camera.position.set(20, 40, 40);\r\n  camera.lookAt(0, 0, 0);\r\n\r\n  renderer = new THREE.WebGLRenderer({\r\n    antialias: true,\r\n  });\r\n  renderer.setPixelRatio(window.devicePixelRatio); // 高DPI対応\r\n  renderer.setSize(width, height);\r\n  renderer.shadowMap.enabled = true;\r\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap; // 影を柔らかく\r\n\r\n  threeContainer.value.appendChild(renderer.domElement);\r\n\r\n  camera.aspect = width / height;\r\n  camera.updateProjectionMatrix();\r\n\r\n  controls = new OrbitControls(camera, renderer.domElement);\r\n  controls.enableDamping = true; // なめらかな操作\r\n  controls.dampingFactor = 0.1;\r\n\r\n  // 地面メッシュ追加\r\n  const groundGeo = new THREE.PlaneGeometry(1000, 1000);\r\n  const groundMat = new THREE.MeshStandardMaterial({ color: 0x183050, roughness: 0.8 });\r\n  const ground = new THREE.Mesh(groundGeo, groundMat);\r\n  ground.rotation.x = -Math.PI / 2;\r\n  ground.position.y = -80;\r\n  ground.receiveShadow = true; // 影を受ける\r\n  scene.add(ground);\r\n\r\n  // ライト\r\n  const ambientLight = new THREE.AmbientLight(0xffffff, 1.2);\r\n  scene.add(ambientLight);\r\n\r\n  // 太陽光（やや暖色のDirectionalLight）\r\n  const dirLight = new THREE.DirectionalLight(0xfff2cc, 1.5); // 暖色＆強め\r\n  dirLight.position.set(300, 500, 200); // 高い位置から照らす\r\n  dirLight.castShadow = true;\r\n\r\n  // 影カメラの範囲を広げる\r\n  dirLight.shadow.camera.left = -500;\r\n  dirLight.shadow.camera.right = 500;\r\n  dirLight.shadow.camera.top = 500;\r\n  dirLight.shadow.camera.bottom = -500;\r\n  dirLight.shadow.camera.near = 1;\r\n  dirLight.shadow.camera.far = 2000;\r\n\r\n  dirLight.shadow.mapSize.width = 2048;\r\n  dirLight.shadow.mapSize.height = 2048;\r\n  dirLight.shadow.bias = -0.001;\r\n  dirLight.shadow.normalBias = 0.01;\r\n\r\n  scene.add(dirLight);\r\n  // EffectComposer の初期化（スマホ以外の場合のみ）\r\n  if (!isMobileDevice()) {\r\n    // EffectComposer の初期化\r\n    composer = new EffectComposer(renderer);\r\n\r\n    // RenderPass を追加\r\n    const renderPass = new RenderPass(scene, camera);\r\n    composer.addPass(renderPass);\r\n\r\n    const ssaoPass = new SSAOPass(scene, camera, width, height);\r\n    ssaoPass.kernelRadius = 8; // サンプル半径（大きくすると効果が広がる）\r\n    ssaoPass.minDistance = 0.001; // 最小距離（小さくすると近距離の効果が強調される）\r\n    ssaoPass.maxDistance = 0.01; // 最大距離（大きくすると遠距離の効果が強調される）\r\n    composer.addPass(ssaoPass);\r\n\r\n    // UnrealBloomPass を追加（任意）\r\n    const bloomPass = new UnrealBloomPass(new THREE.Vector2(width, height), 1.5, 0.4, 0.85);\r\n    composer.addPass(bloomPass);\r\n  }\r\n  // ウィンドウリサイズ対応\r\n  window.addEventListener('resize', onWindowResize);\r\n}\r\n\r\nfunction onWindowResize() {\r\n  const width = window.innerWidth;\r\n  const height = window.innerHeight;\r\n  camera.aspect = width / height;\r\n  camera.updateProjectionMatrix();\r\n  renderer.setSize(width, height);\r\n}\r\n\r\nlet instancedMeshHigh = null; // 高ポリゴン用\r\nlet instancedMeshLow = null;  // 低ポリゴン用\r\n\r\n// LOD用ジオメトリ・マテリアルを使い回す\r\nconst boidGeometryHigh = new THREE.SphereGeometry(1, 8, 8);\r\nconst boidGeometryLow = new THREE.SphereGeometry(1, 3, 2);\r\nconst boidMaterial = new THREE.MeshStandardMaterial({ color: 0x1fb5ff });\r\nboidGeometryHigh.scale(0.5, 0.5, 2.0); // 少し小さくする\r\nboidGeometryLow.scale(0.5, 0.5, 2.0); // 少し小さくする\r\n\r\nfunction initInstancedBoids(count) {\r\n  if (instancedMeshHigh) {\r\n    scene.remove(instancedMeshHigh);\r\n  }\r\n  if (instancedMeshLow) {\r\n    scene.remove(instancedMeshLow);\r\n  }\r\n\r\n  const material = boidMaterial;\r\n\r\n  // 高ポリゴンメッシュ\r\n  instancedMeshHigh = new THREE.InstancedMesh(boidGeometryHigh, material, count);\r\n  instancedMeshHigh.castShadow = true;\r\n  instancedMeshHigh.receiveShadow = true;\r\n\r\n  // 低ポリゴンメッシュ\r\n  instancedMeshLow = new THREE.InstancedMesh(boidGeometryLow, material, count);\r\n  instancedMeshLow.castShadow = true;\r\n  instancedMeshLow.receiveShadow = true;\r\n\r\n  scene.add(instancedMeshHigh);\r\n  scene.add(instancedMeshLow);\r\n}\r\n\r\nfunction clearUnitVisuals() {\r\n  for (const mesh of unitSpheres) scene.remove(mesh);\r\n  for (const line of unitLines) scene.remove(line);\r\n  unitSpheres = [];\r\n  unitLines = [];\r\n}\r\n\r\n// レイヤ制限付き再帰描画\r\nfunction drawUnitTree(unit, layer = 0) {\r\n  // スフィア: スライダで制御\r\n  if (\r\n    layer >= (maxDepth - unitLayer.value + 1) &&\r\n    (unit.children == null || unit.children.size() === 0 || layer === maxDepth)\r\n  ) {\r\n    let sphere;\r\n    if (unitSpheres.length > 0) {\r\n      sphere = unitSpheres.pop(); // 再利用\r\n      sphere.visible = true;\r\n    } else {\r\n      const geometry = new THREE.SphereGeometry(unit.radius, 16, 16);\r\n      const material = new THREE.MeshBasicMaterial({\r\n        color: new THREE.Color().setHSL(0.1, 1, 0.7 - 0.4 * (layer / maxDepth)),\r\n        wireframe: true,\r\n        opacity: 0.3,\r\n        transparent: true,\r\n      });\r\n      sphere = new THREE.Mesh(geometry, material);\r\n      scene.add(sphere);\r\n    }\r\n    sphere.position.set(unit.center.x, unit.center.y, unit.center.z);\r\n    unitSpheres.push(sphere);\r\n  }\r\n\r\n  // 線: チェックボックスで全て表示、色は深さでグラデ\r\n  if (showUnitLines.value && unit.children && typeof unit.children.size === 'function' && unit.children.size() > 0) {\r\n    for (let i = 0; i < unit.children.size(); i++) {\r\n      const child = unit.children.get(i);\r\n      let line;\r\n      if (unitLines.length > 0) {\r\n        line = unitLines.pop(); // 再利用\r\n        line.visible = true;\r\n      } else {\r\n        const lineGeometry = new THREE.BufferGeometry();\r\n        const lineMaterial = new THREE.LineBasicMaterial({\r\n          color: new THREE.Color().setHSL(0.35, 1, 0.7 - 0.4 * (layer / maxDepth)),\r\n        });\r\n        line = new THREE.Line(lineGeometry, lineMaterial);\r\n        scene.add(line);\r\n      }\r\n      const points = [\r\n        new THREE.Vector3(unit.center.x, unit.center.y, unit.center.z),\r\n        new THREE.Vector3(child.center.x, child.center.y, child.center.z),\r\n      ];\r\n      line.geometry.setFromPoints(points);\r\n      unitLines.push(line);\r\n    }\r\n  }\r\n\r\n  // 再帰\r\n  if (unit.children && typeof unit.children.size === 'function' && unit.children.size() > 0) {\r\n    for (let i = 0; i < unit.children.size(); i++) {\r\n      const child = unit.children.get(i);\r\n      drawUnitTree(child, layer + 1);\r\n    }\r\n  }\r\n}\r\nlet positions, velocities\r\n\r\nfunction animate() {\r\n  if (stats) stats.begin();\r\n\r\n  if (!paused.value) {\r\n    update(1.0);\r\n  }\r\n  const count = boidCount();\r\n\r\n  positions = new Float32Array(wasmModule.HEAPF32.buffer, posPtr(), count * 3);\r\n  velocities = new Float32Array(wasmModule.HEAPF32.buffer, velPtr(), count * 3);\r\n\r\n  const dummy = new THREE.Object3D();\r\n  const cameraPosition = camera.position;\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    dummy.position.set(\r\n      positions[i * 3 + 0],\r\n      positions[i * 3 + 1],\r\n      positions[i * 3 + 2]\r\n    );\r\n\r\n    const dir = new THREE.Vector3(\r\n      velocities[i * 3 + 0],\r\n      velocities[i * 3 + 1],\r\n      velocities[i * 3 + 2]\r\n    );\r\n    if (dir.lengthSq() > 0.0001) {\r\n      dummy.quaternion.setFromUnitVectors(\r\n        new THREE.Vector3(0, 0, 1),\r\n        dir.clone().normalize()\r\n      );\r\n    } else {\r\n      dummy.quaternion.identity();\r\n    }\r\n    dummy.updateMatrix();\r\n\r\n    // 距離判定\r\n    const distanceSq = cameraPosition.distanceToSquared(dummy.position);\r\n    if (distanceSq < 10000) { // 近距離: 高ポリゴン\r\n      instancedMeshHigh.setMatrixAt(i, dummy.matrix);\r\n      instancedMeshLow.setMatrixAt(i, new THREE.Matrix4().identity()); // 非表示\r\n    } else { // 遠距離: 低ポリゴン\r\n      instancedMeshLow.setMatrixAt(i, dummy.matrix);\r\n      instancedMeshHigh.setMatrixAt(i, new THREE.Matrix4().identity()); // 非表示\r\n    }\r\n  }\r\n\r\n  instancedMeshHigh.instanceMatrix.needsUpdate = true;\r\n  instancedMeshLow.instanceMatrix.needsUpdate = true;\r\n\r\n  controls.update();\r\n  // スマホの場合は renderer を使用、それ以外は composer を使用\r\n  if (isMobileDevice()) {\r\n    renderer.render(scene, camera);\r\n  } else {\r\n    composer.render();\r\n  }\r\n  if (stats) stats.end();\r\n\r\n  animationTimer = setTimeout(animate, FRAME_INTERVAL);\r\n}\r\nfunction drawTreeStructure(treeData) {\r\n  const drawNode = (node, parentPosition = null) => {\r\n    const position = new THREE.Vector3(\r\n      node.center[0],\r\n      node.center[1],\r\n      node.center[2]\r\n    );\r\n\r\n    if (parentPosition) {\r\n      const geometry = new THREE.BufferGeometry().setFromPoints([\r\n        parentPosition,\r\n        position,\r\n      ]);\r\n      const material = new THREE.LineBasicMaterial({ color: 0xffffff });\r\n      const line = new THREE.Line(geometry, material);\r\n      scene.add(line);\r\n    }\r\n\r\n    if (node.children) {\r\n      node.children.forEach((child) => drawNode(child, position));\r\n    }\r\n  };\r\n\r\n  treeData.forEach((rootNode) => drawNode(rootNode));\r\n}\r\nfunction startSimulation() {\r\n  initBoids(settings.flockSize, 64, 0.25);\r\n  build(16, 0);\r\n  initInstancedBoids(settings.flockSize);\r\n  animate();\r\n}\r\n// `setSpeciesParams` を呼び出す関数\r\nfunction updateSpeciesParams() {\r\n  if (wasmModule && wasmModule.setSpeciesParams) {\r\n    const raw = toRaw(settings);\r\n    setSpeciesParams({\r\n      cohesion: Number(raw.cohesion ?? -1),\r\n      separation: Number(raw.separation ?? -1),\r\n      alignment: Number(raw.alignment ?? -1),\r\n      maxSpeed: Number(raw.maxSpeed ?? -1),\r\n      minSpeed: Number(raw.minSpeed ?? -1),\r\n      maxTurnAngle: Number(raw.maxTurnAngle ?? -1),\r\n      separationRange: Number(raw.separationRange ?? -1),\r\n      alignmentRange: Number(raw.alignmentRange ?? -1),\r\n      cohesionRange: Number(raw.cohesionRange ?? -1),\r\n      maxNeighbors: Number(raw.maxNeighbors ?? -1),\r\n      lambda: Number(raw.lambda ?? -1),\r\n      horizontalTorque: Number(raw.horizontalTorque ?? -1),\r\n      velocityEpsilon: Number(raw.velocityEpsilon ?? -1),\r\n      torqueStrength: Number(raw.torqueStrength ?? -1),\r\n    });\r\n  }\r\n}\r\nonMounted(() => {\r\n  initThreeJS();\r\n\r\n  // stats.jsの初期化とDOM追加\r\n  stats = new Stats();\r\n  stats.showPanel(0);\r\n  document.body.appendChild(stats.dom);\r\n  // 右上に移動させる\r\n  stats.dom.style.position = 'fixed';\r\n  stats.dom.style.right = '0px';\r\n  stats.dom.style.top = '0px';\r\n  stats.dom.style.left = 'auto';\r\n  stats.dom.style.zIndex = 1000;\r\n\r\n  // 初期値をwasmに反映\r\n  if (\r\n    wasmModule &&\r\n    wasmModule.setGlobalSpeciesParamsFromJS\r\n  ) {\r\n    const raw = toRaw(settings);\r\n    wasmModule.setGlobalSpeciesParamsFromJS({\r\n      cohesion: Number(raw.cohesion),\r\n      separation: Number(raw.separation),\r\n      alignment: Number(raw.alignment),\r\n      maxSpeed: Number(raw.maxSpeed),\r\n      maxTurnAngle: Number(raw.maxTurnAngle),\r\n      separationRange: Number(raw.separationRange),\r\n      alignmentRange: Number(raw.alignmentRange),\r\n      cohesionRange: Number(raw.cohesionRange),\r\n      horizontalTorque: Number(raw.horizontalTorque),\r\n      torqueStrength: Number(raw.torqueStrength),\r\n      maxNeighbors: Number(raw.maxNeighbors),\r\n      lambda: Number(raw.lambda),\r\n    });\r\n  }\r\n\r\n  window.addEventListener('keydown', handleKeydown);\r\n\r\n  startSimulation();\r\n});\r\n\r\nfunction isMobileDevice() {\r\n  return /Mobi|Android/i.test(navigator.userAgent);\r\n}\r\n// settingsの変更をwasmModuleに反映\r\nwatch(\r\n  () => [\r\n    settings.cohesion,\r\n    settings.separation,\r\n    settings.alignment,\r\n    settings.maxSpeed,\r\n    settings.maxTurnAngle,\r\n    settings.separationRange,\r\n    settings.alignmentRange,\r\n    settings.cohesionRange,\r\n    settings.maxNeighbors,\r\n    settings.lambda,\r\n    settings.horizontalTorque,\r\n    settings.velocityEpsilon,\r\n    settings.torqueStrength,\r\n  ],\r\n  () => {\r\n    if (\r\n      wasmModule &&\r\n      wasmModule.setGlobalSpeciesParamsFromJS\r\n    ) {\r\n      const raw = toRaw(settings);\r\n      wasmModule.setGlobalSpeciesParamsFromJS({\r\n        cohesion: Number(raw.cohesion),\r\n        separation: Number(raw.separation),\r\n        alignment: Number(raw.alignment),\r\n        maxSpeed: Number(raw.maxSpeed),\r\n        maxTurnAngle: Number(raw.maxTurnAngle),\r\n        separationRange: Number(raw.separationRange),\r\n        alignmentRange: Number(raw.alignmentRange),\r\n        cohesionRange: Number(raw.cohesionRange),\r\n        horizontalTorque: Number(raw.horizontalTorque),\r\n        torqueStrength: Number(raw.torqueStrength),\r\n        maxNeighbors: Number(raw.maxNeighbors),\r\n        lambda: Number(raw.lambda),\r\n      });\r\n    }\r\n  }\r\n);\r\n\r\n// flockSizeの変更を監視\r\nwatch(\r\n  () => settings.flockSize,\r\n  (newSize) => {\r\n    if (setFlockSize) {\r\n      // flockSize変更時\r\n      setFlockSize(newSize, 40, 0.25);\r\n      // Three.js 側の初期化\r\n      initInstancedBoids(newSize);\r\n    }\r\n  }\r\n);\r\n\r\nwatch(\r\n  settings,\r\n  (val) => {\r\n    localStorage.setItem('boids_settings', JSON.stringify(toRaw(val)));\r\n  },\r\n  { deep: true }\r\n);\r\n\r\nfunction resetSettings() {\r\n  Object.assign(settings, DEFAULT_SETTINGS);\r\n}\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Arial, sans-serif;\r\n  padding: 0;\r\n  margin: 0;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.settings {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.info {\r\n  margin-top: 20px;\r\n}\r\n\r\n.three-container {\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 0;\r\n  display: block;\r\n  border: none;\r\n  overflow: hidden;\r\n  background: #0a1e3a;\r\n}\r\n\r\n.ui-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  color: #fff;\r\n  z-index: 2;\r\n  pointer-events: none;\r\n}\r\n\r\n.ui-overlay * {\r\n  pointer-events: auto;\r\n}\r\n</style>","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=22608b49&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from 'vue';\r\nimport App from './App.vue';\r\nimport * as BoidsModule from './wasm/build/wasm_boids.js';\r\nimport wasmUrl from './wasm/build/wasm_boids.wasm';\r\n\r\nlet wasmModule = null;\r\nconsole.log(\"wasmUrl:\", wasmUrl); // ここで URL を確認\r\n\r\nBoidsModule.default({\r\n    locateFile: (path) => {\r\n        if (path.endsWith('.wasm')) {\r\n            return wasmUrl; // ハッシュ付きの正しいURLを返す\r\n        }\r\n        return path;\r\n    },\r\n}).then(Module => {\r\n    wasmModule = Module;\r\n    console.log('Wasm module initialized:', Module);\r\n\r\n    // Vue アプリケーションに WebAssembly モジュールを渡す\r\n    const app = createApp(App);\r\n    app.provide('wasmModule', Module);\r\n    app.mount('#app');\r\n});","var createBoidsModule = (() => {\r\n  \r\n  return (\r\nasync function(moduleArg = {}) {\r\n  var moduleRtn;\r\n\r\n// include: shell.js\r\n// The Module object: Our interface to the outside world. We import\r\n// and export values on it. There are various ways Module can be used:\r\n// 1. Not defined. We create it here\r\n// 2. A function parameter, function(moduleArg) => Promise<Module>\r\n// 3. pre-run appended it, var Module = {}; ..generated code..\r\n// 4. External script tag defines var Module.\r\n// We need to check if Module already exists (e.g. case 3 above).\r\n// Substitution will be replaced with actual code on later stage of the build,\r\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\r\n// Note that if you want to run closure, and also to use Module\r\n// after the generated code, you will need to define   var Module = {};\r\n// before the code. Then that object will be used in the code, and you\r\n// can continue to use Module afterwards as well.\r\nvar Module = moduleArg;\r\n\r\n// Set up the promise that indicates the Module is initialized\r\nvar readyPromiseResolve, readyPromiseReject;\r\n\r\nvar readyPromise = new Promise((resolve, reject) => {\r\n  readyPromiseResolve = resolve;\r\n  readyPromiseReject = reject;\r\n});\r\n\r\n// Determine the runtime environment we are in. You can customize this by\r\n// setting the ENVIRONMENT setting at compile time (see settings.js).\r\n// Attempt to auto-detect the environment\r\nvar ENVIRONMENT_IS_WEB = typeof window == \"object\";\r\n\r\nvar ENVIRONMENT_IS_WORKER = typeof WorkerGlobalScope != \"undefined\";\r\n\r\n// N.b. Electron.js environment is simultaneously a NODE-environment, but\r\n// also a web environment.\r\nvar ENVIRONMENT_IS_NODE = typeof process == \"object\" && typeof process.versions == \"object\" && typeof process.versions.node == \"string\" && process.type != \"renderer\";\r\n\r\nvar ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\r\n\r\n// Three configurations we can be running in:\r\n// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)\r\n// 2) We could be the application main() thread proxied to worker. (with Emscripten -sPROXY_TO_WORKER) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)\r\n// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)\r\n// The way we signal to a worker that it is hosting a pthread is to construct\r\n// it with a specific name.\r\nvar ENVIRONMENT_IS_PTHREAD = ENVIRONMENT_IS_WORKER && self.name?.startsWith(\"em-pthread\");\r\n\r\nif (ENVIRONMENT_IS_PTHREAD) {\r\n  assert(!globalThis.moduleLoaded, \"module should only be loaded once on each pthread worker\");\r\n  globalThis.moduleLoaded = true;\r\n}\r\n\r\n// --pre-jses are emitted after the Module integration code, so that they can\r\n// refer to Module (if they choose; they can also define Module)\r\nvar arguments_ = [];\r\n\r\nvar thisProgram = \"./this.program\";\r\n\r\nvar quit_ = (status, toThrow) => {\r\n  throw toThrow;\r\n};\r\n\r\nvar _scriptName = import.meta.url;\r\n\r\n// `/` should be present at the end if `scriptDirectory` is not empty\r\nvar scriptDirectory = \"\";\r\n\r\nfunction locateFile(path) {\r\n  if (Module[\"locateFile\"]) {\r\n    return Module[\"locateFile\"](path, scriptDirectory);\r\n  }\r\n  return scriptDirectory + path;\r\n}\r\n\r\n// Hooks that are implemented differently in different runtime environments.\r\nvar readAsync, readBinary;\r\n\r\nif (ENVIRONMENT_IS_SHELL) {\r\n  if ((typeof process == \"object\" && typeof require === \"function\") || typeof window == \"object\" || typeof WorkerGlobalScope != \"undefined\") throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");\r\n} else // Note that this includes Node.js workers when relevant (pthreads is enabled).\r\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\r\n// ENVIRONMENT_IS_NODE.\r\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\r\n  try {\r\n    scriptDirectory = new URL(\".\", _scriptName).href;\r\n  } catch {}\r\n  if (!(typeof window == \"object\" || typeof WorkerGlobalScope != \"undefined\")) throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");\r\n  {\r\n    // include: web_or_worker_shell_read.js\r\n    if (ENVIRONMENT_IS_WORKER) {\r\n      readBinary = url => {\r\n        var xhr = new XMLHttpRequest;\r\n        xhr.open(\"GET\", url, false);\r\n        xhr.responseType = \"arraybuffer\";\r\n        xhr.send(null);\r\n        return new Uint8Array(/** @type{!ArrayBuffer} */ (xhr.response));\r\n      };\r\n    }\r\n    readAsync = async url => {\r\n      assert(!isFileURI(url), \"readAsync does not work with file:// URLs\");\r\n      var response = await fetch(url, {\r\n        credentials: \"same-origin\"\r\n      });\r\n      if (response.ok) {\r\n        return response.arrayBuffer();\r\n      }\r\n      throw new Error(response.status + \" : \" + response.url);\r\n    };\r\n  }\r\n} else {\r\n  throw new Error(\"environment detection error\");\r\n}\r\n\r\nvar out = console.log.bind(console);\r\n\r\nvar err = console.error.bind(console);\r\n\r\nvar IDBFS = \"IDBFS is no longer included by default; build with -lidbfs.js\";\r\n\r\nvar PROXYFS = \"PROXYFS is no longer included by default; build with -lproxyfs.js\";\r\n\r\nvar WORKERFS = \"WORKERFS is no longer included by default; build with -lworkerfs.js\";\r\n\r\nvar FETCHFS = \"FETCHFS is no longer included by default; build with -lfetchfs.js\";\r\n\r\nvar ICASEFS = \"ICASEFS is no longer included by default; build with -licasefs.js\";\r\n\r\nvar JSFILEFS = \"JSFILEFS is no longer included by default; build with -ljsfilefs.js\";\r\n\r\nvar OPFS = \"OPFS is no longer included by default; build with -lopfs.js\";\r\n\r\nvar NODEFS = \"NODEFS is no longer included by default; build with -lnodefs.js\";\r\n\r\n// perform assertions in shell.js after we set up out() and err(), as otherwise\r\n// if an assertion fails it cannot print the message\r\nassert(ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER || ENVIRONMENT_IS_NODE, \"Pthreads do not work in this environment yet (need Web Workers, or an alternative to them)\");\r\n\r\nassert(!ENVIRONMENT_IS_NODE, \"node environment detected but not enabled at build time.  Add `node` to `-sENVIRONMENT` to enable.\");\r\n\r\nassert(!ENVIRONMENT_IS_SHELL, \"shell environment detected but not enabled at build time.  Add `shell` to `-sENVIRONMENT` to enable.\");\r\n\r\n// end include: shell.js\r\n// include: preamble.js\r\n// === Preamble library stuff ===\r\n// Documentation for the public APIs defined in this file must be updated in:\r\n//    site/source/docs/api_reference/preamble.js.rst\r\n// A prebuilt local version of the documentation is available at:\r\n//    site/build/text/docs/api_reference/preamble.js.txt\r\n// You can also build docs locally as HTML or other formats in site/\r\n// An online HTML version (which may be of a different version of Emscripten)\r\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\r\nvar wasmBinary;\r\n\r\nif (typeof WebAssembly != \"object\") {\r\n  err(\"no native wasm support detected\");\r\n}\r\n\r\n// Wasm globals\r\nvar wasmMemory;\r\n\r\n// For sending to workers.\r\nvar wasmModule;\r\n\r\n//========================================\r\n// Runtime essentials\r\n//========================================\r\n// whether we are quitting the application. no code should run after this.\r\n// set in exit() and abort()\r\nvar ABORT = false;\r\n\r\n// set by exit() and abort().  Passed to 'onExit' handler.\r\n// NOTE: This is also used as the process return code code in shell environments\r\n// but only when noExitRuntime is false.\r\nvar EXITSTATUS;\r\n\r\n// In STRICT mode, we only define assert() when ASSERTIONS is set.  i.e. we\r\n// don't define it at all in release modes.  This matches the behaviour of\r\n// MINIMAL_RUNTIME.\r\n// TODO(sbc): Make this the default even without STRICT enabled.\r\n/** @type {function(*, string=)} */ function assert(condition, text) {\r\n  if (!condition) {\r\n    abort(\"Assertion failed\" + (text ? \": \" + text : \"\"));\r\n  }\r\n}\r\n\r\n// We used to include malloc/free by default in the past. Show a helpful error in\r\n// builds with assertions.\r\n// Memory management\r\nvar HEAP, /** @type {!Int8Array} */ HEAP8, /** @type {!Uint8Array} */ HEAPU8, /** @type {!Int16Array} */ HEAP16, /** @type {!Uint16Array} */ HEAPU16, /** @type {!Int32Array} */ HEAP32, /** @type {!Uint32Array} */ HEAPU32, /** @type {!Float32Array} */ HEAPF32, /* BigInt64Array type is not correctly defined in closure\r\n/** not-@type {!BigInt64Array} */ HEAP64, /* BigUint64Array type is not correctly defined in closure\r\n/** not-t@type {!BigUint64Array} */ HEAPU64, /** @type {!Float64Array} */ HEAPF64;\r\n\r\nvar runtimeInitialized = false;\r\n\r\n/**\r\n * Indicates whether filename is delivered via file protocol (as opposed to http/https)\r\n * @noinline\r\n */ var isFileURI = filename => filename.startsWith(\"file://\");\r\n\r\n// include: runtime_shared.js\r\n// include: runtime_stack_check.js\r\n// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\r\nfunction writeStackCookie() {\r\n  var max = _emscripten_stack_get_end();\r\n  assert((max & 3) == 0);\r\n  // If the stack ends at address zero we write our cookies 4 bytes into the\r\n  // stack.  This prevents interference with SAFE_HEAP and ASAN which also\r\n  // monitor writes to address zero.\r\n  if (max == 0) {\r\n    max += 4;\r\n  }\r\n  // The stack grow downwards towards _emscripten_stack_get_end.\r\n  // We write cookies to the final two words in the stack and detect if they are\r\n  // ever overwritten.\r\n  GROWABLE_HEAP_U32()[((max) >> 2)] = 34821223;\r\n  GROWABLE_HEAP_U32()[(((max) + (4)) >> 2)] = 2310721022;\r\n  // Also test the global address 0 for integrity.\r\n  GROWABLE_HEAP_U32()[((0) >> 2)] = 1668509029;\r\n}\r\n\r\nfunction checkStackCookie() {\r\n  if (ABORT) return;\r\n  var max = _emscripten_stack_get_end();\r\n  // See writeStackCookie().\r\n  if (max == 0) {\r\n    max += 4;\r\n  }\r\n  var cookie1 = GROWABLE_HEAP_U32()[((max) >> 2)];\r\n  var cookie2 = GROWABLE_HEAP_U32()[(((max) + (4)) >> 2)];\r\n  if (cookie1 != 34821223 || cookie2 != 2310721022) {\r\n    abort(`Stack overflow! Stack cookie has been overwritten at ${ptrToString(max)}, expected hex dwords 0x89BACDFE and 0x2135467, but received ${ptrToString(cookie2)} ${ptrToString(cookie1)}`);\r\n  }\r\n  // Also test the global address 0 for integrity.\r\n  if (GROWABLE_HEAP_U32()[((0) >> 2)] != 1668509029) {\r\n    abort(\"Runtime error: The application has corrupted its heap memory area (address zero)!\");\r\n  }\r\n}\r\n\r\n// end include: runtime_stack_check.js\r\n// include: runtime_exceptions.js\r\n// Base Emscripten EH error class\r\nclass EmscriptenEH extends Error {}\r\n\r\nclass EmscriptenSjLj extends EmscriptenEH {}\r\n\r\nclass CppException extends EmscriptenEH {\r\n  constructor(excPtr) {\r\n    super(excPtr);\r\n    this.excPtr = excPtr;\r\n    const excInfo = getExceptionMessage(excPtr);\r\n    this.name = excInfo[0];\r\n    this.message = excInfo[1];\r\n  }\r\n}\r\n\r\n// end include: runtime_exceptions.js\r\n// include: runtime_debug.js\r\nvar runtimeDebug = true;\r\n\r\n// Switch to false at runtime to disable logging at the right times\r\n// Used by XXXXX_DEBUG settings to output debug messages.\r\nfunction dbg(...args) {\r\n  if (!runtimeDebug && typeof runtimeDebug != \"undefined\") return;\r\n  // TODO(sbc): Make this configurable somehow.  Its not always convenient for\r\n  // logging to show up as warnings.\r\n  console.warn(...args);\r\n}\r\n\r\n// Endianness check\r\n(() => {\r\n  var h16 = new Int16Array(1);\r\n  var h8 = new Int8Array(h16.buffer);\r\n  h16[0] = 25459;\r\n  if (h8[0] !== 115 || h8[1] !== 99) throw \"Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)\";\r\n})();\r\n\r\nfunction consumedModuleProp(prop) {\r\n  if (!Object.getOwnPropertyDescriptor(Module, prop)) {\r\n    Object.defineProperty(Module, prop, {\r\n      configurable: true,\r\n      set() {\r\n        abort(`Attempt to set \\`Module.${prop}\\` after it has already been processed.  This can happen, for example, when code is injected via '--post-js' rather than '--pre-js'`);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction ignoredModuleProp(prop) {\r\n  if (Object.getOwnPropertyDescriptor(Module, prop)) {\r\n    abort(`\\`Module.${prop}\\` was supplied but \\`${prop}\\` not included in INCOMING_MODULE_JS_API`);\r\n  }\r\n}\r\n\r\n// forcing the filesystem exports a few things by default\r\nfunction isExportedByForceFilesystem(name) {\r\n  return name === \"FS_createPath\" || name === \"FS_createDataFile\" || name === \"FS_createPreloadedFile\" || name === \"FS_unlink\" || name === \"addRunDependency\" || // The old FS has some functionality that WasmFS lacks.\r\n  name === \"FS_createLazyFile\" || name === \"FS_createDevice\" || name === \"removeRunDependency\";\r\n}\r\n\r\n/**\r\n * Intercept access to a global symbol.  This enables us to give informative\r\n * warnings/errors when folks attempt to use symbols they did not include in\r\n * their build, or no symbols that no longer exist.\r\n */ function hookGlobalSymbolAccess(sym, func) {\r\n  if (typeof globalThis != \"undefined\" && !Object.getOwnPropertyDescriptor(globalThis, sym)) {\r\n    Object.defineProperty(globalThis, sym, {\r\n      configurable: true,\r\n      get() {\r\n        func();\r\n        return undefined;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction missingGlobal(sym, msg) {\r\n  hookGlobalSymbolAccess(sym, () => {\r\n    warnOnce(`\\`${sym}\\` is not longer defined by emscripten. ${msg}`);\r\n  });\r\n}\r\n\r\nmissingGlobal(\"buffer\", \"Please use HEAP8.buffer or wasmMemory.buffer\");\r\n\r\nmissingGlobal(\"asm\", \"Please use wasmExports instead\");\r\n\r\nfunction missingLibrarySymbol(sym) {\r\n  hookGlobalSymbolAccess(sym, () => {\r\n    // Can't `abort()` here because it would break code that does runtime\r\n    // checks.  e.g. `if (typeof SDL === 'undefined')`.\r\n    var msg = `\\`${sym}\\` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line`;\r\n    // DEFAULT_LIBRARY_FUNCS_TO_INCLUDE requires the name as it appears in\r\n    // library.js, which means $name for a JS name with no prefix, or name\r\n    // for a JS name like _name.\r\n    var librarySymbol = sym;\r\n    if (!librarySymbol.startsWith(\"_\")) {\r\n      librarySymbol = \"$\" + sym;\r\n    }\r\n    msg += ` (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE='${librarySymbol}')`;\r\n    if (isExportedByForceFilesystem(sym)) {\r\n      msg += \". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you\";\r\n    }\r\n    warnOnce(msg);\r\n  });\r\n  // Any symbol that is not included from the JS library is also (by definition)\r\n  // not exported on the Module object.\r\n  unexportedRuntimeSymbol(sym);\r\n}\r\n\r\nfunction unexportedRuntimeSymbol(sym) {\r\n  if (ENVIRONMENT_IS_PTHREAD) {\r\n    return;\r\n  }\r\n  if (!Object.getOwnPropertyDescriptor(Module, sym)) {\r\n    Object.defineProperty(Module, sym, {\r\n      configurable: true,\r\n      get() {\r\n        var msg = `'${sym}' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the Emscripten FAQ)`;\r\n        if (isExportedByForceFilesystem(sym)) {\r\n          msg += \". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you\";\r\n        }\r\n        abort(msg);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Override `err`/`out`/`dbg` to report thread / worker information\r\n */ function initWorkerLogging() {\r\n  function getLogPrefix() {\r\n    var t = 0;\r\n    if (runtimeInitialized && typeof _pthread_self != \"undefined\") {\r\n      t = _pthread_self();\r\n    }\r\n    return `w:${workerID},t:${ptrToString(t)}:`;\r\n  }\r\n  // Prefix all dbg() messages with the calling thread info.\r\n  var origDbg = dbg;\r\n  dbg = (...args) => origDbg(getLogPrefix(), ...args);\r\n}\r\n\r\ninitWorkerLogging();\r\n\r\n// end include: runtime_debug.js\r\n// include: memoryprofiler.js\r\n// end include: memoryprofiler.js\r\n// include: growableHeap.js\r\n// Support for growable heap + pthreads, where the buffer may change, so JS views\r\n// must be updated.\r\nfunction GROWABLE_HEAP_I8() {\r\n  if (wasmMemory.buffer != HEAP8.buffer) {\r\n    updateMemoryViews();\r\n  }\r\n  return HEAP8;\r\n}\r\n\r\nfunction GROWABLE_HEAP_U8() {\r\n  if (wasmMemory.buffer != HEAP8.buffer) {\r\n    updateMemoryViews();\r\n  }\r\n  return HEAPU8;\r\n}\r\n\r\nfunction GROWABLE_HEAP_I16() {\r\n  if (wasmMemory.buffer != HEAP8.buffer) {\r\n    updateMemoryViews();\r\n  }\r\n  return HEAP16;\r\n}\r\n\r\nfunction GROWABLE_HEAP_U16() {\r\n  if (wasmMemory.buffer != HEAP8.buffer) {\r\n    updateMemoryViews();\r\n  }\r\n  return HEAPU16;\r\n}\r\n\r\nfunction GROWABLE_HEAP_I32() {\r\n  if (wasmMemory.buffer != HEAP8.buffer) {\r\n    updateMemoryViews();\r\n  }\r\n  return HEAP32;\r\n}\r\n\r\nfunction GROWABLE_HEAP_U32() {\r\n  if (wasmMemory.buffer != HEAP8.buffer) {\r\n    updateMemoryViews();\r\n  }\r\n  return HEAPU32;\r\n}\r\n\r\nfunction GROWABLE_HEAP_F32() {\r\n  if (wasmMemory.buffer != HEAP8.buffer) {\r\n    updateMemoryViews();\r\n  }\r\n  return HEAPF32;\r\n}\r\n\r\nfunction GROWABLE_HEAP_F64() {\r\n  if (wasmMemory.buffer != HEAP8.buffer) {\r\n    updateMemoryViews();\r\n  }\r\n  return HEAPF64;\r\n}\r\n\r\n// end include: growableHeap.js\r\nvar wasmModuleReceived;\r\n\r\n// include: runtime_pthread.js\r\n// Pthread Web Worker handling code.\r\n// This code runs only on pthread web workers and handles pthread setup\r\n// and communication with the main thread via postMessage.\r\n// Unique ID of the current pthread worker (zero on non-pthread-workers\r\n// including the main thread).\r\nvar workerID = 0;\r\n\r\nif (ENVIRONMENT_IS_PTHREAD) {\r\n  // Thread-local guard variable for one-time init of the JS state\r\n  var initializedJS = false;\r\n  // Turn unhandled rejected promises into errors so that the main thread will be\r\n  // notified about them.\r\n  self.onunhandledrejection = e => {\r\n    throw e.reason || e;\r\n  };\r\n  function handleMessage(e) {\r\n    try {\r\n      var msgData = e[\"data\"];\r\n      //dbg('msgData: ' + Object.keys(msgData));\r\n      var cmd = msgData.cmd;\r\n      if (cmd === \"load\") {\r\n        // Preload command that is called once per worker to parse and load the Emscripten code.\r\n        workerID = msgData.workerID;\r\n        // Until we initialize the runtime, queue up any further incoming messages.\r\n        let messageQueue = [];\r\n        self.onmessage = e => messageQueue.push(e);\r\n        // And add a callback for when the runtime is initialized.\r\n        self.startWorker = instance => {\r\n          // Notify the main thread that this thread has loaded.\r\n          postMessage({\r\n            cmd: \"loaded\"\r\n          });\r\n          // Process any messages that were queued before the thread was ready.\r\n          for (let msg of messageQueue) {\r\n            handleMessage(msg);\r\n          }\r\n          // Restore the real message handler.\r\n          self.onmessage = handleMessage;\r\n        };\r\n        // Use `const` here to ensure that the variable is scoped only to\r\n        // that iteration, allowing safe reference from a closure.\r\n        for (const handler of msgData.handlers) {\r\n          // The the main module has a handler for a certain even, but no\r\n          // handler exists on the pthread worker, then proxy that handler\r\n          // back to the main thread.\r\n          if (!Module[handler] || Module[handler].proxy) {\r\n            Module[handler] = (...args) => {\r\n              postMessage({\r\n                cmd: \"callHandler\",\r\n                handler,\r\n                args\r\n              });\r\n            };\r\n            // Rebind the out / err handlers if needed\r\n            if (handler == \"print\") out = Module[handler];\r\n            if (handler == \"printErr\") err = Module[handler];\r\n          }\r\n        }\r\n        wasmMemory = msgData.wasmMemory;\r\n        updateMemoryViews();\r\n        wasmModuleReceived(msgData.wasmModule);\r\n      } else if (cmd === \"run\") {\r\n        assert(msgData.pthread_ptr);\r\n        // Call inside JS module to set up the stack frame for this pthread in JS module scope.\r\n        // This needs to be the first thing that we do, as we cannot call to any C/C++ functions\r\n        // until the thread stack is initialized.\r\n        establishStackSpace(msgData.pthread_ptr);\r\n        // Pass the thread address to wasm to store it for fast access.\r\n        __emscripten_thread_init(msgData.pthread_ptr, /*is_main=*/ 0, /*is_runtime=*/ 0, /*can_block=*/ 1, 0, 0);\r\n        PThread.threadInitTLS();\r\n        // Await mailbox notifications with `Atomics.waitAsync` so we can start\r\n        // using the fast `Atomics.notify` notification path.\r\n        __emscripten_thread_mailbox_await(msgData.pthread_ptr);\r\n        if (!initializedJS) {\r\n          // Embind must initialize itself on all threads, as it generates support JS.\r\n          // We only do this once per worker since they get reused\r\n          __embind_initialize_bindings();\r\n          initializedJS = true;\r\n        }\r\n        try {\r\n          invokeEntryPoint(msgData.start_routine, msgData.arg);\r\n        } catch (ex) {\r\n          if (ex != \"unwind\") {\r\n            // The pthread \"crashed\".  Do not call `_emscripten_thread_exit` (which\r\n            // would make this thread joinable).  Instead, re-throw the exception\r\n            // and let the top level handler propagate it back to the main thread.\r\n            throw ex;\r\n          }\r\n        }\r\n      } else if (msgData.target === \"setimmediate\") {} else if (cmd === \"checkMailbox\") {\r\n        if (initializedJS) {\r\n          checkMailbox();\r\n        }\r\n      } else if (cmd) {\r\n        // The received message looks like something that should be handled by this message\r\n        // handler, (since there is a cmd field present), but is not one of the\r\n        // recognized commands:\r\n        err(`worker: received unknown command ${cmd}`);\r\n        err(msgData);\r\n      }\r\n    } catch (ex) {\r\n      err(`worker: onmessage() captured an uncaught exception: ${ex}`);\r\n      if (ex?.stack) err(ex.stack);\r\n      __emscripten_thread_crashed();\r\n      throw ex;\r\n    }\r\n  }\r\n  self.onmessage = handleMessage;\r\n}\r\n\r\n// ENVIRONMENT_IS_PTHREAD\r\n// end include: runtime_pthread.js\r\nfunction updateMemoryViews() {\r\n  var b = wasmMemory.buffer;\r\n  HEAP8 = new Int8Array(b);\r\n  HEAP16 = new Int16Array(b);\r\n  HEAPU8 = new Uint8Array(b);\r\n  HEAPU16 = new Uint16Array(b);\r\n  HEAP32 = new Int32Array(b);\r\n  HEAPU32 = new Uint32Array(b);\r\n  Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(b);\r\n  HEAPF64 = new Float64Array(b);\r\n  HEAP64 = new BigInt64Array(b);\r\n  HEAPU64 = new BigUint64Array(b);\r\n}\r\n\r\n// end include: runtime_shared.js\r\nassert(typeof Int32Array != \"undefined\" && typeof Float64Array !== \"undefined\" && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined, \"JS engine does not provide full typed array support\");\r\n\r\n// In non-standalone/normal mode, we create the memory here.\r\n// include: runtime_init_memory.js\r\n// Create the wasm memory. (Note: this only applies if IMPORTED_MEMORY is defined)\r\n// check for full engine support (use string 'subarray' to avoid closure compiler confusion)\r\nfunction initMemory() {\r\n  if ((ENVIRONMENT_IS_PTHREAD)) {\r\n    return;\r\n  }\r\n  {\r\n    var INITIAL_MEMORY = 16777216;\r\n    assert(INITIAL_MEMORY >= 2097152, \"INITIAL_MEMORY should be larger than STACK_SIZE, was \" + INITIAL_MEMORY + \"! (STACK_SIZE=\" + 2097152 + \")\");\r\n    /** @suppress {checkTypes} */ wasmMemory = new WebAssembly.Memory({\r\n      \"initial\": INITIAL_MEMORY / 65536,\r\n      // In theory we should not need to emit the maximum if we want \"unlimited\"\r\n      // or 4GB of memory, but VMs error on that atm, see\r\n      // https://github.com/emscripten-core/emscripten/issues/14130\r\n      // And in the pthreads case we definitely need to emit a maximum. So\r\n      // always emit one.\r\n      \"maximum\": 32768,\r\n      \"shared\": true\r\n    });\r\n  }\r\n  updateMemoryViews();\r\n}\r\n\r\n// end include: runtime_init_memory.js\r\nfunction preRun() {\r\n  assert(!ENVIRONMENT_IS_PTHREAD);\r\n  // PThreads reuse the runtime from the main thread.\r\n  // Begin ATPRERUNS hooks\r\n  callRuntimeCallbacks(onPreRuns);\r\n}\r\n\r\nfunction initRuntime() {\r\n  assert(!runtimeInitialized);\r\n  runtimeInitialized = true;\r\n  if (ENVIRONMENT_IS_PTHREAD) return startWorker(Module);\r\n  checkStackCookie();\r\n  // Begin ATINITS hooks\r\n  if (!Module[\"noFSInit\"] && !FS.initialized) FS.init();\r\n  TTY.init();\r\n  // End ATINITS hooks\r\n  wasmExports[\"__wasm_call_ctors\"]();\r\n  // Begin ATPOSTCTORS hooks\r\n  FS.ignorePermissions = false;\r\n}\r\n\r\nfunction preMain() {\r\n  checkStackCookie();\r\n}\r\n\r\nfunction postRun() {\r\n  checkStackCookie();\r\n  if ((ENVIRONMENT_IS_PTHREAD)) {\r\n    return;\r\n  }\r\n}\r\n\r\n// A counter of dependencies for calling run(). If we need to\r\n// do asynchronous work before running, increment this and\r\n// decrement it. Incrementing must happen in a place like\r\n// Module.preRun (used by emcc to add file preloading).\r\n// Note that you can add dependencies in preRun, even though\r\n// it happens right before run - run will be postponed until\r\n// the dependencies are met.\r\nvar runDependencies = 0;\r\n\r\nvar dependenciesFulfilled = null;\r\n\r\n// overridden to take different actions when all run dependencies are fulfilled\r\nvar runDependencyTracking = {};\r\n\r\nvar runDependencyWatcher = null;\r\n\r\nfunction getUniqueRunDependency(id) {\r\n  var orig = id;\r\n  while (1) {\r\n    if (!runDependencyTracking[id]) return id;\r\n    id = orig + Math.random();\r\n  }\r\n}\r\n\r\nfunction addRunDependency(id) {\r\n  runDependencies++;\r\n  if (id) {\r\n    assert(!runDependencyTracking[id]);\r\n    runDependencyTracking[id] = 1;\r\n    if (runDependencyWatcher === null && typeof setInterval != \"undefined\") {\r\n      // Check for missing dependencies every few seconds\r\n      runDependencyWatcher = setInterval(() => {\r\n        if (ABORT) {\r\n          clearInterval(runDependencyWatcher);\r\n          runDependencyWatcher = null;\r\n          return;\r\n        }\r\n        var shown = false;\r\n        for (var dep in runDependencyTracking) {\r\n          if (!shown) {\r\n            shown = true;\r\n            err(\"still waiting on run dependencies:\");\r\n          }\r\n          err(`dependency: ${dep}`);\r\n        }\r\n        if (shown) {\r\n          err(\"(end of list)\");\r\n        }\r\n      }, 1e4);\r\n    }\r\n  } else {\r\n    err(\"warning: run dependency added without ID\");\r\n  }\r\n}\r\n\r\nfunction removeRunDependency(id) {\r\n  runDependencies--;\r\n  if (id) {\r\n    assert(runDependencyTracking[id]);\r\n    delete runDependencyTracking[id];\r\n  } else {\r\n    err(\"warning: run dependency removed without ID\");\r\n  }\r\n  if (runDependencies == 0) {\r\n    if (runDependencyWatcher !== null) {\r\n      clearInterval(runDependencyWatcher);\r\n      runDependencyWatcher = null;\r\n    }\r\n    if (dependenciesFulfilled) {\r\n      var callback = dependenciesFulfilled;\r\n      dependenciesFulfilled = null;\r\n      callback();\r\n    }\r\n  }\r\n}\r\n\r\n/** @param {string|number=} what */ function abort(what) {\r\n  what = \"Aborted(\" + what + \")\";\r\n  // TODO(sbc): Should we remove printing and leave it up to whoever\r\n  // catches the exception?\r\n  err(what);\r\n  ABORT = true;\r\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\r\n  // exception, which means we'd run destructors on it. We need the error to\r\n  // simply make the program stop.\r\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\r\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\r\n  // a trap or not based on a hidden field within the object. So at the moment\r\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\r\n  // allows this in the wasm spec.\r\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\r\n  // definition for WebAssembly.RuntimeError claims it takes no arguments even\r\n  // though it can.\r\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\r\n  /** @suppress {checkTypes} */ var e = new WebAssembly.RuntimeError(what);\r\n  readyPromiseReject(e);\r\n  // Throw the error whether or not MODULARIZE is set because abort is used\r\n  // in code paths apart from instantiation where an exception is expected\r\n  // to be thrown when abort is called.\r\n  throw e;\r\n}\r\n\r\nfunction createExportWrapper(name, nargs) {\r\n  return (...args) => {\r\n    assert(runtimeInitialized, `native function \\`${name}\\` called before runtime initialization`);\r\n    var f = wasmExports[name];\r\n    assert(f, `exported native function \\`${name}\\` not found`);\r\n    // Only assert for too many arguments. Too few can be valid since the missing arguments will be zero filled.\r\n    assert(args.length <= nargs, `native function \\`${name}\\` called with ${args.length} args but expects ${nargs}`);\r\n    return f(...args);\r\n  };\r\n}\r\n\r\nvar wasmBinaryFile;\r\n\r\nfunction findWasmBinary() {\r\n  if (Module[\"locateFile\"]) {\r\n    return locateFile(\"wasm_boids.wasm\");\r\n  }\r\n  // Use bundler-friendly `new URL(..., import.meta.url)` pattern; works in browsers too.\r\n  return new URL(\"wasm_boids.wasm\", import.meta.url).href;\r\n}\r\n\r\nfunction getBinarySync(file) {\r\n  if (readBinary) {\r\n    return readBinary(file);\r\n  }\r\n  throw \"both async and sync fetching of the wasm failed\";\r\n}\r\n\r\nasync function getWasmBinary(binaryFile) {\r\n  // If we don't have the binary yet, load it asynchronously using readAsync.\r\n  if (!wasmBinary) {\r\n    // Fetch the binary using readAsync\r\n    try {\r\n      var response = await readAsync(binaryFile);\r\n      return new Uint8Array(response);\r\n    } catch {}\r\n  }\r\n  // Otherwise, getBinarySync should be able to get it synchronously\r\n  return getBinarySync(binaryFile);\r\n}\r\n\r\nasync function instantiateArrayBuffer(binaryFile, imports) {\r\n  try {\r\n    var binary = await getWasmBinary(binaryFile);\r\n    var instance = await WebAssembly.instantiate(binary, imports);\r\n    return instance;\r\n  } catch (reason) {\r\n    err(`failed to asynchronously prepare wasm: ${reason}`);\r\n    // Warn on some common problems.\r\n    if (isFileURI(wasmBinaryFile)) {\r\n      err(`warning: Loading from a file URI (${wasmBinaryFile}) is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing`);\r\n    }\r\n    abort(reason);\r\n  }\r\n}\r\n\r\nasync function instantiateAsync(binary, binaryFile, imports) {\r\n  if (!binary && typeof WebAssembly.instantiateStreaming == \"function\") {\r\n    try {\r\n      var response = fetch(binaryFile, {\r\n        credentials: \"same-origin\"\r\n      });\r\n      var instantiationResult = await WebAssembly.instantiateStreaming(response, imports);\r\n      return instantiationResult;\r\n    } catch (reason) {\r\n      // We expect the most common failure cause to be a bad MIME type for the binary,\r\n      // in which case falling back to ArrayBuffer instantiation should work.\r\n      err(`wasm streaming compile failed: ${reason}`);\r\n      err(\"falling back to ArrayBuffer instantiation\");\r\n    }\r\n  }\r\n  return instantiateArrayBuffer(binaryFile, imports);\r\n}\r\n\r\nfunction getWasmImports() {\r\n  assignWasmImports();\r\n  // prepare imports\r\n  return {\r\n    \"env\": wasmImports,\r\n    \"wasi_snapshot_preview1\": wasmImports\r\n  };\r\n}\r\n\r\n// Create the wasm instance.\r\n// Receives the wasm imports, returns the exports.\r\nasync function createWasm() {\r\n  // Load the wasm module and create an instance of using native support in the JS engine.\r\n  // handle a generated wasm instance, receiving its exports and\r\n  // performing other necessary setup\r\n  /** @param {WebAssembly.Module=} module*/ function receiveInstance(instance, module) {\r\n    wasmExports = instance.exports;\r\n    registerTLSInit(wasmExports[\"_emscripten_tls_init\"]);\r\n    wasmTable = wasmExports[\"__indirect_function_table\"];\r\n    assert(wasmTable, \"table not found in wasm exports\");\r\n    // We now have the Wasm module loaded up, keep a reference to the compiled module so we can post it to the workers.\r\n    wasmModule = module;\r\n    removeRunDependency(\"wasm-instantiate\");\r\n    return wasmExports;\r\n  }\r\n  // wait for the pthread pool (if any)\r\n  addRunDependency(\"wasm-instantiate\");\r\n  // Prefer streaming instantiation if available.\r\n  // Async compilation can be confusing when an error on the page overwrites Module\r\n  // (for example, if the order of elements is wrong, and the one defining Module is\r\n  // later), so we save Module and check it later.\r\n  var trueModule = Module;\r\n  function receiveInstantiationResult(result) {\r\n    // 'result' is a ResultObject object which has both the module and instance.\r\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\r\n    assert(Module === trueModule, \"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?\");\r\n    trueModule = null;\r\n    return receiveInstance(result[\"instance\"], result[\"module\"]);\r\n  }\r\n  var info = getWasmImports();\r\n  if ((ENVIRONMENT_IS_PTHREAD)) {\r\n    return new Promise(resolve => {\r\n      wasmModuleReceived = module => {\r\n        // Instantiate from the module posted from the main thread.\r\n        // We can just use sync instantiation in the worker.\r\n        var instance = new WebAssembly.Instance(module, getWasmImports());\r\n        resolve(receiveInstance(instance, module));\r\n      };\r\n    });\r\n  }\r\n  wasmBinaryFile ??= findWasmBinary();\r\n  try {\r\n    var result = await instantiateAsync(wasmBinary, wasmBinaryFile, info);\r\n    var exports = receiveInstantiationResult(result);\r\n    return exports;\r\n  } catch (e) {\r\n    // If instantiation fails, reject the module ready promise.\r\n    readyPromiseReject(e);\r\n    return Promise.reject(e);\r\n  }\r\n}\r\n\r\n// end include: preamble.js\r\n// Begin JS library code\r\nclass ExitStatus {\r\n  name=\"ExitStatus\";\r\n  constructor(status) {\r\n    this.message = `Program terminated with exit(${status})`;\r\n    this.status = status;\r\n  }\r\n}\r\n\r\nvar terminateWorker = worker => {\r\n  worker.terminate();\r\n  // terminate() can be asynchronous, so in theory the worker can continue\r\n  // to run for some amount of time after termination.  However from our POV\r\n  // the worker now dead and we don't want to hear from it again, so we stub\r\n  // out its message handler here.  This avoids having to check in each of\r\n  // the onmessage handlers if the message was coming from valid worker.\r\n  worker.onmessage = e => {\r\n    var cmd = e[\"data\"].cmd;\r\n    err(`received \"${cmd}\" command from terminated worker: ${worker.workerID}`);\r\n  };\r\n};\r\n\r\nvar cleanupThread = pthread_ptr => {\r\n  assert(!ENVIRONMENT_IS_PTHREAD, \"Internal Error! cleanupThread() can only ever be called from main application thread!\");\r\n  assert(pthread_ptr, \"Internal Error! Null pthread_ptr in cleanupThread!\");\r\n  var worker = PThread.pthreads[pthread_ptr];\r\n  assert(worker);\r\n  PThread.returnWorkerToPool(worker);\r\n};\r\n\r\nvar callRuntimeCallbacks = callbacks => {\r\n  while (callbacks.length > 0) {\r\n    // Pass the module as the first argument.\r\n    callbacks.shift()(Module);\r\n  }\r\n};\r\n\r\nvar onPreRuns = [];\r\n\r\nvar addOnPreRun = cb => onPreRuns.push(cb);\r\n\r\nvar spawnThread = threadParams => {\r\n  assert(!ENVIRONMENT_IS_PTHREAD, \"Internal Error! spawnThread() can only ever be called from main application thread!\");\r\n  assert(threadParams.pthread_ptr, \"Internal error, no pthread ptr!\");\r\n  var worker = PThread.getNewWorker();\r\n  if (!worker) {\r\n    // No available workers in the PThread pool.\r\n    return 6;\r\n  }\r\n  assert(!worker.pthread_ptr, \"Internal error!\");\r\n  PThread.runningWorkers.push(worker);\r\n  // Add to pthreads map\r\n  PThread.pthreads[threadParams.pthread_ptr] = worker;\r\n  worker.pthread_ptr = threadParams.pthread_ptr;\r\n  var msg = {\r\n    cmd: \"run\",\r\n    start_routine: threadParams.startRoutine,\r\n    arg: threadParams.arg,\r\n    pthread_ptr: threadParams.pthread_ptr\r\n  };\r\n  // Ask the worker to start executing its pthread entry point function.\r\n  worker.postMessage(msg, threadParams.transferList);\r\n  return 0;\r\n};\r\n\r\nvar runtimeKeepaliveCounter = 0;\r\n\r\nvar keepRuntimeAlive = () => runtimeKeepaliveCounter > 0;\r\n\r\nvar stackSave = () => _emscripten_stack_get_current();\r\n\r\nvar stackRestore = val => __emscripten_stack_restore(val);\r\n\r\nvar stackAlloc = sz => __emscripten_stack_alloc(sz);\r\n\r\n/** @type{function(number, (number|boolean), ...number)} */ var proxyToMainThread = (funcIndex, emAsmAddr, sync, ...callArgs) => {\r\n  // EM_ASM proxying is done by passing a pointer to the address of the EM_ASM\r\n  // content as `emAsmAddr`.  JS library proxying is done by passing an index\r\n  // into `proxiedJSCallArgs` as `funcIndex`. If `emAsmAddr` is non-zero then\r\n  // `funcIndex` will be ignored.\r\n  // Additional arguments are passed after the first three are the actual\r\n  // function arguments.\r\n  // The serialization buffer contains the number of call params, and then\r\n  // all the args here.\r\n  // We also pass 'sync' to C separately, since C needs to look at it.\r\n  // Allocate a buffer, which will be copied by the C code.\r\n  // First passed parameter specifies the number of arguments to the function.\r\n  // When BigInt support is enabled, we must handle types in a more complex\r\n  // way, detecting at runtime if a value is a BigInt or not (as we have no\r\n  // type info here). To do that, add a \"prefix\" before each value that\r\n  // indicates if it is a BigInt, which effectively doubles the number of\r\n  // values we serialize for proxying. TODO: pack this?\r\n  var serializedNumCallArgs = callArgs.length * 2;\r\n  var sp = stackSave();\r\n  var args = stackAlloc(serializedNumCallArgs * 8);\r\n  var b = ((args) >> 3);\r\n  for (var i = 0; i < callArgs.length; i++) {\r\n    var arg = callArgs[i];\r\n    if (typeof arg == \"bigint\") {\r\n      // The prefix is non-zero to indicate a bigint.\r\n      HEAP64[b + 2 * i] = 1n;\r\n      HEAP64[b + 2 * i + 1] = arg;\r\n    } else {\r\n      // The prefix is zero to indicate a JS Number.\r\n      HEAP64[b + 2 * i] = 0n;\r\n      GROWABLE_HEAP_F64()[b + 2 * i + 1] = arg;\r\n    }\r\n  }\r\n  var rtn = __emscripten_run_on_main_thread_js(funcIndex, emAsmAddr, serializedNumCallArgs, args, sync);\r\n  stackRestore(sp);\r\n  return rtn;\r\n};\r\n\r\nfunction _proc_exit(code) {\r\n  if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(0, 0, 1, code);\r\n  EXITSTATUS = code;\r\n  if (!keepRuntimeAlive()) {\r\n    PThread.terminateAllThreads();\r\n    ABORT = true;\r\n  }\r\n  quit_(code, new ExitStatus(code));\r\n}\r\n\r\nvar runtimeKeepalivePop = () => {\r\n  assert(runtimeKeepaliveCounter > 0);\r\n  runtimeKeepaliveCounter -= 1;\r\n};\r\n\r\nfunction exitOnMainThread(returnCode) {\r\n  if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(1, 0, 0, returnCode);\r\n  runtimeKeepalivePop();\r\n  _exit(returnCode);\r\n}\r\n\r\n/** @suppress {duplicate } */ /** @param {boolean|number=} implicit */ var exitJS = (status, implicit) => {\r\n  EXITSTATUS = status;\r\n  checkUnflushedContent();\r\n  if (ENVIRONMENT_IS_PTHREAD) {\r\n    // implicit exit can never happen on a pthread\r\n    assert(!implicit);\r\n    // When running in a pthread we propagate the exit back to the main thread\r\n    // where it can decide if the whole process should be shut down or not.\r\n    // The pthread may have decided not to exit its own runtime, for example\r\n    // because it runs a main loop, but that doesn't affect the main thread.\r\n    exitOnMainThread(status);\r\n    throw \"unwind\";\r\n  }\r\n  // if exit() was called explicitly, warn the user if the runtime isn't actually being shut down\r\n  if (keepRuntimeAlive() && !implicit) {\r\n    var msg = `program exited (with status: ${status}), but keepRuntimeAlive() is set (counter=${runtimeKeepaliveCounter}) due to an async operation, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)`;\r\n    readyPromiseReject(msg);\r\n    err(msg);\r\n  }\r\n  _proc_exit(status);\r\n};\r\n\r\nvar _exit = exitJS;\r\n\r\nvar ptrToString = ptr => {\r\n  assert(typeof ptr === \"number\");\r\n  // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\r\n  ptr >>>= 0;\r\n  return \"0x\" + ptr.toString(16).padStart(8, \"0\");\r\n};\r\n\r\nvar PThread = {\r\n  unusedWorkers: [],\r\n  runningWorkers: [],\r\n  tlsInitFunctions: [],\r\n  pthreads: {},\r\n  nextWorkerID: 1,\r\n  init() {\r\n    if ((!(ENVIRONMENT_IS_PTHREAD))) {\r\n      PThread.initMainThread();\r\n    }\r\n  },\r\n  initMainThread() {\r\n    var pthreadPoolSize = navigator.hardwareConcurrency;\r\n    // Start loading up the Worker pool, if requested.\r\n    while (pthreadPoolSize--) {\r\n      PThread.allocateUnusedWorker();\r\n    }\r\n    // MINIMAL_RUNTIME takes care of calling loadWasmModuleToAllWorkers\r\n    // in postamble_minimal.js\r\n    addOnPreRun(() => {\r\n      addRunDependency(\"loading-workers\");\r\n      PThread.loadWasmModuleToAllWorkers(() => removeRunDependency(\"loading-workers\"));\r\n    });\r\n  },\r\n  terminateAllThreads: () => {\r\n    assert(!ENVIRONMENT_IS_PTHREAD, \"Internal Error! terminateAllThreads() can only ever be called from main application thread!\");\r\n    // Attempt to kill all workers.  Sadly (at least on the web) there is no\r\n    // way to terminate a worker synchronously, or to be notified when a\r\n    // worker in actually terminated.  This means there is some risk that\r\n    // pthreads will continue to be executing after `worker.terminate` has\r\n    // returned.  For this reason, we don't call `returnWorkerToPool` here or\r\n    // free the underlying pthread data structures.\r\n    for (var worker of PThread.runningWorkers) {\r\n      terminateWorker(worker);\r\n    }\r\n    for (var worker of PThread.unusedWorkers) {\r\n      terminateWorker(worker);\r\n    }\r\n    PThread.unusedWorkers = [];\r\n    PThread.runningWorkers = [];\r\n    PThread.pthreads = {};\r\n  },\r\n  returnWorkerToPool: worker => {\r\n    // We don't want to run main thread queued calls here, since we are doing\r\n    // some operations that leave the worker queue in an invalid state until\r\n    // we are completely done (it would be bad if free() ends up calling a\r\n    // queued pthread_create which looks at the global data structures we are\r\n    // modifying). To achieve that, defer the free() til the very end, when\r\n    // we are all done.\r\n    var pthread_ptr = worker.pthread_ptr;\r\n    delete PThread.pthreads[pthread_ptr];\r\n    // Note: worker is intentionally not terminated so the pool can\r\n    // dynamically grow.\r\n    PThread.unusedWorkers.push(worker);\r\n    PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker), 1);\r\n    // Not a running Worker anymore\r\n    // Detach the worker from the pthread object, and return it to the\r\n    // worker pool as an unused worker.\r\n    worker.pthread_ptr = 0;\r\n    // Finally, free the underlying (and now-unused) pthread structure in\r\n    // linear memory.\r\n    __emscripten_thread_free_data(pthread_ptr);\r\n  },\r\n  threadInitTLS() {\r\n    // Call thread init functions (these are the _emscripten_tls_init for each\r\n    // module loaded.\r\n    PThread.tlsInitFunctions.forEach(f => f());\r\n  },\r\n  loadWasmModuleToWorker: worker => new Promise(onFinishedLoading => {\r\n    worker.onmessage = e => {\r\n      var d = e[\"data\"];\r\n      var cmd = d.cmd;\r\n      // If this message is intended to a recipient that is not the main\r\n      // thread, forward it to the target thread.\r\n      if (d.targetThread && d.targetThread != _pthread_self()) {\r\n        var targetWorker = PThread.pthreads[d.targetThread];\r\n        if (targetWorker) {\r\n          targetWorker.postMessage(d, d.transferList);\r\n        } else {\r\n          err(`Internal error! Worker sent a message \"${cmd}\" to target pthread ${d.targetThread}, but that thread no longer exists!`);\r\n        }\r\n        return;\r\n      }\r\n      if (cmd === \"checkMailbox\") {\r\n        checkMailbox();\r\n      } else if (cmd === \"spawnThread\") {\r\n        spawnThread(d);\r\n      } else if (cmd === \"cleanupThread\") {\r\n        cleanupThread(d.thread);\r\n      } else if (cmd === \"loaded\") {\r\n        worker.loaded = true;\r\n        onFinishedLoading(worker);\r\n      } else if (d.target === \"setimmediate\") {\r\n        // Worker wants to postMessage() to itself to implement setImmediate()\r\n        // emulation.\r\n        worker.postMessage(d);\r\n      } else if (cmd === \"callHandler\") {\r\n        Module[d.handler](...d.args);\r\n      } else if (cmd) {\r\n        // The received message looks like something that should be handled by this message\r\n        // handler, (since there is a e.data.cmd field present), but is not one of the\r\n        // recognized commands:\r\n        err(`worker sent an unknown command ${cmd}`);\r\n      }\r\n    };\r\n    worker.onerror = e => {\r\n      var message = \"worker sent an error!\";\r\n      if (worker.pthread_ptr) {\r\n        message = `Pthread ${ptrToString(worker.pthread_ptr)} sent an error!`;\r\n      }\r\n      err(`${message} ${e.filename}:${e.lineno}: ${e.message}`);\r\n      throw e;\r\n    };\r\n    assert(wasmMemory instanceof WebAssembly.Memory, \"WebAssembly memory should have been loaded by now!\");\r\n    assert(wasmModule instanceof WebAssembly.Module, \"WebAssembly Module should have been loaded by now!\");\r\n    // When running on a pthread, none of the incoming parameters on the module\r\n    // object are present. Proxy known handlers back to the main thread if specified.\r\n    var handlers = [];\r\n    var knownHandlers = [];\r\n    for (var handler of knownHandlers) {\r\n      if (Module.propertyIsEnumerable(handler)) {\r\n        handlers.push(handler);\r\n      }\r\n    }\r\n    // Ask the new worker to load up the Emscripten-compiled page. This is a heavy operation.\r\n    worker.postMessage({\r\n      cmd: \"load\",\r\n      handlers,\r\n      wasmMemory,\r\n      wasmModule,\r\n      \"workerID\": worker.workerID\r\n    });\r\n  }),\r\n  loadWasmModuleToAllWorkers(onMaybeReady) {\r\n    // Instantiation is synchronous in pthreads.\r\n    if (ENVIRONMENT_IS_PTHREAD) {\r\n      return onMaybeReady();\r\n    }\r\n    let pthreadPoolReady = Promise.all(PThread.unusedWorkers.map(PThread.loadWasmModuleToWorker));\r\n    pthreadPoolReady.then(onMaybeReady);\r\n  },\r\n  allocateUnusedWorker() {\r\n    var worker;\r\n    // If we're using module output, use bundler-friendly pattern.\r\n    // We need to generate the URL with import.meta.url as the base URL of the JS file\r\n    // instead of just using new URL(import.meta.url) because bundler's only recognize\r\n    // the first case in their bundling step. The latter ends up producing an invalid\r\n    // URL to import from the server (e.g., for webpack the file:// path).\r\n    // See https://github.com/webpack/webpack/issues/12638\r\n    worker = new Worker(new URL(\"wasm_boids.js\", import.meta.url), {\r\n      \"type\": \"module\",\r\n      // This is the way that we signal to the Web Worker that it is hosting\r\n      // a pthread.\r\n      \"name\": \"em-pthread-\" + PThread.nextWorkerID\r\n    });\r\n    worker.workerID = PThread.nextWorkerID++;\r\n    PThread.unusedWorkers.push(worker);\r\n  },\r\n  getNewWorker() {\r\n    if (PThread.unusedWorkers.length == 0) {\r\n      // PTHREAD_POOL_SIZE_STRICT should show a warning and, if set to level `2`, return from the function.\r\n      PThread.allocateUnusedWorker();\r\n      PThread.loadWasmModuleToWorker(PThread.unusedWorkers[0]);\r\n    }\r\n    return PThread.unusedWorkers.pop();\r\n  }\r\n};\r\n\r\nvar establishStackSpace = pthread_ptr => {\r\n  // If memory growth is enabled, the memory views may have gotten out of date,\r\n  // so resync them before accessing the pthread ptr below.\r\n  updateMemoryViews();\r\n  var stackHigh = GROWABLE_HEAP_U32()[(((pthread_ptr) + (52)) >> 2)];\r\n  var stackSize = GROWABLE_HEAP_U32()[(((pthread_ptr) + (56)) >> 2)];\r\n  var stackLow = stackHigh - stackSize;\r\n  assert(stackHigh != 0);\r\n  assert(stackLow != 0);\r\n  assert(stackHigh > stackLow, \"stackHigh must be higher then stackLow\");\r\n  // Set stack limits used by `emscripten/stack.h` function.  These limits are\r\n  // cached in wasm-side globals to make checks as fast as possible.\r\n  _emscripten_stack_set_limits(stackHigh, stackLow);\r\n  // Call inside wasm module to set up the stack frame for this pthread in wasm module scope\r\n  stackRestore(stackHigh);\r\n  // Write the stack cookie last, after we have set up the proper bounds and\r\n  // current position of the stack.\r\n  writeStackCookie();\r\n};\r\n\r\n/**\r\n     * @param {number} ptr\r\n     * @param {string} type\r\n     */ function getValue(ptr, type = \"i8\") {\r\n  if (type.endsWith(\"*\")) type = \"*\";\r\n  switch (type) {\r\n   case \"i1\":\r\n    return GROWABLE_HEAP_I8()[ptr];\r\n\r\n   case \"i8\":\r\n    return GROWABLE_HEAP_I8()[ptr];\r\n\r\n   case \"i16\":\r\n    return GROWABLE_HEAP_I16()[((ptr) >> 1)];\r\n\r\n   case \"i32\":\r\n    return GROWABLE_HEAP_I32()[((ptr) >> 2)];\r\n\r\n   case \"i64\":\r\n    return HEAP64[((ptr) >> 3)];\r\n\r\n   case \"float\":\r\n    return GROWABLE_HEAP_F32()[((ptr) >> 2)];\r\n\r\n   case \"double\":\r\n    return GROWABLE_HEAP_F64()[((ptr) >> 3)];\r\n\r\n   case \"*\":\r\n    return GROWABLE_HEAP_U32()[((ptr) >> 2)];\r\n\r\n   default:\r\n    abort(`invalid type for getValue: ${type}`);\r\n  }\r\n}\r\n\r\nvar wasmTableMirror = [];\r\n\r\n/** @type {WebAssembly.Table} */ var wasmTable;\r\n\r\nvar getWasmTableEntry = funcPtr => {\r\n  var func = wasmTableMirror[funcPtr];\r\n  if (!func) {\r\n    /** @suppress {checkTypes} */ wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\r\n  }\r\n  /** @suppress {checkTypes} */ assert(wasmTable.get(funcPtr) == func, \"JavaScript-side Wasm function table mirror is out of date!\");\r\n  return func;\r\n};\r\n\r\nvar invokeEntryPoint = (ptr, arg) => {\r\n  // An old thread on this worker may have been canceled without returning the\r\n  // `runtimeKeepaliveCounter` to zero. Reset it now so the new thread won't\r\n  // be affected.\r\n  runtimeKeepaliveCounter = 0;\r\n  // pthread entry points are always of signature 'void *ThreadMain(void *arg)'\r\n  // Native codebases sometimes spawn threads with other thread entry point\r\n  // signatures, such as void ThreadMain(void *arg), void *ThreadMain(), or\r\n  // void ThreadMain().  That is not acceptable per C/C++ specification, but\r\n  // x86 compiler ABI extensions enable that to work. If you find the\r\n  // following line to crash, either change the signature to \"proper\" void\r\n  // *ThreadMain(void *arg) form, or try linking with the Emscripten linker\r\n  // flag -sEMULATE_FUNCTION_POINTER_CASTS to add in emulation for this x86\r\n  // ABI extension.\r\n  var result = getWasmTableEntry(ptr)(arg);\r\n  checkStackCookie();\r\n  function finish(result) {\r\n    if (keepRuntimeAlive()) {\r\n      EXITSTATUS = result;\r\n    } else {\r\n      __emscripten_thread_exit(result);\r\n    }\r\n  }\r\n  finish(result);\r\n};\r\n\r\nvar registerTLSInit = tlsInitFunc => PThread.tlsInitFunctions.push(tlsInitFunc);\r\n\r\nvar runtimeKeepalivePush = () => {\r\n  runtimeKeepaliveCounter += 1;\r\n};\r\n\r\n/**\r\n     * @param {number} ptr\r\n     * @param {number} value\r\n     * @param {string} type\r\n     */ function setValue(ptr, value, type = \"i8\") {\r\n  if (type.endsWith(\"*\")) type = \"*\";\r\n  switch (type) {\r\n   case \"i1\":\r\n    GROWABLE_HEAP_I8()[ptr] = value;\r\n    break;\r\n\r\n   case \"i8\":\r\n    GROWABLE_HEAP_I8()[ptr] = value;\r\n    break;\r\n\r\n   case \"i16\":\r\n    GROWABLE_HEAP_I16()[((ptr) >> 1)] = value;\r\n    break;\r\n\r\n   case \"i32\":\r\n    GROWABLE_HEAP_I32()[((ptr) >> 2)] = value;\r\n    break;\r\n\r\n   case \"i64\":\r\n    HEAP64[((ptr) >> 3)] = BigInt(value);\r\n    break;\r\n\r\n   case \"float\":\r\n    GROWABLE_HEAP_F32()[((ptr) >> 2)] = value;\r\n    break;\r\n\r\n   case \"double\":\r\n    GROWABLE_HEAP_F64()[((ptr) >> 3)] = value;\r\n    break;\r\n\r\n   case \"*\":\r\n    GROWABLE_HEAP_U32()[((ptr) >> 2)] = value;\r\n    break;\r\n\r\n   default:\r\n    abort(`invalid type for setValue: ${type}`);\r\n  }\r\n}\r\n\r\nvar warnOnce = text => {\r\n  warnOnce.shown ||= {};\r\n  if (!warnOnce.shown[text]) {\r\n    warnOnce.shown[text] = 1;\r\n    err(text);\r\n  }\r\n};\r\n\r\nvar UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder : undefined;\r\n\r\n/**\r\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\r\n     * array that contains uint8 values, returns a copy of that string as a\r\n     * Javascript String object.\r\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\r\n     * @param {number=} idx\r\n     * @param {number=} maxBytesToRead\r\n     * @return {string}\r\n     */ var UTF8ArrayToString = (heapOrArray, idx = 0, maxBytesToRead = NaN) => {\r\n  var endIdx = idx + maxBytesToRead;\r\n  var endPtr = idx;\r\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on\r\n  // null terminator by itself.  Also, use the length info to avoid running tiny\r\n  // strings through TextDecoder, since .subarray() allocates garbage.\r\n  // (As a tiny code save trick, compare endPtr against endIdx using a negation,\r\n  // so that undefined/NaN means Infinity)\r\n  while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\r\n  if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\r\n    return UTF8Decoder.decode(heapOrArray.buffer instanceof ArrayBuffer ? heapOrArray.subarray(idx, endPtr) : heapOrArray.slice(idx, endPtr));\r\n  }\r\n  var str = \"\";\r\n  // If building with TextDecoder, we have already computed the string length\r\n  // above, so test loop end condition against that\r\n  while (idx < endPtr) {\r\n    // For UTF8 byte structure, see:\r\n    // http://en.wikipedia.org/wiki/UTF-8#Description\r\n    // https://www.ietf.org/rfc/rfc2279.txt\r\n    // https://tools.ietf.org/html/rfc3629\r\n    var u0 = heapOrArray[idx++];\r\n    if (!(u0 & 128)) {\r\n      str += String.fromCharCode(u0);\r\n      continue;\r\n    }\r\n    var u1 = heapOrArray[idx++] & 63;\r\n    if ((u0 & 224) == 192) {\r\n      str += String.fromCharCode(((u0 & 31) << 6) | u1);\r\n      continue;\r\n    }\r\n    var u2 = heapOrArray[idx++] & 63;\r\n    if ((u0 & 240) == 224) {\r\n      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\r\n    } else {\r\n      if ((u0 & 248) != 240) warnOnce(\"Invalid UTF-8 leading byte \" + ptrToString(u0) + \" encountered when deserializing a UTF-8 string in wasm memory to a JS string!\");\r\n      u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\r\n    }\r\n    if (u0 < 65536) {\r\n      str += String.fromCharCode(u0);\r\n    } else {\r\n      var ch = u0 - 65536;\r\n      str += String.fromCharCode(55296 | (ch >> 10), 56320 | (ch & 1023));\r\n    }\r\n  }\r\n  return str;\r\n};\r\n\r\n/**\r\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\r\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\r\n     *\r\n     * @param {number} ptr\r\n     * @param {number=} maxBytesToRead - An optional length that specifies the\r\n     *   maximum number of bytes to read. You can omit this parameter to scan the\r\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\r\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\r\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\r\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\r\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\r\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\r\n     * @return {string}\r\n     */ var UTF8ToString = (ptr, maxBytesToRead) => {\r\n  assert(typeof ptr == \"number\", `UTF8ToString expects a number (got ${typeof ptr})`);\r\n  return ptr ? UTF8ArrayToString(GROWABLE_HEAP_U8(), ptr, maxBytesToRead) : \"\";\r\n};\r\n\r\nvar ___assert_fail = (condition, filename, line, func) => abort(`Assertion failed: ${UTF8ToString(condition)}, at: ` + [ filename ? UTF8ToString(filename) : \"unknown filename\", line, func ? UTF8ToString(func) : \"unknown function\" ]);\r\n\r\nvar exceptionCaught = [];\r\n\r\nvar uncaughtExceptionCount = 0;\r\n\r\nvar ___cxa_begin_catch = ptr => {\r\n  var info = new ExceptionInfo(ptr);\r\n  if (!info.get_caught()) {\r\n    info.set_caught(true);\r\n    uncaughtExceptionCount--;\r\n  }\r\n  info.set_rethrown(false);\r\n  exceptionCaught.push(info);\r\n  ___cxa_increment_exception_refcount(ptr);\r\n  return ___cxa_get_exception_ptr(ptr);\r\n};\r\n\r\nvar exceptionLast = 0;\r\n\r\nvar ___cxa_end_catch = () => {\r\n  // Clear state flag.\r\n  _setThrew(0, 0);\r\n  assert(exceptionCaught.length > 0);\r\n  // Call destructor if one is registered then clear it.\r\n  var info = exceptionCaught.pop();\r\n  ___cxa_decrement_exception_refcount(info.excPtr);\r\n  exceptionLast = 0;\r\n};\r\n\r\nclass ExceptionInfo {\r\n  // excPtr - Thrown object pointer to wrap. Metadata pointer is calculated from it.\r\n  constructor(excPtr) {\r\n    this.excPtr = excPtr;\r\n    this.ptr = excPtr - 24;\r\n  }\r\n  set_type(type) {\r\n    GROWABLE_HEAP_U32()[(((this.ptr) + (4)) >> 2)] = type;\r\n  }\r\n  get_type() {\r\n    return GROWABLE_HEAP_U32()[(((this.ptr) + (4)) >> 2)];\r\n  }\r\n  set_destructor(destructor) {\r\n    GROWABLE_HEAP_U32()[(((this.ptr) + (8)) >> 2)] = destructor;\r\n  }\r\n  get_destructor() {\r\n    return GROWABLE_HEAP_U32()[(((this.ptr) + (8)) >> 2)];\r\n  }\r\n  set_caught(caught) {\r\n    caught = caught ? 1 : 0;\r\n    GROWABLE_HEAP_I8()[(this.ptr) + (12)] = caught;\r\n  }\r\n  get_caught() {\r\n    return GROWABLE_HEAP_I8()[(this.ptr) + (12)] != 0;\r\n  }\r\n  set_rethrown(rethrown) {\r\n    rethrown = rethrown ? 1 : 0;\r\n    GROWABLE_HEAP_I8()[(this.ptr) + (13)] = rethrown;\r\n  }\r\n  get_rethrown() {\r\n    return GROWABLE_HEAP_I8()[(this.ptr) + (13)] != 0;\r\n  }\r\n  // Initialize native structure fields. Should be called once after allocated.\r\n  init(type, destructor) {\r\n    this.set_adjusted_ptr(0);\r\n    this.set_type(type);\r\n    this.set_destructor(destructor);\r\n  }\r\n  set_adjusted_ptr(adjustedPtr) {\r\n    GROWABLE_HEAP_U32()[(((this.ptr) + (16)) >> 2)] = adjustedPtr;\r\n  }\r\n  get_adjusted_ptr() {\r\n    return GROWABLE_HEAP_U32()[(((this.ptr) + (16)) >> 2)];\r\n  }\r\n}\r\n\r\nvar setTempRet0 = val => __emscripten_tempret_set(val);\r\n\r\nvar findMatchingCatch = args => {\r\n  var thrown = exceptionLast?.excPtr;\r\n  if (!thrown) {\r\n    // just pass through the null ptr\r\n    setTempRet0(0);\r\n    return 0;\r\n  }\r\n  var info = new ExceptionInfo(thrown);\r\n  info.set_adjusted_ptr(thrown);\r\n  var thrownType = info.get_type();\r\n  if (!thrownType) {\r\n    // just pass through the thrown ptr\r\n    setTempRet0(0);\r\n    return thrown;\r\n  }\r\n  // can_catch receives a **, add indirection\r\n  // The different catch blocks are denoted by different types.\r\n  // Due to inheritance, those types may not precisely match the\r\n  // type of the thrown object. Find one which matches, and\r\n  // return the type of the catch block which should be called.\r\n  for (var caughtType of args) {\r\n    if (caughtType === 0 || caughtType === thrownType) {\r\n      // Catch all clause matched or exactly the same type is caught\r\n      break;\r\n    }\r\n    var adjusted_ptr_addr = info.ptr + 16;\r\n    if (___cxa_can_catch(caughtType, thrownType, adjusted_ptr_addr)) {\r\n      setTempRet0(caughtType);\r\n      return thrown;\r\n    }\r\n  }\r\n  setTempRet0(thrownType);\r\n  return thrown;\r\n};\r\n\r\nvar ___cxa_find_matching_catch_2 = () => findMatchingCatch([]);\r\n\r\nvar ___cxa_find_matching_catch_3 = arg0 => findMatchingCatch([ arg0 ]);\r\n\r\nvar ___cxa_rethrow = () => {\r\n  var info = exceptionCaught.pop();\r\n  if (!info) {\r\n    abort(\"no exception to throw\");\r\n  }\r\n  var ptr = info.excPtr;\r\n  if (!info.get_rethrown()) {\r\n    // Only pop if the corresponding push was through rethrow_primary_exception\r\n    exceptionCaught.push(info);\r\n    info.set_rethrown(true);\r\n    info.set_caught(false);\r\n    uncaughtExceptionCount++;\r\n  }\r\n  exceptionLast = new CppException(ptr);\r\n  throw exceptionLast;\r\n};\r\n\r\nvar ___cxa_rethrow_primary_exception = ptr => {\r\n  if (!ptr) return;\r\n  var info = new ExceptionInfo(ptr);\r\n  exceptionCaught.push(info);\r\n  info.set_rethrown(true);\r\n  ___cxa_rethrow();\r\n};\r\n\r\nvar ___cxa_throw = (ptr, type, destructor) => {\r\n  var info = new ExceptionInfo(ptr);\r\n  // Initialize ExceptionInfo content after it was allocated in __cxa_allocate_exception.\r\n  info.init(type, destructor);\r\n  exceptionLast = new CppException(ptr);\r\n  uncaughtExceptionCount++;\r\n  throw exceptionLast;\r\n};\r\n\r\nvar ___cxa_uncaught_exceptions = () => uncaughtExceptionCount;\r\n\r\nfunction pthreadCreateProxied(pthread_ptr, attr, startRoutine, arg) {\r\n  if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(2, 0, 1, pthread_ptr, attr, startRoutine, arg);\r\n  return ___pthread_create_js(pthread_ptr, attr, startRoutine, arg);\r\n}\r\n\r\nvar _emscripten_has_threading_support = () => typeof SharedArrayBuffer != \"undefined\";\r\n\r\nvar ___pthread_create_js = (pthread_ptr, attr, startRoutine, arg) => {\r\n  if (!_emscripten_has_threading_support()) {\r\n    dbg(\"pthread_create: environment does not support SharedArrayBuffer, pthreads are not available\");\r\n    return 6;\r\n  }\r\n  // List of JS objects that will transfer ownership to the Worker hosting the thread\r\n  var transferList = [];\r\n  var error = 0;\r\n  // Synchronously proxy the thread creation to main thread if possible. If we\r\n  // need to transfer ownership of objects, then proxy asynchronously via\r\n  // postMessage.\r\n  if (ENVIRONMENT_IS_PTHREAD && (transferList.length === 0 || error)) {\r\n    return pthreadCreateProxied(pthread_ptr, attr, startRoutine, arg);\r\n  }\r\n  // If on the main thread, and accessing Canvas/OffscreenCanvas failed, abort\r\n  // with the detected error.\r\n  if (error) return error;\r\n  var threadParams = {\r\n    startRoutine,\r\n    pthread_ptr,\r\n    arg,\r\n    transferList\r\n  };\r\n  if (ENVIRONMENT_IS_PTHREAD) {\r\n    // The prepopulated pool of web workers that can host pthreads is stored\r\n    // in the main JS thread. Therefore if a pthread is attempting to spawn a\r\n    // new thread, the thread creation must be deferred to the main JS thread.\r\n    threadParams.cmd = \"spawnThread\";\r\n    postMessage(threadParams, transferList);\r\n    // When we defer thread creation this way, we have no way to detect thread\r\n    // creation synchronously today, so we have to assume success and return 0.\r\n    return 0;\r\n  }\r\n  // We are the main thread, so we have the pthread warmup pool in this\r\n  // thread and can fire off JS thread creation directly ourselves.\r\n  return spawnThread(threadParams);\r\n};\r\n\r\nvar ___resumeException = ptr => {\r\n  if (!exceptionLast) {\r\n    exceptionLast = new CppException(ptr);\r\n  }\r\n  throw exceptionLast;\r\n};\r\n\r\nvar __abort_js = () => abort(\"native code called abort()\");\r\n\r\nvar structRegistrations = {};\r\n\r\nvar runDestructors = destructors => {\r\n  while (destructors.length) {\r\n    var ptr = destructors.pop();\r\n    var del = destructors.pop();\r\n    del(ptr);\r\n  }\r\n};\r\n\r\n/** @suppress {globalThis} */ function readPointer(pointer) {\r\n  return this[\"fromWireType\"](GROWABLE_HEAP_U32()[((pointer) >> 2)]);\r\n}\r\n\r\nvar awaitingDependencies = {};\r\n\r\nvar registeredTypes = {};\r\n\r\nvar typeDependencies = {};\r\n\r\nvar InternalError = Module[\"InternalError\"] = class InternalError extends Error {\r\n  constructor(message) {\r\n    super(message);\r\n    this.name = \"InternalError\";\r\n  }\r\n};\r\n\r\nvar throwInternalError = message => {\r\n  throw new InternalError(message);\r\n};\r\n\r\nvar whenDependentTypesAreResolved = (myTypes, dependentTypes, getTypeConverters) => {\r\n  myTypes.forEach(type => typeDependencies[type] = dependentTypes);\r\n  function onComplete(typeConverters) {\r\n    var myTypeConverters = getTypeConverters(typeConverters);\r\n    if (myTypeConverters.length !== myTypes.length) {\r\n      throwInternalError(\"Mismatched type converter count\");\r\n    }\r\n    for (var i = 0; i < myTypes.length; ++i) {\r\n      registerType(myTypes[i], myTypeConverters[i]);\r\n    }\r\n  }\r\n  var typeConverters = new Array(dependentTypes.length);\r\n  var unregisteredTypes = [];\r\n  var registered = 0;\r\n  dependentTypes.forEach((dt, i) => {\r\n    if (registeredTypes.hasOwnProperty(dt)) {\r\n      typeConverters[i] = registeredTypes[dt];\r\n    } else {\r\n      unregisteredTypes.push(dt);\r\n      if (!awaitingDependencies.hasOwnProperty(dt)) {\r\n        awaitingDependencies[dt] = [];\r\n      }\r\n      awaitingDependencies[dt].push(() => {\r\n        typeConverters[i] = registeredTypes[dt];\r\n        ++registered;\r\n        if (registered === unregisteredTypes.length) {\r\n          onComplete(typeConverters);\r\n        }\r\n      });\r\n    }\r\n  });\r\n  if (0 === unregisteredTypes.length) {\r\n    onComplete(typeConverters);\r\n  }\r\n};\r\n\r\nvar __embind_finalize_value_object = structType => {\r\n  var reg = structRegistrations[structType];\r\n  delete structRegistrations[structType];\r\n  var rawConstructor = reg.rawConstructor;\r\n  var rawDestructor = reg.rawDestructor;\r\n  var fieldRecords = reg.fields;\r\n  var fieldTypes = fieldRecords.map(field => field.getterReturnType).concat(fieldRecords.map(field => field.setterArgumentType));\r\n  whenDependentTypesAreResolved([ structType ], fieldTypes, fieldTypes => {\r\n    var fields = {};\r\n    fieldRecords.forEach((field, i) => {\r\n      var fieldName = field.fieldName;\r\n      var getterReturnType = fieldTypes[i];\r\n      var optional = fieldTypes[i].optional;\r\n      var getter = field.getter;\r\n      var getterContext = field.getterContext;\r\n      var setterArgumentType = fieldTypes[i + fieldRecords.length];\r\n      var setter = field.setter;\r\n      var setterContext = field.setterContext;\r\n      fields[fieldName] = {\r\n        read: ptr => getterReturnType[\"fromWireType\"](getter(getterContext, ptr)),\r\n        write: (ptr, o) => {\r\n          var destructors = [];\r\n          setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\r\n          runDestructors(destructors);\r\n        },\r\n        optional\r\n      };\r\n    });\r\n    return [ {\r\n      name: reg.name,\r\n      \"fromWireType\": ptr => {\r\n        var rv = {};\r\n        for (var i in fields) {\r\n          rv[i] = fields[i].read(ptr);\r\n        }\r\n        rawDestructor(ptr);\r\n        return rv;\r\n      },\r\n      \"toWireType\": (destructors, o) => {\r\n        // todo: Here we have an opportunity for -O3 level \"unsafe\" optimizations:\r\n        // assume all fields are present without checking.\r\n        for (var fieldName in fields) {\r\n          if (!(fieldName in o) && !fields[fieldName].optional) {\r\n            throw new TypeError(`Missing field: \"${fieldName}\"`);\r\n          }\r\n        }\r\n        var ptr = rawConstructor();\r\n        for (fieldName in fields) {\r\n          fields[fieldName].write(ptr, o[fieldName]);\r\n        }\r\n        if (destructors !== null) {\r\n          destructors.push(rawDestructor, ptr);\r\n        }\r\n        return ptr;\r\n      },\r\n      argPackAdvance: GenericWireTypeSize,\r\n      \"readValueFromPointer\": readPointer,\r\n      destructorFunction: rawDestructor\r\n    } ];\r\n  });\r\n};\r\n\r\nvar embindRepr = v => {\r\n  if (v === null) {\r\n    return \"null\";\r\n  }\r\n  var t = typeof v;\r\n  if (t === \"object\" || t === \"array\" || t === \"function\") {\r\n    return v.toString();\r\n  } else {\r\n    return \"\" + v;\r\n  }\r\n};\r\n\r\nvar embind_init_charCodes = () => {\r\n  var codes = new Array(256);\r\n  for (var i = 0; i < 256; ++i) {\r\n    codes[i] = String.fromCharCode(i);\r\n  }\r\n  embind_charCodes = codes;\r\n};\r\n\r\nvar embind_charCodes;\r\n\r\nvar readLatin1String = ptr => {\r\n  var ret = \"\";\r\n  var c = ptr;\r\n  while (GROWABLE_HEAP_U8()[c]) {\r\n    ret += embind_charCodes[GROWABLE_HEAP_U8()[c++]];\r\n  }\r\n  return ret;\r\n};\r\n\r\nvar BindingError = Module[\"BindingError\"] = class BindingError extends Error {\r\n  constructor(message) {\r\n    super(message);\r\n    this.name = \"BindingError\";\r\n  }\r\n};\r\n\r\nvar throwBindingError = message => {\r\n  throw new BindingError(message);\r\n};\r\n\r\n/** @param {Object=} options */ function sharedRegisterType(rawType, registeredInstance, options = {}) {\r\n  var name = registeredInstance.name;\r\n  if (!rawType) {\r\n    throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`);\r\n  }\r\n  if (registeredTypes.hasOwnProperty(rawType)) {\r\n    if (options.ignoreDuplicateRegistrations) {\r\n      return;\r\n    } else {\r\n      throwBindingError(`Cannot register type '${name}' twice`);\r\n    }\r\n  }\r\n  registeredTypes[rawType] = registeredInstance;\r\n  delete typeDependencies[rawType];\r\n  if (awaitingDependencies.hasOwnProperty(rawType)) {\r\n    var callbacks = awaitingDependencies[rawType];\r\n    delete awaitingDependencies[rawType];\r\n    callbacks.forEach(cb => cb());\r\n  }\r\n}\r\n\r\n/** @param {Object=} options */ function registerType(rawType, registeredInstance, options = {}) {\r\n  if (registeredInstance.argPackAdvance === undefined) {\r\n    throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\r\n  }\r\n  return sharedRegisterType(rawType, registeredInstance, options);\r\n}\r\n\r\nvar integerReadValueFromPointer = (name, width, signed) => {\r\n  // integers are quite common, so generate very specialized functions\r\n  switch (width) {\r\n   case 1:\r\n    return signed ? pointer => GROWABLE_HEAP_I8()[pointer] : pointer => GROWABLE_HEAP_U8()[pointer];\r\n\r\n   case 2:\r\n    return signed ? pointer => GROWABLE_HEAP_I16()[((pointer) >> 1)] : pointer => GROWABLE_HEAP_U16()[((pointer) >> 1)];\r\n\r\n   case 4:\r\n    return signed ? pointer => GROWABLE_HEAP_I32()[((pointer) >> 2)] : pointer => GROWABLE_HEAP_U32()[((pointer) >> 2)];\r\n\r\n   case 8:\r\n    return signed ? pointer => HEAP64[((pointer) >> 3)] : pointer => HEAPU64[((pointer) >> 3)];\r\n\r\n   default:\r\n    throw new TypeError(`invalid integer width (${width}): ${name}`);\r\n  }\r\n};\r\n\r\n/** @suppress {globalThis} */ var __embind_register_bigint = (primitiveType, name, size, minRange, maxRange) => {\r\n  name = readLatin1String(name);\r\n  var isUnsignedType = (name.indexOf(\"u\") != -1);\r\n  // maxRange comes through as -1 for uint64_t (see issue 13902). Work around that temporarily\r\n  if (isUnsignedType) {\r\n    maxRange = (1n << 64n) - 1n;\r\n  }\r\n  registerType(primitiveType, {\r\n    name,\r\n    \"fromWireType\": value => value,\r\n    \"toWireType\": function(destructors, value) {\r\n      if (typeof value != \"bigint\" && typeof value != \"number\") {\r\n        throw new TypeError(`Cannot convert \"${embindRepr(value)}\" to ${this.name}`);\r\n      }\r\n      if (typeof value == \"number\") {\r\n        value = BigInt(value);\r\n      }\r\n      if (value < minRange || value > maxRange) {\r\n        throw new TypeError(`Passing a number \"${embindRepr(value)}\" from JS side to C/C++ side to an argument of type \"${name}\", which is outside the valid range [${minRange}, ${maxRange}]!`);\r\n      }\r\n      return value;\r\n    },\r\n    argPackAdvance: GenericWireTypeSize,\r\n    \"readValueFromPointer\": integerReadValueFromPointer(name, size, !isUnsignedType),\r\n    destructorFunction: null\r\n  });\r\n};\r\n\r\nvar GenericWireTypeSize = 8;\r\n\r\n/** @suppress {globalThis} */ var __embind_register_bool = (rawType, name, trueValue, falseValue) => {\r\n  name = readLatin1String(name);\r\n  registerType(rawType, {\r\n    name,\r\n    \"fromWireType\": function(wt) {\r\n      // ambiguous emscripten ABI: sometimes return values are\r\n      // true or false, and sometimes integers (0 or 1)\r\n      return !!wt;\r\n    },\r\n    \"toWireType\": function(destructors, o) {\r\n      return o ? trueValue : falseValue;\r\n    },\r\n    argPackAdvance: GenericWireTypeSize,\r\n    \"readValueFromPointer\": function(pointer) {\r\n      return this[\"fromWireType\"](GROWABLE_HEAP_U8()[pointer]);\r\n    },\r\n    destructorFunction: null\r\n  });\r\n};\r\n\r\nvar shallowCopyInternalPointer = o => ({\r\n  count: o.count,\r\n  deleteScheduled: o.deleteScheduled,\r\n  preservePointerOnDelete: o.preservePointerOnDelete,\r\n  ptr: o.ptr,\r\n  ptrType: o.ptrType,\r\n  smartPtr: o.smartPtr,\r\n  smartPtrType: o.smartPtrType\r\n});\r\n\r\nvar throwInstanceAlreadyDeleted = obj => {\r\n  function getInstanceTypeName(handle) {\r\n    return handle.$$.ptrType.registeredClass.name;\r\n  }\r\n  throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\r\n};\r\n\r\nvar finalizationRegistry = false;\r\n\r\nvar detachFinalizer = handle => {};\r\n\r\nvar runDestructor = $$ => {\r\n  if ($$.smartPtr) {\r\n    $$.smartPtrType.rawDestructor($$.smartPtr);\r\n  } else {\r\n    $$.ptrType.registeredClass.rawDestructor($$.ptr);\r\n  }\r\n};\r\n\r\nvar releaseClassHandle = $$ => {\r\n  $$.count.value -= 1;\r\n  var toDelete = 0 === $$.count.value;\r\n  if (toDelete) {\r\n    runDestructor($$);\r\n  }\r\n};\r\n\r\nvar downcastPointer = (ptr, ptrClass, desiredClass) => {\r\n  if (ptrClass === desiredClass) {\r\n    return ptr;\r\n  }\r\n  if (undefined === desiredClass.baseClass) {\r\n    return null;\r\n  }\r\n  var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\r\n  if (rv === null) {\r\n    return null;\r\n  }\r\n  return desiredClass.downcast(rv);\r\n};\r\n\r\nvar registeredPointers = {};\r\n\r\nvar registeredInstances = {};\r\n\r\nvar getBasestPointer = (class_, ptr) => {\r\n  if (ptr === undefined) {\r\n    throwBindingError(\"ptr should not be undefined\");\r\n  }\r\n  while (class_.baseClass) {\r\n    ptr = class_.upcast(ptr);\r\n    class_ = class_.baseClass;\r\n  }\r\n  return ptr;\r\n};\r\n\r\nvar getInheritedInstance = (class_, ptr) => {\r\n  ptr = getBasestPointer(class_, ptr);\r\n  return registeredInstances[ptr];\r\n};\r\n\r\nvar makeClassHandle = (prototype, record) => {\r\n  if (!record.ptrType || !record.ptr) {\r\n    throwInternalError(\"makeClassHandle requires ptr and ptrType\");\r\n  }\r\n  var hasSmartPtrType = !!record.smartPtrType;\r\n  var hasSmartPtr = !!record.smartPtr;\r\n  if (hasSmartPtrType !== hasSmartPtr) {\r\n    throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\r\n  }\r\n  record.count = {\r\n    value: 1\r\n  };\r\n  return attachFinalizer(Object.create(prototype, {\r\n    $$: {\r\n      value: record,\r\n      writable: true\r\n    }\r\n  }));\r\n};\r\n\r\n/** @suppress {globalThis} */ function RegisteredPointer_fromWireType(ptr) {\r\n  // ptr is a raw pointer (or a raw smartpointer)\r\n  // rawPointer is a maybe-null raw pointer\r\n  var rawPointer = this.getPointee(ptr);\r\n  if (!rawPointer) {\r\n    this.destructor(ptr);\r\n    return null;\r\n  }\r\n  var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\r\n  if (undefined !== registeredInstance) {\r\n    // JS object has been neutered, time to repopulate it\r\n    if (0 === registeredInstance.$$.count.value) {\r\n      registeredInstance.$$.ptr = rawPointer;\r\n      registeredInstance.$$.smartPtr = ptr;\r\n      return registeredInstance[\"clone\"]();\r\n    } else {\r\n      // else, just increment reference count on existing object\r\n      // it already has a reference to the smart pointer\r\n      var rv = registeredInstance[\"clone\"]();\r\n      this.destructor(ptr);\r\n      return rv;\r\n    }\r\n  }\r\n  function makeDefaultHandle() {\r\n    if (this.isSmartPointer) {\r\n      return makeClassHandle(this.registeredClass.instancePrototype, {\r\n        ptrType: this.pointeeType,\r\n        ptr: rawPointer,\r\n        smartPtrType: this,\r\n        smartPtr: ptr\r\n      });\r\n    } else {\r\n      return makeClassHandle(this.registeredClass.instancePrototype, {\r\n        ptrType: this,\r\n        ptr\r\n      });\r\n    }\r\n  }\r\n  var actualType = this.registeredClass.getActualType(rawPointer);\r\n  var registeredPointerRecord = registeredPointers[actualType];\r\n  if (!registeredPointerRecord) {\r\n    return makeDefaultHandle.call(this);\r\n  }\r\n  var toType;\r\n  if (this.isConst) {\r\n    toType = registeredPointerRecord.constPointerType;\r\n  } else {\r\n    toType = registeredPointerRecord.pointerType;\r\n  }\r\n  var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\r\n  if (dp === null) {\r\n    return makeDefaultHandle.call(this);\r\n  }\r\n  if (this.isSmartPointer) {\r\n    return makeClassHandle(toType.registeredClass.instancePrototype, {\r\n      ptrType: toType,\r\n      ptr: dp,\r\n      smartPtrType: this,\r\n      smartPtr: ptr\r\n    });\r\n  } else {\r\n    return makeClassHandle(toType.registeredClass.instancePrototype, {\r\n      ptrType: toType,\r\n      ptr: dp\r\n    });\r\n  }\r\n}\r\n\r\nvar attachFinalizer = handle => {\r\n  if (\"undefined\" === typeof FinalizationRegistry) {\r\n    attachFinalizer = handle => handle;\r\n    return handle;\r\n  }\r\n  // If the running environment has a FinalizationRegistry (see\r\n  // https://github.com/tc39/proposal-weakrefs), then attach finalizers\r\n  // for class handles.  We check for the presence of FinalizationRegistry\r\n  // at run-time, not build-time.\r\n  finalizationRegistry = new FinalizationRegistry(info => {\r\n    console.warn(info.leakWarning);\r\n    releaseClassHandle(info.$$);\r\n  });\r\n  attachFinalizer = handle => {\r\n    var $$ = handle.$$;\r\n    var hasSmartPtr = !!$$.smartPtr;\r\n    if (hasSmartPtr) {\r\n      // We should not call the destructor on raw pointers in case other code expects the pointee to live\r\n      var info = {\r\n        $$\r\n      };\r\n      // Create a warning as an Error instance in advance so that we can store\r\n      // the current stacktrace and point to it when / if a leak is detected.\r\n      // This is more useful than the empty stacktrace of `FinalizationRegistry`\r\n      // callback.\r\n      var cls = $$.ptrType.registeredClass;\r\n      var err = new Error(`Embind found a leaked C++ instance ${cls.name} <${ptrToString($$.ptr)}>.\\n` + \"We'll free it automatically in this case, but this functionality is not reliable across various environments.\\n\" + \"Make sure to invoke .delete() manually once you're done with the instance instead.\\n\" + \"Originally allocated\");\r\n      // `.stack` will add \"at ...\" after this sentence\r\n      if (\"captureStackTrace\" in Error) {\r\n        Error.captureStackTrace(err, RegisteredPointer_fromWireType);\r\n      }\r\n      info.leakWarning = err.stack.replace(/^Error: /, \"\");\r\n      finalizationRegistry.register(handle, info, handle);\r\n    }\r\n    return handle;\r\n  };\r\n  detachFinalizer = handle => finalizationRegistry.unregister(handle);\r\n  return attachFinalizer(handle);\r\n};\r\n\r\nvar deletionQueue = [];\r\n\r\nvar flushPendingDeletes = () => {\r\n  while (deletionQueue.length) {\r\n    var obj = deletionQueue.pop();\r\n    obj.$$.deleteScheduled = false;\r\n    obj[\"delete\"]();\r\n  }\r\n};\r\n\r\nvar delayFunction;\r\n\r\nvar init_ClassHandle = () => {\r\n  let proto = ClassHandle.prototype;\r\n  Object.assign(proto, {\r\n    \"isAliasOf\"(other) {\r\n      if (!(this instanceof ClassHandle)) {\r\n        return false;\r\n      }\r\n      if (!(other instanceof ClassHandle)) {\r\n        return false;\r\n      }\r\n      var leftClass = this.$$.ptrType.registeredClass;\r\n      var left = this.$$.ptr;\r\n      other.$$ = /** @type {Object} */ (other.$$);\r\n      var rightClass = other.$$.ptrType.registeredClass;\r\n      var right = other.$$.ptr;\r\n      while (leftClass.baseClass) {\r\n        left = leftClass.upcast(left);\r\n        leftClass = leftClass.baseClass;\r\n      }\r\n      while (rightClass.baseClass) {\r\n        right = rightClass.upcast(right);\r\n        rightClass = rightClass.baseClass;\r\n      }\r\n      return leftClass === rightClass && left === right;\r\n    },\r\n    \"clone\"() {\r\n      if (!this.$$.ptr) {\r\n        throwInstanceAlreadyDeleted(this);\r\n      }\r\n      if (this.$$.preservePointerOnDelete) {\r\n        this.$$.count.value += 1;\r\n        return this;\r\n      } else {\r\n        var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {\r\n          $$: {\r\n            value: shallowCopyInternalPointer(this.$$)\r\n          }\r\n        }));\r\n        clone.$$.count.value += 1;\r\n        clone.$$.deleteScheduled = false;\r\n        return clone;\r\n      }\r\n    },\r\n    \"delete\"() {\r\n      if (!this.$$.ptr) {\r\n        throwInstanceAlreadyDeleted(this);\r\n      }\r\n      if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\r\n        throwBindingError(\"Object already scheduled for deletion\");\r\n      }\r\n      detachFinalizer(this);\r\n      releaseClassHandle(this.$$);\r\n      if (!this.$$.preservePointerOnDelete) {\r\n        this.$$.smartPtr = undefined;\r\n        this.$$.ptr = undefined;\r\n      }\r\n    },\r\n    \"isDeleted\"() {\r\n      return !this.$$.ptr;\r\n    },\r\n    \"deleteLater\"() {\r\n      if (!this.$$.ptr) {\r\n        throwInstanceAlreadyDeleted(this);\r\n      }\r\n      if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\r\n        throwBindingError(\"Object already scheduled for deletion\");\r\n      }\r\n      deletionQueue.push(this);\r\n      if (deletionQueue.length === 1 && delayFunction) {\r\n        delayFunction(flushPendingDeletes);\r\n      }\r\n      this.$$.deleteScheduled = true;\r\n      return this;\r\n    }\r\n  });\r\n  // Support `using ...` from https://github.com/tc39/proposal-explicit-resource-management.\r\n  const symbolDispose = Symbol.dispose;\r\n  if (symbolDispose) {\r\n    proto[symbolDispose] = proto[\"delete\"];\r\n  }\r\n};\r\n\r\n/** @constructor */ function ClassHandle() {}\r\n\r\nvar createNamedFunction = (name, func) => Object.defineProperty(func, \"name\", {\r\n  value: name\r\n});\r\n\r\nvar ensureOverloadTable = (proto, methodName, humanName) => {\r\n  if (undefined === proto[methodName].overloadTable) {\r\n    var prevFunc = proto[methodName];\r\n    // Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.\r\n    proto[methodName] = function(...args) {\r\n      // TODO This check can be removed in -O3 level \"unsafe\" optimizations.\r\n      if (!proto[methodName].overloadTable.hasOwnProperty(args.length)) {\r\n        throwBindingError(`Function '${humanName}' called with an invalid number of arguments (${args.length}) - expects one of (${proto[methodName].overloadTable})!`);\r\n      }\r\n      return proto[methodName].overloadTable[args.length].apply(this, args);\r\n    };\r\n    // Move the previous function into the overload table.\r\n    proto[methodName].overloadTable = [];\r\n    proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\r\n  }\r\n};\r\n\r\n/** @param {number=} numArguments */ var exposePublicSymbol = (name, value, numArguments) => {\r\n  if (Module.hasOwnProperty(name)) {\r\n    if (undefined === numArguments || (undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments])) {\r\n      throwBindingError(`Cannot register public name '${name}' twice`);\r\n    }\r\n    // We are exposing a function with the same name as an existing function. Create an overload table and a function selector\r\n    // that routes between the two.\r\n    ensureOverloadTable(Module, name, name);\r\n    if (Module[name].overloadTable.hasOwnProperty(numArguments)) {\r\n      throwBindingError(`Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`);\r\n    }\r\n    // Add the new function into the overload table.\r\n    Module[name].overloadTable[numArguments] = value;\r\n  } else {\r\n    Module[name] = value;\r\n    Module[name].argCount = numArguments;\r\n  }\r\n};\r\n\r\nvar char_0 = 48;\r\n\r\nvar char_9 = 57;\r\n\r\nvar makeLegalFunctionName = name => {\r\n  assert(typeof name === \"string\");\r\n  name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\r\n  var f = name.charCodeAt(0);\r\n  if (f >= char_0 && f <= char_9) {\r\n    return `_${name}`;\r\n  }\r\n  return name;\r\n};\r\n\r\n/** @constructor */ function RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\r\n  this.name = name;\r\n  this.constructor = constructor;\r\n  this.instancePrototype = instancePrototype;\r\n  this.rawDestructor = rawDestructor;\r\n  this.baseClass = baseClass;\r\n  this.getActualType = getActualType;\r\n  this.upcast = upcast;\r\n  this.downcast = downcast;\r\n  this.pureVirtualFunctions = [];\r\n}\r\n\r\nvar upcastPointer = (ptr, ptrClass, desiredClass) => {\r\n  while (ptrClass !== desiredClass) {\r\n    if (!ptrClass.upcast) {\r\n      throwBindingError(`Expected null or instance of ${desiredClass.name}, got an instance of ${ptrClass.name}`);\r\n    }\r\n    ptr = ptrClass.upcast(ptr);\r\n    ptrClass = ptrClass.baseClass;\r\n  }\r\n  return ptr;\r\n};\r\n\r\n/** @suppress {globalThis} */ function constNoSmartPtrRawPointerToWireType(destructors, handle) {\r\n  if (handle === null) {\r\n    if (this.isReference) {\r\n      throwBindingError(`null is not a valid ${this.name}`);\r\n    }\r\n    return 0;\r\n  }\r\n  if (!handle.$$) {\r\n    throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\r\n  }\r\n  if (!handle.$$.ptr) {\r\n    throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\r\n  }\r\n  var handleClass = handle.$$.ptrType.registeredClass;\r\n  var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\r\n  return ptr;\r\n}\r\n\r\n/** @suppress {globalThis} */ function genericPointerToWireType(destructors, handle) {\r\n  var ptr;\r\n  if (handle === null) {\r\n    if (this.isReference) {\r\n      throwBindingError(`null is not a valid ${this.name}`);\r\n    }\r\n    if (this.isSmartPointer) {\r\n      ptr = this.rawConstructor();\r\n      if (destructors !== null) {\r\n        destructors.push(this.rawDestructor, ptr);\r\n      }\r\n      return ptr;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  if (!handle || !handle.$$) {\r\n    throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\r\n  }\r\n  if (!handle.$$.ptr) {\r\n    throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\r\n  }\r\n  if (!this.isConst && handle.$$.ptrType.isConst) {\r\n    throwBindingError(`Cannot convert argument of type ${(handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name)} to parameter type ${this.name}`);\r\n  }\r\n  var handleClass = handle.$$.ptrType.registeredClass;\r\n  ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\r\n  if (this.isSmartPointer) {\r\n    // TODO: this is not strictly true\r\n    // We could support BY_EMVAL conversions from raw pointers to smart pointers\r\n    // because the smart pointer can hold a reference to the handle\r\n    if (undefined === handle.$$.smartPtr) {\r\n      throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\r\n    }\r\n    switch (this.sharingPolicy) {\r\n     case 0:\r\n      // NONE\r\n      // no upcasting\r\n      if (handle.$$.smartPtrType === this) {\r\n        ptr = handle.$$.smartPtr;\r\n      } else {\r\n        throwBindingError(`Cannot convert argument of type ${(handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name)} to parameter type ${this.name}`);\r\n      }\r\n      break;\r\n\r\n     case 1:\r\n      // INTRUSIVE\r\n      ptr = handle.$$.smartPtr;\r\n      break;\r\n\r\n     case 2:\r\n      // BY_EMVAL\r\n      if (handle.$$.smartPtrType === this) {\r\n        ptr = handle.$$.smartPtr;\r\n      } else {\r\n        var clonedHandle = handle[\"clone\"]();\r\n        ptr = this.rawShare(ptr, Emval.toHandle(() => clonedHandle[\"delete\"]()));\r\n        if (destructors !== null) {\r\n          destructors.push(this.rawDestructor, ptr);\r\n        }\r\n      }\r\n      break;\r\n\r\n     default:\r\n      throwBindingError(\"Unsupporting sharing policy\");\r\n    }\r\n  }\r\n  return ptr;\r\n}\r\n\r\n/** @suppress {globalThis} */ function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\r\n  if (handle === null) {\r\n    if (this.isReference) {\r\n      throwBindingError(`null is not a valid ${this.name}`);\r\n    }\r\n    return 0;\r\n  }\r\n  if (!handle.$$) {\r\n    throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\r\n  }\r\n  if (!handle.$$.ptr) {\r\n    throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\r\n  }\r\n  if (handle.$$.ptrType.isConst) {\r\n    throwBindingError(`Cannot convert argument of type ${handle.$$.ptrType.name} to parameter type ${this.name}`);\r\n  }\r\n  var handleClass = handle.$$.ptrType.registeredClass;\r\n  var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\r\n  return ptr;\r\n}\r\n\r\nvar init_RegisteredPointer = () => {\r\n  Object.assign(RegisteredPointer.prototype, {\r\n    getPointee(ptr) {\r\n      if (this.rawGetPointee) {\r\n        ptr = this.rawGetPointee(ptr);\r\n      }\r\n      return ptr;\r\n    },\r\n    destructor(ptr) {\r\n      this.rawDestructor?.(ptr);\r\n    },\r\n    argPackAdvance: GenericWireTypeSize,\r\n    \"readValueFromPointer\": readPointer,\r\n    \"fromWireType\": RegisteredPointer_fromWireType\r\n  });\r\n};\r\n\r\n/** @constructor\r\n      @param {*=} pointeeType,\r\n      @param {*=} sharingPolicy,\r\n      @param {*=} rawGetPointee,\r\n      @param {*=} rawConstructor,\r\n      @param {*=} rawShare,\r\n      @param {*=} rawDestructor,\r\n       */ function RegisteredPointer(name, registeredClass, isReference, isConst, // smart pointer properties\r\nisSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\r\n  this.name = name;\r\n  this.registeredClass = registeredClass;\r\n  this.isReference = isReference;\r\n  this.isConst = isConst;\r\n  // smart pointer properties\r\n  this.isSmartPointer = isSmartPointer;\r\n  this.pointeeType = pointeeType;\r\n  this.sharingPolicy = sharingPolicy;\r\n  this.rawGetPointee = rawGetPointee;\r\n  this.rawConstructor = rawConstructor;\r\n  this.rawShare = rawShare;\r\n  this.rawDestructor = rawDestructor;\r\n  if (!isSmartPointer && registeredClass.baseClass === undefined) {\r\n    if (isConst) {\r\n      this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\r\n      this.destructorFunction = null;\r\n    } else {\r\n      this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\r\n      this.destructorFunction = null;\r\n    }\r\n  } else {\r\n    this[\"toWireType\"] = genericPointerToWireType;\r\n  }\r\n}\r\n\r\n/** @param {number=} numArguments */ var replacePublicSymbol = (name, value, numArguments) => {\r\n  if (!Module.hasOwnProperty(name)) {\r\n    throwInternalError(\"Replacing nonexistent public symbol\");\r\n  }\r\n  // If there's an overload table for this symbol, replace the symbol in the overload table instead.\r\n  if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\r\n    Module[name].overloadTable[numArguments] = value;\r\n  } else {\r\n    Module[name] = value;\r\n    Module[name].argCount = numArguments;\r\n  }\r\n};\r\n\r\nvar embind__requireFunction = (signature, rawFunction, isAsync = false) => {\r\n  assert(!isAsync, \"Async bindings are only supported with JSPI.\");\r\n  signature = readLatin1String(signature);\r\n  function makeDynCaller() {\r\n    var rtn = getWasmTableEntry(rawFunction);\r\n    return rtn;\r\n  }\r\n  var fp = makeDynCaller();\r\n  if (typeof fp != \"function\") {\r\n    throwBindingError(`unknown function pointer with signature ${signature}: ${rawFunction}`);\r\n  }\r\n  return fp;\r\n};\r\n\r\nclass UnboundTypeError extends Error {}\r\n\r\nvar getTypeName = type => {\r\n  var ptr = ___getTypeName(type);\r\n  var rv = readLatin1String(ptr);\r\n  _free(ptr);\r\n  return rv;\r\n};\r\n\r\nvar throwUnboundTypeError = (message, types) => {\r\n  var unboundTypes = [];\r\n  var seen = {};\r\n  function visit(type) {\r\n    if (seen[type]) {\r\n      return;\r\n    }\r\n    if (registeredTypes[type]) {\r\n      return;\r\n    }\r\n    if (typeDependencies[type]) {\r\n      typeDependencies[type].forEach(visit);\r\n      return;\r\n    }\r\n    unboundTypes.push(type);\r\n    seen[type] = true;\r\n  }\r\n  types.forEach(visit);\r\n  throw new UnboundTypeError(`${message}: ` + unboundTypes.map(getTypeName).join([ \", \" ]));\r\n};\r\n\r\nvar __embind_register_class = (rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name, destructorSignature, rawDestructor) => {\r\n  name = readLatin1String(name);\r\n  getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\r\n  upcast &&= embind__requireFunction(upcastSignature, upcast);\r\n  downcast &&= embind__requireFunction(downcastSignature, downcast);\r\n  rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\r\n  var legalFunctionName = makeLegalFunctionName(name);\r\n  exposePublicSymbol(legalFunctionName, function() {\r\n    // this code cannot run if baseClassRawType is zero\r\n    throwUnboundTypeError(`Cannot construct ${name} due to unbound types`, [ baseClassRawType ]);\r\n  });\r\n  whenDependentTypesAreResolved([ rawType, rawPointerType, rawConstPointerType ], baseClassRawType ? [ baseClassRawType ] : [], base => {\r\n    base = base[0];\r\n    var baseClass;\r\n    var basePrototype;\r\n    if (baseClassRawType) {\r\n      baseClass = base.registeredClass;\r\n      basePrototype = baseClass.instancePrototype;\r\n    } else {\r\n      basePrototype = ClassHandle.prototype;\r\n    }\r\n    var constructor = createNamedFunction(name, function(...args) {\r\n      if (Object.getPrototypeOf(this) !== instancePrototype) {\r\n        throw new BindingError(`Use 'new' to construct ${name}`);\r\n      }\r\n      if (undefined === registeredClass.constructor_body) {\r\n        throw new BindingError(`${name} has no accessible constructor`);\r\n      }\r\n      var body = registeredClass.constructor_body[args.length];\r\n      if (undefined === body) {\r\n        throw new BindingError(`Tried to invoke ctor of ${name} with invalid number of parameters (${args.length}) - expected (${Object.keys(registeredClass.constructor_body).toString()}) parameters instead!`);\r\n      }\r\n      return body.apply(this, args);\r\n    });\r\n    var instancePrototype = Object.create(basePrototype, {\r\n      constructor: {\r\n        value: constructor\r\n      }\r\n    });\r\n    constructor.prototype = instancePrototype;\r\n    var registeredClass = new RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\r\n    if (registeredClass.baseClass) {\r\n      // Keep track of class hierarchy. Used to allow sub-classes to inherit class functions.\r\n      registeredClass.baseClass.__derivedClasses ??= [];\r\n      registeredClass.baseClass.__derivedClasses.push(registeredClass);\r\n    }\r\n    var referenceConverter = new RegisteredPointer(name, registeredClass, true, false, false);\r\n    var pointerConverter = new RegisteredPointer(name + \"*\", registeredClass, false, false, false);\r\n    var constPointerConverter = new RegisteredPointer(name + \" const*\", registeredClass, false, true, false);\r\n    registeredPointers[rawType] = {\r\n      pointerType: pointerConverter,\r\n      constPointerType: constPointerConverter\r\n    };\r\n    replacePublicSymbol(legalFunctionName, constructor);\r\n    return [ referenceConverter, pointerConverter, constPointerConverter ];\r\n  });\r\n};\r\n\r\nvar heap32VectorToArray = (count, firstElement) => {\r\n  var array = [];\r\n  for (var i = 0; i < count; i++) {\r\n    // TODO(https://github.com/emscripten-core/emscripten/issues/17310):\r\n    // Find a way to hoist the `>> 2` or `>> 3` out of this loop.\r\n    array.push(GROWABLE_HEAP_U32()[(((firstElement) + (i * 4)) >> 2)]);\r\n  }\r\n  return array;\r\n};\r\n\r\nfunction usesDestructorStack(argTypes) {\r\n  // Skip return value at index 0 - it's not deleted here.\r\n  for (var i = 1; i < argTypes.length; ++i) {\r\n    // The type does not define a destructor function - must use dynamic stack\r\n    if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction checkArgCount(numArgs, minArgs, maxArgs, humanName, throwBindingError) {\r\n  if (numArgs < minArgs || numArgs > maxArgs) {\r\n    var argCountMessage = minArgs == maxArgs ? minArgs : `${minArgs} to ${maxArgs}`;\r\n    throwBindingError(`function ${humanName} called with ${numArgs} arguments, expected ${argCountMessage}`);\r\n  }\r\n}\r\n\r\nfunction createJsInvoker(argTypes, isClassMethodFunc, returns, isAsync) {\r\n  var needsDestructorStack = usesDestructorStack(argTypes);\r\n  var argCount = argTypes.length - 2;\r\n  var argsList = [];\r\n  var argsListWired = [ \"fn\" ];\r\n  if (isClassMethodFunc) {\r\n    argsListWired.push(\"thisWired\");\r\n  }\r\n  for (var i = 0; i < argCount; ++i) {\r\n    argsList.push(`arg${i}`);\r\n    argsListWired.push(`arg${i}Wired`);\r\n  }\r\n  argsList = argsList.join(\",\");\r\n  argsListWired = argsListWired.join(\",\");\r\n  var invokerFnBody = `return function (${argsList}) {\\n`;\r\n  invokerFnBody += \"checkArgCount(arguments.length, minArgs, maxArgs, humanName, throwBindingError);\\n\";\r\n  if (needsDestructorStack) {\r\n    invokerFnBody += \"var destructors = [];\\n\";\r\n  }\r\n  var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\r\n  var args1 = [ \"humanName\", \"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\" ];\r\n  if (isClassMethodFunc) {\r\n    invokerFnBody += `var thisWired = classParam['toWireType'](${dtorStack}, this);\\n`;\r\n  }\r\n  for (var i = 0; i < argCount; ++i) {\r\n    invokerFnBody += `var arg${i}Wired = argType${i}['toWireType'](${dtorStack}, arg${i});\\n`;\r\n    args1.push(`argType${i}`);\r\n  }\r\n  invokerFnBody += (returns || isAsync ? \"var rv = \" : \"\") + `invoker(${argsListWired});\\n`;\r\n  var returnVal = returns ? \"rv\" : \"\";\r\n  if (needsDestructorStack) {\r\n    invokerFnBody += \"runDestructors(destructors);\\n\";\r\n  } else {\r\n    for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\r\n      // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.\r\n      var paramName = (i === 1 ? \"thisWired\" : (\"arg\" + (i - 2) + \"Wired\"));\r\n      if (argTypes[i].destructorFunction !== null) {\r\n        invokerFnBody += `${paramName}_dtor(${paramName});\\n`;\r\n        args1.push(`${paramName}_dtor`);\r\n      }\r\n    }\r\n  }\r\n  if (returns) {\r\n    invokerFnBody += \"var ret = retType['fromWireType'](rv);\\n\" + \"return ret;\\n\";\r\n  } else {}\r\n  invokerFnBody += \"}\\n\";\r\n  args1.push(\"checkArgCount\", \"minArgs\", \"maxArgs\");\r\n  invokerFnBody = `if (arguments.length !== ${args1.length}){ throw new Error(humanName + \"Expected ${args1.length} closure arguments \" + arguments.length + \" given.\"); }\\n${invokerFnBody}`;\r\n  return [ args1, invokerFnBody ];\r\n}\r\n\r\nfunction getRequiredArgCount(argTypes) {\r\n  var requiredArgCount = argTypes.length - 2;\r\n  for (var i = argTypes.length - 1; i >= 2; --i) {\r\n    if (!argTypes[i].optional) {\r\n      break;\r\n    }\r\n    requiredArgCount--;\r\n  }\r\n  return requiredArgCount;\r\n}\r\n\r\nfunction craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc, /** boolean= */ isAsync) {\r\n  // humanName: a human-readable string name for the function to be generated.\r\n  // argTypes: An array that contains the embind type objects for all types in the function signature.\r\n  //    argTypes[0] is the type object for the function return value.\r\n  //    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.\r\n  //    argTypes[2...] are the actual function parameters.\r\n  // classType: The embind type object for the class to be bound, or null if this is not a method of a class.\r\n  // cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.\r\n  // cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.\r\n  // isAsync: Optional. If true, returns an async function. Async bindings are only supported with JSPI.\r\n  var argCount = argTypes.length;\r\n  if (argCount < 2) {\r\n    throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\r\n  }\r\n  assert(!isAsync, \"Async bindings are only supported with JSPI.\");\r\n  var isClassMethodFunc = (argTypes[1] !== null && classType !== null);\r\n  // Free functions with signature \"void function()\" do not need an invoker that marshalls between wire types.\r\n  // TODO: This omits argument count check - enable only at -O3 or similar.\r\n  //    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == \"void\" && !isClassMethodFunc) {\r\n  //       return FUNCTION_TABLE[fn];\r\n  //    }\r\n  // Determine if we need to use a dynamic stack to store the destructors for the function parameters.\r\n  // TODO: Remove this completely once all function invokers are being dynamically generated.\r\n  var needsDestructorStack = usesDestructorStack(argTypes);\r\n  var returns = (argTypes[0].name !== \"void\");\r\n  var expectedArgCount = argCount - 2;\r\n  var minArgs = getRequiredArgCount(argTypes);\r\n  // Builld the arguments that will be passed into the closure around the invoker\r\n  // function.\r\n  var closureArgs = [ humanName, throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1] ];\r\n  for (var i = 0; i < argCount - 2; ++i) {\r\n    closureArgs.push(argTypes[i + 2]);\r\n  }\r\n  if (!needsDestructorStack) {\r\n    // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.\r\n    for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\r\n      if (argTypes[i].destructorFunction !== null) {\r\n        closureArgs.push(argTypes[i].destructorFunction);\r\n      }\r\n    }\r\n  }\r\n  closureArgs.push(checkArgCount, minArgs, expectedArgCount);\r\n  let [args, invokerFnBody] = createJsInvoker(argTypes, isClassMethodFunc, returns, isAsync);\r\n  var invokerFn = new Function(...args, invokerFnBody)(...closureArgs);\r\n  return createNamedFunction(humanName, invokerFn);\r\n}\r\n\r\nvar __embind_register_class_constructor = (rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) => {\r\n  assert(argCount > 0);\r\n  var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\r\n  invoker = embind__requireFunction(invokerSignature, invoker);\r\n  var args = [ rawConstructor ];\r\n  var destructors = [];\r\n  whenDependentTypesAreResolved([], [ rawClassType ], classType => {\r\n    classType = classType[0];\r\n    var humanName = `constructor ${classType.name}`;\r\n    if (undefined === classType.registeredClass.constructor_body) {\r\n      classType.registeredClass.constructor_body = [];\r\n    }\r\n    if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {\r\n      throw new BindingError(`Cannot register multiple constructors with identical number of parameters (${argCount - 1}) for class '${classType.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);\r\n    }\r\n    classType.registeredClass.constructor_body[argCount - 1] = () => {\r\n      throwUnboundTypeError(`Cannot construct ${classType.name} due to unbound types`, rawArgTypes);\r\n    };\r\n    whenDependentTypesAreResolved([], rawArgTypes, argTypes => {\r\n      // Insert empty slot for context type (argTypes[1]).\r\n      argTypes.splice(1, 0, null);\r\n      classType.registeredClass.constructor_body[argCount - 1] = craftInvokerFunction(humanName, argTypes, null, invoker, rawConstructor);\r\n      return [];\r\n    });\r\n    return [];\r\n  });\r\n};\r\n\r\nvar getFunctionName = signature => {\r\n  signature = signature.trim();\r\n  const argsIndex = signature.indexOf(\"(\");\r\n  if (argsIndex === -1) return signature;\r\n  assert(signature.endsWith(\")\"), \"Parentheses for argument names should match.\");\r\n  return signature.slice(0, argsIndex);\r\n};\r\n\r\nvar __embind_register_class_function = (rawClassType, methodName, argCount, rawArgTypesAddr, // [ReturnType, ThisType, Args...]\r\ninvokerSignature, rawInvoker, context, isPureVirtual, isAsync, isNonnullReturn) => {\r\n  var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\r\n  methodName = readLatin1String(methodName);\r\n  methodName = getFunctionName(methodName);\r\n  rawInvoker = embind__requireFunction(invokerSignature, rawInvoker, isAsync);\r\n  whenDependentTypesAreResolved([], [ rawClassType ], classType => {\r\n    classType = classType[0];\r\n    var humanName = `${classType.name}.${methodName}`;\r\n    if (methodName.startsWith(\"@@\")) {\r\n      methodName = Symbol[methodName.substring(2)];\r\n    }\r\n    if (isPureVirtual) {\r\n      classType.registeredClass.pureVirtualFunctions.push(methodName);\r\n    }\r\n    function unboundTypesHandler() {\r\n      throwUnboundTypeError(`Cannot call ${humanName} due to unbound types`, rawArgTypes);\r\n    }\r\n    var proto = classType.registeredClass.instancePrototype;\r\n    var method = proto[methodName];\r\n    if (undefined === method || (undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2)) {\r\n      // This is the first overload to be registered, OR we are replacing a\r\n      // function in the base class with a function in the derived class.\r\n      unboundTypesHandler.argCount = argCount - 2;\r\n      unboundTypesHandler.className = classType.name;\r\n      proto[methodName] = unboundTypesHandler;\r\n    } else {\r\n      // There was an existing function with the same name registered. Set up\r\n      // a function overload routing table.\r\n      ensureOverloadTable(proto, methodName, humanName);\r\n      proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\r\n    }\r\n    whenDependentTypesAreResolved([], rawArgTypes, argTypes => {\r\n      var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context, isAsync);\r\n      // Replace the initial unbound-handler-stub function with the\r\n      // appropriate member function, now that all types are resolved. If\r\n      // multiple overloads are registered for this function, the function\r\n      // goes into an overload table.\r\n      if (undefined === proto[methodName].overloadTable) {\r\n        // Set argCount in case an overload is registered later\r\n        memberFunction.argCount = argCount - 2;\r\n        proto[methodName] = memberFunction;\r\n      } else {\r\n        proto[methodName].overloadTable[argCount - 2] = memberFunction;\r\n      }\r\n      return [];\r\n    });\r\n    return [];\r\n  });\r\n};\r\n\r\nvar validateThis = (this_, classType, humanName) => {\r\n  if (!(this_ instanceof Object)) {\r\n    throwBindingError(`${humanName} with invalid \"this\": ${this_}`);\r\n  }\r\n  if (!(this_ instanceof classType.registeredClass.constructor)) {\r\n    throwBindingError(`${humanName} incompatible with \"this\" of type ${this_.constructor.name}`);\r\n  }\r\n  if (!this_.$$.ptr) {\r\n    throwBindingError(`cannot call emscripten binding method ${humanName} on deleted object`);\r\n  }\r\n  // todo: kill this\r\n  return upcastPointer(this_.$$.ptr, this_.$$.ptrType.registeredClass, classType.registeredClass);\r\n};\r\n\r\nvar __embind_register_class_property = (classType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) => {\r\n  fieldName = readLatin1String(fieldName);\r\n  getter = embind__requireFunction(getterSignature, getter);\r\n  whenDependentTypesAreResolved([], [ classType ], classType => {\r\n    classType = classType[0];\r\n    var humanName = `${classType.name}.${fieldName}`;\r\n    var desc = {\r\n      get() {\r\n        throwUnboundTypeError(`Cannot access ${humanName} due to unbound types`, [ getterReturnType, setterArgumentType ]);\r\n      },\r\n      enumerable: true,\r\n      configurable: true\r\n    };\r\n    if (setter) {\r\n      desc.set = () => throwUnboundTypeError(`Cannot access ${humanName} due to unbound types`, [ getterReturnType, setterArgumentType ]);\r\n    } else {\r\n      desc.set = v => throwBindingError(humanName + \" is a read-only property\");\r\n    }\r\n    Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);\r\n    whenDependentTypesAreResolved([], (setter ? [ getterReturnType, setterArgumentType ] : [ getterReturnType ]), types => {\r\n      var getterReturnType = types[0];\r\n      var desc = {\r\n        get() {\r\n          var ptr = validateThis(this, classType, humanName + \" getter\");\r\n          return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\r\n        },\r\n        enumerable: true\r\n      };\r\n      if (setter) {\r\n        setter = embind__requireFunction(setterSignature, setter);\r\n        var setterArgumentType = types[1];\r\n        desc.set = function(v) {\r\n          var ptr = validateThis(this, classType, humanName + \" setter\");\r\n          var destructors = [];\r\n          setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, v));\r\n          runDestructors(destructors);\r\n        };\r\n      }\r\n      Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);\r\n      return [];\r\n    });\r\n    return [];\r\n  });\r\n};\r\n\r\nvar emval_freelist = [];\r\n\r\nvar emval_handles = [];\r\n\r\nvar __emval_decref = handle => {\r\n  if (handle > 9 && 0 === --emval_handles[handle + 1]) {\r\n    assert(emval_handles[handle] !== undefined, `Decref for unallocated handle.`);\r\n    emval_handles[handle] = undefined;\r\n    emval_freelist.push(handle);\r\n  }\r\n};\r\n\r\nvar count_emval_handles = () => emval_handles.length / 2 - 5 - emval_freelist.length;\r\n\r\nvar init_emval = () => {\r\n  // reserve 0 and some special values. These never get de-allocated.\r\n  emval_handles.push(0, 1, undefined, 1, null, 1, true, 1, false, 1);\r\n  assert(emval_handles.length === 5 * 2);\r\n  Module[\"count_emval_handles\"] = count_emval_handles;\r\n};\r\n\r\nvar Emval = {\r\n  toValue: handle => {\r\n    if (!handle) {\r\n      throwBindingError(`Cannot use deleted val. handle = ${handle}`);\r\n    }\r\n    // handle 2 is supposed to be `undefined`.\r\n    assert(handle === 2 || emval_handles[handle] !== undefined && handle % 2 === 0, `invalid handle: ${handle}`);\r\n    return emval_handles[handle];\r\n  },\r\n  toHandle: value => {\r\n    switch (value) {\r\n     case undefined:\r\n      return 2;\r\n\r\n     case null:\r\n      return 4;\r\n\r\n     case true:\r\n      return 6;\r\n\r\n     case false:\r\n      return 8;\r\n\r\n     default:\r\n      {\r\n        const handle = emval_freelist.pop() || emval_handles.length;\r\n        emval_handles[handle] = value;\r\n        emval_handles[handle + 1] = 1;\r\n        return handle;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nvar EmValType = {\r\n  name: \"emscripten::val\",\r\n  \"fromWireType\": handle => {\r\n    var rv = Emval.toValue(handle);\r\n    __emval_decref(handle);\r\n    return rv;\r\n  },\r\n  \"toWireType\": (destructors, value) => Emval.toHandle(value),\r\n  argPackAdvance: GenericWireTypeSize,\r\n  \"readValueFromPointer\": readPointer,\r\n  destructorFunction: null\r\n};\r\n\r\nvar __embind_register_emval = rawType => registerType(rawType, EmValType);\r\n\r\nvar floatReadValueFromPointer = (name, width) => {\r\n  switch (width) {\r\n   case 4:\r\n    return function(pointer) {\r\n      return this[\"fromWireType\"](GROWABLE_HEAP_F32()[((pointer) >> 2)]);\r\n    };\r\n\r\n   case 8:\r\n    return function(pointer) {\r\n      return this[\"fromWireType\"](GROWABLE_HEAP_F64()[((pointer) >> 3)]);\r\n    };\r\n\r\n   default:\r\n    throw new TypeError(`invalid float width (${width}): ${name}`);\r\n  }\r\n};\r\n\r\nvar __embind_register_float = (rawType, name, size) => {\r\n  name = readLatin1String(name);\r\n  registerType(rawType, {\r\n    name,\r\n    \"fromWireType\": value => value,\r\n    \"toWireType\": (destructors, value) => {\r\n      if (typeof value != \"number\" && typeof value != \"boolean\") {\r\n        throw new TypeError(`Cannot convert ${embindRepr(value)} to ${this.name}`);\r\n      }\r\n      // The VM will perform JS to Wasm value conversion, according to the spec:\r\n      // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\r\n      return value;\r\n    },\r\n    argPackAdvance: GenericWireTypeSize,\r\n    \"readValueFromPointer\": floatReadValueFromPointer(name, size),\r\n    destructorFunction: null\r\n  });\r\n};\r\n\r\nvar __embind_register_function = (name, argCount, rawArgTypesAddr, signature, rawInvoker, fn, isAsync, isNonnullReturn) => {\r\n  var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\r\n  name = readLatin1String(name);\r\n  name = getFunctionName(name);\r\n  rawInvoker = embind__requireFunction(signature, rawInvoker, isAsync);\r\n  exposePublicSymbol(name, function() {\r\n    throwUnboundTypeError(`Cannot call ${name} due to unbound types`, argTypes);\r\n  }, argCount - 1);\r\n  whenDependentTypesAreResolved([], argTypes, argTypes => {\r\n    var invokerArgsArray = [ argTypes[0], null ].concat(argTypes.slice(1));\r\n    replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null, rawInvoker, fn, isAsync), argCount - 1);\r\n    return [];\r\n  });\r\n};\r\n\r\n/** @suppress {globalThis} */ var __embind_register_integer = (primitiveType, name, size, minRange, maxRange) => {\r\n  name = readLatin1String(name);\r\n  // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come\r\n  // out as 'i32 -1'. Always treat those as max u32.\r\n  if (maxRange === -1) {\r\n    maxRange = 4294967295;\r\n  }\r\n  var fromWireType = value => value;\r\n  if (minRange === 0) {\r\n    var bitshift = 32 - 8 * size;\r\n    fromWireType = value => (value << bitshift) >>> bitshift;\r\n  }\r\n  var isUnsignedType = (name.includes(\"unsigned\"));\r\n  var checkAssertions = (value, toTypeName) => {\r\n    if (typeof value != \"number\" && typeof value != \"boolean\") {\r\n      throw new TypeError(`Cannot convert \"${embindRepr(value)}\" to ${toTypeName}`);\r\n    }\r\n    if (value < minRange || value > maxRange) {\r\n      throw new TypeError(`Passing a number \"${embindRepr(value)}\" from JS side to C/C++ side to an argument of type \"${name}\", which is outside the valid range [${minRange}, ${maxRange}]!`);\r\n    }\r\n  };\r\n  var toWireType;\r\n  if (isUnsignedType) {\r\n    toWireType = function(destructors, value) {\r\n      checkAssertions(value, this.name);\r\n      return value >>> 0;\r\n    };\r\n  } else {\r\n    toWireType = function(destructors, value) {\r\n      checkAssertions(value, this.name);\r\n      // The VM will perform JS to Wasm value conversion, according to the spec:\r\n      // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\r\n      return value;\r\n    };\r\n  }\r\n  registerType(primitiveType, {\r\n    name,\r\n    \"fromWireType\": fromWireType,\r\n    \"toWireType\": toWireType,\r\n    argPackAdvance: GenericWireTypeSize,\r\n    \"readValueFromPointer\": integerReadValueFromPointer(name, size, minRange !== 0),\r\n    destructorFunction: null\r\n  });\r\n};\r\n\r\nvar __embind_register_memory_view = (rawType, dataTypeIndex, name) => {\r\n  var typeMapping = [ Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array, BigInt64Array, BigUint64Array ];\r\n  var TA = typeMapping[dataTypeIndex];\r\n  function decodeMemoryView(handle) {\r\n    var size = GROWABLE_HEAP_U32()[((handle) >> 2)];\r\n    var data = GROWABLE_HEAP_U32()[(((handle) + (4)) >> 2)];\r\n    return new TA(GROWABLE_HEAP_I8().buffer, data, size);\r\n  }\r\n  name = readLatin1String(name);\r\n  registerType(rawType, {\r\n    name,\r\n    \"fromWireType\": decodeMemoryView,\r\n    argPackAdvance: GenericWireTypeSize,\r\n    \"readValueFromPointer\": decodeMemoryView\r\n  }, {\r\n    ignoreDuplicateRegistrations: true\r\n  });\r\n};\r\n\r\nvar EmValOptionalType = Object.assign({\r\n  optional: true\r\n}, EmValType);\r\n\r\nvar __embind_register_optional = (rawOptionalType, rawType) => {\r\n  registerType(rawOptionalType, EmValOptionalType);\r\n};\r\n\r\nvar stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\r\n  assert(typeof str === \"string\", `stringToUTF8Array expects a string (got ${typeof str})`);\r\n  // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\r\n  // undefined and false each don't write out any bytes.\r\n  if (!(maxBytesToWrite > 0)) return 0;\r\n  var startIdx = outIdx;\r\n  var endIdx = outIdx + maxBytesToWrite - 1;\r\n  // -1 for string null terminator.\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\r\n    // unit, not a Unicode code point of the character! So decode\r\n    // UTF16->UTF32->UTF8.\r\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\r\n    // and https://www.ietf.org/rfc/rfc2279.txt\r\n    // and https://tools.ietf.org/html/rfc3629\r\n    var u = str.charCodeAt(i);\r\n    // possibly a lead surrogate\r\n    if (u >= 55296 && u <= 57343) {\r\n      var u1 = str.charCodeAt(++i);\r\n      u = 65536 + ((u & 1023) << 10) | (u1 & 1023);\r\n    }\r\n    if (u <= 127) {\r\n      if (outIdx >= endIdx) break;\r\n      heap[outIdx++] = u;\r\n    } else if (u <= 2047) {\r\n      if (outIdx + 1 >= endIdx) break;\r\n      heap[outIdx++] = 192 | (u >> 6);\r\n      heap[outIdx++] = 128 | (u & 63);\r\n    } else if (u <= 65535) {\r\n      if (outIdx + 2 >= endIdx) break;\r\n      heap[outIdx++] = 224 | (u >> 12);\r\n      heap[outIdx++] = 128 | ((u >> 6) & 63);\r\n      heap[outIdx++] = 128 | (u & 63);\r\n    } else {\r\n      if (outIdx + 3 >= endIdx) break;\r\n      if (u > 1114111) warnOnce(\"Invalid Unicode code point \" + ptrToString(u) + \" encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).\");\r\n      heap[outIdx++] = 240 | (u >> 18);\r\n      heap[outIdx++] = 128 | ((u >> 12) & 63);\r\n      heap[outIdx++] = 128 | ((u >> 6) & 63);\r\n      heap[outIdx++] = 128 | (u & 63);\r\n    }\r\n  }\r\n  // Null-terminate the pointer to the buffer.\r\n  heap[outIdx] = 0;\r\n  return outIdx - startIdx;\r\n};\r\n\r\nvar stringToUTF8 = (str, outPtr, maxBytesToWrite) => {\r\n  assert(typeof maxBytesToWrite == \"number\", \"stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");\r\n  return stringToUTF8Array(str, GROWABLE_HEAP_U8(), outPtr, maxBytesToWrite);\r\n};\r\n\r\nvar lengthBytesUTF8 = str => {\r\n  var len = 0;\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\r\n    // unit, not a Unicode code point of the character! So decode\r\n    // UTF16->UTF32->UTF8.\r\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n    var c = str.charCodeAt(i);\r\n    // possibly a lead surrogate\r\n    if (c <= 127) {\r\n      len++;\r\n    } else if (c <= 2047) {\r\n      len += 2;\r\n    } else if (c >= 55296 && c <= 57343) {\r\n      len += 4;\r\n      ++i;\r\n    } else {\r\n      len += 3;\r\n    }\r\n  }\r\n  return len;\r\n};\r\n\r\nvar __embind_register_std_string = (rawType, name) => {\r\n  name = readLatin1String(name);\r\n  var stdStringIsUTF8 = true;\r\n  registerType(rawType, {\r\n    name,\r\n    // For some method names we use string keys here since they are part of\r\n    // the public/external API and/or used by the runtime-generated code.\r\n    \"fromWireType\"(value) {\r\n      var length = GROWABLE_HEAP_U32()[((value) >> 2)];\r\n      var payload = value + 4;\r\n      var str;\r\n      if (stdStringIsUTF8) {\r\n        var decodeStartPtr = payload;\r\n        // Looping here to support possible embedded '0' bytes\r\n        for (var i = 0; i <= length; ++i) {\r\n          var currentBytePtr = payload + i;\r\n          if (i == length || GROWABLE_HEAP_U8()[currentBytePtr] == 0) {\r\n            var maxRead = currentBytePtr - decodeStartPtr;\r\n            var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\r\n            if (str === undefined) {\r\n              str = stringSegment;\r\n            } else {\r\n              str += String.fromCharCode(0);\r\n              str += stringSegment;\r\n            }\r\n            decodeStartPtr = currentBytePtr + 1;\r\n          }\r\n        }\r\n      } else {\r\n        var a = new Array(length);\r\n        for (var i = 0; i < length; ++i) {\r\n          a[i] = String.fromCharCode(GROWABLE_HEAP_U8()[payload + i]);\r\n        }\r\n        str = a.join(\"\");\r\n      }\r\n      _free(value);\r\n      return str;\r\n    },\r\n    \"toWireType\"(destructors, value) {\r\n      if (value instanceof ArrayBuffer) {\r\n        value = new Uint8Array(value);\r\n      }\r\n      var length;\r\n      var valueIsOfTypeString = (typeof value == \"string\");\r\n      // We accept `string` or array views with single byte elements\r\n      if (!(valueIsOfTypeString || (ArrayBuffer.isView(value) && value.BYTES_PER_ELEMENT == 1))) {\r\n        throwBindingError(\"Cannot pass non-string to std::string\");\r\n      }\r\n      if (stdStringIsUTF8 && valueIsOfTypeString) {\r\n        length = lengthBytesUTF8(value);\r\n      } else {\r\n        length = value.length;\r\n      }\r\n      // assumes POINTER_SIZE alignment\r\n      var base = _malloc(4 + length + 1);\r\n      var ptr = base + 4;\r\n      GROWABLE_HEAP_U32()[((base) >> 2)] = length;\r\n      if (valueIsOfTypeString) {\r\n        if (stdStringIsUTF8) {\r\n          stringToUTF8(value, ptr, length + 1);\r\n        } else {\r\n          for (var i = 0; i < length; ++i) {\r\n            var charCode = value.charCodeAt(i);\r\n            if (charCode > 255) {\r\n              _free(base);\r\n              throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\r\n            }\r\n            GROWABLE_HEAP_U8()[ptr + i] = charCode;\r\n          }\r\n        }\r\n      } else {\r\n        GROWABLE_HEAP_U8().set(value, ptr);\r\n      }\r\n      if (destructors !== null) {\r\n        destructors.push(_free, base);\r\n      }\r\n      return base;\r\n    },\r\n    argPackAdvance: GenericWireTypeSize,\r\n    \"readValueFromPointer\": readPointer,\r\n    destructorFunction(ptr) {\r\n      _free(ptr);\r\n    }\r\n  });\r\n};\r\n\r\nvar UTF16Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\r\n\r\nvar UTF16ToString = (ptr, maxBytesToRead) => {\r\n  assert(ptr % 2 == 0, \"Pointer passed to UTF16ToString must be aligned to two bytes!\");\r\n  var endPtr = ptr;\r\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on\r\n  // null terminator by itself.\r\n  // Also, use the length info to avoid running tiny strings through\r\n  // TextDecoder, since .subarray() allocates garbage.\r\n  var idx = endPtr >> 1;\r\n  var maxIdx = idx + maxBytesToRead / 2;\r\n  // If maxBytesToRead is not passed explicitly, it will be undefined, and this\r\n  // will always evaluate to true. This saves on code size.\r\n  while (!(idx >= maxIdx) && GROWABLE_HEAP_U16()[idx]) ++idx;\r\n  endPtr = idx << 1;\r\n  if (endPtr - ptr > 32 && UTF16Decoder) return UTF16Decoder.decode(GROWABLE_HEAP_U8().slice(ptr, endPtr));\r\n  // Fallback: decode without UTF16Decoder\r\n  var str = \"\";\r\n  // If maxBytesToRead is not passed explicitly, it will be undefined, and the\r\n  // for-loop's condition will always evaluate to true. The loop is then\r\n  // terminated on the first null char.\r\n  for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\r\n    var codeUnit = GROWABLE_HEAP_I16()[(((ptr) + (i * 2)) >> 1)];\r\n    if (codeUnit == 0) break;\r\n    // fromCharCode constructs a character from a UTF-16 code unit, so we can\r\n    // pass the UTF16 string right through.\r\n    str += String.fromCharCode(codeUnit);\r\n  }\r\n  return str;\r\n};\r\n\r\nvar stringToUTF16 = (str, outPtr, maxBytesToWrite) => {\r\n  assert(outPtr % 2 == 0, \"Pointer passed to stringToUTF16 must be aligned to two bytes!\");\r\n  assert(typeof maxBytesToWrite == \"number\", \"stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");\r\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\r\n  maxBytesToWrite ??= 2147483647;\r\n  if (maxBytesToWrite < 2) return 0;\r\n  maxBytesToWrite -= 2;\r\n  // Null terminator.\r\n  var startPtr = outPtr;\r\n  var numCharsToWrite = (maxBytesToWrite < str.length * 2) ? (maxBytesToWrite / 2) : str.length;\r\n  for (var i = 0; i < numCharsToWrite; ++i) {\r\n    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\r\n    var codeUnit = str.charCodeAt(i);\r\n    // possibly a lead surrogate\r\n    GROWABLE_HEAP_I16()[((outPtr) >> 1)] = codeUnit;\r\n    outPtr += 2;\r\n  }\r\n  // Null-terminate the pointer to the HEAP.\r\n  GROWABLE_HEAP_I16()[((outPtr) >> 1)] = 0;\r\n  return outPtr - startPtr;\r\n};\r\n\r\nvar lengthBytesUTF16 = str => str.length * 2;\r\n\r\nvar UTF32ToString = (ptr, maxBytesToRead) => {\r\n  assert(ptr % 4 == 0, \"Pointer passed to UTF32ToString must be aligned to four bytes!\");\r\n  var i = 0;\r\n  var str = \"\";\r\n  // If maxBytesToRead is not passed explicitly, it will be undefined, and this\r\n  // will always evaluate to true. This saves on code size.\r\n  while (!(i >= maxBytesToRead / 4)) {\r\n    var utf32 = GROWABLE_HEAP_I32()[(((ptr) + (i * 4)) >> 2)];\r\n    if (utf32 == 0) break;\r\n    ++i;\r\n    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\r\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n    if (utf32 >= 65536) {\r\n      var ch = utf32 - 65536;\r\n      str += String.fromCharCode(55296 | (ch >> 10), 56320 | (ch & 1023));\r\n    } else {\r\n      str += String.fromCharCode(utf32);\r\n    }\r\n  }\r\n  return str;\r\n};\r\n\r\nvar stringToUTF32 = (str, outPtr, maxBytesToWrite) => {\r\n  assert(outPtr % 4 == 0, \"Pointer passed to stringToUTF32 must be aligned to four bytes!\");\r\n  assert(typeof maxBytesToWrite == \"number\", \"stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");\r\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\r\n  maxBytesToWrite ??= 2147483647;\r\n  if (maxBytesToWrite < 4) return 0;\r\n  var startPtr = outPtr;\r\n  var endPtr = startPtr + maxBytesToWrite - 4;\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\r\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n    var codeUnit = str.charCodeAt(i);\r\n    // possibly a lead surrogate\r\n    if (codeUnit >= 55296 && codeUnit <= 57343) {\r\n      var trailSurrogate = str.charCodeAt(++i);\r\n      codeUnit = 65536 + ((codeUnit & 1023) << 10) | (trailSurrogate & 1023);\r\n    }\r\n    GROWABLE_HEAP_I32()[((outPtr) >> 2)] = codeUnit;\r\n    outPtr += 4;\r\n    if (outPtr + 4 > endPtr) break;\r\n  }\r\n  // Null-terminate the pointer to the HEAP.\r\n  GROWABLE_HEAP_I32()[((outPtr) >> 2)] = 0;\r\n  return outPtr - startPtr;\r\n};\r\n\r\nvar lengthBytesUTF32 = str => {\r\n  var len = 0;\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\r\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n    var codeUnit = str.charCodeAt(i);\r\n    if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\r\n    // possibly a lead surrogate, so skip over the tail surrogate.\r\n    len += 4;\r\n  }\r\n  return len;\r\n};\r\n\r\nvar __embind_register_std_wstring = (rawType, charSize, name) => {\r\n  name = readLatin1String(name);\r\n  var decodeString, encodeString, readCharAt, lengthBytesUTF;\r\n  if (charSize === 2) {\r\n    decodeString = UTF16ToString;\r\n    encodeString = stringToUTF16;\r\n    lengthBytesUTF = lengthBytesUTF16;\r\n    readCharAt = pointer => GROWABLE_HEAP_U16()[((pointer) >> 1)];\r\n  } else if (charSize === 4) {\r\n    decodeString = UTF32ToString;\r\n    encodeString = stringToUTF32;\r\n    lengthBytesUTF = lengthBytesUTF32;\r\n    readCharAt = pointer => GROWABLE_HEAP_U32()[((pointer) >> 2)];\r\n  }\r\n  registerType(rawType, {\r\n    name,\r\n    \"fromWireType\": value => {\r\n      // Code mostly taken from _embind_register_std_string fromWireType\r\n      var length = GROWABLE_HEAP_U32()[((value) >> 2)];\r\n      var str;\r\n      var decodeStartPtr = value + 4;\r\n      // Looping here to support possible embedded '0' bytes\r\n      for (var i = 0; i <= length; ++i) {\r\n        var currentBytePtr = value + 4 + i * charSize;\r\n        if (i == length || readCharAt(currentBytePtr) == 0) {\r\n          var maxReadBytes = currentBytePtr - decodeStartPtr;\r\n          var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\r\n          if (str === undefined) {\r\n            str = stringSegment;\r\n          } else {\r\n            str += String.fromCharCode(0);\r\n            str += stringSegment;\r\n          }\r\n          decodeStartPtr = currentBytePtr + charSize;\r\n        }\r\n      }\r\n      _free(value);\r\n      return str;\r\n    },\r\n    \"toWireType\": (destructors, value) => {\r\n      if (!(typeof value == \"string\")) {\r\n        throwBindingError(`Cannot pass non-string to C++ string type ${name}`);\r\n      }\r\n      // assumes POINTER_SIZE alignment\r\n      var length = lengthBytesUTF(value);\r\n      var ptr = _malloc(4 + length + charSize);\r\n      GROWABLE_HEAP_U32()[((ptr) >> 2)] = length / charSize;\r\n      encodeString(value, ptr + 4, length + charSize);\r\n      if (destructors !== null) {\r\n        destructors.push(_free, ptr);\r\n      }\r\n      return ptr;\r\n    },\r\n    argPackAdvance: GenericWireTypeSize,\r\n    \"readValueFromPointer\": readPointer,\r\n    destructorFunction(ptr) {\r\n      _free(ptr);\r\n    }\r\n  });\r\n};\r\n\r\nvar __embind_register_value_object = (rawType, name, constructorSignature, rawConstructor, destructorSignature, rawDestructor) => {\r\n  structRegistrations[rawType] = {\r\n    name: readLatin1String(name),\r\n    rawConstructor: embind__requireFunction(constructorSignature, rawConstructor),\r\n    rawDestructor: embind__requireFunction(destructorSignature, rawDestructor),\r\n    fields: []\r\n  };\r\n};\r\n\r\nvar __embind_register_value_object_field = (structType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) => {\r\n  structRegistrations[structType].fields.push({\r\n    fieldName: readLatin1String(fieldName),\r\n    getterReturnType,\r\n    getter: embind__requireFunction(getterSignature, getter),\r\n    getterContext,\r\n    setterArgumentType,\r\n    setter: embind__requireFunction(setterSignature, setter),\r\n    setterContext\r\n  });\r\n};\r\n\r\nvar __embind_register_void = (rawType, name) => {\r\n  name = readLatin1String(name);\r\n  registerType(rawType, {\r\n    isVoid: true,\r\n    // void return values can be optimized out sometimes\r\n    name,\r\n    argPackAdvance: 0,\r\n    \"fromWireType\": () => undefined,\r\n    // TODO: assert if anything else is given?\r\n    \"toWireType\": (destructors, o) => undefined\r\n  });\r\n};\r\n\r\nvar __emscripten_init_main_thread_js = tb => {\r\n  // Pass the thread address to the native code where they stored in wasm\r\n  // globals which act as a form of TLS. Global constructors trying\r\n  // to access this value will read the wrong value, but that is UB anyway.\r\n  __emscripten_thread_init(tb, /*is_main=*/ !ENVIRONMENT_IS_WORKER, /*is_runtime=*/ 1, /*can_block=*/ !ENVIRONMENT_IS_WEB, /*default_stacksize=*/ 2097152, /*start_profiling=*/ false);\r\n  PThread.threadInitTLS();\r\n};\r\n\r\nvar handleException = e => {\r\n  // Certain exception types we do not treat as errors since they are used for\r\n  // internal control flow.\r\n  // 1. ExitStatus, which is thrown by exit()\r\n  // 2. \"unwind\", which is thrown by emscripten_unwind_to_js_event_loop() and others\r\n  //    that wish to return to JS event loop.\r\n  if (e instanceof ExitStatus || e == \"unwind\") {\r\n    return EXITSTATUS;\r\n  }\r\n  checkStackCookie();\r\n  if (e instanceof WebAssembly.RuntimeError) {\r\n    if (_emscripten_stack_get_current() <= 0) {\r\n      err(\"Stack overflow detected.  You can try increasing -sSTACK_SIZE (currently set to 2097152)\");\r\n    }\r\n  }\r\n  quit_(1, e);\r\n};\r\n\r\nvar maybeExit = () => {\r\n  if (!keepRuntimeAlive()) {\r\n    try {\r\n      if (ENVIRONMENT_IS_PTHREAD) __emscripten_thread_exit(EXITSTATUS); else _exit(EXITSTATUS);\r\n    } catch (e) {\r\n      handleException(e);\r\n    }\r\n  }\r\n};\r\n\r\nvar callUserCallback = func => {\r\n  if (ABORT) {\r\n    err(\"user callback triggered after runtime exited or application aborted.  Ignoring.\");\r\n    return;\r\n  }\r\n  try {\r\n    func();\r\n    maybeExit();\r\n  } catch (e) {\r\n    handleException(e);\r\n  }\r\n};\r\n\r\nvar __emscripten_thread_mailbox_await = pthread_ptr => {\r\n  if (typeof Atomics.waitAsync === \"function\") {\r\n    // Wait on the pthread's initial self-pointer field because it is easy and\r\n    // safe to access from sending threads that need to notify the waiting\r\n    // thread.\r\n    // TODO: How to make this work with wasm64?\r\n    var wait = Atomics.waitAsync(GROWABLE_HEAP_I32(), ((pthread_ptr) >> 2), pthread_ptr);\r\n    assert(wait.async);\r\n    wait.value.then(checkMailbox);\r\n    var waitingAsync = pthread_ptr + 128;\r\n    Atomics.store(GROWABLE_HEAP_I32(), ((waitingAsync) >> 2), 1);\r\n  }\r\n};\r\n\r\nvar checkMailbox = () => {\r\n  // Only check the mailbox if we have a live pthread runtime. We implement\r\n  // pthread_self to return 0 if there is no live runtime.\r\n  var pthread_ptr = _pthread_self();\r\n  if (pthread_ptr) {\r\n    // If we are using Atomics.waitAsync as our notification mechanism, wait\r\n    // for a notification before processing the mailbox to avoid missing any\r\n    // work that could otherwise arrive after we've finished processing the\r\n    // mailbox and before we're ready for the next notification.\r\n    __emscripten_thread_mailbox_await(pthread_ptr);\r\n    callUserCallback(__emscripten_check_mailbox);\r\n  }\r\n};\r\n\r\nvar __emscripten_notify_mailbox_postmessage = (targetThread, currThreadId) => {\r\n  if (targetThread == currThreadId) {\r\n    setTimeout(checkMailbox);\r\n  } else if (ENVIRONMENT_IS_PTHREAD) {\r\n    postMessage({\r\n      targetThread,\r\n      cmd: \"checkMailbox\"\r\n    });\r\n  } else {\r\n    var worker = PThread.pthreads[targetThread];\r\n    if (!worker) {\r\n      err(`Cannot send message to thread with ID ${targetThread}, unknown thread ID!`);\r\n      return;\r\n    }\r\n    worker.postMessage({\r\n      cmd: \"checkMailbox\"\r\n    });\r\n  }\r\n};\r\n\r\nvar proxiedJSCallArgs = [];\r\n\r\nvar __emscripten_receive_on_main_thread_js = (funcIndex, emAsmAddr, callingThread, numCallArgs, args) => {\r\n  // Sometimes we need to backproxy events to the calling thread (e.g.\r\n  // HTML5 DOM events handlers such as\r\n  // emscripten_set_mousemove_callback()), so keep track in a globally\r\n  // accessible variable about the thread that initiated the proxying.\r\n  numCallArgs /= 2;\r\n  proxiedJSCallArgs.length = numCallArgs;\r\n  var b = ((args) >> 3);\r\n  for (var i = 0; i < numCallArgs; i++) {\r\n    if (HEAP64[b + 2 * i]) {\r\n      // It's a BigInt.\r\n      proxiedJSCallArgs[i] = HEAP64[b + 2 * i + 1];\r\n    } else {\r\n      // It's a Number.\r\n      proxiedJSCallArgs[i] = GROWABLE_HEAP_F64()[b + 2 * i + 1];\r\n    }\r\n  }\r\n  // Proxied JS library funcs use funcIndex and EM_ASM functions use emAsmAddr\r\n  assert(!emAsmAddr);\r\n  var func = proxiedFunctionTable[funcIndex];\r\n  assert(!(funcIndex && emAsmAddr));\r\n  assert(func.length == numCallArgs, \"Call args mismatch in _emscripten_receive_on_main_thread_js\");\r\n  PThread.currentProxiedOperationCallerThread = callingThread;\r\n  var rtn = func(...proxiedJSCallArgs);\r\n  PThread.currentProxiedOperationCallerThread = 0;\r\n  // Proxied functions can return any type except bigint.  All other types\r\n  // cooerce to f64/double (the return type of this function in C) but not\r\n  // bigint.\r\n  assert(typeof rtn != \"bigint\");\r\n  return rtn;\r\n};\r\n\r\nvar __emscripten_thread_cleanup = thread => {\r\n  // Called when a thread needs to be cleaned up so it can be reused.\r\n  // A thread is considered reusable when it either returns from its\r\n  // entry point, calls pthread_exit, or acts upon a cancellation.\r\n  // Detached threads are responsible for calling this themselves,\r\n  // otherwise pthread_join is responsible for calling this.\r\n  if (!ENVIRONMENT_IS_PTHREAD) cleanupThread(thread); else postMessage({\r\n    cmd: \"cleanupThread\",\r\n    thread\r\n  });\r\n};\r\n\r\nvar __emscripten_thread_set_strongref = thread => {};\r\n\r\nvar requireRegisteredType = (rawType, humanName) => {\r\n  var impl = registeredTypes[rawType];\r\n  if (undefined === impl) {\r\n    throwBindingError(`${humanName} has unknown type ${getTypeName(rawType)}`);\r\n  }\r\n  return impl;\r\n};\r\n\r\nvar emval_returnValue = (returnType, destructorsRef, handle) => {\r\n  var destructors = [];\r\n  var result = returnType[\"toWireType\"](destructors, handle);\r\n  if (destructors.length) {\r\n    // void, primitives and any other types w/o destructors don't need to allocate a handle\r\n    GROWABLE_HEAP_U32()[((destructorsRef) >> 2)] = Emval.toHandle(destructors);\r\n  }\r\n  return result;\r\n};\r\n\r\nvar __emval_as = (handle, returnType, destructorsRef) => {\r\n  handle = Emval.toValue(handle);\r\n  returnType = requireRegisteredType(returnType, \"emval::as\");\r\n  return emval_returnValue(returnType, destructorsRef, handle);\r\n};\r\n\r\nvar __emval_get_property = (handle, key) => {\r\n  handle = Emval.toValue(handle);\r\n  key = Emval.toValue(key);\r\n  return Emval.toHandle(handle[key]);\r\n};\r\n\r\nvar emval_symbols = {};\r\n\r\nvar getStringOrSymbol = address => {\r\n  var symbol = emval_symbols[address];\r\n  if (symbol === undefined) {\r\n    return readLatin1String(address);\r\n  }\r\n  return symbol;\r\n};\r\n\r\nvar __emval_new_cstring = v => Emval.toHandle(getStringOrSymbol(v));\r\n\r\nvar __emval_run_destructors = handle => {\r\n  var destructors = Emval.toValue(handle);\r\n  runDestructors(destructors);\r\n  __emval_decref(handle);\r\n};\r\n\r\nvar __emval_take_value = (type, arg) => {\r\n  type = requireRegisteredType(type, \"_emval_take_value\");\r\n  var v = type[\"readValueFromPointer\"](arg);\r\n  return Emval.toHandle(v);\r\n};\r\n\r\nvar __tzset_js = (timezone, daylight, std_name, dst_name) => {\r\n  // TODO: Use (malleable) environment variables instead of system settings.\r\n  var currentYear = (new Date).getFullYear();\r\n  var winter = new Date(currentYear, 0, 1);\r\n  var summer = new Date(currentYear, 6, 1);\r\n  var winterOffset = winter.getTimezoneOffset();\r\n  var summerOffset = summer.getTimezoneOffset();\r\n  // Local standard timezone offset. Local standard time is not adjusted for\r\n  // daylight savings.  This code uses the fact that getTimezoneOffset returns\r\n  // a greater value during Standard Time versus Daylight Saving Time (DST).\r\n  // Thus it determines the expected output during Standard Time, and it\r\n  // compares whether the output of the given date the same (Standard) or less\r\n  // (DST).\r\n  var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\r\n  // timezone is specified as seconds west of UTC (\"The external variable\r\n  // `timezone` shall be set to the difference, in seconds, between\r\n  // Coordinated Universal Time (UTC) and local standard time.\"), the same\r\n  // as returned by stdTimezoneOffset.\r\n  // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html\r\n  GROWABLE_HEAP_U32()[((timezone) >> 2)] = stdTimezoneOffset * 60;\r\n  GROWABLE_HEAP_I32()[((daylight) >> 2)] = Number(winterOffset != summerOffset);\r\n  var extractZone = timezoneOffset => {\r\n    // Why inverse sign?\r\n    // Read here https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTimezoneOffset\r\n    var sign = timezoneOffset >= 0 ? \"-\" : \"+\";\r\n    var absOffset = Math.abs(timezoneOffset);\r\n    var hours = String(Math.floor(absOffset / 60)).padStart(2, \"0\");\r\n    var minutes = String(absOffset % 60).padStart(2, \"0\");\r\n    return `UTC${sign}${hours}${minutes}`;\r\n  };\r\n  var winterName = extractZone(winterOffset);\r\n  var summerName = extractZone(summerOffset);\r\n  assert(winterName);\r\n  assert(summerName);\r\n  assert(lengthBytesUTF8(winterName) <= 16, `timezone name truncated to fit in TZNAME_MAX (${winterName})`);\r\n  assert(lengthBytesUTF8(summerName) <= 16, `timezone name truncated to fit in TZNAME_MAX (${summerName})`);\r\n  if (summerOffset < winterOffset) {\r\n    // Northern hemisphere\r\n    stringToUTF8(winterName, std_name, 17);\r\n    stringToUTF8(summerName, dst_name, 17);\r\n  } else {\r\n    stringToUTF8(winterName, dst_name, 17);\r\n    stringToUTF8(summerName, std_name, 17);\r\n  }\r\n};\r\n\r\nvar _emscripten_get_now = () => performance.timeOrigin + performance.now();\r\n\r\nvar _emscripten_date_now = () => Date.now();\r\n\r\nvar nowIsMonotonic = 1;\r\n\r\nvar checkWasiClock = clock_id => clock_id >= 0 && clock_id <= 3;\r\n\r\nvar INT53_MAX = 9007199254740992;\r\n\r\nvar INT53_MIN = -9007199254740992;\r\n\r\nvar bigintToI53Checked = num => (num < INT53_MIN || num > INT53_MAX) ? NaN : Number(num);\r\n\r\nfunction _clock_time_get(clk_id, ignored_precision, ptime) {\r\n  ignored_precision = bigintToI53Checked(ignored_precision);\r\n  if (!checkWasiClock(clk_id)) {\r\n    return 28;\r\n  }\r\n  var now;\r\n  // all wasi clocks but realtime are monotonic\r\n  if (clk_id === 0) {\r\n    now = _emscripten_date_now();\r\n  } else if (nowIsMonotonic) {\r\n    now = _emscripten_get_now();\r\n  } else {\r\n    return 52;\r\n  }\r\n  // \"now\" is in ms, and wasi times are in ns.\r\n  var nsec = Math.round(now * 1e3 * 1e3);\r\n  HEAP64[((ptime) >> 3)] = BigInt(nsec);\r\n  return 0;\r\n}\r\n\r\nvar _emscripten_check_blocking_allowed = () => {\r\n  if (ENVIRONMENT_IS_WORKER) return;\r\n  // Blocking in a worker/pthread is fine.\r\n  warnOnce(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\");\r\n};\r\n\r\nvar _emscripten_exit_with_live_runtime = () => {\r\n  runtimeKeepalivePush();\r\n  throw \"unwind\";\r\n};\r\n\r\nvar getHeapMax = () => // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate\r\n// full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side\r\n// for any code that deals with heap sizes, which would require special\r\n// casing all heap size related code to treat 0 specially.\r\n2147483648;\r\n\r\nvar _emscripten_get_heap_max = () => getHeapMax();\r\n\r\nvar _emscripten_num_logical_cores = () => navigator[\"hardwareConcurrency\"];\r\n\r\nvar alignMemory = (size, alignment) => {\r\n  assert(alignment, \"alignment argument is required\");\r\n  return Math.ceil(size / alignment) * alignment;\r\n};\r\n\r\nvar growMemory = size => {\r\n  var b = wasmMemory.buffer;\r\n  var pages = ((size - b.byteLength + 65535) / 65536) | 0;\r\n  try {\r\n    // round size grow request up to wasm page size (fixed 64KB per spec)\r\n    wasmMemory.grow(pages);\r\n    // .grow() takes a delta compared to the previous size\r\n    updateMemoryViews();\r\n    return 1;\r\n  } catch (e) {\r\n    err(`growMemory: Attempted to grow heap from ${b.byteLength} bytes to ${size} bytes, but got error: ${e}`);\r\n  }\r\n};\r\n\r\nvar _emscripten_resize_heap = requestedSize => {\r\n  var oldSize = GROWABLE_HEAP_U8().length;\r\n  // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\r\n  requestedSize >>>= 0;\r\n  // With multithreaded builds, races can happen (another thread might increase the size\r\n  // in between), so return a failure, and let the caller retry.\r\n  if (requestedSize <= oldSize) {\r\n    return false;\r\n  }\r\n  // Memory resize rules:\r\n  // 1.  Always increase heap size to at least the requested size, rounded up\r\n  //     to next page multiple.\r\n  // 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap\r\n  //     geometrically: increase the heap size according to\r\n  //     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most\r\n  //     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).\r\n  // 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap\r\n  //     linearly: increase the heap size by at least\r\n  //     MEMORY_GROWTH_LINEAR_STEP bytes.\r\n  // 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by\r\n  //     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest\r\n  // 4.  If we were unable to allocate as much memory, it may be due to\r\n  //     over-eager decision to excessively reserve due to (3) above.\r\n  //     Hence if an allocation fails, cut down on the amount of excess\r\n  //     growth, in an attempt to succeed to perform a smaller allocation.\r\n  // A limit is set for how much we can grow. We should not exceed that\r\n  // (the wasm binary specifies it, so if we tried, we'd fail anyhow).\r\n  var maxHeapSize = getHeapMax();\r\n  if (requestedSize > maxHeapSize) {\r\n    err(`Cannot enlarge memory, requested ${requestedSize} bytes, but the limit is ${maxHeapSize} bytes!`);\r\n    return false;\r\n  }\r\n  // Loop through potential heap size increases. If we attempt a too eager\r\n  // reservation that fails, cut down on the attempted size and reserve a\r\n  // smaller bump instead. (max 3 times, chosen somewhat arbitrarily)\r\n  for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\r\n    var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\r\n    // ensure geometric growth\r\n    // but limit overreserving (default to capping at +96MB overgrowth at most)\r\n    overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\r\n    var newSize = Math.min(maxHeapSize, alignMemory(Math.max(requestedSize, overGrownHeapSize), 65536));\r\n    var replacement = growMemory(newSize);\r\n    if (replacement) {\r\n      return true;\r\n    }\r\n  }\r\n  err(`Failed to grow the heap from ${oldSize} bytes to ${newSize} bytes, not enough memory!`);\r\n  return false;\r\n};\r\n\r\nvar _emscripten_runtime_keepalive_check = keepRuntimeAlive;\r\n\r\nvar ENV = {};\r\n\r\nvar getExecutableName = () => thisProgram || \"./this.program\";\r\n\r\nvar getEnvStrings = () => {\r\n  if (!getEnvStrings.strings) {\r\n    // Default values.\r\n    // Browser language detection #8751\r\n    var lang = ((typeof navigator == \"object\" && navigator.languages && navigator.languages[0]) || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\r\n    var env = {\r\n      \"USER\": \"web_user\",\r\n      \"LOGNAME\": \"web_user\",\r\n      \"PATH\": \"/\",\r\n      \"PWD\": \"/\",\r\n      \"HOME\": \"/home/web_user\",\r\n      \"LANG\": lang,\r\n      \"_\": getExecutableName()\r\n    };\r\n    // Apply the user-provided values, if any.\r\n    for (var x in ENV) {\r\n      // x is a key in ENV; if ENV[x] is undefined, that means it was\r\n      // explicitly set to be so. We allow user code to do that to\r\n      // force variables with default values to remain unset.\r\n      if (ENV[x] === undefined) delete env[x]; else env[x] = ENV[x];\r\n    }\r\n    var strings = [];\r\n    for (var x in env) {\r\n      strings.push(`${x}=${env[x]}`);\r\n    }\r\n    getEnvStrings.strings = strings;\r\n  }\r\n  return getEnvStrings.strings;\r\n};\r\n\r\nfunction _environ_get(__environ, environ_buf) {\r\n  if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(3, 0, 1, __environ, environ_buf);\r\n  var bufSize = 0;\r\n  var envp = 0;\r\n  for (var string of getEnvStrings()) {\r\n    var ptr = environ_buf + bufSize;\r\n    GROWABLE_HEAP_U32()[(((__environ) + (envp)) >> 2)] = ptr;\r\n    bufSize += stringToUTF8(string, ptr, Infinity) + 1;\r\n    envp += 4;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction _environ_sizes_get(penviron_count, penviron_buf_size) {\r\n  if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(4, 0, 1, penviron_count, penviron_buf_size);\r\n  var strings = getEnvStrings();\r\n  GROWABLE_HEAP_U32()[((penviron_count) >> 2)] = strings.length;\r\n  var bufSize = 0;\r\n  for (var string of strings) {\r\n    bufSize += lengthBytesUTF8(string) + 1;\r\n  }\r\n  GROWABLE_HEAP_U32()[((penviron_buf_size) >> 2)] = bufSize;\r\n  return 0;\r\n}\r\n\r\nvar PATH = {\r\n  isAbs: path => path.charAt(0) === \"/\",\r\n  splitPath: filename => {\r\n    var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\n    return splitPathRe.exec(filename).slice(1);\r\n  },\r\n  normalizeArray: (parts, allowAboveRoot) => {\r\n    // if the path tries to go above the root, `up` ends up > 0\r\n    var up = 0;\r\n    for (var i = parts.length - 1; i >= 0; i--) {\r\n      var last = parts[i];\r\n      if (last === \".\") {\r\n        parts.splice(i, 1);\r\n      } else if (last === \"..\") {\r\n        parts.splice(i, 1);\r\n        up++;\r\n      } else if (up) {\r\n        parts.splice(i, 1);\r\n        up--;\r\n      }\r\n    }\r\n    // if the path is allowed to go above the root, restore leading ..s\r\n    if (allowAboveRoot) {\r\n      for (;up; up--) {\r\n        parts.unshift(\"..\");\r\n      }\r\n    }\r\n    return parts;\r\n  },\r\n  normalize: path => {\r\n    var isAbsolute = PATH.isAbs(path), trailingSlash = path.slice(-1) === \"/\";\r\n    // Normalize the path\r\n    path = PATH.normalizeArray(path.split(\"/\").filter(p => !!p), !isAbsolute).join(\"/\");\r\n    if (!path && !isAbsolute) {\r\n      path = \".\";\r\n    }\r\n    if (path && trailingSlash) {\r\n      path += \"/\";\r\n    }\r\n    return (isAbsolute ? \"/\" : \"\") + path;\r\n  },\r\n  dirname: path => {\r\n    var result = PATH.splitPath(path), root = result[0], dir = result[1];\r\n    if (!root && !dir) {\r\n      // No dirname whatsoever\r\n      return \".\";\r\n    }\r\n    if (dir) {\r\n      // It has a dirname, strip trailing slash\r\n      dir = dir.slice(0, -1);\r\n    }\r\n    return root + dir;\r\n  },\r\n  basename: path => path && path.match(/([^\\/]+|\\/)\\/*$/)[1],\r\n  join: (...paths) => PATH.normalize(paths.join(\"/\")),\r\n  join2: (l, r) => PATH.normalize(l + \"/\" + r)\r\n};\r\n\r\nvar initRandomFill = () => view => view.set(crypto.getRandomValues(new Uint8Array(view.byteLength)));\r\n\r\nvar randomFill = view => {\r\n  // Lazily init on the first invocation.\r\n  (randomFill = initRandomFill())(view);\r\n};\r\n\r\nvar PATH_FS = {\r\n  resolve: (...args) => {\r\n    var resolvedPath = \"\", resolvedAbsolute = false;\r\n    for (var i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n      var path = (i >= 0) ? args[i] : FS.cwd();\r\n      // Skip empty and invalid entries\r\n      if (typeof path != \"string\") {\r\n        throw new TypeError(\"Arguments to path.resolve must be strings\");\r\n      } else if (!path) {\r\n        return \"\";\r\n      }\r\n      resolvedPath = path + \"/\" + resolvedPath;\r\n      resolvedAbsolute = PATH.isAbs(path);\r\n    }\r\n    // At this point the path should be resolved to a full absolute path, but\r\n    // handle relative paths to be safe (might happen when process.cwd() fails)\r\n    resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(p => !!p), !resolvedAbsolute).join(\"/\");\r\n    return ((resolvedAbsolute ? \"/\" : \"\") + resolvedPath) || \".\";\r\n  },\r\n  relative: (from, to) => {\r\n    from = PATH_FS.resolve(from).slice(1);\r\n    to = PATH_FS.resolve(to).slice(1);\r\n    function trim(arr) {\r\n      var start = 0;\r\n      for (;start < arr.length; start++) {\r\n        if (arr[start] !== \"\") break;\r\n      }\r\n      var end = arr.length - 1;\r\n      for (;end >= 0; end--) {\r\n        if (arr[end] !== \"\") break;\r\n      }\r\n      if (start > end) return [];\r\n      return arr.slice(start, end - start + 1);\r\n    }\r\n    var fromParts = trim(from.split(\"/\"));\r\n    var toParts = trim(to.split(\"/\"));\r\n    var length = Math.min(fromParts.length, toParts.length);\r\n    var samePartsLength = length;\r\n    for (var i = 0; i < length; i++) {\r\n      if (fromParts[i] !== toParts[i]) {\r\n        samePartsLength = i;\r\n        break;\r\n      }\r\n    }\r\n    var outputParts = [];\r\n    for (var i = samePartsLength; i < fromParts.length; i++) {\r\n      outputParts.push(\"..\");\r\n    }\r\n    outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n    return outputParts.join(\"/\");\r\n  }\r\n};\r\n\r\nvar FS_stdin_getChar_buffer = [];\r\n\r\n/** @type {function(string, boolean=, number=)} */ var intArrayFromString = (stringy, dontAddNull, length) => {\r\n  var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\r\n  var u8array = new Array(len);\r\n  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\r\n  if (dontAddNull) u8array.length = numBytesWritten;\r\n  return u8array;\r\n};\r\n\r\nvar FS_stdin_getChar = () => {\r\n  if (!FS_stdin_getChar_buffer.length) {\r\n    var result = null;\r\n    if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\r\n      // Browser.\r\n      result = window.prompt(\"Input: \");\r\n      // returns null on cancel\r\n      if (result !== null) {\r\n        result += \"\\n\";\r\n      }\r\n    } else {}\r\n    if (!result) {\r\n      return null;\r\n    }\r\n    FS_stdin_getChar_buffer = intArrayFromString(result, true);\r\n  }\r\n  return FS_stdin_getChar_buffer.shift();\r\n};\r\n\r\nvar TTY = {\r\n  ttys: [],\r\n  init() {},\r\n  shutdown() {},\r\n  register(dev, ops) {\r\n    TTY.ttys[dev] = {\r\n      input: [],\r\n      output: [],\r\n      ops\r\n    };\r\n    FS.registerDevice(dev, TTY.stream_ops);\r\n  },\r\n  stream_ops: {\r\n    open(stream) {\r\n      var tty = TTY.ttys[stream.node.rdev];\r\n      if (!tty) {\r\n        throw new FS.ErrnoError(43);\r\n      }\r\n      stream.tty = tty;\r\n      stream.seekable = false;\r\n    },\r\n    close(stream) {\r\n      // flush any pending line data\r\n      stream.tty.ops.fsync(stream.tty);\r\n    },\r\n    fsync(stream) {\r\n      stream.tty.ops.fsync(stream.tty);\r\n    },\r\n    read(stream, buffer, offset, length, pos) {\r\n      if (!stream.tty || !stream.tty.ops.get_char) {\r\n        throw new FS.ErrnoError(60);\r\n      }\r\n      var bytesRead = 0;\r\n      for (var i = 0; i < length; i++) {\r\n        var result;\r\n        try {\r\n          result = stream.tty.ops.get_char(stream.tty);\r\n        } catch (e) {\r\n          throw new FS.ErrnoError(29);\r\n        }\r\n        if (result === undefined && bytesRead === 0) {\r\n          throw new FS.ErrnoError(6);\r\n        }\r\n        if (result === null || result === undefined) break;\r\n        bytesRead++;\r\n        buffer[offset + i] = result;\r\n      }\r\n      if (bytesRead) {\r\n        stream.node.atime = Date.now();\r\n      }\r\n      return bytesRead;\r\n    },\r\n    write(stream, buffer, offset, length, pos) {\r\n      if (!stream.tty || !stream.tty.ops.put_char) {\r\n        throw new FS.ErrnoError(60);\r\n      }\r\n      try {\r\n        for (var i = 0; i < length; i++) {\r\n          stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\r\n        }\r\n      } catch (e) {\r\n        throw new FS.ErrnoError(29);\r\n      }\r\n      if (length) {\r\n        stream.node.mtime = stream.node.ctime = Date.now();\r\n      }\r\n      return i;\r\n    }\r\n  },\r\n  default_tty_ops: {\r\n    get_char(tty) {\r\n      return FS_stdin_getChar();\r\n    },\r\n    put_char(tty, val) {\r\n      if (val === null || val === 10) {\r\n        out(UTF8ArrayToString(tty.output));\r\n        tty.output = [];\r\n      } else {\r\n        if (val != 0) tty.output.push(val);\r\n      }\r\n    },\r\n    fsync(tty) {\r\n      if (tty.output?.length > 0) {\r\n        out(UTF8ArrayToString(tty.output));\r\n        tty.output = [];\r\n      }\r\n    },\r\n    ioctl_tcgets(tty) {\r\n      // typical setting\r\n      return {\r\n        c_iflag: 25856,\r\n        c_oflag: 5,\r\n        c_cflag: 191,\r\n        c_lflag: 35387,\r\n        c_cc: [ 3, 28, 127, 21, 4, 0, 1, 0, 17, 19, 26, 0, 18, 15, 23, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]\r\n      };\r\n    },\r\n    ioctl_tcsets(tty, optional_actions, data) {\r\n      // currently just ignore\r\n      return 0;\r\n    },\r\n    ioctl_tiocgwinsz(tty) {\r\n      return [ 24, 80 ];\r\n    }\r\n  },\r\n  default_tty1_ops: {\r\n    put_char(tty, val) {\r\n      if (val === null || val === 10) {\r\n        err(UTF8ArrayToString(tty.output));\r\n        tty.output = [];\r\n      } else {\r\n        if (val != 0) tty.output.push(val);\r\n      }\r\n    },\r\n    fsync(tty) {\r\n      if (tty.output?.length > 0) {\r\n        err(UTF8ArrayToString(tty.output));\r\n        tty.output = [];\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nvar mmapAlloc = size => {\r\n  abort(\"internal error: mmapAlloc called but `emscripten_builtin_memalign` native symbol not exported\");\r\n};\r\n\r\nvar MEMFS = {\r\n  ops_table: null,\r\n  mount(mount) {\r\n    return MEMFS.createNode(null, \"/\", 16895, 0);\r\n  },\r\n  createNode(parent, name, mode, dev) {\r\n    if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\r\n      // no supported\r\n      throw new FS.ErrnoError(63);\r\n    }\r\n    MEMFS.ops_table ||= {\r\n      dir: {\r\n        node: {\r\n          getattr: MEMFS.node_ops.getattr,\r\n          setattr: MEMFS.node_ops.setattr,\r\n          lookup: MEMFS.node_ops.lookup,\r\n          mknod: MEMFS.node_ops.mknod,\r\n          rename: MEMFS.node_ops.rename,\r\n          unlink: MEMFS.node_ops.unlink,\r\n          rmdir: MEMFS.node_ops.rmdir,\r\n          readdir: MEMFS.node_ops.readdir,\r\n          symlink: MEMFS.node_ops.symlink\r\n        },\r\n        stream: {\r\n          llseek: MEMFS.stream_ops.llseek\r\n        }\r\n      },\r\n      file: {\r\n        node: {\r\n          getattr: MEMFS.node_ops.getattr,\r\n          setattr: MEMFS.node_ops.setattr\r\n        },\r\n        stream: {\r\n          llseek: MEMFS.stream_ops.llseek,\r\n          read: MEMFS.stream_ops.read,\r\n          write: MEMFS.stream_ops.write,\r\n          mmap: MEMFS.stream_ops.mmap,\r\n          msync: MEMFS.stream_ops.msync\r\n        }\r\n      },\r\n      link: {\r\n        node: {\r\n          getattr: MEMFS.node_ops.getattr,\r\n          setattr: MEMFS.node_ops.setattr,\r\n          readlink: MEMFS.node_ops.readlink\r\n        },\r\n        stream: {}\r\n      },\r\n      chrdev: {\r\n        node: {\r\n          getattr: MEMFS.node_ops.getattr,\r\n          setattr: MEMFS.node_ops.setattr\r\n        },\r\n        stream: FS.chrdev_stream_ops\r\n      }\r\n    };\r\n    var node = FS.createNode(parent, name, mode, dev);\r\n    if (FS.isDir(node.mode)) {\r\n      node.node_ops = MEMFS.ops_table.dir.node;\r\n      node.stream_ops = MEMFS.ops_table.dir.stream;\r\n      node.contents = {};\r\n    } else if (FS.isFile(node.mode)) {\r\n      node.node_ops = MEMFS.ops_table.file.node;\r\n      node.stream_ops = MEMFS.ops_table.file.stream;\r\n      node.usedBytes = 0;\r\n      // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.\r\n      // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred\r\n      // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size\r\n      // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.\r\n      node.contents = null;\r\n    } else if (FS.isLink(node.mode)) {\r\n      node.node_ops = MEMFS.ops_table.link.node;\r\n      node.stream_ops = MEMFS.ops_table.link.stream;\r\n    } else if (FS.isChrdev(node.mode)) {\r\n      node.node_ops = MEMFS.ops_table.chrdev.node;\r\n      node.stream_ops = MEMFS.ops_table.chrdev.stream;\r\n    }\r\n    node.atime = node.mtime = node.ctime = Date.now();\r\n    // add the new node to the parent\r\n    if (parent) {\r\n      parent.contents[name] = node;\r\n      parent.atime = parent.mtime = parent.ctime = node.atime;\r\n    }\r\n    return node;\r\n  },\r\n  getFileDataAsTypedArray(node) {\r\n    if (!node.contents) return new Uint8Array(0);\r\n    if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);\r\n    // Make sure to not return excess unused bytes.\r\n    return new Uint8Array(node.contents);\r\n  },\r\n  expandFileStorage(node, newCapacity) {\r\n    var prevCapacity = node.contents ? node.contents.length : 0;\r\n    if (prevCapacity >= newCapacity) return;\r\n    // No need to expand, the storage was already large enough.\r\n    // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\r\n    // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\r\n    // avoid overshooting the allocation cap by a very large margin.\r\n    var CAPACITY_DOUBLING_MAX = 1024 * 1024;\r\n    newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125)) >>> 0);\r\n    if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\r\n    // At minimum allocate 256b for each file when expanding.\r\n    var oldContents = node.contents;\r\n    node.contents = new Uint8Array(newCapacity);\r\n    // Allocate new storage.\r\n    if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\r\n  },\r\n  resizeFileStorage(node, newSize) {\r\n    if (node.usedBytes == newSize) return;\r\n    if (newSize == 0) {\r\n      node.contents = null;\r\n      // Fully decommit when requesting a resize to zero.\r\n      node.usedBytes = 0;\r\n    } else {\r\n      var oldContents = node.contents;\r\n      node.contents = new Uint8Array(newSize);\r\n      // Allocate new storage.\r\n      if (oldContents) {\r\n        node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\r\n      }\r\n      node.usedBytes = newSize;\r\n    }\r\n  },\r\n  node_ops: {\r\n    getattr(node) {\r\n      var attr = {};\r\n      // device numbers reuse inode numbers.\r\n      attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\r\n      attr.ino = node.id;\r\n      attr.mode = node.mode;\r\n      attr.nlink = 1;\r\n      attr.uid = 0;\r\n      attr.gid = 0;\r\n      attr.rdev = node.rdev;\r\n      if (FS.isDir(node.mode)) {\r\n        attr.size = 4096;\r\n      } else if (FS.isFile(node.mode)) {\r\n        attr.size = node.usedBytes;\r\n      } else if (FS.isLink(node.mode)) {\r\n        attr.size = node.link.length;\r\n      } else {\r\n        attr.size = 0;\r\n      }\r\n      attr.atime = new Date(node.atime);\r\n      attr.mtime = new Date(node.mtime);\r\n      attr.ctime = new Date(node.ctime);\r\n      // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),\r\n      //       but this is not required by the standard.\r\n      attr.blksize = 4096;\r\n      attr.blocks = Math.ceil(attr.size / attr.blksize);\r\n      return attr;\r\n    },\r\n    setattr(node, attr) {\r\n      for (const key of [ \"mode\", \"atime\", \"mtime\", \"ctime\" ]) {\r\n        if (attr[key] != null) {\r\n          node[key] = attr[key];\r\n        }\r\n      }\r\n      if (attr.size !== undefined) {\r\n        MEMFS.resizeFileStorage(node, attr.size);\r\n      }\r\n    },\r\n    lookup(parent, name) {\r\n      throw new FS.ErrnoError(44);\r\n    },\r\n    mknod(parent, name, mode, dev) {\r\n      return MEMFS.createNode(parent, name, mode, dev);\r\n    },\r\n    rename(old_node, new_dir, new_name) {\r\n      var new_node;\r\n      try {\r\n        new_node = FS.lookupNode(new_dir, new_name);\r\n      } catch (e) {}\r\n      if (new_node) {\r\n        if (FS.isDir(old_node.mode)) {\r\n          // if we're overwriting a directory at new_name, make sure it's empty.\r\n          for (var i in new_node.contents) {\r\n            throw new FS.ErrnoError(55);\r\n          }\r\n        }\r\n        FS.hashRemoveNode(new_node);\r\n      }\r\n      // do the internal rewiring\r\n      delete old_node.parent.contents[old_node.name];\r\n      new_dir.contents[new_name] = old_node;\r\n      old_node.name = new_name;\r\n      new_dir.ctime = new_dir.mtime = old_node.parent.ctime = old_node.parent.mtime = Date.now();\r\n    },\r\n    unlink(parent, name) {\r\n      delete parent.contents[name];\r\n      parent.ctime = parent.mtime = Date.now();\r\n    },\r\n    rmdir(parent, name) {\r\n      var node = FS.lookupNode(parent, name);\r\n      for (var i in node.contents) {\r\n        throw new FS.ErrnoError(55);\r\n      }\r\n      delete parent.contents[name];\r\n      parent.ctime = parent.mtime = Date.now();\r\n    },\r\n    readdir(node) {\r\n      return [ \".\", \"..\", ...Object.keys(node.contents) ];\r\n    },\r\n    symlink(parent, newname, oldpath) {\r\n      var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\r\n      node.link = oldpath;\r\n      return node;\r\n    },\r\n    readlink(node) {\r\n      if (!FS.isLink(node.mode)) {\r\n        throw new FS.ErrnoError(28);\r\n      }\r\n      return node.link;\r\n    }\r\n  },\r\n  stream_ops: {\r\n    read(stream, buffer, offset, length, position) {\r\n      var contents = stream.node.contents;\r\n      if (position >= stream.node.usedBytes) return 0;\r\n      var size = Math.min(stream.node.usedBytes - position, length);\r\n      assert(size >= 0);\r\n      if (size > 8 && contents.subarray) {\r\n        // non-trivial, and typed array\r\n        buffer.set(contents.subarray(position, position + size), offset);\r\n      } else {\r\n        for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\r\n      }\r\n      return size;\r\n    },\r\n    write(stream, buffer, offset, length, position, canOwn) {\r\n      // The data buffer should be a typed array view\r\n      assert(!(buffer instanceof ArrayBuffer));\r\n      // If the buffer is located in main memory (HEAP), and if\r\n      // memory can grow, we can't hold on to references of the\r\n      // memory buffer, as they may get invalidated. That means we\r\n      // need to do copy its contents.\r\n      if (buffer.buffer === GROWABLE_HEAP_I8().buffer) {\r\n        canOwn = false;\r\n      }\r\n      if (!length) return 0;\r\n      var node = stream.node;\r\n      node.mtime = node.ctime = Date.now();\r\n      if (buffer.subarray && (!node.contents || node.contents.subarray)) {\r\n        // This write is from a typed array to a typed array?\r\n        if (canOwn) {\r\n          assert(position === 0, \"canOwn must imply no weird position inside the file\");\r\n          node.contents = buffer.subarray(offset, offset + length);\r\n          node.usedBytes = length;\r\n          return length;\r\n        } else if (node.usedBytes === 0 && position === 0) {\r\n          // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.\r\n          node.contents = buffer.slice(offset, offset + length);\r\n          node.usedBytes = length;\r\n          return length;\r\n        } else if (position + length <= node.usedBytes) {\r\n          // Writing to an already allocated and used subrange of the file?\r\n          node.contents.set(buffer.subarray(offset, offset + length), position);\r\n          return length;\r\n        }\r\n      }\r\n      // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.\r\n      MEMFS.expandFileStorage(node, position + length);\r\n      if (node.contents.subarray && buffer.subarray) {\r\n        // Use typed array write which is available.\r\n        node.contents.set(buffer.subarray(offset, offset + length), position);\r\n      } else {\r\n        for (var i = 0; i < length; i++) {\r\n          node.contents[position + i] = buffer[offset + i];\r\n        }\r\n      }\r\n      node.usedBytes = Math.max(node.usedBytes, position + length);\r\n      return length;\r\n    },\r\n    llseek(stream, offset, whence) {\r\n      var position = offset;\r\n      if (whence === 1) {\r\n        position += stream.position;\r\n      } else if (whence === 2) {\r\n        if (FS.isFile(stream.node.mode)) {\r\n          position += stream.node.usedBytes;\r\n        }\r\n      }\r\n      if (position < 0) {\r\n        throw new FS.ErrnoError(28);\r\n      }\r\n      return position;\r\n    },\r\n    mmap(stream, length, position, prot, flags) {\r\n      if (!FS.isFile(stream.node.mode)) {\r\n        throw new FS.ErrnoError(43);\r\n      }\r\n      var ptr;\r\n      var allocated;\r\n      var contents = stream.node.contents;\r\n      // Only make a new copy when MAP_PRIVATE is specified.\r\n      if (!(flags & 2) && contents && contents.buffer === GROWABLE_HEAP_I8().buffer) {\r\n        // We can't emulate MAP_SHARED when the file is not backed by the\r\n        // buffer we're mapping to (e.g. the HEAP buffer).\r\n        allocated = false;\r\n        ptr = contents.byteOffset;\r\n      } else {\r\n        allocated = true;\r\n        ptr = mmapAlloc(length);\r\n        if (!ptr) {\r\n          throw new FS.ErrnoError(48);\r\n        }\r\n        if (contents) {\r\n          // Try to avoid unnecessary slices.\r\n          if (position > 0 || position + length < contents.length) {\r\n            if (contents.subarray) {\r\n              contents = contents.subarray(position, position + length);\r\n            } else {\r\n              contents = Array.prototype.slice.call(contents, position, position + length);\r\n            }\r\n          }\r\n          GROWABLE_HEAP_I8().set(contents, ptr);\r\n        }\r\n      }\r\n      return {\r\n        ptr,\r\n        allocated\r\n      };\r\n    },\r\n    msync(stream, buffer, offset, length, mmapFlags) {\r\n      MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\r\n      // should we check if bytesWritten and length are the same?\r\n      return 0;\r\n    }\r\n  }\r\n};\r\n\r\nvar asyncLoad = async url => {\r\n  var arrayBuffer = await readAsync(url);\r\n  assert(arrayBuffer, `Loading data file \"${url}\" failed (no arrayBuffer).`);\r\n  return new Uint8Array(arrayBuffer);\r\n};\r\n\r\nvar FS_createDataFile = (...args) => FS.createDataFile(...args);\r\n\r\nvar preloadPlugins = [];\r\n\r\nvar FS_handledByPreloadPlugin = (byteArray, fullname, finish, onerror) => {\r\n  // Ensure plugins are ready.\r\n  if (typeof Browser != \"undefined\") Browser.init();\r\n  var handled = false;\r\n  preloadPlugins.forEach(plugin => {\r\n    if (handled) return;\r\n    if (plugin[\"canHandle\"](fullname)) {\r\n      plugin[\"handle\"](byteArray, fullname, finish, onerror);\r\n      handled = true;\r\n    }\r\n  });\r\n  return handled;\r\n};\r\n\r\nvar FS_createPreloadedFile = (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {\r\n  // TODO we should allow people to just pass in a complete filename instead\r\n  // of parent and name being that we just join them anyways\r\n  var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\r\n  var dep = getUniqueRunDependency(`cp ${fullname}`);\r\n  // might have several active requests for the same fullname\r\n  function processData(byteArray) {\r\n    function finish(byteArray) {\r\n      preFinish?.();\r\n      if (!dontCreateFile) {\r\n        FS_createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\r\n      }\r\n      onload?.();\r\n      removeRunDependency(dep);\r\n    }\r\n    if (FS_handledByPreloadPlugin(byteArray, fullname, finish, () => {\r\n      onerror?.();\r\n      removeRunDependency(dep);\r\n    })) {\r\n      return;\r\n    }\r\n    finish(byteArray);\r\n  }\r\n  addRunDependency(dep);\r\n  if (typeof url == \"string\") {\r\n    asyncLoad(url).then(processData, onerror);\r\n  } else {\r\n    processData(url);\r\n  }\r\n};\r\n\r\nvar FS_modeStringToFlags = str => {\r\n  var flagModes = {\r\n    \"r\": 0,\r\n    \"r+\": 2,\r\n    \"w\": 512 | 64 | 1,\r\n    \"w+\": 512 | 64 | 2,\r\n    \"a\": 1024 | 64 | 1,\r\n    \"a+\": 1024 | 64 | 2\r\n  };\r\n  var flags = flagModes[str];\r\n  if (typeof flags == \"undefined\") {\r\n    throw new Error(`Unknown file open mode: ${str}`);\r\n  }\r\n  return flags;\r\n};\r\n\r\nvar FS_getMode = (canRead, canWrite) => {\r\n  var mode = 0;\r\n  if (canRead) mode |= 292 | 73;\r\n  if (canWrite) mode |= 146;\r\n  return mode;\r\n};\r\n\r\nvar strError = errno => UTF8ToString(_strerror(errno));\r\n\r\nvar ERRNO_CODES = {\r\n  \"EPERM\": 63,\r\n  \"ENOENT\": 44,\r\n  \"ESRCH\": 71,\r\n  \"EINTR\": 27,\r\n  \"EIO\": 29,\r\n  \"ENXIO\": 60,\r\n  \"E2BIG\": 1,\r\n  \"ENOEXEC\": 45,\r\n  \"EBADF\": 8,\r\n  \"ECHILD\": 12,\r\n  \"EAGAIN\": 6,\r\n  \"EWOULDBLOCK\": 6,\r\n  \"ENOMEM\": 48,\r\n  \"EACCES\": 2,\r\n  \"EFAULT\": 21,\r\n  \"ENOTBLK\": 105,\r\n  \"EBUSY\": 10,\r\n  \"EEXIST\": 20,\r\n  \"EXDEV\": 75,\r\n  \"ENODEV\": 43,\r\n  \"ENOTDIR\": 54,\r\n  \"EISDIR\": 31,\r\n  \"EINVAL\": 28,\r\n  \"ENFILE\": 41,\r\n  \"EMFILE\": 33,\r\n  \"ENOTTY\": 59,\r\n  \"ETXTBSY\": 74,\r\n  \"EFBIG\": 22,\r\n  \"ENOSPC\": 51,\r\n  \"ESPIPE\": 70,\r\n  \"EROFS\": 69,\r\n  \"EMLINK\": 34,\r\n  \"EPIPE\": 64,\r\n  \"EDOM\": 18,\r\n  \"ERANGE\": 68,\r\n  \"ENOMSG\": 49,\r\n  \"EIDRM\": 24,\r\n  \"ECHRNG\": 106,\r\n  \"EL2NSYNC\": 156,\r\n  \"EL3HLT\": 107,\r\n  \"EL3RST\": 108,\r\n  \"ELNRNG\": 109,\r\n  \"EUNATCH\": 110,\r\n  \"ENOCSI\": 111,\r\n  \"EL2HLT\": 112,\r\n  \"EDEADLK\": 16,\r\n  \"ENOLCK\": 46,\r\n  \"EBADE\": 113,\r\n  \"EBADR\": 114,\r\n  \"EXFULL\": 115,\r\n  \"ENOANO\": 104,\r\n  \"EBADRQC\": 103,\r\n  \"EBADSLT\": 102,\r\n  \"EDEADLOCK\": 16,\r\n  \"EBFONT\": 101,\r\n  \"ENOSTR\": 100,\r\n  \"ENODATA\": 116,\r\n  \"ETIME\": 117,\r\n  \"ENOSR\": 118,\r\n  \"ENONET\": 119,\r\n  \"ENOPKG\": 120,\r\n  \"EREMOTE\": 121,\r\n  \"ENOLINK\": 47,\r\n  \"EADV\": 122,\r\n  \"ESRMNT\": 123,\r\n  \"ECOMM\": 124,\r\n  \"EPROTO\": 65,\r\n  \"EMULTIHOP\": 36,\r\n  \"EDOTDOT\": 125,\r\n  \"EBADMSG\": 9,\r\n  \"ENOTUNIQ\": 126,\r\n  \"EBADFD\": 127,\r\n  \"EREMCHG\": 128,\r\n  \"ELIBACC\": 129,\r\n  \"ELIBBAD\": 130,\r\n  \"ELIBSCN\": 131,\r\n  \"ELIBMAX\": 132,\r\n  \"ELIBEXEC\": 133,\r\n  \"ENOSYS\": 52,\r\n  \"ENOTEMPTY\": 55,\r\n  \"ENAMETOOLONG\": 37,\r\n  \"ELOOP\": 32,\r\n  \"EOPNOTSUPP\": 138,\r\n  \"EPFNOSUPPORT\": 139,\r\n  \"ECONNRESET\": 15,\r\n  \"ENOBUFS\": 42,\r\n  \"EAFNOSUPPORT\": 5,\r\n  \"EPROTOTYPE\": 67,\r\n  \"ENOTSOCK\": 57,\r\n  \"ENOPROTOOPT\": 50,\r\n  \"ESHUTDOWN\": 140,\r\n  \"ECONNREFUSED\": 14,\r\n  \"EADDRINUSE\": 3,\r\n  \"ECONNABORTED\": 13,\r\n  \"ENETUNREACH\": 40,\r\n  \"ENETDOWN\": 38,\r\n  \"ETIMEDOUT\": 73,\r\n  \"EHOSTDOWN\": 142,\r\n  \"EHOSTUNREACH\": 23,\r\n  \"EINPROGRESS\": 26,\r\n  \"EALREADY\": 7,\r\n  \"EDESTADDRREQ\": 17,\r\n  \"EMSGSIZE\": 35,\r\n  \"EPROTONOSUPPORT\": 66,\r\n  \"ESOCKTNOSUPPORT\": 137,\r\n  \"EADDRNOTAVAIL\": 4,\r\n  \"ENETRESET\": 39,\r\n  \"EISCONN\": 30,\r\n  \"ENOTCONN\": 53,\r\n  \"ETOOMANYREFS\": 141,\r\n  \"EUSERS\": 136,\r\n  \"EDQUOT\": 19,\r\n  \"ESTALE\": 72,\r\n  \"ENOTSUP\": 138,\r\n  \"ENOMEDIUM\": 148,\r\n  \"EILSEQ\": 25,\r\n  \"EOVERFLOW\": 61,\r\n  \"ECANCELED\": 11,\r\n  \"ENOTRECOVERABLE\": 56,\r\n  \"EOWNERDEAD\": 62,\r\n  \"ESTRPIPE\": 135\r\n};\r\n\r\nvar FS = {\r\n  root: null,\r\n  mounts: [],\r\n  devices: {},\r\n  streams: [],\r\n  nextInode: 1,\r\n  nameTable: null,\r\n  currentPath: \"/\",\r\n  initialized: false,\r\n  ignorePermissions: true,\r\n  filesystems: null,\r\n  syncFSRequests: 0,\r\n  ErrnoError: class extends Error {\r\n    name=\"ErrnoError\";\r\n    // We set the `name` property to be able to identify `FS.ErrnoError`\r\n    // - the `name` is a standard ECMA-262 property of error objects. Kind of good to have it anyway.\r\n    // - when using PROXYFS, an error can come from an underlying FS\r\n    // as different FS objects have their own FS.ErrnoError each,\r\n    // the test `err instanceof FS.ErrnoError` won't detect an error coming from another filesystem, causing bugs.\r\n    // we'll use the reliable test `err.name == \"ErrnoError\"` instead\r\n    constructor(errno) {\r\n      super(runtimeInitialized ? strError(errno) : \"\");\r\n      this.errno = errno;\r\n      for (var key in ERRNO_CODES) {\r\n        if (ERRNO_CODES[key] === errno) {\r\n          this.code = key;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  FSStream: class {\r\n    shared={};\r\n    get object() {\r\n      return this.node;\r\n    }\r\n    set object(val) {\r\n      this.node = val;\r\n    }\r\n    get isRead() {\r\n      return (this.flags & 2097155) !== 1;\r\n    }\r\n    get isWrite() {\r\n      return (this.flags & 2097155) !== 0;\r\n    }\r\n    get isAppend() {\r\n      return (this.flags & 1024);\r\n    }\r\n    get flags() {\r\n      return this.shared.flags;\r\n    }\r\n    set flags(val) {\r\n      this.shared.flags = val;\r\n    }\r\n    get position() {\r\n      return this.shared.position;\r\n    }\r\n    set position(val) {\r\n      this.shared.position = val;\r\n    }\r\n  },\r\n  FSNode: class {\r\n    node_ops={};\r\n    stream_ops={};\r\n    readMode=292 | 73;\r\n    writeMode=146;\r\n    mounted=null;\r\n    constructor(parent, name, mode, rdev) {\r\n      if (!parent) {\r\n        parent = this;\r\n      }\r\n      this.parent = parent;\r\n      this.mount = parent.mount;\r\n      this.id = FS.nextInode++;\r\n      this.name = name;\r\n      this.mode = mode;\r\n      this.rdev = rdev;\r\n      this.atime = this.mtime = this.ctime = Date.now();\r\n    }\r\n    get read() {\r\n      return (this.mode & this.readMode) === this.readMode;\r\n    }\r\n    set read(val) {\r\n      val ? this.mode |= this.readMode : this.mode &= ~this.readMode;\r\n    }\r\n    get write() {\r\n      return (this.mode & this.writeMode) === this.writeMode;\r\n    }\r\n    set write(val) {\r\n      val ? this.mode |= this.writeMode : this.mode &= ~this.writeMode;\r\n    }\r\n    get isFolder() {\r\n      return FS.isDir(this.mode);\r\n    }\r\n    get isDevice() {\r\n      return FS.isChrdev(this.mode);\r\n    }\r\n  },\r\n  lookupPath(path, opts = {}) {\r\n    if (!path) {\r\n      throw new FS.ErrnoError(44);\r\n    }\r\n    opts.follow_mount ??= true;\r\n    if (!PATH.isAbs(path)) {\r\n      path = FS.cwd() + \"/\" + path;\r\n    }\r\n    // limit max consecutive symlinks to 40 (SYMLOOP_MAX).\r\n    linkloop: for (var nlinks = 0; nlinks < 40; nlinks++) {\r\n      // split the absolute path\r\n      var parts = path.split(\"/\").filter(p => !!p);\r\n      // start at the root\r\n      var current = FS.root;\r\n      var current_path = \"/\";\r\n      for (var i = 0; i < parts.length; i++) {\r\n        var islast = (i === parts.length - 1);\r\n        if (islast && opts.parent) {\r\n          // stop resolving\r\n          break;\r\n        }\r\n        if (parts[i] === \".\") {\r\n          continue;\r\n        }\r\n        if (parts[i] === \"..\") {\r\n          current_path = PATH.dirname(current_path);\r\n          if (FS.isRoot(current)) {\r\n            path = current_path + \"/\" + parts.slice(i + 1).join(\"/\");\r\n            continue linkloop;\r\n          } else {\r\n            current = current.parent;\r\n          }\r\n          continue;\r\n        }\r\n        current_path = PATH.join2(current_path, parts[i]);\r\n        try {\r\n          current = FS.lookupNode(current, parts[i]);\r\n        } catch (e) {\r\n          // if noent_okay is true, suppress a ENOENT in the last component\r\n          // and return an object with an undefined node. This is needed for\r\n          // resolving symlinks in the path when creating a file.\r\n          if ((e?.errno === 44) && islast && opts.noent_okay) {\r\n            return {\r\n              path: current_path\r\n            };\r\n          }\r\n          throw e;\r\n        }\r\n        // jump to the mount's root node if this is a mountpoint\r\n        if (FS.isMountpoint(current) && (!islast || opts.follow_mount)) {\r\n          current = current.mounted.root;\r\n        }\r\n        // by default, lookupPath will not follow a symlink if it is the final path component.\r\n        // setting opts.follow = true will override this behavior.\r\n        if (FS.isLink(current.mode) && (!islast || opts.follow)) {\r\n          if (!current.node_ops.readlink) {\r\n            throw new FS.ErrnoError(52);\r\n          }\r\n          var link = current.node_ops.readlink(current);\r\n          if (!PATH.isAbs(link)) {\r\n            link = PATH.dirname(current_path) + \"/\" + link;\r\n          }\r\n          path = link + \"/\" + parts.slice(i + 1).join(\"/\");\r\n          continue linkloop;\r\n        }\r\n      }\r\n      return {\r\n        path: current_path,\r\n        node: current\r\n      };\r\n    }\r\n    throw new FS.ErrnoError(32);\r\n  },\r\n  getPath(node) {\r\n    var path;\r\n    while (true) {\r\n      if (FS.isRoot(node)) {\r\n        var mount = node.mount.mountpoint;\r\n        if (!path) return mount;\r\n        return mount[mount.length - 1] !== \"/\" ? `${mount}/${path}` : mount + path;\r\n      }\r\n      path = path ? `${node.name}/${path}` : node.name;\r\n      node = node.parent;\r\n    }\r\n  },\r\n  hashName(parentid, name) {\r\n    var hash = 0;\r\n    for (var i = 0; i < name.length; i++) {\r\n      hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\r\n    }\r\n    return ((parentid + hash) >>> 0) % FS.nameTable.length;\r\n  },\r\n  hashAddNode(node) {\r\n    var hash = FS.hashName(node.parent.id, node.name);\r\n    node.name_next = FS.nameTable[hash];\r\n    FS.nameTable[hash] = node;\r\n  },\r\n  hashRemoveNode(node) {\r\n    var hash = FS.hashName(node.parent.id, node.name);\r\n    if (FS.nameTable[hash] === node) {\r\n      FS.nameTable[hash] = node.name_next;\r\n    } else {\r\n      var current = FS.nameTable[hash];\r\n      while (current) {\r\n        if (current.name_next === node) {\r\n          current.name_next = node.name_next;\r\n          break;\r\n        }\r\n        current = current.name_next;\r\n      }\r\n    }\r\n  },\r\n  lookupNode(parent, name) {\r\n    var errCode = FS.mayLookup(parent);\r\n    if (errCode) {\r\n      throw new FS.ErrnoError(errCode);\r\n    }\r\n    var hash = FS.hashName(parent.id, name);\r\n    for (var node = FS.nameTable[hash]; node; node = node.name_next) {\r\n      var nodeName = node.name;\r\n      if (node.parent.id === parent.id && nodeName === name) {\r\n        return node;\r\n      }\r\n    }\r\n    // if we failed to find it in the cache, call into the VFS\r\n    return FS.lookup(parent, name);\r\n  },\r\n  createNode(parent, name, mode, rdev) {\r\n    assert(typeof parent == \"object\");\r\n    var node = new FS.FSNode(parent, name, mode, rdev);\r\n    FS.hashAddNode(node);\r\n    return node;\r\n  },\r\n  destroyNode(node) {\r\n    FS.hashRemoveNode(node);\r\n  },\r\n  isRoot(node) {\r\n    return node === node.parent;\r\n  },\r\n  isMountpoint(node) {\r\n    return !!node.mounted;\r\n  },\r\n  isFile(mode) {\r\n    return (mode & 61440) === 32768;\r\n  },\r\n  isDir(mode) {\r\n    return (mode & 61440) === 16384;\r\n  },\r\n  isLink(mode) {\r\n    return (mode & 61440) === 40960;\r\n  },\r\n  isChrdev(mode) {\r\n    return (mode & 61440) === 8192;\r\n  },\r\n  isBlkdev(mode) {\r\n    return (mode & 61440) === 24576;\r\n  },\r\n  isFIFO(mode) {\r\n    return (mode & 61440) === 4096;\r\n  },\r\n  isSocket(mode) {\r\n    return (mode & 49152) === 49152;\r\n  },\r\n  flagsToPermissionString(flag) {\r\n    var perms = [ \"r\", \"w\", \"rw\" ][flag & 3];\r\n    if ((flag & 512)) {\r\n      perms += \"w\";\r\n    }\r\n    return perms;\r\n  },\r\n  nodePermissions(node, perms) {\r\n    if (FS.ignorePermissions) {\r\n      return 0;\r\n    }\r\n    // return 0 if any user, group or owner bits are set.\r\n    if (perms.includes(\"r\") && !(node.mode & 292)) {\r\n      return 2;\r\n    } else if (perms.includes(\"w\") && !(node.mode & 146)) {\r\n      return 2;\r\n    } else if (perms.includes(\"x\") && !(node.mode & 73)) {\r\n      return 2;\r\n    }\r\n    return 0;\r\n  },\r\n  mayLookup(dir) {\r\n    if (!FS.isDir(dir.mode)) return 54;\r\n    var errCode = FS.nodePermissions(dir, \"x\");\r\n    if (errCode) return errCode;\r\n    if (!dir.node_ops.lookup) return 2;\r\n    return 0;\r\n  },\r\n  mayCreate(dir, name) {\r\n    if (!FS.isDir(dir.mode)) {\r\n      return 54;\r\n    }\r\n    try {\r\n      var node = FS.lookupNode(dir, name);\r\n      return 20;\r\n    } catch (e) {}\r\n    return FS.nodePermissions(dir, \"wx\");\r\n  },\r\n  mayDelete(dir, name, isdir) {\r\n    var node;\r\n    try {\r\n      node = FS.lookupNode(dir, name);\r\n    } catch (e) {\r\n      return e.errno;\r\n    }\r\n    var errCode = FS.nodePermissions(dir, \"wx\");\r\n    if (errCode) {\r\n      return errCode;\r\n    }\r\n    if (isdir) {\r\n      if (!FS.isDir(node.mode)) {\r\n        return 54;\r\n      }\r\n      if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\r\n        return 10;\r\n      }\r\n    } else {\r\n      if (FS.isDir(node.mode)) {\r\n        return 31;\r\n      }\r\n    }\r\n    return 0;\r\n  },\r\n  mayOpen(node, flags) {\r\n    if (!node) {\r\n      return 44;\r\n    }\r\n    if (FS.isLink(node.mode)) {\r\n      return 32;\r\n    } else if (FS.isDir(node.mode)) {\r\n      if (FS.flagsToPermissionString(flags) !== \"r\" || (flags & (512 | 64))) {\r\n        // TODO: check for O_SEARCH? (== search for dir only)\r\n        return 31;\r\n      }\r\n    }\r\n    return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\r\n  },\r\n  checkOpExists(op, err) {\r\n    if (!op) {\r\n      throw new FS.ErrnoError(err);\r\n    }\r\n    return op;\r\n  },\r\n  MAX_OPEN_FDS: 4096,\r\n  nextfd() {\r\n    for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {\r\n      if (!FS.streams[fd]) {\r\n        return fd;\r\n      }\r\n    }\r\n    throw new FS.ErrnoError(33);\r\n  },\r\n  getStreamChecked(fd) {\r\n    var stream = FS.getStream(fd);\r\n    if (!stream) {\r\n      throw new FS.ErrnoError(8);\r\n    }\r\n    return stream;\r\n  },\r\n  getStream: fd => FS.streams[fd],\r\n  createStream(stream, fd = -1) {\r\n    assert(fd >= -1);\r\n    // clone it, so we can return an instance of FSStream\r\n    stream = Object.assign(new FS.FSStream, stream);\r\n    if (fd == -1) {\r\n      fd = FS.nextfd();\r\n    }\r\n    stream.fd = fd;\r\n    FS.streams[fd] = stream;\r\n    return stream;\r\n  },\r\n  closeStream(fd) {\r\n    FS.streams[fd] = null;\r\n  },\r\n  dupStream(origStream, fd = -1) {\r\n    var stream = FS.createStream(origStream, fd);\r\n    stream.stream_ops?.dup?.(stream);\r\n    return stream;\r\n  },\r\n  doSetAttr(stream, node, attr) {\r\n    var setattr = stream?.stream_ops.setattr;\r\n    var arg = setattr ? stream : node;\r\n    setattr ??= node.node_ops.setattr;\r\n    FS.checkOpExists(setattr, 63);\r\n    setattr(arg, attr);\r\n  },\r\n  chrdev_stream_ops: {\r\n    open(stream) {\r\n      var device = FS.getDevice(stream.node.rdev);\r\n      // override node's stream ops with the device's\r\n      stream.stream_ops = device.stream_ops;\r\n      // forward the open call\r\n      stream.stream_ops.open?.(stream);\r\n    },\r\n    llseek() {\r\n      throw new FS.ErrnoError(70);\r\n    }\r\n  },\r\n  major: dev => ((dev) >> 8),\r\n  minor: dev => ((dev) & 255),\r\n  makedev: (ma, mi) => ((ma) << 8 | (mi)),\r\n  registerDevice(dev, ops) {\r\n    FS.devices[dev] = {\r\n      stream_ops: ops\r\n    };\r\n  },\r\n  getDevice: dev => FS.devices[dev],\r\n  getMounts(mount) {\r\n    var mounts = [];\r\n    var check = [ mount ];\r\n    while (check.length) {\r\n      var m = check.pop();\r\n      mounts.push(m);\r\n      check.push(...m.mounts);\r\n    }\r\n    return mounts;\r\n  },\r\n  syncfs(populate, callback) {\r\n    if (typeof populate == \"function\") {\r\n      callback = populate;\r\n      populate = false;\r\n    }\r\n    FS.syncFSRequests++;\r\n    if (FS.syncFSRequests > 1) {\r\n      err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);\r\n    }\r\n    var mounts = FS.getMounts(FS.root.mount);\r\n    var completed = 0;\r\n    function doCallback(errCode) {\r\n      assert(FS.syncFSRequests > 0);\r\n      FS.syncFSRequests--;\r\n      return callback(errCode);\r\n    }\r\n    function done(errCode) {\r\n      if (errCode) {\r\n        if (!done.errored) {\r\n          done.errored = true;\r\n          return doCallback(errCode);\r\n        }\r\n        return;\r\n      }\r\n      if (++completed >= mounts.length) {\r\n        doCallback(null);\r\n      }\r\n    }\r\n    // sync all mounts\r\n    mounts.forEach(mount => {\r\n      if (!mount.type.syncfs) {\r\n        return done(null);\r\n      }\r\n      mount.type.syncfs(mount, populate, done);\r\n    });\r\n  },\r\n  mount(type, opts, mountpoint) {\r\n    if (typeof type == \"string\") {\r\n      // The filesystem was not included, and instead we have an error\r\n      // message stored in the variable.\r\n      throw type;\r\n    }\r\n    var root = mountpoint === \"/\";\r\n    var pseudo = !mountpoint;\r\n    var node;\r\n    if (root && FS.root) {\r\n      throw new FS.ErrnoError(10);\r\n    } else if (!root && !pseudo) {\r\n      var lookup = FS.lookupPath(mountpoint, {\r\n        follow_mount: false\r\n      });\r\n      mountpoint = lookup.path;\r\n      // use the absolute path\r\n      node = lookup.node;\r\n      if (FS.isMountpoint(node)) {\r\n        throw new FS.ErrnoError(10);\r\n      }\r\n      if (!FS.isDir(node.mode)) {\r\n        throw new FS.ErrnoError(54);\r\n      }\r\n    }\r\n    var mount = {\r\n      type,\r\n      opts,\r\n      mountpoint,\r\n      mounts: []\r\n    };\r\n    // create a root node for the fs\r\n    var mountRoot = type.mount(mount);\r\n    mountRoot.mount = mount;\r\n    mount.root = mountRoot;\r\n    if (root) {\r\n      FS.root = mountRoot;\r\n    } else if (node) {\r\n      // set as a mountpoint\r\n      node.mounted = mount;\r\n      // add the new mount to the current mount's children\r\n      if (node.mount) {\r\n        node.mount.mounts.push(mount);\r\n      }\r\n    }\r\n    return mountRoot;\r\n  },\r\n  unmount(mountpoint) {\r\n    var lookup = FS.lookupPath(mountpoint, {\r\n      follow_mount: false\r\n    });\r\n    if (!FS.isMountpoint(lookup.node)) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    // destroy the nodes for this mount, and all its child mounts\r\n    var node = lookup.node;\r\n    var mount = node.mounted;\r\n    var mounts = FS.getMounts(mount);\r\n    Object.keys(FS.nameTable).forEach(hash => {\r\n      var current = FS.nameTable[hash];\r\n      while (current) {\r\n        var next = current.name_next;\r\n        if (mounts.includes(current.mount)) {\r\n          FS.destroyNode(current);\r\n        }\r\n        current = next;\r\n      }\r\n    });\r\n    // no longer a mountpoint\r\n    node.mounted = null;\r\n    // remove this mount from the child mounts\r\n    var idx = node.mount.mounts.indexOf(mount);\r\n    assert(idx !== -1);\r\n    node.mount.mounts.splice(idx, 1);\r\n  },\r\n  lookup(parent, name) {\r\n    return parent.node_ops.lookup(parent, name);\r\n  },\r\n  mknod(path, mode, dev) {\r\n    var lookup = FS.lookupPath(path, {\r\n      parent: true\r\n    });\r\n    var parent = lookup.node;\r\n    var name = PATH.basename(path);\r\n    if (!name) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    if (name === \".\" || name === \"..\") {\r\n      throw new FS.ErrnoError(20);\r\n    }\r\n    var errCode = FS.mayCreate(parent, name);\r\n    if (errCode) {\r\n      throw new FS.ErrnoError(errCode);\r\n    }\r\n    if (!parent.node_ops.mknod) {\r\n      throw new FS.ErrnoError(63);\r\n    }\r\n    return parent.node_ops.mknod(parent, name, mode, dev);\r\n  },\r\n  statfs(path) {\r\n    return FS.statfsNode(FS.lookupPath(path, {\r\n      follow: true\r\n    }).node);\r\n  },\r\n  statfsStream(stream) {\r\n    // We keep a separate statfsStream function because noderawfs overrides\r\n    // it. In noderawfs, stream.node is sometimes null. Instead, we need to\r\n    // look at stream.path.\r\n    return FS.statfsNode(stream.node);\r\n  },\r\n  statfsNode(node) {\r\n    // NOTE: None of the defaults here are true. We're just returning safe and\r\n    //       sane values. Currently nodefs and rawfs replace these defaults,\r\n    //       other file systems leave them alone.\r\n    var rtn = {\r\n      bsize: 4096,\r\n      frsize: 4096,\r\n      blocks: 1e6,\r\n      bfree: 5e5,\r\n      bavail: 5e5,\r\n      files: FS.nextInode,\r\n      ffree: FS.nextInode - 1,\r\n      fsid: 42,\r\n      flags: 2,\r\n      namelen: 255\r\n    };\r\n    if (node.node_ops.statfs) {\r\n      Object.assign(rtn, node.node_ops.statfs(node.mount.opts.root));\r\n    }\r\n    return rtn;\r\n  },\r\n  create(path, mode = 438) {\r\n    mode &= 4095;\r\n    mode |= 32768;\r\n    return FS.mknod(path, mode, 0);\r\n  },\r\n  mkdir(path, mode = 511) {\r\n    mode &= 511 | 512;\r\n    mode |= 16384;\r\n    return FS.mknod(path, mode, 0);\r\n  },\r\n  mkdirTree(path, mode) {\r\n    var dirs = path.split(\"/\");\r\n    var d = \"\";\r\n    for (var dir of dirs) {\r\n      if (!dir) continue;\r\n      if (d || PATH.isAbs(path)) d += \"/\";\r\n      d += dir;\r\n      try {\r\n        FS.mkdir(d, mode);\r\n      } catch (e) {\r\n        if (e.errno != 20) throw e;\r\n      }\r\n    }\r\n  },\r\n  mkdev(path, mode, dev) {\r\n    if (typeof dev == \"undefined\") {\r\n      dev = mode;\r\n      mode = 438;\r\n    }\r\n    mode |= 8192;\r\n    return FS.mknod(path, mode, dev);\r\n  },\r\n  symlink(oldpath, newpath) {\r\n    if (!PATH_FS.resolve(oldpath)) {\r\n      throw new FS.ErrnoError(44);\r\n    }\r\n    var lookup = FS.lookupPath(newpath, {\r\n      parent: true\r\n    });\r\n    var parent = lookup.node;\r\n    if (!parent) {\r\n      throw new FS.ErrnoError(44);\r\n    }\r\n    var newname = PATH.basename(newpath);\r\n    var errCode = FS.mayCreate(parent, newname);\r\n    if (errCode) {\r\n      throw new FS.ErrnoError(errCode);\r\n    }\r\n    if (!parent.node_ops.symlink) {\r\n      throw new FS.ErrnoError(63);\r\n    }\r\n    return parent.node_ops.symlink(parent, newname, oldpath);\r\n  },\r\n  rename(old_path, new_path) {\r\n    var old_dirname = PATH.dirname(old_path);\r\n    var new_dirname = PATH.dirname(new_path);\r\n    var old_name = PATH.basename(old_path);\r\n    var new_name = PATH.basename(new_path);\r\n    // parents must exist\r\n    var lookup, old_dir, new_dir;\r\n    // let the errors from non existent directories percolate up\r\n    lookup = FS.lookupPath(old_path, {\r\n      parent: true\r\n    });\r\n    old_dir = lookup.node;\r\n    lookup = FS.lookupPath(new_path, {\r\n      parent: true\r\n    });\r\n    new_dir = lookup.node;\r\n    if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\r\n    // need to be part of the same mount\r\n    if (old_dir.mount !== new_dir.mount) {\r\n      throw new FS.ErrnoError(75);\r\n    }\r\n    // source must exist\r\n    var old_node = FS.lookupNode(old_dir, old_name);\r\n    // old path should not be an ancestor of the new path\r\n    var relative = PATH_FS.relative(old_path, new_dirname);\r\n    if (relative.charAt(0) !== \".\") {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    // new path should not be an ancestor of the old path\r\n    relative = PATH_FS.relative(new_path, old_dirname);\r\n    if (relative.charAt(0) !== \".\") {\r\n      throw new FS.ErrnoError(55);\r\n    }\r\n    // see if the new path already exists\r\n    var new_node;\r\n    try {\r\n      new_node = FS.lookupNode(new_dir, new_name);\r\n    } catch (e) {}\r\n    // early out if nothing needs to change\r\n    if (old_node === new_node) {\r\n      return;\r\n    }\r\n    // we'll need to delete the old entry\r\n    var isdir = FS.isDir(old_node.mode);\r\n    var errCode = FS.mayDelete(old_dir, old_name, isdir);\r\n    if (errCode) {\r\n      throw new FS.ErrnoError(errCode);\r\n    }\r\n    // need delete permissions if we'll be overwriting.\r\n    // need create permissions if new doesn't already exist.\r\n    errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\r\n    if (errCode) {\r\n      throw new FS.ErrnoError(errCode);\r\n    }\r\n    if (!old_dir.node_ops.rename) {\r\n      throw new FS.ErrnoError(63);\r\n    }\r\n    if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\r\n      throw new FS.ErrnoError(10);\r\n    }\r\n    // if we are going to change the parent, check write permissions\r\n    if (new_dir !== old_dir) {\r\n      errCode = FS.nodePermissions(old_dir, \"w\");\r\n      if (errCode) {\r\n        throw new FS.ErrnoError(errCode);\r\n      }\r\n    }\r\n    // remove the node from the lookup hash\r\n    FS.hashRemoveNode(old_node);\r\n    // do the underlying fs rename\r\n    try {\r\n      old_dir.node_ops.rename(old_node, new_dir, new_name);\r\n      // update old node (we do this here to avoid each backend\r\n      // needing to)\r\n      old_node.parent = new_dir;\r\n    } catch (e) {\r\n      throw e;\r\n    } finally {\r\n      // add the node back to the hash (in case node_ops.rename\r\n      // changed its name)\r\n      FS.hashAddNode(old_node);\r\n    }\r\n  },\r\n  rmdir(path) {\r\n    var lookup = FS.lookupPath(path, {\r\n      parent: true\r\n    });\r\n    var parent = lookup.node;\r\n    var name = PATH.basename(path);\r\n    var node = FS.lookupNode(parent, name);\r\n    var errCode = FS.mayDelete(parent, name, true);\r\n    if (errCode) {\r\n      throw new FS.ErrnoError(errCode);\r\n    }\r\n    if (!parent.node_ops.rmdir) {\r\n      throw new FS.ErrnoError(63);\r\n    }\r\n    if (FS.isMountpoint(node)) {\r\n      throw new FS.ErrnoError(10);\r\n    }\r\n    parent.node_ops.rmdir(parent, name);\r\n    FS.destroyNode(node);\r\n  },\r\n  readdir(path) {\r\n    var lookup = FS.lookupPath(path, {\r\n      follow: true\r\n    });\r\n    var node = lookup.node;\r\n    var readdir = FS.checkOpExists(node.node_ops.readdir, 54);\r\n    return readdir(node);\r\n  },\r\n  unlink(path) {\r\n    var lookup = FS.lookupPath(path, {\r\n      parent: true\r\n    });\r\n    var parent = lookup.node;\r\n    if (!parent) {\r\n      throw new FS.ErrnoError(44);\r\n    }\r\n    var name = PATH.basename(path);\r\n    var node = FS.lookupNode(parent, name);\r\n    var errCode = FS.mayDelete(parent, name, false);\r\n    if (errCode) {\r\n      // According to POSIX, we should map EISDIR to EPERM, but\r\n      // we instead do what Linux does (and we must, as we use\r\n      // the musl linux libc).\r\n      throw new FS.ErrnoError(errCode);\r\n    }\r\n    if (!parent.node_ops.unlink) {\r\n      throw new FS.ErrnoError(63);\r\n    }\r\n    if (FS.isMountpoint(node)) {\r\n      throw new FS.ErrnoError(10);\r\n    }\r\n    parent.node_ops.unlink(parent, name);\r\n    FS.destroyNode(node);\r\n  },\r\n  readlink(path) {\r\n    var lookup = FS.lookupPath(path);\r\n    var link = lookup.node;\r\n    if (!link) {\r\n      throw new FS.ErrnoError(44);\r\n    }\r\n    if (!link.node_ops.readlink) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    return link.node_ops.readlink(link);\r\n  },\r\n  stat(path, dontFollow) {\r\n    var lookup = FS.lookupPath(path, {\r\n      follow: !dontFollow\r\n    });\r\n    var node = lookup.node;\r\n    var getattr = FS.checkOpExists(node.node_ops.getattr, 63);\r\n    return getattr(node);\r\n  },\r\n  fstat(fd) {\r\n    var stream = FS.getStreamChecked(fd);\r\n    var node = stream.node;\r\n    var getattr = stream.stream_ops.getattr;\r\n    var arg = getattr ? stream : node;\r\n    getattr ??= node.node_ops.getattr;\r\n    FS.checkOpExists(getattr, 63);\r\n    return getattr(arg);\r\n  },\r\n  lstat(path) {\r\n    return FS.stat(path, true);\r\n  },\r\n  doChmod(stream, node, mode, dontFollow) {\r\n    FS.doSetAttr(stream, node, {\r\n      mode: (mode & 4095) | (node.mode & ~4095),\r\n      ctime: Date.now(),\r\n      dontFollow\r\n    });\r\n  },\r\n  chmod(path, mode, dontFollow) {\r\n    var node;\r\n    if (typeof path == \"string\") {\r\n      var lookup = FS.lookupPath(path, {\r\n        follow: !dontFollow\r\n      });\r\n      node = lookup.node;\r\n    } else {\r\n      node = path;\r\n    }\r\n    FS.doChmod(null, node, mode, dontFollow);\r\n  },\r\n  lchmod(path, mode) {\r\n    FS.chmod(path, mode, true);\r\n  },\r\n  fchmod(fd, mode) {\r\n    var stream = FS.getStreamChecked(fd);\r\n    FS.doChmod(stream, stream.node, mode, false);\r\n  },\r\n  doChown(stream, node, dontFollow) {\r\n    FS.doSetAttr(stream, node, {\r\n      timestamp: Date.now(),\r\n      dontFollow\r\n    });\r\n  },\r\n  chown(path, uid, gid, dontFollow) {\r\n    var node;\r\n    if (typeof path == \"string\") {\r\n      var lookup = FS.lookupPath(path, {\r\n        follow: !dontFollow\r\n      });\r\n      node = lookup.node;\r\n    } else {\r\n      node = path;\r\n    }\r\n    FS.doChown(null, node, dontFollow);\r\n  },\r\n  lchown(path, uid, gid) {\r\n    FS.chown(path, uid, gid, true);\r\n  },\r\n  fchown(fd, uid, gid) {\r\n    var stream = FS.getStreamChecked(fd);\r\n    FS.doChown(stream, stream.node, false);\r\n  },\r\n  doTruncate(stream, node, len) {\r\n    if (FS.isDir(node.mode)) {\r\n      throw new FS.ErrnoError(31);\r\n    }\r\n    if (!FS.isFile(node.mode)) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    var errCode = FS.nodePermissions(node, \"w\");\r\n    if (errCode) {\r\n      throw new FS.ErrnoError(errCode);\r\n    }\r\n    FS.doSetAttr(stream, node, {\r\n      size: len,\r\n      timestamp: Date.now()\r\n    });\r\n  },\r\n  truncate(path, len) {\r\n    if (len < 0) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    var node;\r\n    if (typeof path == \"string\") {\r\n      var lookup = FS.lookupPath(path, {\r\n        follow: true\r\n      });\r\n      node = lookup.node;\r\n    } else {\r\n      node = path;\r\n    }\r\n    FS.doTruncate(null, node, len);\r\n  },\r\n  ftruncate(fd, len) {\r\n    var stream = FS.getStreamChecked(fd);\r\n    if (len < 0 || (stream.flags & 2097155) === 0) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    FS.doTruncate(stream, stream.node, len);\r\n  },\r\n  utime(path, atime, mtime) {\r\n    var lookup = FS.lookupPath(path, {\r\n      follow: true\r\n    });\r\n    var node = lookup.node;\r\n    var setattr = FS.checkOpExists(node.node_ops.setattr, 63);\r\n    setattr(node, {\r\n      atime,\r\n      mtime\r\n    });\r\n  },\r\n  open(path, flags, mode = 438) {\r\n    if (path === \"\") {\r\n      throw new FS.ErrnoError(44);\r\n    }\r\n    flags = typeof flags == \"string\" ? FS_modeStringToFlags(flags) : flags;\r\n    if ((flags & 64)) {\r\n      mode = (mode & 4095) | 32768;\r\n    } else {\r\n      mode = 0;\r\n    }\r\n    var node;\r\n    var isDirPath;\r\n    if (typeof path == \"object\") {\r\n      node = path;\r\n    } else {\r\n      isDirPath = path.endsWith(\"/\");\r\n      // noent_okay makes it so that if the final component of the path\r\n      // doesn't exist, lookupPath returns `node: undefined`. `path` will be\r\n      // updated to point to the target of all symlinks.\r\n      var lookup = FS.lookupPath(path, {\r\n        follow: !(flags & 131072),\r\n        noent_okay: true\r\n      });\r\n      node = lookup.node;\r\n      path = lookup.path;\r\n    }\r\n    // perhaps we need to create the node\r\n    var created = false;\r\n    if ((flags & 64)) {\r\n      if (node) {\r\n        // if O_CREAT and O_EXCL are set, error out if the node already exists\r\n        if ((flags & 128)) {\r\n          throw new FS.ErrnoError(20);\r\n        }\r\n      } else if (isDirPath) {\r\n        throw new FS.ErrnoError(31);\r\n      } else {\r\n        // node doesn't exist, try to create it\r\n        // Ignore the permission bits here to ensure we can `open` this new\r\n        // file below. We use chmod below the apply the permissions once the\r\n        // file is open.\r\n        node = FS.mknod(path, mode | 511, 0);\r\n        created = true;\r\n      }\r\n    }\r\n    if (!node) {\r\n      throw new FS.ErrnoError(44);\r\n    }\r\n    // can't truncate a device\r\n    if (FS.isChrdev(node.mode)) {\r\n      flags &= ~512;\r\n    }\r\n    // if asked only for a directory, then this must be one\r\n    if ((flags & 65536) && !FS.isDir(node.mode)) {\r\n      throw new FS.ErrnoError(54);\r\n    }\r\n    // check permissions, if this is not a file we just created now (it is ok to\r\n    // create and write to a file with read-only permissions; it is read-only\r\n    // for later use)\r\n    if (!created) {\r\n      var errCode = FS.mayOpen(node, flags);\r\n      if (errCode) {\r\n        throw new FS.ErrnoError(errCode);\r\n      }\r\n    }\r\n    // do truncation if necessary\r\n    if ((flags & 512) && !created) {\r\n      FS.truncate(node, 0);\r\n    }\r\n    // we've already handled these, don't pass down to the underlying vfs\r\n    flags &= ~(128 | 512 | 131072);\r\n    // register the stream with the filesystem\r\n    var stream = FS.createStream({\r\n      node,\r\n      path: FS.getPath(node),\r\n      // we want the absolute path to the node\r\n      flags,\r\n      seekable: true,\r\n      position: 0,\r\n      stream_ops: node.stream_ops,\r\n      // used by the file family libc calls (fopen, fwrite, ferror, etc.)\r\n      ungotten: [],\r\n      error: false\r\n    });\r\n    // call the new stream's open function\r\n    if (stream.stream_ops.open) {\r\n      stream.stream_ops.open(stream);\r\n    }\r\n    if (created) {\r\n      FS.chmod(node, mode & 511);\r\n    }\r\n    return stream;\r\n  },\r\n  close(stream) {\r\n    if (FS.isClosed(stream)) {\r\n      throw new FS.ErrnoError(8);\r\n    }\r\n    if (stream.getdents) stream.getdents = null;\r\n    // free readdir state\r\n    try {\r\n      if (stream.stream_ops.close) {\r\n        stream.stream_ops.close(stream);\r\n      }\r\n    } catch (e) {\r\n      throw e;\r\n    } finally {\r\n      FS.closeStream(stream.fd);\r\n    }\r\n    stream.fd = null;\r\n  },\r\n  isClosed(stream) {\r\n    return stream.fd === null;\r\n  },\r\n  llseek(stream, offset, whence) {\r\n    if (FS.isClosed(stream)) {\r\n      throw new FS.ErrnoError(8);\r\n    }\r\n    if (!stream.seekable || !stream.stream_ops.llseek) {\r\n      throw new FS.ErrnoError(70);\r\n    }\r\n    if (whence != 0 && whence != 1 && whence != 2) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    stream.position = stream.stream_ops.llseek(stream, offset, whence);\r\n    stream.ungotten = [];\r\n    return stream.position;\r\n  },\r\n  read(stream, buffer, offset, length, position) {\r\n    assert(offset >= 0);\r\n    if (length < 0 || position < 0) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    if (FS.isClosed(stream)) {\r\n      throw new FS.ErrnoError(8);\r\n    }\r\n    if ((stream.flags & 2097155) === 1) {\r\n      throw new FS.ErrnoError(8);\r\n    }\r\n    if (FS.isDir(stream.node.mode)) {\r\n      throw new FS.ErrnoError(31);\r\n    }\r\n    if (!stream.stream_ops.read) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    var seeking = typeof position != \"undefined\";\r\n    if (!seeking) {\r\n      position = stream.position;\r\n    } else if (!stream.seekable) {\r\n      throw new FS.ErrnoError(70);\r\n    }\r\n    var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\r\n    if (!seeking) stream.position += bytesRead;\r\n    return bytesRead;\r\n  },\r\n  write(stream, buffer, offset, length, position, canOwn) {\r\n    assert(offset >= 0);\r\n    if (length < 0 || position < 0) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    if (FS.isClosed(stream)) {\r\n      throw new FS.ErrnoError(8);\r\n    }\r\n    if ((stream.flags & 2097155) === 0) {\r\n      throw new FS.ErrnoError(8);\r\n    }\r\n    if (FS.isDir(stream.node.mode)) {\r\n      throw new FS.ErrnoError(31);\r\n    }\r\n    if (!stream.stream_ops.write) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    if (stream.seekable && stream.flags & 1024) {\r\n      // seek to the end before writing in append mode\r\n      FS.llseek(stream, 0, 2);\r\n    }\r\n    var seeking = typeof position != \"undefined\";\r\n    if (!seeking) {\r\n      position = stream.position;\r\n    } else if (!stream.seekable) {\r\n      throw new FS.ErrnoError(70);\r\n    }\r\n    var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\r\n    if (!seeking) stream.position += bytesWritten;\r\n    return bytesWritten;\r\n  },\r\n  mmap(stream, length, position, prot, flags) {\r\n    // User requests writing to file (prot & PROT_WRITE != 0).\r\n    // Checking if we have permissions to write to the file unless\r\n    // MAP_PRIVATE flag is set. According to POSIX spec it is possible\r\n    // to write to file opened in read-only mode with MAP_PRIVATE flag,\r\n    // as all modifications will be visible only in the memory of\r\n    // the current process.\r\n    if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\r\n      throw new FS.ErrnoError(2);\r\n    }\r\n    if ((stream.flags & 2097155) === 1) {\r\n      throw new FS.ErrnoError(2);\r\n    }\r\n    if (!stream.stream_ops.mmap) {\r\n      throw new FS.ErrnoError(43);\r\n    }\r\n    if (!length) {\r\n      throw new FS.ErrnoError(28);\r\n    }\r\n    return stream.stream_ops.mmap(stream, length, position, prot, flags);\r\n  },\r\n  msync(stream, buffer, offset, length, mmapFlags) {\r\n    assert(offset >= 0);\r\n    if (!stream.stream_ops.msync) {\r\n      return 0;\r\n    }\r\n    return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\r\n  },\r\n  ioctl(stream, cmd, arg) {\r\n    if (!stream.stream_ops.ioctl) {\r\n      throw new FS.ErrnoError(59);\r\n    }\r\n    return stream.stream_ops.ioctl(stream, cmd, arg);\r\n  },\r\n  readFile(path, opts = {}) {\r\n    opts.flags = opts.flags || 0;\r\n    opts.encoding = opts.encoding || \"binary\";\r\n    if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\r\n      throw new Error(`Invalid encoding type \"${opts.encoding}\"`);\r\n    }\r\n    var ret;\r\n    var stream = FS.open(path, opts.flags);\r\n    var stat = FS.stat(path);\r\n    var length = stat.size;\r\n    var buf = new Uint8Array(length);\r\n    FS.read(stream, buf, 0, length, 0);\r\n    if (opts.encoding === \"utf8\") {\r\n      ret = UTF8ArrayToString(buf);\r\n    } else if (opts.encoding === \"binary\") {\r\n      ret = buf;\r\n    }\r\n    FS.close(stream);\r\n    return ret;\r\n  },\r\n  writeFile(path, data, opts = {}) {\r\n    opts.flags = opts.flags || 577;\r\n    var stream = FS.open(path, opts.flags, opts.mode);\r\n    if (typeof data == \"string\") {\r\n      var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\r\n      var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\r\n      FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\r\n    } else if (ArrayBuffer.isView(data)) {\r\n      FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\r\n    } else {\r\n      throw new Error(\"Unsupported data type\");\r\n    }\r\n    FS.close(stream);\r\n  },\r\n  cwd: () => FS.currentPath,\r\n  chdir(path) {\r\n    var lookup = FS.lookupPath(path, {\r\n      follow: true\r\n    });\r\n    if (lookup.node === null) {\r\n      throw new FS.ErrnoError(44);\r\n    }\r\n    if (!FS.isDir(lookup.node.mode)) {\r\n      throw new FS.ErrnoError(54);\r\n    }\r\n    var errCode = FS.nodePermissions(lookup.node, \"x\");\r\n    if (errCode) {\r\n      throw new FS.ErrnoError(errCode);\r\n    }\r\n    FS.currentPath = lookup.path;\r\n  },\r\n  createDefaultDirectories() {\r\n    FS.mkdir(\"/tmp\");\r\n    FS.mkdir(\"/home\");\r\n    FS.mkdir(\"/home/web_user\");\r\n  },\r\n  createDefaultDevices() {\r\n    // create /dev\r\n    FS.mkdir(\"/dev\");\r\n    // setup /dev/null\r\n    FS.registerDevice(FS.makedev(1, 3), {\r\n      read: () => 0,\r\n      write: (stream, buffer, offset, length, pos) => length,\r\n      llseek: () => 0\r\n    });\r\n    FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\r\n    // setup /dev/tty and /dev/tty1\r\n    // stderr needs to print output using err() rather than out()\r\n    // so we register a second tty just for it.\r\n    TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\r\n    TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\r\n    FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\r\n    FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\r\n    // setup /dev/[u]random\r\n    // use a buffer to avoid overhead of individual crypto calls per byte\r\n    var randomBuffer = new Uint8Array(1024), randomLeft = 0;\r\n    var randomByte = () => {\r\n      if (randomLeft === 0) {\r\n        randomFill(randomBuffer);\r\n        randomLeft = randomBuffer.byteLength;\r\n      }\r\n      return randomBuffer[--randomLeft];\r\n    };\r\n    FS.createDevice(\"/dev\", \"random\", randomByte);\r\n    FS.createDevice(\"/dev\", \"urandom\", randomByte);\r\n    // we're not going to emulate the actual shm device,\r\n    // just create the tmp dirs that reside in it commonly\r\n    FS.mkdir(\"/dev/shm\");\r\n    FS.mkdir(\"/dev/shm/tmp\");\r\n  },\r\n  createSpecialDirectories() {\r\n    // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the\r\n    // name of the stream for fd 6 (see test_unistd_ttyname)\r\n    FS.mkdir(\"/proc\");\r\n    var proc_self = FS.mkdir(\"/proc/self\");\r\n    FS.mkdir(\"/proc/self/fd\");\r\n    FS.mount({\r\n      mount() {\r\n        var node = FS.createNode(proc_self, \"fd\", 16895, 73);\r\n        node.stream_ops = {\r\n          llseek: MEMFS.stream_ops.llseek\r\n        };\r\n        node.node_ops = {\r\n          lookup(parent, name) {\r\n            var fd = +name;\r\n            var stream = FS.getStreamChecked(fd);\r\n            var ret = {\r\n              parent: null,\r\n              mount: {\r\n                mountpoint: \"fake\"\r\n              },\r\n              node_ops: {\r\n                readlink: () => stream.path\r\n              },\r\n              id: fd + 1\r\n            };\r\n            ret.parent = ret;\r\n            // make it look like a simple root node\r\n            return ret;\r\n          },\r\n          readdir() {\r\n            return Array.from(FS.streams.entries()).filter(([k, v]) => v).map(([k, v]) => k.toString());\r\n          }\r\n        };\r\n        return node;\r\n      }\r\n    }, {}, \"/proc/self/fd\");\r\n  },\r\n  createStandardStreams(input, output, error) {\r\n    // TODO deprecate the old functionality of a single\r\n    // input / output callback and that utilizes FS.createDevice\r\n    // and instead require a unique set of stream ops\r\n    // by default, we symlink the standard streams to the\r\n    // default tty devices. however, if the standard streams\r\n    // have been overwritten we create a unique device for\r\n    // them instead.\r\n    if (input) {\r\n      FS.createDevice(\"/dev\", \"stdin\", input);\r\n    } else {\r\n      FS.symlink(\"/dev/tty\", \"/dev/stdin\");\r\n    }\r\n    if (output) {\r\n      FS.createDevice(\"/dev\", \"stdout\", null, output);\r\n    } else {\r\n      FS.symlink(\"/dev/tty\", \"/dev/stdout\");\r\n    }\r\n    if (error) {\r\n      FS.createDevice(\"/dev\", \"stderr\", null, error);\r\n    } else {\r\n      FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\r\n    }\r\n    // open default streams for the stdin, stdout and stderr devices\r\n    var stdin = FS.open(\"/dev/stdin\", 0);\r\n    var stdout = FS.open(\"/dev/stdout\", 1);\r\n    var stderr = FS.open(\"/dev/stderr\", 1);\r\n    assert(stdin.fd === 0, `invalid handle for stdin (${stdin.fd})`);\r\n    assert(stdout.fd === 1, `invalid handle for stdout (${stdout.fd})`);\r\n    assert(stderr.fd === 2, `invalid handle for stderr (${stderr.fd})`);\r\n  },\r\n  staticInit() {\r\n    FS.nameTable = new Array(4096);\r\n    FS.mount(MEMFS, {}, \"/\");\r\n    FS.createDefaultDirectories();\r\n    FS.createDefaultDevices();\r\n    FS.createSpecialDirectories();\r\n    FS.filesystems = {\r\n      \"MEMFS\": MEMFS\r\n    };\r\n  },\r\n  init(input, output, error) {\r\n    assert(!FS.initialized, \"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)\");\r\n    FS.initialized = true;\r\n    // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here\r\n    FS.createStandardStreams(input, output, error);\r\n  },\r\n  quit() {\r\n    FS.initialized = false;\r\n    // force-flush all streams, so we get musl std streams printed out\r\n    _fflush(0);\r\n    // close all of our streams\r\n    for (var stream of FS.streams) {\r\n      if (stream) {\r\n        FS.close(stream);\r\n      }\r\n    }\r\n  },\r\n  findObject(path, dontResolveLastLink) {\r\n    var ret = FS.analyzePath(path, dontResolveLastLink);\r\n    if (!ret.exists) {\r\n      return null;\r\n    }\r\n    return ret.object;\r\n  },\r\n  analyzePath(path, dontResolveLastLink) {\r\n    // operate from within the context of the symlink's target\r\n    try {\r\n      var lookup = FS.lookupPath(path, {\r\n        follow: !dontResolveLastLink\r\n      });\r\n      path = lookup.path;\r\n    } catch (e) {}\r\n    var ret = {\r\n      isRoot: false,\r\n      exists: false,\r\n      error: 0,\r\n      name: null,\r\n      path: null,\r\n      object: null,\r\n      parentExists: false,\r\n      parentPath: null,\r\n      parentObject: null\r\n    };\r\n    try {\r\n      var lookup = FS.lookupPath(path, {\r\n        parent: true\r\n      });\r\n      ret.parentExists = true;\r\n      ret.parentPath = lookup.path;\r\n      ret.parentObject = lookup.node;\r\n      ret.name = PATH.basename(path);\r\n      lookup = FS.lookupPath(path, {\r\n        follow: !dontResolveLastLink\r\n      });\r\n      ret.exists = true;\r\n      ret.path = lookup.path;\r\n      ret.object = lookup.node;\r\n      ret.name = lookup.node.name;\r\n      ret.isRoot = lookup.path === \"/\";\r\n    } catch (e) {\r\n      ret.error = e.errno;\r\n    }\r\n    return ret;\r\n  },\r\n  createPath(parent, path, canRead, canWrite) {\r\n    parent = typeof parent == \"string\" ? parent : FS.getPath(parent);\r\n    var parts = path.split(\"/\").reverse();\r\n    while (parts.length) {\r\n      var part = parts.pop();\r\n      if (!part) continue;\r\n      var current = PATH.join2(parent, part);\r\n      try {\r\n        FS.mkdir(current);\r\n      } catch (e) {\r\n        if (e.errno != 20) throw e;\r\n      }\r\n      parent = current;\r\n    }\r\n    return current;\r\n  },\r\n  createFile(parent, name, properties, canRead, canWrite) {\r\n    var path = PATH.join2(typeof parent == \"string\" ? parent : FS.getPath(parent), name);\r\n    var mode = FS_getMode(canRead, canWrite);\r\n    return FS.create(path, mode);\r\n  },\r\n  createDataFile(parent, name, data, canRead, canWrite, canOwn) {\r\n    var path = name;\r\n    if (parent) {\r\n      parent = typeof parent == \"string\" ? parent : FS.getPath(parent);\r\n      path = name ? PATH.join2(parent, name) : parent;\r\n    }\r\n    var mode = FS_getMode(canRead, canWrite);\r\n    var node = FS.create(path, mode);\r\n    if (data) {\r\n      if (typeof data == \"string\") {\r\n        var arr = new Array(data.length);\r\n        for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\r\n        data = arr;\r\n      }\r\n      // make sure we can write to the file\r\n      FS.chmod(node, mode | 146);\r\n      var stream = FS.open(node, 577);\r\n      FS.write(stream, data, 0, data.length, 0, canOwn);\r\n      FS.close(stream);\r\n      FS.chmod(node, mode);\r\n    }\r\n  },\r\n  createDevice(parent, name, input, output) {\r\n    var path = PATH.join2(typeof parent == \"string\" ? parent : FS.getPath(parent), name);\r\n    var mode = FS_getMode(!!input, !!output);\r\n    FS.createDevice.major ??= 64;\r\n    var dev = FS.makedev(FS.createDevice.major++, 0);\r\n    // Create a fake device that a set of stream ops to emulate\r\n    // the old behavior.\r\n    FS.registerDevice(dev, {\r\n      open(stream) {\r\n        stream.seekable = false;\r\n      },\r\n      close(stream) {\r\n        // flush any pending line data\r\n        if (output?.buffer?.length) {\r\n          output(10);\r\n        }\r\n      },\r\n      read(stream, buffer, offset, length, pos) {\r\n        var bytesRead = 0;\r\n        for (var i = 0; i < length; i++) {\r\n          var result;\r\n          try {\r\n            result = input();\r\n          } catch (e) {\r\n            throw new FS.ErrnoError(29);\r\n          }\r\n          if (result === undefined && bytesRead === 0) {\r\n            throw new FS.ErrnoError(6);\r\n          }\r\n          if (result === null || result === undefined) break;\r\n          bytesRead++;\r\n          buffer[offset + i] = result;\r\n        }\r\n        if (bytesRead) {\r\n          stream.node.atime = Date.now();\r\n        }\r\n        return bytesRead;\r\n      },\r\n      write(stream, buffer, offset, length, pos) {\r\n        for (var i = 0; i < length; i++) {\r\n          try {\r\n            output(buffer[offset + i]);\r\n          } catch (e) {\r\n            throw new FS.ErrnoError(29);\r\n          }\r\n        }\r\n        if (length) {\r\n          stream.node.mtime = stream.node.ctime = Date.now();\r\n        }\r\n        return i;\r\n      }\r\n    });\r\n    return FS.mkdev(path, mode, dev);\r\n  },\r\n  forceLoadFile(obj) {\r\n    if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\r\n    if (typeof XMLHttpRequest != \"undefined\") {\r\n      throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\r\n    } else {\r\n      // Command-line.\r\n      try {\r\n        obj.contents = readBinary(obj.url);\r\n        obj.usedBytes = obj.contents.length;\r\n      } catch (e) {\r\n        throw new FS.ErrnoError(29);\r\n      }\r\n    }\r\n  },\r\n  createLazyFile(parent, name, url, canRead, canWrite) {\r\n    // Lazy chunked Uint8Array (implements get and length from Uint8Array).\r\n    // Actual getting is abstracted away for eventual reuse.\r\n    class LazyUint8Array {\r\n      lengthKnown=false;\r\n      chunks=[];\r\n      // Loaded chunks. Index is the chunk number\r\n      get(idx) {\r\n        if (idx > this.length - 1 || idx < 0) {\r\n          return undefined;\r\n        }\r\n        var chunkOffset = idx % this.chunkSize;\r\n        var chunkNum = (idx / this.chunkSize) | 0;\r\n        return this.getter(chunkNum)[chunkOffset];\r\n      }\r\n      setDataGetter(getter) {\r\n        this.getter = getter;\r\n      }\r\n      cacheLength() {\r\n        // Find length\r\n        var xhr = new XMLHttpRequest;\r\n        xhr.open(\"HEAD\", url, false);\r\n        xhr.send(null);\r\n        if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n        var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\r\n        var header;\r\n        var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\r\n        var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\r\n        var chunkSize = 1024 * 1024;\r\n        // Chunk size in bytes\r\n        if (!hasByteServing) chunkSize = datalength;\r\n        // Function to get a range from the remote URL.\r\n        var doXHR = (from, to) => {\r\n          if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\r\n          if (to > datalength - 1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\r\n          // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.\r\n          var xhr = new XMLHttpRequest;\r\n          xhr.open(\"GET\", url, false);\r\n          if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\r\n          // Some hints to the browser that we want binary data.\r\n          xhr.responseType = \"arraybuffer\";\r\n          if (xhr.overrideMimeType) {\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n          }\r\n          xhr.send(null);\r\n          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n          if (xhr.response !== undefined) {\r\n            return new Uint8Array(/** @type{Array<number>} */ (xhr.response || []));\r\n          }\r\n          return intArrayFromString(xhr.responseText || \"\", true);\r\n        };\r\n        var lazyArray = this;\r\n        lazyArray.setDataGetter(chunkNum => {\r\n          var start = chunkNum * chunkSize;\r\n          var end = (chunkNum + 1) * chunkSize - 1;\r\n          // including this byte\r\n          end = Math.min(end, datalength - 1);\r\n          // if datalength-1 is selected, this is the last block\r\n          if (typeof lazyArray.chunks[chunkNum] == \"undefined\") {\r\n            lazyArray.chunks[chunkNum] = doXHR(start, end);\r\n          }\r\n          if (typeof lazyArray.chunks[chunkNum] == \"undefined\") throw new Error(\"doXHR failed!\");\r\n          return lazyArray.chunks[chunkNum];\r\n        });\r\n        if (usesGzip || !datalength) {\r\n          // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length\r\n          chunkSize = datalength = 1;\r\n          // this will force getter(0)/doXHR do download the whole file\r\n          datalength = this.getter(0).length;\r\n          chunkSize = datalength;\r\n          out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\r\n        }\r\n        this._length = datalength;\r\n        this._chunkSize = chunkSize;\r\n        this.lengthKnown = true;\r\n      }\r\n      get length() {\r\n        if (!this.lengthKnown) {\r\n          this.cacheLength();\r\n        }\r\n        return this._length;\r\n      }\r\n      get chunkSize() {\r\n        if (!this.lengthKnown) {\r\n          this.cacheLength();\r\n        }\r\n        return this._chunkSize;\r\n      }\r\n    }\r\n    if (typeof XMLHttpRequest != \"undefined\") {\r\n      if (!ENVIRONMENT_IS_WORKER) throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\r\n      var lazyArray = new LazyUint8Array;\r\n      var properties = {\r\n        isDevice: false,\r\n        contents: lazyArray\r\n      };\r\n    } else {\r\n      var properties = {\r\n        isDevice: false,\r\n        url\r\n      };\r\n    }\r\n    var node = FS.createFile(parent, name, properties, canRead, canWrite);\r\n    // This is a total hack, but I want to get this lazy file code out of the\r\n    // core of MEMFS. If we want to keep this lazy file concept I feel it should\r\n    // be its own thin LAZYFS proxying calls to MEMFS.\r\n    if (properties.contents) {\r\n      node.contents = properties.contents;\r\n    } else if (properties.url) {\r\n      node.contents = null;\r\n      node.url = properties.url;\r\n    }\r\n    // Add a function that defers querying the file size until it is asked the first time.\r\n    Object.defineProperties(node, {\r\n      usedBytes: {\r\n        get: function() {\r\n          return this.contents.length;\r\n        }\r\n      }\r\n    });\r\n    // override each stream op with one that tries to force load the lazy file first\r\n    var stream_ops = {};\r\n    var keys = Object.keys(node.stream_ops);\r\n    keys.forEach(key => {\r\n      var fn = node.stream_ops[key];\r\n      stream_ops[key] = (...args) => {\r\n        FS.forceLoadFile(node);\r\n        return fn(...args);\r\n      };\r\n    });\r\n    function writeChunks(stream, buffer, offset, length, position) {\r\n      var contents = stream.node.contents;\r\n      if (position >= contents.length) return 0;\r\n      var size = Math.min(contents.length - position, length);\r\n      assert(size >= 0);\r\n      if (contents.slice) {\r\n        // normal array\r\n        for (var i = 0; i < size; i++) {\r\n          buffer[offset + i] = contents[position + i];\r\n        }\r\n      } else {\r\n        for (var i = 0; i < size; i++) {\r\n          // LazyUint8Array from sync binary XHR\r\n          buffer[offset + i] = contents.get(position + i);\r\n        }\r\n      }\r\n      return size;\r\n    }\r\n    // use a custom read function\r\n    stream_ops.read = (stream, buffer, offset, length, position) => {\r\n      FS.forceLoadFile(node);\r\n      return writeChunks(stream, buffer, offset, length, position);\r\n    };\r\n    // use a custom mmap function\r\n    stream_ops.mmap = (stream, length, position, prot, flags) => {\r\n      FS.forceLoadFile(node);\r\n      var ptr = mmapAlloc(length);\r\n      if (!ptr) {\r\n        throw new FS.ErrnoError(48);\r\n      }\r\n      writeChunks(stream, GROWABLE_HEAP_I8(), ptr, length, position);\r\n      return {\r\n        ptr,\r\n        allocated: true\r\n      };\r\n    };\r\n    node.stream_ops = stream_ops;\r\n    return node;\r\n  },\r\n  absolutePath() {\r\n    abort(\"FS.absolutePath has been removed; use PATH_FS.resolve instead\");\r\n  },\r\n  createFolder() {\r\n    abort(\"FS.createFolder has been removed; use FS.mkdir instead\");\r\n  },\r\n  createLink() {\r\n    abort(\"FS.createLink has been removed; use FS.symlink instead\");\r\n  },\r\n  joinPath() {\r\n    abort(\"FS.joinPath has been removed; use PATH.join instead\");\r\n  },\r\n  mmapAlloc() {\r\n    abort(\"FS.mmapAlloc has been replaced by the top level function mmapAlloc\");\r\n  },\r\n  standardizePath() {\r\n    abort(\"FS.standardizePath has been removed; use PATH.normalize instead\");\r\n  }\r\n};\r\n\r\nvar SYSCALLS = {\r\n  DEFAULT_POLLMASK: 5,\r\n  calculateAt(dirfd, path, allowEmpty) {\r\n    if (PATH.isAbs(path)) {\r\n      return path;\r\n    }\r\n    // relative path\r\n    var dir;\r\n    if (dirfd === -100) {\r\n      dir = FS.cwd();\r\n    } else {\r\n      var dirstream = SYSCALLS.getStreamFromFD(dirfd);\r\n      dir = dirstream.path;\r\n    }\r\n    if (path.length == 0) {\r\n      if (!allowEmpty) {\r\n        throw new FS.ErrnoError(44);\r\n      }\r\n      return dir;\r\n    }\r\n    return dir + \"/\" + path;\r\n  },\r\n  writeStat(buf, stat) {\r\n    GROWABLE_HEAP_I32()[((buf) >> 2)] = stat.dev;\r\n    GROWABLE_HEAP_I32()[(((buf) + (4)) >> 2)] = stat.mode;\r\n    GROWABLE_HEAP_U32()[(((buf) + (8)) >> 2)] = stat.nlink;\r\n    GROWABLE_HEAP_I32()[(((buf) + (12)) >> 2)] = stat.uid;\r\n    GROWABLE_HEAP_I32()[(((buf) + (16)) >> 2)] = stat.gid;\r\n    GROWABLE_HEAP_I32()[(((buf) + (20)) >> 2)] = stat.rdev;\r\n    HEAP64[(((buf) + (24)) >> 3)] = BigInt(stat.size);\r\n    GROWABLE_HEAP_I32()[(((buf) + (32)) >> 2)] = 4096;\r\n    GROWABLE_HEAP_I32()[(((buf) + (36)) >> 2)] = stat.blocks;\r\n    var atime = stat.atime.getTime();\r\n    var mtime = stat.mtime.getTime();\r\n    var ctime = stat.ctime.getTime();\r\n    HEAP64[(((buf) + (40)) >> 3)] = BigInt(Math.floor(atime / 1e3));\r\n    GROWABLE_HEAP_U32()[(((buf) + (48)) >> 2)] = (atime % 1e3) * 1e3 * 1e3;\r\n    HEAP64[(((buf) + (56)) >> 3)] = BigInt(Math.floor(mtime / 1e3));\r\n    GROWABLE_HEAP_U32()[(((buf) + (64)) >> 2)] = (mtime % 1e3) * 1e3 * 1e3;\r\n    HEAP64[(((buf) + (72)) >> 3)] = BigInt(Math.floor(ctime / 1e3));\r\n    GROWABLE_HEAP_U32()[(((buf) + (80)) >> 2)] = (ctime % 1e3) * 1e3 * 1e3;\r\n    HEAP64[(((buf) + (88)) >> 3)] = BigInt(stat.ino);\r\n    return 0;\r\n  },\r\n  writeStatFs(buf, stats) {\r\n    GROWABLE_HEAP_I32()[(((buf) + (4)) >> 2)] = stats.bsize;\r\n    GROWABLE_HEAP_I32()[(((buf) + (40)) >> 2)] = stats.bsize;\r\n    GROWABLE_HEAP_I32()[(((buf) + (8)) >> 2)] = stats.blocks;\r\n    GROWABLE_HEAP_I32()[(((buf) + (12)) >> 2)] = stats.bfree;\r\n    GROWABLE_HEAP_I32()[(((buf) + (16)) >> 2)] = stats.bavail;\r\n    GROWABLE_HEAP_I32()[(((buf) + (20)) >> 2)] = stats.files;\r\n    GROWABLE_HEAP_I32()[(((buf) + (24)) >> 2)] = stats.ffree;\r\n    GROWABLE_HEAP_I32()[(((buf) + (28)) >> 2)] = stats.fsid;\r\n    GROWABLE_HEAP_I32()[(((buf) + (44)) >> 2)] = stats.flags;\r\n    // ST_NOSUID\r\n    GROWABLE_HEAP_I32()[(((buf) + (36)) >> 2)] = stats.namelen;\r\n  },\r\n  doMsync(addr, stream, len, flags, offset) {\r\n    if (!FS.isFile(stream.node.mode)) {\r\n      throw new FS.ErrnoError(43);\r\n    }\r\n    if (flags & 2) {\r\n      // MAP_PRIVATE calls need not to be synced back to underlying fs\r\n      return 0;\r\n    }\r\n    var buffer = GROWABLE_HEAP_U8().slice(addr, addr + len);\r\n    FS.msync(stream, buffer, offset, len, flags);\r\n  },\r\n  getStreamFromFD(fd) {\r\n    var stream = FS.getStreamChecked(fd);\r\n    return stream;\r\n  },\r\n  varargs: undefined,\r\n  getStr(ptr) {\r\n    var ret = UTF8ToString(ptr);\r\n    return ret;\r\n  }\r\n};\r\n\r\nfunction _fd_close(fd) {\r\n  if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(5, 0, 1, fd);\r\n  try {\r\n    var stream = SYSCALLS.getStreamFromFD(fd);\r\n    FS.close(stream);\r\n    return 0;\r\n  } catch (e) {\r\n    if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n    return e.errno;\r\n  }\r\n}\r\n\r\n/** @param {number=} offset */ var doReadv = (stream, iov, iovcnt, offset) => {\r\n  var ret = 0;\r\n  for (var i = 0; i < iovcnt; i++) {\r\n    var ptr = GROWABLE_HEAP_U32()[((iov) >> 2)];\r\n    var len = GROWABLE_HEAP_U32()[(((iov) + (4)) >> 2)];\r\n    iov += 8;\r\n    var curr = FS.read(stream, GROWABLE_HEAP_I8(), ptr, len, offset);\r\n    if (curr < 0) return -1;\r\n    ret += curr;\r\n    if (curr < len) break;\r\n    // nothing more to read\r\n    if (typeof offset != \"undefined\") {\r\n      offset += curr;\r\n    }\r\n  }\r\n  return ret;\r\n};\r\n\r\nfunction _fd_read(fd, iov, iovcnt, pnum) {\r\n  if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(6, 0, 1, fd, iov, iovcnt, pnum);\r\n  try {\r\n    var stream = SYSCALLS.getStreamFromFD(fd);\r\n    var num = doReadv(stream, iov, iovcnt);\r\n    GROWABLE_HEAP_U32()[((pnum) >> 2)] = num;\r\n    return 0;\r\n  } catch (e) {\r\n    if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n    return e.errno;\r\n  }\r\n}\r\n\r\nfunction _fd_seek(fd, offset, whence, newOffset) {\r\n  if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(7, 0, 1, fd, offset, whence, newOffset);\r\n  offset = bigintToI53Checked(offset);\r\n  try {\r\n    if (isNaN(offset)) return 61;\r\n    var stream = SYSCALLS.getStreamFromFD(fd);\r\n    FS.llseek(stream, offset, whence);\r\n    HEAP64[((newOffset) >> 3)] = BigInt(stream.position);\r\n    if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;\r\n    // reset readdir state\r\n    return 0;\r\n  } catch (e) {\r\n    if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n    return e.errno;\r\n  }\r\n}\r\n\r\n/** @param {number=} offset */ var doWritev = (stream, iov, iovcnt, offset) => {\r\n  var ret = 0;\r\n  for (var i = 0; i < iovcnt; i++) {\r\n    var ptr = GROWABLE_HEAP_U32()[((iov) >> 2)];\r\n    var len = GROWABLE_HEAP_U32()[(((iov) + (4)) >> 2)];\r\n    iov += 8;\r\n    var curr = FS.write(stream, GROWABLE_HEAP_I8(), ptr, len, offset);\r\n    if (curr < 0) return -1;\r\n    ret += curr;\r\n    if (curr < len) {\r\n      // No more space to write.\r\n      break;\r\n    }\r\n    if (typeof offset != \"undefined\") {\r\n      offset += curr;\r\n    }\r\n  }\r\n  return ret;\r\n};\r\n\r\nfunction _fd_write(fd, iov, iovcnt, pnum) {\r\n  if (ENVIRONMENT_IS_PTHREAD) return proxyToMainThread(8, 0, 1, fd, iov, iovcnt, pnum);\r\n  try {\r\n    var stream = SYSCALLS.getStreamFromFD(fd);\r\n    var num = doWritev(stream, iov, iovcnt);\r\n    GROWABLE_HEAP_U32()[((pnum) >> 2)] = num;\r\n    return 0;\r\n  } catch (e) {\r\n    if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n    return e.errno;\r\n  }\r\n}\r\n\r\nfunction _random_get(buffer, size) {\r\n  try {\r\n    randomFill(GROWABLE_HEAP_U8().subarray(buffer, buffer + size));\r\n    return 0;\r\n  } catch (e) {\r\n    if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n    return e.errno;\r\n  }\r\n}\r\n\r\nvar getCFunc = ident => {\r\n  var func = Module[\"_\" + ident];\r\n  // closure exported function\r\n  assert(func, \"Cannot call unknown function \" + ident + \", make sure it is exported\");\r\n  return func;\r\n};\r\n\r\nvar writeArrayToMemory = (array, buffer) => {\r\n  assert(array.length >= 0, \"writeArrayToMemory array must have a length (should be an array or typed array)\");\r\n  GROWABLE_HEAP_I8().set(array, buffer);\r\n};\r\n\r\nvar stringToUTF8OnStack = str => {\r\n  var size = lengthBytesUTF8(str) + 1;\r\n  var ret = stackAlloc(size);\r\n  stringToUTF8(str, ret, size);\r\n  return ret;\r\n};\r\n\r\n/**\r\n     * @param {string|null=} returnType\r\n     * @param {Array=} argTypes\r\n     * @param {Arguments|Array=} args\r\n     * @param {Object=} opts\r\n     */ var ccall = (ident, returnType, argTypes, args, opts) => {\r\n  // For fast lookup of conversion functions\r\n  var toC = {\r\n    \"string\": str => {\r\n      var ret = 0;\r\n      if (str !== null && str !== undefined && str !== 0) {\r\n        // null string\r\n        ret = stringToUTF8OnStack(str);\r\n      }\r\n      return ret;\r\n    },\r\n    \"array\": arr => {\r\n      var ret = stackAlloc(arr.length);\r\n      writeArrayToMemory(arr, ret);\r\n      return ret;\r\n    }\r\n  };\r\n  function convertReturnValue(ret) {\r\n    if (returnType === \"string\") {\r\n      return UTF8ToString(ret);\r\n    }\r\n    if (returnType === \"boolean\") return Boolean(ret);\r\n    return ret;\r\n  }\r\n  var func = getCFunc(ident);\r\n  var cArgs = [];\r\n  var stack = 0;\r\n  assert(returnType !== \"array\", 'Return type should not be \"array\".');\r\n  if (args) {\r\n    for (var i = 0; i < args.length; i++) {\r\n      var converter = toC[argTypes[i]];\r\n      if (converter) {\r\n        if (stack === 0) stack = stackSave();\r\n        cArgs[i] = converter(args[i]);\r\n      } else {\r\n        cArgs[i] = args[i];\r\n      }\r\n    }\r\n  }\r\n  var ret = func(...cArgs);\r\n  function onDone(ret) {\r\n    if (stack !== 0) stackRestore(stack);\r\n    return convertReturnValue(ret);\r\n  }\r\n  ret = onDone(ret);\r\n  return ret;\r\n};\r\n\r\n/**\r\n     * @param {string=} returnType\r\n     * @param {Array=} argTypes\r\n     * @param {Object=} opts\r\n     */ var cwrap = (ident, returnType, argTypes, opts) => (...args) => ccall(ident, returnType, argTypes, args, opts);\r\n\r\nvar incrementExceptionRefcount = ptr => ___cxa_increment_exception_refcount(ptr);\r\n\r\nvar decrementExceptionRefcount = ptr => ___cxa_decrement_exception_refcount(ptr);\r\n\r\nvar getExceptionMessageCommon = ptr => {\r\n  var sp = stackSave();\r\n  var type_addr_addr = stackAlloc(4);\r\n  var message_addr_addr = stackAlloc(4);\r\n  ___get_exception_message(ptr, type_addr_addr, message_addr_addr);\r\n  var type_addr = GROWABLE_HEAP_U32()[((type_addr_addr) >> 2)];\r\n  var message_addr = GROWABLE_HEAP_U32()[((message_addr_addr) >> 2)];\r\n  var type = UTF8ToString(type_addr);\r\n  _free(type_addr);\r\n  var message;\r\n  if (message_addr) {\r\n    message = UTF8ToString(message_addr);\r\n    _free(message_addr);\r\n  }\r\n  stackRestore(sp);\r\n  return [ type, message ];\r\n};\r\n\r\nvar getExceptionMessage = ptr => getExceptionMessageCommon(ptr);\r\n\r\nPThread.init();\r\n\r\nembind_init_charCodes();\r\n\r\ninit_ClassHandle();\r\n\r\ninit_RegisteredPointer();\r\n\r\ninit_emval();\r\n\r\nFS.createPreloadedFile = FS_createPreloadedFile;\r\n\r\nFS.staticInit();\r\n\r\n// End JS library code\r\n// include: postlibrary.js\r\n// This file is included after the automatically-generated JS library code\r\n// but before the wasm module is created.\r\n{\r\n  // With WASM_ESM_INTEGRATION this has to happen at the top level and not\r\n  // delayed until processModuleArgs.\r\n  initMemory();\r\n  // No ATMODULES hooks\r\n  checkIncomingModuleAPI();\r\n  // Assertions on removed incoming Module JS APIs.\r\n  assert(typeof Module[\"memoryInitializerPrefixURL\"] == \"undefined\", \"Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead\");\r\n  assert(typeof Module[\"pthreadMainPrefixURL\"] == \"undefined\", \"Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead\");\r\n  assert(typeof Module[\"cdInitializerPrefixURL\"] == \"undefined\", \"Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead\");\r\n  assert(typeof Module[\"filePackagePrefixURL\"] == \"undefined\", \"Module.filePackagePrefixURL option was removed, use Module.locateFile instead\");\r\n  assert(typeof Module[\"read\"] == \"undefined\", \"Module.read option was removed\");\r\n  assert(typeof Module[\"readAsync\"] == \"undefined\", \"Module.readAsync option was removed (modify readAsync in JS)\");\r\n  assert(typeof Module[\"readBinary\"] == \"undefined\", \"Module.readBinary option was removed (modify readBinary in JS)\");\r\n  assert(typeof Module[\"setWindowTitle\"] == \"undefined\", \"Module.setWindowTitle option was removed (modify emscripten_set_window_title in JS)\");\r\n  assert(typeof Module[\"TOTAL_MEMORY\"] == \"undefined\", \"Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY\");\r\n  assert(typeof Module[\"ENVIRONMENT\"] == \"undefined\", \"Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)\");\r\n  assert(typeof Module[\"STACK_SIZE\"] == \"undefined\", \"STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time\");\r\n}\r\n\r\n// Begin runtime exports\r\nModule[\"ccall\"] = ccall;\r\n\r\nModule[\"cwrap\"] = cwrap;\r\n\r\nvar missingLibrarySymbols = [ \"writeI53ToI64\", \"writeI53ToI64Clamped\", \"writeI53ToI64Signaling\", \"writeI53ToU64Clamped\", \"writeI53ToU64Signaling\", \"readI53FromI64\", \"readI53FromU64\", \"convertI32PairToI53\", \"convertI32PairToI53Checked\", \"convertU32PairToI53\", \"getTempRet0\", \"zeroMemory\", \"inetPton4\", \"inetNtop4\", \"inetPton6\", \"inetNtop6\", \"readSockaddr\", \"writeSockaddr\", \"emscriptenLog\", \"readEmAsmArgs\", \"jstoi_q\", \"listenOnce\", \"autoResumeAudioContext\", \"getDynCaller\", \"dynCall\", \"asmjsMangle\", \"HandleAllocator\", \"getNativeTypeSize\", \"addOnInit\", \"addOnPostCtor\", \"addOnPreMain\", \"addOnExit\", \"addOnPostRun\", \"STACK_SIZE\", \"STACK_ALIGN\", \"POINTER_SIZE\", \"ASSERTIONS\", \"uleb128Encode\", \"sigToWasmTypes\", \"generateFuncType\", \"convertJsFunctionToWasm\", \"getEmptyTableSlot\", \"updateTableMap\", \"getFunctionAddress\", \"addFunction\", \"removeFunction\", \"reallyNegative\", \"unSign\", \"strLen\", \"reSign\", \"formatString\", \"intArrayToString\", \"AsciiToString\", \"stringToAscii\", \"stringToNewUTF8\", \"registerKeyEventCallback\", \"maybeCStringToJsString\", \"findEventTarget\", \"getBoundingClientRect\", \"fillMouseEventData\", \"registerMouseEventCallback\", \"registerWheelEventCallback\", \"registerUiEventCallback\", \"registerFocusEventCallback\", \"fillDeviceOrientationEventData\", \"registerDeviceOrientationEventCallback\", \"fillDeviceMotionEventData\", \"registerDeviceMotionEventCallback\", \"screenOrientation\", \"fillOrientationChangeEventData\", \"registerOrientationChangeEventCallback\", \"fillFullscreenChangeEventData\", \"registerFullscreenChangeEventCallback\", \"JSEvents_requestFullscreen\", \"JSEvents_resizeCanvasForFullscreen\", \"registerRestoreOldStyle\", \"hideEverythingExceptGivenElement\", \"restoreHiddenElements\", \"setLetterbox\", \"softFullscreenResizeWebGLRenderTarget\", \"doRequestFullscreen\", \"fillPointerlockChangeEventData\", \"registerPointerlockChangeEventCallback\", \"registerPointerlockErrorEventCallback\", \"requestPointerLock\", \"fillVisibilityChangeEventData\", \"registerVisibilityChangeEventCallback\", \"registerTouchEventCallback\", \"fillGamepadEventData\", \"registerGamepadEventCallback\", \"registerBeforeUnloadEventCallback\", \"fillBatteryEventData\", \"battery\", \"registerBatteryEventCallback\", \"setCanvasElementSizeCallingThread\", \"setCanvasElementSizeMainThread\", \"setCanvasElementSize\", \"getCanvasSizeCallingThread\", \"getCanvasSizeMainThread\", \"getCanvasElementSize\", \"jsStackTrace\", \"getCallstack\", \"convertPCtoSourceLocation\", \"wasiRightsToMuslOFlags\", \"wasiOFlagsToMuslOFlags\", \"safeSetTimeout\", \"setImmediateWrapped\", \"safeRequestAnimationFrame\", \"clearImmediateWrapped\", \"registerPostMainLoop\", \"registerPreMainLoop\", \"getPromise\", \"makePromise\", \"idsToPromises\", \"makePromiseCallback\", \"Browser_asyncPrepareDataCounter\", \"isLeapYear\", \"ydayFromDate\", \"arraySum\", \"addDays\", \"getSocketFromFD\", \"getSocketAddress\", \"FS_mkdirTree\", \"_setNetworkCallback\", \"heapObjectForWebGLType\", \"toTypedArrayIndex\", \"webgl_enable_ANGLE_instanced_arrays\", \"webgl_enable_OES_vertex_array_object\", \"webgl_enable_WEBGL_draw_buffers\", \"webgl_enable_WEBGL_multi_draw\", \"webgl_enable_EXT_polygon_offset_clamp\", \"webgl_enable_EXT_clip_control\", \"webgl_enable_WEBGL_polygon_mode\", \"emscriptenWebGLGet\", \"computeUnpackAlignedImageSize\", \"colorChannelsInGlTextureFormat\", \"emscriptenWebGLGetTexPixelData\", \"emscriptenWebGLGetUniform\", \"webglGetUniformLocation\", \"webglPrepareUniformLocationsBeforeFirstUse\", \"webglGetLeftBracePos\", \"emscriptenWebGLGetVertexAttrib\", \"__glGetActiveAttribOrUniform\", \"writeGLArray\", \"emscripten_webgl_destroy_context_before_on_calling_thread\", \"registerWebGlEventCallback\", \"runAndAbortIfError\", \"ALLOC_NORMAL\", \"ALLOC_STACK\", \"allocate\", \"writeStringToMemory\", \"writeAsciiToMemory\", \"demangle\", \"stackTrace\", \"getFunctionArgsName\", \"createJsInvokerSignature\", \"PureVirtualError\", \"registerInheritedInstance\", \"unregisterInheritedInstance\", \"getInheritedInstanceCount\", \"getLiveInheritedInstances\", \"enumReadValueFromPointer\", \"setDelayFunction\", \"emval_get_global\", \"emval_lookupTypes\", \"emval_addMethodCaller\" ];\r\n\r\nmissingLibrarySymbols.forEach(missingLibrarySymbol);\r\n\r\nvar unexportedSymbols = [ \"run\", \"addRunDependency\", \"removeRunDependency\", \"out\", \"err\", \"callMain\", \"abort\", \"wasmMemory\", \"wasmExports\", \"HEAPF64\", \"HEAP8\", \"HEAPU8\", \"HEAP16\", \"HEAPU16\", \"HEAP32\", \"HEAPU32\", \"HEAP64\", \"HEAPU64\", \"GROWABLE_HEAP_I8\", \"GROWABLE_HEAP_U8\", \"GROWABLE_HEAP_I16\", \"GROWABLE_HEAP_U16\", \"GROWABLE_HEAP_I32\", \"GROWABLE_HEAP_U32\", \"GROWABLE_HEAP_F32\", \"GROWABLE_HEAP_F64\", \"writeStackCookie\", \"checkStackCookie\", \"INT53_MAX\", \"INT53_MIN\", \"bigintToI53Checked\", \"stackSave\", \"stackRestore\", \"stackAlloc\", \"setTempRet0\", \"ptrToString\", \"exitJS\", \"getHeapMax\", \"growMemory\", \"ENV\", \"ERRNO_CODES\", \"strError\", \"DNS\", \"Protocols\", \"Sockets\", \"timers\", \"warnOnce\", \"readEmAsmArgsArray\", \"getExecutableName\", \"handleException\", \"keepRuntimeAlive\", \"runtimeKeepalivePush\", \"runtimeKeepalivePop\", \"callUserCallback\", \"maybeExit\", \"asyncLoad\", \"alignMemory\", \"mmapAlloc\", \"wasmTable\", \"noExitRuntime\", \"addOnPreRun\", \"getCFunc\", \"freeTableIndexes\", \"functionsInTableMap\", \"setValue\", \"getValue\", \"PATH\", \"PATH_FS\", \"UTF8Decoder\", \"UTF8ArrayToString\", \"UTF8ToString\", \"stringToUTF8Array\", \"stringToUTF8\", \"lengthBytesUTF8\", \"intArrayFromString\", \"UTF16Decoder\", \"UTF16ToString\", \"stringToUTF16\", \"lengthBytesUTF16\", \"UTF32ToString\", \"stringToUTF32\", \"lengthBytesUTF32\", \"stringToUTF8OnStack\", \"writeArrayToMemory\", \"JSEvents\", \"specialHTMLTargets\", \"findCanvasEventTarget\", \"currentFullscreenStrategy\", \"restoreOldWindowedStyle\", \"UNWIND_CACHE\", \"ExitStatus\", \"getEnvStrings\", \"checkWasiClock\", \"doReadv\", \"doWritev\", \"initRandomFill\", \"randomFill\", \"emSetImmediate\", \"emClearImmediate_deps\", \"emClearImmediate\", \"promiseMap\", \"uncaughtExceptionCount\", \"exceptionLast\", \"exceptionCaught\", \"ExceptionInfo\", \"findMatchingCatch\", \"getExceptionMessageCommon\", \"Browser\", \"getPreloadedImageData__data\", \"wget\", \"MONTH_DAYS_REGULAR\", \"MONTH_DAYS_LEAP\", \"MONTH_DAYS_REGULAR_CUMULATIVE\", \"MONTH_DAYS_LEAP_CUMULATIVE\", \"SYSCALLS\", \"preloadPlugins\", \"FS_createPreloadedFile\", \"FS_modeStringToFlags\", \"FS_getMode\", \"FS_stdin_getChar_buffer\", \"FS_stdin_getChar\", \"FS_unlink\", \"FS_createPath\", \"FS_createDevice\", \"FS_readFile\", \"FS\", \"FS_root\", \"FS_mounts\", \"FS_devices\", \"FS_streams\", \"FS_nextInode\", \"FS_nameTable\", \"FS_currentPath\", \"FS_initialized\", \"FS_ignorePermissions\", \"FS_filesystems\", \"FS_syncFSRequests\", \"FS_lookupPath\", \"FS_getPath\", \"FS_hashName\", \"FS_hashAddNode\", \"FS_hashRemoveNode\", \"FS_lookupNode\", \"FS_createNode\", \"FS_destroyNode\", \"FS_isRoot\", \"FS_isMountpoint\", \"FS_isFile\", \"FS_isDir\", \"FS_isLink\", \"FS_isChrdev\", \"FS_isBlkdev\", \"FS_isFIFO\", \"FS_isSocket\", \"FS_flagsToPermissionString\", \"FS_nodePermissions\", \"FS_mayLookup\", \"FS_mayCreate\", \"FS_mayDelete\", \"FS_mayOpen\", \"FS_checkOpExists\", \"FS_nextfd\", \"FS_getStreamChecked\", \"FS_getStream\", \"FS_createStream\", \"FS_closeStream\", \"FS_dupStream\", \"FS_doSetAttr\", \"FS_chrdev_stream_ops\", \"FS_major\", \"FS_minor\", \"FS_makedev\", \"FS_registerDevice\", \"FS_getDevice\", \"FS_getMounts\", \"FS_syncfs\", \"FS_mount\", \"FS_unmount\", \"FS_lookup\", \"FS_mknod\", \"FS_statfs\", \"FS_statfsStream\", \"FS_statfsNode\", \"FS_create\", \"FS_mkdir\", \"FS_mkdev\", \"FS_symlink\", \"FS_rename\", \"FS_rmdir\", \"FS_readdir\", \"FS_readlink\", \"FS_stat\", \"FS_fstat\", \"FS_lstat\", \"FS_doChmod\", \"FS_chmod\", \"FS_lchmod\", \"FS_fchmod\", \"FS_doChown\", \"FS_chown\", \"FS_lchown\", \"FS_fchown\", \"FS_doTruncate\", \"FS_truncate\", \"FS_ftruncate\", \"FS_utime\", \"FS_open\", \"FS_close\", \"FS_isClosed\", \"FS_llseek\", \"FS_read\", \"FS_write\", \"FS_mmap\", \"FS_msync\", \"FS_ioctl\", \"FS_writeFile\", \"FS_cwd\", \"FS_chdir\", \"FS_createDefaultDirectories\", \"FS_createDefaultDevices\", \"FS_createSpecialDirectories\", \"FS_createStandardStreams\", \"FS_staticInit\", \"FS_init\", \"FS_quit\", \"FS_findObject\", \"FS_analyzePath\", \"FS_createFile\", \"FS_createDataFile\", \"FS_forceLoadFile\", \"FS_createLazyFile\", \"FS_absolutePath\", \"FS_createFolder\", \"FS_createLink\", \"FS_joinPath\", \"FS_mmapAlloc\", \"FS_standardizePath\", \"MEMFS\", \"TTY\", \"PIPEFS\", \"SOCKFS\", \"tempFixedLengthArray\", \"miniTempWebGLFloatBuffers\", \"miniTempWebGLIntBuffers\", \"GL\", \"AL\", \"GLUT\", \"EGL\", \"GLEW\", \"IDBStore\", \"SDL\", \"SDL_gfx\", \"allocateUTF8\", \"allocateUTF8OnStack\", \"print\", \"printErr\", \"jstoi_s\", \"PThread\", \"terminateWorker\", \"cleanupThread\", \"registerTLSInit\", \"spawnThread\", \"exitOnMainThread\", \"proxyToMainThread\", \"proxiedJSCallArgs\", \"invokeEntryPoint\", \"checkMailbox\", \"InternalError\", \"BindingError\", \"throwInternalError\", \"throwBindingError\", \"registeredTypes\", \"awaitingDependencies\", \"typeDependencies\", \"tupleRegistrations\", \"structRegistrations\", \"sharedRegisterType\", \"whenDependentTypesAreResolved\", \"embind_charCodes\", \"embind_init_charCodes\", \"readLatin1String\", \"getTypeName\", \"getFunctionName\", \"heap32VectorToArray\", \"requireRegisteredType\", \"usesDestructorStack\", \"checkArgCount\", \"getRequiredArgCount\", \"createJsInvoker\", \"UnboundTypeError\", \"GenericWireTypeSize\", \"EmValType\", \"EmValOptionalType\", \"throwUnboundTypeError\", \"ensureOverloadTable\", \"exposePublicSymbol\", \"replacePublicSymbol\", \"createNamedFunction\", \"embindRepr\", \"registeredInstances\", \"getBasestPointer\", \"getInheritedInstance\", \"registeredPointers\", \"registerType\", \"integerReadValueFromPointer\", \"floatReadValueFromPointer\", \"readPointer\", \"runDestructors\", \"craftInvokerFunction\", \"embind__requireFunction\", \"genericPointerToWireType\", \"constNoSmartPtrRawPointerToWireType\", \"nonConstNoSmartPtrRawPointerToWireType\", \"init_RegisteredPointer\", \"RegisteredPointer\", \"RegisteredPointer_fromWireType\", \"runDestructor\", \"releaseClassHandle\", \"finalizationRegistry\", \"detachFinalizer_deps\", \"detachFinalizer\", \"attachFinalizer\", \"makeClassHandle\", \"init_ClassHandle\", \"ClassHandle\", \"throwInstanceAlreadyDeleted\", \"deletionQueue\", \"flushPendingDeletes\", \"delayFunction\", \"RegisteredClass\", \"shallowCopyInternalPointer\", \"downcastPointer\", \"upcastPointer\", \"validateThis\", \"char_0\", \"char_9\", \"makeLegalFunctionName\", \"emval_freelist\", \"emval_handles\", \"emval_symbols\", \"init_emval\", \"count_emval_handles\", \"getStringOrSymbol\", \"Emval\", \"emval_returnValue\", \"emval_methodCallers\", \"reflectConstruct\" ];\r\n\r\nunexportedSymbols.forEach(unexportedRuntimeSymbol);\r\n\r\n// End runtime exports\r\n// Begin JS library exports\r\nModule[\"incrementExceptionRefcount\"] = incrementExceptionRefcount;\r\n\r\nModule[\"decrementExceptionRefcount\"] = decrementExceptionRefcount;\r\n\r\nModule[\"getExceptionMessage\"] = getExceptionMessage;\r\n\r\n// End JS library exports\r\n// end include: postlibrary.js\r\n// proxiedFunctionTable specifies the list of functions that can be called\r\n// either synchronously or asynchronously from other threads in postMessage()d\r\n// or internally queued events. This way a pthread in a Worker can synchronously\r\n// access e.g. the DOM on the main thread.\r\nvar proxiedFunctionTable = [ _proc_exit, exitOnMainThread, pthreadCreateProxied, _environ_get, _environ_sizes_get, _fd_close, _fd_read, _fd_seek, _fd_write ];\r\n\r\nfunction checkIncomingModuleAPI() {\r\n  ignoredModuleProp(\"ENVIRONMENT\");\r\n  ignoredModuleProp(\"GL_MAX_TEXTURE_IMAGE_UNITS\");\r\n  ignoredModuleProp(\"SDL_canPlayWithWebAudio\");\r\n  ignoredModuleProp(\"SDL_numSimultaneouslyQueuedBuffers\");\r\n  ignoredModuleProp(\"INITIAL_MEMORY\");\r\n  ignoredModuleProp(\"wasmMemory\");\r\n  ignoredModuleProp(\"arguments\");\r\n  ignoredModuleProp(\"buffer\");\r\n  ignoredModuleProp(\"canvas\");\r\n  ignoredModuleProp(\"doNotCaptureKeyboard\");\r\n  ignoredModuleProp(\"dynamicLibraries\");\r\n  ignoredModuleProp(\"elementPointerLock\");\r\n  ignoredModuleProp(\"extraStackTrace\");\r\n  ignoredModuleProp(\"forcedAspectRatio\");\r\n  ignoredModuleProp(\"instantiateWasm\");\r\n  ignoredModuleProp(\"keyboardListeningElement\");\r\n  ignoredModuleProp(\"freePreloadedMediaOnUse\");\r\n  ignoredModuleProp(\"loadSplitModule\");\r\n  ignoredModuleProp(\"logReadFiles\");\r\n  ignoredModuleProp(\"mainScriptUrlOrBlob\");\r\n  ignoredModuleProp(\"mem\");\r\n  ignoredModuleProp(\"monitorRunDependencies\");\r\n  ignoredModuleProp(\"noExitRuntime\");\r\n  ignoredModuleProp(\"noInitialRun\");\r\n  ignoredModuleProp(\"onAbort\");\r\n  ignoredModuleProp(\"onCustomMessage\");\r\n  ignoredModuleProp(\"onExit\");\r\n  ignoredModuleProp(\"onFree\");\r\n  ignoredModuleProp(\"onFullScreen\");\r\n  ignoredModuleProp(\"onMalloc\");\r\n  ignoredModuleProp(\"onRealloc\");\r\n  ignoredModuleProp(\"onRuntimeInitialized\");\r\n  ignoredModuleProp(\"postMainLoop\");\r\n  ignoredModuleProp(\"postRun\");\r\n  ignoredModuleProp(\"preInit\");\r\n  ignoredModuleProp(\"preMainLoop\");\r\n  ignoredModuleProp(\"preRun\");\r\n  ignoredModuleProp(\"preinitializedWebGLContext\");\r\n  ignoredModuleProp(\"preloadPlugins\");\r\n  ignoredModuleProp(\"print\");\r\n  ignoredModuleProp(\"printErr\");\r\n  ignoredModuleProp(\"setStatus\");\r\n  ignoredModuleProp(\"statusMessage\");\r\n  ignoredModuleProp(\"stderr\");\r\n  ignoredModuleProp(\"stdin\");\r\n  ignoredModuleProp(\"stdout\");\r\n  ignoredModuleProp(\"thisProgram\");\r\n  ignoredModuleProp(\"wasm\");\r\n  ignoredModuleProp(\"wasmBinary\");\r\n  ignoredModuleProp(\"websocket\");\r\n  ignoredModuleProp(\"fetchSettings\");\r\n}\r\n\r\nvar wasmImports;\r\n\r\nfunction assignWasmImports() {\r\n  wasmImports = {\r\n    /** @export */ __assert_fail: ___assert_fail,\r\n    /** @export */ __cxa_begin_catch: ___cxa_begin_catch,\r\n    /** @export */ __cxa_end_catch: ___cxa_end_catch,\r\n    /** @export */ __cxa_find_matching_catch_2: ___cxa_find_matching_catch_2,\r\n    /** @export */ __cxa_find_matching_catch_3: ___cxa_find_matching_catch_3,\r\n    /** @export */ __cxa_rethrow: ___cxa_rethrow,\r\n    /** @export */ __cxa_rethrow_primary_exception: ___cxa_rethrow_primary_exception,\r\n    /** @export */ __cxa_throw: ___cxa_throw,\r\n    /** @export */ __cxa_uncaught_exceptions: ___cxa_uncaught_exceptions,\r\n    /** @export */ __pthread_create_js: ___pthread_create_js,\r\n    /** @export */ __resumeException: ___resumeException,\r\n    /** @export */ _abort_js: __abort_js,\r\n    /** @export */ _embind_finalize_value_object: __embind_finalize_value_object,\r\n    /** @export */ _embind_register_bigint: __embind_register_bigint,\r\n    /** @export */ _embind_register_bool: __embind_register_bool,\r\n    /** @export */ _embind_register_class: __embind_register_class,\r\n    /** @export */ _embind_register_class_constructor: __embind_register_class_constructor,\r\n    /** @export */ _embind_register_class_function: __embind_register_class_function,\r\n    /** @export */ _embind_register_class_property: __embind_register_class_property,\r\n    /** @export */ _embind_register_emval: __embind_register_emval,\r\n    /** @export */ _embind_register_float: __embind_register_float,\r\n    /** @export */ _embind_register_function: __embind_register_function,\r\n    /** @export */ _embind_register_integer: __embind_register_integer,\r\n    /** @export */ _embind_register_memory_view: __embind_register_memory_view,\r\n    /** @export */ _embind_register_optional: __embind_register_optional,\r\n    /** @export */ _embind_register_std_string: __embind_register_std_string,\r\n    /** @export */ _embind_register_std_wstring: __embind_register_std_wstring,\r\n    /** @export */ _embind_register_value_object: __embind_register_value_object,\r\n    /** @export */ _embind_register_value_object_field: __embind_register_value_object_field,\r\n    /** @export */ _embind_register_void: __embind_register_void,\r\n    /** @export */ _emscripten_init_main_thread_js: __emscripten_init_main_thread_js,\r\n    /** @export */ _emscripten_notify_mailbox_postmessage: __emscripten_notify_mailbox_postmessage,\r\n    /** @export */ _emscripten_receive_on_main_thread_js: __emscripten_receive_on_main_thread_js,\r\n    /** @export */ _emscripten_thread_cleanup: __emscripten_thread_cleanup,\r\n    /** @export */ _emscripten_thread_mailbox_await: __emscripten_thread_mailbox_await,\r\n    /** @export */ _emscripten_thread_set_strongref: __emscripten_thread_set_strongref,\r\n    /** @export */ _emval_as: __emval_as,\r\n    /** @export */ _emval_decref: __emval_decref,\r\n    /** @export */ _emval_get_property: __emval_get_property,\r\n    /** @export */ _emval_new_cstring: __emval_new_cstring,\r\n    /** @export */ _emval_run_destructors: __emval_run_destructors,\r\n    /** @export */ _emval_take_value: __emval_take_value,\r\n    /** @export */ _tzset_js: __tzset_js,\r\n    /** @export */ clock_time_get: _clock_time_get,\r\n    /** @export */ emscripten_check_blocking_allowed: _emscripten_check_blocking_allowed,\r\n    /** @export */ emscripten_exit_with_live_runtime: _emscripten_exit_with_live_runtime,\r\n    /** @export */ emscripten_get_heap_max: _emscripten_get_heap_max,\r\n    /** @export */ emscripten_get_now: _emscripten_get_now,\r\n    /** @export */ emscripten_num_logical_cores: _emscripten_num_logical_cores,\r\n    /** @export */ emscripten_resize_heap: _emscripten_resize_heap,\r\n    /** @export */ emscripten_runtime_keepalive_check: _emscripten_runtime_keepalive_check,\r\n    /** @export */ environ_get: _environ_get,\r\n    /** @export */ environ_sizes_get: _environ_sizes_get,\r\n    /** @export */ exit: _exit,\r\n    /** @export */ fd_close: _fd_close,\r\n    /** @export */ fd_read: _fd_read,\r\n    /** @export */ fd_seek: _fd_seek,\r\n    /** @export */ fd_write: _fd_write,\r\n    /** @export */ invoke_diii,\r\n    /** @export */ invoke_fiii,\r\n    /** @export */ invoke_i,\r\n    /** @export */ invoke_ii,\r\n    /** @export */ invoke_iii,\r\n    /** @export */ invoke_iiii,\r\n    /** @export */ invoke_iiiii,\r\n    /** @export */ invoke_iiiiid,\r\n    /** @export */ invoke_iiiiii,\r\n    /** @export */ invoke_iiiiiii,\r\n    /** @export */ invoke_iiiiiiii,\r\n    /** @export */ invoke_iiiiiiiiiii,\r\n    /** @export */ invoke_iiiiiiiiiiii,\r\n    /** @export */ invoke_iiiiiiiiiiiii,\r\n    /** @export */ invoke_jiiii,\r\n    /** @export */ invoke_v,\r\n    /** @export */ invoke_vi,\r\n    /** @export */ invoke_vii,\r\n    /** @export */ invoke_viii,\r\n    /** @export */ invoke_viiii,\r\n    /** @export */ invoke_viiiiiii,\r\n    /** @export */ invoke_viiiiiiiiii,\r\n    /** @export */ invoke_viiiiiiiiiiiiiii,\r\n    /** @export */ memory: wasmMemory,\r\n    /** @export */ random_get: _random_get\r\n  };\r\n}\r\n\r\nvar wasmExports = await createWasm();\r\n\r\nvar ___wasm_call_ctors = createExportWrapper(\"__wasm_call_ctors\", 0);\r\n\r\nvar ___getTypeName = createExportWrapper(\"__getTypeName\", 1);\r\n\r\nvar __embind_initialize_bindings = createExportWrapper(\"_embind_initialize_bindings\", 0);\r\n\r\nvar _main = Module[\"_main\"] = createExportWrapper(\"main\", 2);\r\n\r\nvar _initBoids = Module[\"_initBoids\"] = createExportWrapper(\"initBoids\", 3);\r\n\r\nvar _build = Module[\"_build\"] = createExportWrapper(\"build\", 2);\r\n\r\nvar _posPtr = Module[\"_posPtr\"] = createExportWrapper(\"posPtr\", 0);\r\n\r\nvar _velPtr = Module[\"_velPtr\"] = createExportWrapper(\"velPtr\", 0);\r\n\r\nvar _boidCount = Module[\"_boidCount\"] = createExportWrapper(\"boidCount\", 0);\r\n\r\nvar _update = Module[\"_update\"] = createExportWrapper(\"update\", 1);\r\n\r\nvar _setFlockSize = Module[\"_setFlockSize\"] = createExportWrapper(\"setFlockSize\", 3);\r\n\r\nvar _setSpeciesParams = Module[\"_setSpeciesParams\"] = createExportWrapper(\"setSpeciesParams\", 1);\r\n\r\nvar _free = Module[\"_free\"] = createExportWrapper(\"free\", 1);\r\n\r\nvar _pthread_self = () => (_pthread_self = wasmExports[\"pthread_self\"])();\r\n\r\nvar __emscripten_tls_init = createExportWrapper(\"_emscripten_tls_init\", 0);\r\n\r\nvar __emscripten_proxy_main = Module[\"__emscripten_proxy_main\"] = createExportWrapper(\"_emscripten_proxy_main\", 2);\r\n\r\nvar _emscripten_stack_get_base = () => (_emscripten_stack_get_base = wasmExports[\"emscripten_stack_get_base\"])();\r\n\r\nvar _emscripten_stack_get_end = () => (_emscripten_stack_get_end = wasmExports[\"emscripten_stack_get_end\"])();\r\n\r\nvar __emscripten_thread_init = createExportWrapper(\"_emscripten_thread_init\", 6);\r\n\r\nvar __emscripten_thread_crashed = createExportWrapper(\"_emscripten_thread_crashed\", 0);\r\n\r\nvar _fflush = createExportWrapper(\"fflush\", 1);\r\n\r\nvar _malloc = Module[\"_malloc\"] = createExportWrapper(\"malloc\", 1);\r\n\r\nvar __emscripten_run_on_main_thread_js = createExportWrapper(\"_emscripten_run_on_main_thread_js\", 5);\r\n\r\nvar __emscripten_thread_free_data = createExportWrapper(\"_emscripten_thread_free_data\", 1);\r\n\r\nvar __emscripten_thread_exit = createExportWrapper(\"_emscripten_thread_exit\", 1);\r\n\r\nvar _strerror = createExportWrapper(\"strerror\", 1);\r\n\r\nvar __emscripten_check_mailbox = createExportWrapper(\"_emscripten_check_mailbox\", 0);\r\n\r\nvar _setThrew = createExportWrapper(\"setThrew\", 2);\r\n\r\nvar __emscripten_tempret_set = createExportWrapper(\"_emscripten_tempret_set\", 1);\r\n\r\nvar _emscripten_stack_init = () => (_emscripten_stack_init = wasmExports[\"emscripten_stack_init\"])();\r\n\r\nvar _emscripten_stack_set_limits = (a0, a1) => (_emscripten_stack_set_limits = wasmExports[\"emscripten_stack_set_limits\"])(a0, a1);\r\n\r\nvar _emscripten_stack_get_free = () => (_emscripten_stack_get_free = wasmExports[\"emscripten_stack_get_free\"])();\r\n\r\nvar __emscripten_stack_restore = a0 => (__emscripten_stack_restore = wasmExports[\"_emscripten_stack_restore\"])(a0);\r\n\r\nvar __emscripten_stack_alloc = a0 => (__emscripten_stack_alloc = wasmExports[\"_emscripten_stack_alloc\"])(a0);\r\n\r\nvar _emscripten_stack_get_current = () => (_emscripten_stack_get_current = wasmExports[\"emscripten_stack_get_current\"])();\r\n\r\nvar ___cxa_decrement_exception_refcount = createExportWrapper(\"__cxa_decrement_exception_refcount\", 1);\r\n\r\nvar ___cxa_increment_exception_refcount = createExportWrapper(\"__cxa_increment_exception_refcount\", 1);\r\n\r\nvar ___cxa_free_exception = createExportWrapper(\"__cxa_free_exception\", 1);\r\n\r\nvar ___get_exception_message = createExportWrapper(\"__get_exception_message\", 3);\r\n\r\nvar ___cxa_can_catch = createExportWrapper(\"__cxa_can_catch\", 3);\r\n\r\nvar ___cxa_get_exception_ptr = createExportWrapper(\"__cxa_get_exception_ptr\", 1);\r\n\r\nfunction invoke_ii(index, a1) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iii(index, a1, a2) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_vii(index, a1, a2) {\r\n  var sp = stackSave();\r\n  try {\r\n    getWasmTableEntry(index)(a1, a2);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iiii(index, a1, a2, a3) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_vi(index, a1) {\r\n  var sp = stackSave();\r\n  try {\r\n    getWasmTableEntry(index)(a1);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_i(index) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)();\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_v(index) {\r\n  var sp = stackSave();\r\n  try {\r\n    getWasmTableEntry(index)();\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iiiiiii(index, a1, a2, a3, a4, a5, a6) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_viiii(index, a1, a2, a3, a4) {\r\n  var sp = stackSave();\r\n  try {\r\n    getWasmTableEntry(index)(a1, a2, a3, a4);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iiiiii(index, a1, a2, a3, a4, a5) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iiiiid(index, a1, a2, a3, a4, a5) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3, a4, a5);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_viii(index, a1, a2, a3) {\r\n  var sp = stackSave();\r\n  try {\r\n    getWasmTableEntry(index)(a1, a2, a3);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iiiii(index, a1, a2, a3, a4) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3, a4);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_jiiii(index, a1, a2, a3, a4) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3, a4);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n    return 0n;\r\n  }\r\n}\r\n\r\nfunction invoke_iiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_fiii(index, a1, a2, a3) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_diii(index, a1, a2, a3) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {\r\n  var sp = stackSave();\r\n  try {\r\n    getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {\r\n  var sp = stackSave();\r\n  try {\r\n    return getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_viiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\r\n  var sp = stackSave();\r\n  try {\r\n    getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_viiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {\r\n  var sp = stackSave();\r\n  try {\r\n    getWasmTableEntry(index)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);\r\n  } catch (e) {\r\n    stackRestore(sp);\r\n    if (!(e instanceof EmscriptenEH)) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\n// include: postamble.js\r\n// === Auto-generated postamble setup entry stuff ===\r\nvar calledRun;\r\n\r\nfunction callMain() {\r\n  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on Module[\"onRuntimeInitialized\"])');\r\n  assert(typeof onPreRuns === \"undefined\" || onPreRuns.length == 0, \"cannot call main when preRun functions remain to be called\");\r\n  var entryFunction = __emscripten_proxy_main;\r\n  // With PROXY_TO_PTHREAD make sure we keep the runtime alive until the\r\n  // proxied main calls exit (see exitOnMainThread() for where Pop is called).\r\n  runtimeKeepalivePush();\r\n  var argc = 0;\r\n  var argv = 0;\r\n  try {\r\n    var ret = entryFunction(argc, argv);\r\n    // if we're not running an evented main loop, it's time to exit\r\n    exitJS(ret, /* implicit = */ true);\r\n    return ret;\r\n  } catch (e) {\r\n    return handleException(e);\r\n  }\r\n}\r\n\r\nfunction stackCheckInit() {\r\n  // This is normally called automatically during __wasm_call_ctors but need to\r\n  // get these values before even running any of the ctors so we call it redundantly\r\n  // here.\r\n  // See $establishStackSpace for the equivalent code that runs on a thread\r\n  assert(!ENVIRONMENT_IS_PTHREAD);\r\n  _emscripten_stack_init();\r\n  // TODO(sbc): Move writeStackCookie to native to to avoid this.\r\n  writeStackCookie();\r\n}\r\n\r\nfunction run() {\r\n  if (runDependencies > 0) {\r\n    dependenciesFulfilled = run;\r\n    return;\r\n  }\r\n  if ((ENVIRONMENT_IS_PTHREAD)) {\r\n    readyPromiseResolve(Module);\r\n    initRuntime();\r\n    return;\r\n  }\r\n  stackCheckInit();\r\n  preRun();\r\n  // a preRun added a dependency, run will be called later\r\n  if (runDependencies > 0) {\r\n    dependenciesFulfilled = run;\r\n    return;\r\n  }\r\n  function doRun() {\r\n    // run may have just been called through dependencies being fulfilled just in this very frame,\r\n    // or while the async setStatus time below was happening\r\n    assert(!calledRun);\r\n    calledRun = true;\r\n    Module[\"calledRun\"] = true;\r\n    if (ABORT) return;\r\n    initRuntime();\r\n    preMain();\r\n    readyPromiseResolve(Module);\r\n    var noInitialRun = false;\r\n    if (!noInitialRun) callMain();\r\n    postRun();\r\n  }\r\n  {\r\n    doRun();\r\n  }\r\n  checkStackCookie();\r\n}\r\n\r\nfunction checkUnflushedContent() {\r\n  // Compiler settings do not allow exiting the runtime, so flushing\r\n  // the streams is not possible. but in ASSERTIONS mode we check\r\n  // if there was something to flush, and if so tell the user they\r\n  // should request that the runtime be exitable.\r\n  // Normally we would not even include flush() at all, but in ASSERTIONS\r\n  // builds we do so just for this check, and here we see if there is any\r\n  // content to flush, that is, we check if there would have been\r\n  // something a non-ASSERTIONS build would have not seen.\r\n  // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0\r\n  // mode (which has its own special function for this; otherwise, all\r\n  // the code is inside libc)\r\n  var oldOut = out;\r\n  var oldErr = err;\r\n  var has = false;\r\n  out = err = x => {\r\n    has = true;\r\n  };\r\n  try {\r\n    // it doesn't matter if it fails\r\n    _fflush(0);\r\n    // also flush in the JS FS layer\r\n    [ \"stdout\", \"stderr\" ].forEach(name => {\r\n      var info = FS.analyzePath(\"/dev/\" + name);\r\n      if (!info) return;\r\n      var stream = info.object;\r\n      var rdev = stream.rdev;\r\n      var tty = TTY.ttys[rdev];\r\n      if (tty?.output?.length) {\r\n        has = true;\r\n      }\r\n    });\r\n  } catch (e) {}\r\n  out = oldOut;\r\n  err = oldErr;\r\n  if (has) {\r\n    warnOnce(\"stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the Emscripten FAQ), or make sure to emit a newline when you printf etc.\");\r\n  }\r\n}\r\n\r\nfunction preInit() {}\r\n\r\npreInit();\r\n\r\nrun();\r\n\r\n// end include: postamble.js\r\n// include: postamble_modularize.js\r\n// In MODULARIZE mode we wrap the generated code in a factory function\r\n// and return either the Module itself, or a promise of the module.\r\n// We assign to the `moduleRtn` global here and configure closure to see\r\n// this as and extern so it won't get minified.\r\nmoduleRtn = readyPromise;\r\n\r\n// Assertion for attempting to access module properties on the incoming\r\n// moduleArg.  In the past we used this object as the prototype of the module\r\n// and assigned properties to it, but now we return a distinct object.  This\r\n// keeps the instance private until it is ready (i.e the promise has been\r\n// resolved).\r\nfor (const prop of Object.keys(Module)) {\r\n  if (!(prop in moduleArg)) {\r\n    Object.defineProperty(moduleArg, prop, {\r\n      configurable: true,\r\n      get() {\r\n        abort(`Access to module property ('${prop}') is no longer possible via the module constructor argument; Instead, use the result of the module constructor.`);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\n  return moduleRtn;\r\n}\r\n);\r\n})();\r\nexport default createBoidsModule;\r\nvar isPthread = globalThis.self?.name?.startsWith('em-pthread');\r\n// When running as a pthread, construct a new instance on startup\r\nisPthread && createBoidsModule();\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"b74f88c5\" + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/wasm-boids/\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t57: 0,\n\t580: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkwasm_boids\"] = self[\"webpackChunkwasm_boids\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], () => (__webpack_require__(17)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["class","type","settings","min","max","step","flockSize","number","cohesion","cohesionRange","separation","separationRange","alignment","alignmentRange","maxSpeed","maxTurnAngle","maxNeighbors","lambda","horizontalTorque","velocityEpsilon","torqueStrength","props","Object","required","__exports__","render","FRAME_INTERVAL","wasmModule","console","error","posPtr","cwrap","velPtr","boidCount","initBoids","build","update","setFlockSize","DEFAULT_SETTINGS","loadSettings","saved","localStorage","getItem","JSON","parse","threeContainer","scene","camera","renderer","controls","composer","paused","showUnits","showUnitSpheres","showUnitLines","unitLayer","stats","animationTimer","handleKeydown","e","code","value","initThreeJS","width","window","innerWidth","height","innerHeight","background","fog","position","set","lookAt","antialias","setPixelRatio","devicePixelRatio","setSize","shadowMap","enabled","appendChild","domElement","aspect","updateProjectionMatrix","OrbitControls","enableDamping","dampingFactor","groundGeo","groundMat","color","roughness","ground","rotation","x","Math","PI","y","receiveShadow","add","ambientLight","dirLight","castShadow","shadow","left","right","top","bottom","near","far","mapSize","bias","normalBias","isMobileDevice","EffectComposer","renderPass","RenderPass","addPass","ssaoPass","SSAOPass","kernelRadius","minDistance","maxDistance","bloomPass","UnrealBloomPass","addEventListener","onWindowResize","instancedMeshHigh","instancedMeshLow","boidGeometryHigh","boidGeometryLow","boidMaterial","initInstancedBoids","count","remove","material","positions","velocities","animate","begin","Float32Array","HEAPF32","buffer","dummy","cameraPosition","i","dir","lengthSq","quaternion","setFromUnitVectors","clone","normalize","identity","updateMatrix","distanceSq","distanceToSquared","setMatrixAt","matrix","instanceMatrix","needsUpdate","end","setTimeout","startSimulation","test","navigator","userAgent","resetSettings","assign","scale","showPanel","document","body","dom","style","zIndex","setGlobalSpeciesParamsFromJS","raw","Number","newSize","val","setItem","stringify","deep","log","locateFile","path","endsWith","then","Module","app","App","provide","mount","createBoidsModule","moduleArg","moduleRtn","readyPromiseResolve","readyPromiseReject","readyPromise","Promise","resolve","reject","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","WorkerGlobalScope","ENVIRONMENT_IS_NODE","process","versions","node","ENVIRONMENT_IS_SHELL","ENVIRONMENT_IS_PTHREAD","self","name","startsWith","assert","globalThis","moduleLoaded","readAsync","readBinary","thisProgram","quit_","status","toThrow","_scriptName","scriptDirectory","Error","URL","href","url","xhr","XMLHttpRequest","open","responseType","send","Uint8Array","async","isFileURI","response","fetch","credentials","ok","arrayBuffer","wasmBinary","wasmMemory","out","bind","err","WebAssembly","EXITSTATUS","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAP64","HEAPU64","HEAPF64","ABORT","condition","text","abort","runtimeInitialized","filename","writeStackCookie","_emscripten_stack_get_end","GROWABLE_HEAP_U32","checkStackCookie","cookie1","cookie2","ptrToString","EmscriptenEH","CppException","constructor","excPtr","super","this","excInfo","getExceptionMessage","message","wasmModuleReceived","runtimeDebug","dbg","args","warn","ignoredModuleProp","prop","getOwnPropertyDescriptor","isExportedByForceFilesystem","hookGlobalSymbolAccess","sym","func","defineProperty","configurable","get","missingGlobal","msg","warnOnce","missingLibrarySymbol","librarySymbol","unexportedRuntimeSymbol","initWorkerLogging","getLogPrefix","t","_pthread_self","workerID","origDbg","GROWABLE_HEAP_I8","updateMemoryViews","GROWABLE_HEAP_U8","GROWABLE_HEAP_I16","GROWABLE_HEAP_U16","GROWABLE_HEAP_I32","GROWABLE_HEAP_F32","GROWABLE_HEAP_F64","h16","Int16Array","h8","Int8Array","initializedJS","handleMessage","msgData","cmd","messageQueue","onmessage","push","startWorker","instance","postMessage","handler","handlers","proxy","pthread_ptr","establishStackSpace","__emscripten_thread_init","PThread","threadInitTLS","__emscripten_thread_mailbox_await","__embind_initialize_bindings","invokeEntryPoint","start_routine","arg","ex","target","checkMailbox","stack","__emscripten_thread_crashed","onunhandledrejection","reason","b","Uint16Array","Int32Array","Uint32Array","Float64Array","BigInt64Array","BigUint64Array","initMemory","INITIAL_MEMORY","Memory","preRun","callRuntimeCallbacks","onPreRuns","initRuntime","FS","initialized","init","TTY","wasmExports","ignorePermissions","preMain","postRun","undefined","prototype","subarray","wasmBinaryFile","runDependencies","dependenciesFulfilled","runDependencyTracking","runDependencyWatcher","getUniqueRunDependency","id","orig","random","addRunDependency","setInterval","clearInterval","shown","dep","removeRunDependency","callback","what","RuntimeError","createExportWrapper","nargs","f","length","findWasmBinary","getBinarySync","file","getWasmBinary","binaryFile","instantiateArrayBuffer","imports","binary","instantiate","instantiateAsync","instantiateStreaming","instantiationResult","getWasmImports","assignWasmImports","wasmImports","createWasm","receiveInstance","module","exports","registerTLSInit","wasmTable","trueModule","receiveInstantiationResult","result","info","Instance","ExitStatus","terminateWorker","worker","terminate","cleanupThread","pthreads","returnWorkerToPool","callbacks","shift","addOnPreRun","cb","spawnThread","threadParams","getNewWorker","runningWorkers","startRoutine","transferList","runtimeKeepaliveCounter","keepRuntimeAlive","stackSave","_emscripten_stack_get_current","stackRestore","__emscripten_stack_restore","stackAlloc","sz","__emscripten_stack_alloc","proxyToMainThread","funcIndex","emAsmAddr","sync","callArgs","serializedNumCallArgs","sp","rtn","__emscripten_run_on_main_thread_js","_proc_exit","terminateAllThreads","runtimeKeepalivePop","exitOnMainThread","returnCode","_exit","exitJS","implicit","checkUnflushedContent","ptr","toString","padStart","unusedWorkers","tlsInitFunctions","nextWorkerID","initMainThread","pthreadPoolSize","hardwareConcurrency","allocateUnusedWorker","loadWasmModuleToAllWorkers","splice","indexOf","__emscripten_thread_free_data","forEach","loadWasmModuleToWorker","onFinishedLoading","d","targetThread","targetWorker","thread","loaded","onerror","lineno","knownHandlers","propertyIsEnumerable","onMaybeReady","pthreadPoolReady","all","map","Worker","pop","stackHigh","stackSize","stackLow","_emscripten_stack_set_limits","wasmTableMirror","getWasmTableEntry","funcPtr","finish","__emscripten_thread_exit","tlsInitFunc","runtimeKeepalivePush","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","NaN","endIdx","endPtr","decode","ArrayBuffer","slice","str","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","___assert_fail","line","exceptionCaught","uncaughtExceptionCount","___cxa_begin_catch","ExceptionInfo","get_caught","set_caught","set_rethrown","___cxa_increment_exception_refcount","___cxa_get_exception_ptr","exceptionLast","___cxa_end_catch","_setThrew","___cxa_decrement_exception_refcount","set_type","get_type","set_destructor","destructor","get_destructor","caught","rethrown","get_rethrown","set_adjusted_ptr","adjustedPtr","get_adjusted_ptr","setTempRet0","__emscripten_tempret_set","findMatchingCatch","thrown","thrownType","caughtType","adjusted_ptr_addr","___cxa_can_catch","___cxa_find_matching_catch_2","___cxa_find_matching_catch_3","arg0","___cxa_rethrow","___cxa_rethrow_primary_exception","___cxa_throw","___cxa_uncaught_exceptions","pthreadCreateProxied","attr","___pthread_create_js","_emscripten_has_threading_support","SharedArrayBuffer","___resumeException","__abort_js","structRegistrations","runDestructors","destructors","del","readPointer","pointer","embind_charCodes","awaitingDependencies","registeredTypes","typeDependencies","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","Array","unregisteredTypes","registered","dt","hasOwnProperty","__embind_finalize_value_object","structType","reg","rawConstructor","rawDestructor","fieldRecords","fields","fieldTypes","field","getterReturnType","concat","setterArgumentType","fieldName","optional","getter","getterContext","setter","setterContext","read","write","o","rv","TypeError","argPackAdvance","GenericWireTypeSize","destructorFunction","embindRepr","v","embind_init_charCodes","codes","readLatin1String","ret","c","BindingError","throwBindingError","sharedRegisterType","rawType","registeredInstance","options","ignoreDuplicateRegistrations","integerReadValueFromPointer","signed","__embind_register_bigint","primitiveType","size","minRange","maxRange","isUnsignedType","BigInt","__embind_register_bool","trueValue","falseValue","wt","shallowCopyInternalPointer","deleteScheduled","preservePointerOnDelete","ptrType","smartPtr","smartPtrType","throwInstanceAlreadyDeleted","obj","getInstanceTypeName","handle","$$","registeredClass","finalizationRegistry","detachFinalizer","runDestructor","releaseClassHandle","toDelete","downcastPointer","ptrClass","desiredClass","baseClass","downcast","registeredPointers","registeredInstances","getBasestPointer","class_","upcast","getInheritedInstance","makeClassHandle","record","hasSmartPtrType","hasSmartPtr","attachFinalizer","create","writable","RegisteredPointer_fromWireType","rawPointer","getPointee","makeDefaultHandle","isSmartPointer","instancePrototype","pointeeType","toType","actualType","getActualType","registeredPointerRecord","call","isConst","constPointerType","pointerType","dp","delayFunction","FinalizationRegistry","leakWarning","cls","captureStackTrace","replace","register","unregister","deletionQueue","flushPendingDeletes","init_ClassHandle","proto","ClassHandle","other","leftClass","rightClass","getPrototypeOf","symbolDispose","Symbol","dispose","createNamedFunction","ensureOverloadTable","methodName","humanName","overloadTable","prevFunc","apply","argCount","exposePublicSymbol","numArguments","char_0","char_9","makeLegalFunctionName","charCodeAt","RegisteredClass","pureVirtualFunctions","upcastPointer","constNoSmartPtrRawPointerToWireType","isReference","handleClass","genericPointerToWireType","sharingPolicy","clonedHandle","rawShare","Emval","toHandle","nonConstNoSmartPtrRawPointerToWireType","init_RegisteredPointer","RegisteredPointer","rawGetPointee","replacePublicSymbol","embind__requireFunction","signature","rawFunction","isAsync","makeDynCaller","fp","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","visit","join","__embind_register_class","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","constructor_body","keys","__derivedClasses","referenceConverter","pointerConverter","constPointerConverter","heap32VectorToArray","firstElement","array","usesDestructorStack","argTypes","checkArgCount","numArgs","minArgs","maxArgs","argCountMessage","createJsInvoker","isClassMethodFunc","returns","needsDestructorStack","argsList","argsListWired","invokerFnBody","dtorStack","args1","paramName","getRequiredArgCount","requiredArgCount","craftInvokerFunction","classType","cppInvokerFunc","cppTargetFunc","expectedArgCount","closureArgs","invokerFn","Function","__embind_register_class_constructor","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","getFunctionName","trim","argsIndex","__embind_register_class_function","rawInvoker","context","isPureVirtual","isNonnullReturn","unboundTypesHandler","substring","method","className","memberFunction","validateThis","this_","__embind_register_class_property","getterSignature","setterSignature","desc","enumerable","emval_freelist","emval_handles","__emval_decref","count_emval_handles","init_emval","toValue","EmValType","__embind_register_emval","floatReadValueFromPointer","__embind_register_float","__embind_register_function","fn","invokerArgsArray","__embind_register_integer","fromWireType","bitshift","toWireType","includes","checkAssertions","toTypeName","__embind_register_memory_view","dataTypeIndex","typeMapping","TA","decodeMemoryView","data","EmValOptionalType","__embind_register_optional","rawOptionalType","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","u","stringToUTF8","outPtr","lengthBytesUTF8","len","__embind_register_std_string","stdStringIsUTF8","payload","decodeStartPtr","currentBytePtr","maxRead","stringSegment","a","valueIsOfTypeString","isView","BYTES_PER_ELEMENT","_malloc","charCode","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","trailSurrogate","lengthBytesUTF32","__embind_register_std_wstring","charSize","decodeString","encodeString","readCharAt","lengthBytesUTF","maxReadBytes","__embind_register_value_object","constructorSignature","__embind_register_value_object_field","__embind_register_void","isVoid","__emscripten_init_main_thread_js","tb","handleException","maybeExit","callUserCallback","Atomics","waitAsync","wait","waitingAsync","store","__emscripten_check_mailbox","__emscripten_notify_mailbox_postmessage","currThreadId","proxiedJSCallArgs","__emscripten_receive_on_main_thread_js","callingThread","numCallArgs","proxiedFunctionTable","currentProxiedOperationCallerThread","__emscripten_thread_cleanup","__emscripten_thread_set_strongref","requireRegisteredType","impl","emval_returnValue","returnType","destructorsRef","__emval_as","__emval_get_property","key","emval_symbols","getStringOrSymbol","address","symbol","__emval_new_cstring","__emval_run_destructors","__emval_take_value","__tzset_js","timezone","daylight","std_name","dst_name","currentYear","Date","getFullYear","winter","summer","winterOffset","getTimezoneOffset","summerOffset","stdTimezoneOffset","extractZone","timezoneOffset","sign","absOffset","abs","hours","floor","minutes","winterName","summerName","_emscripten_get_now","performance","timeOrigin","now","_emscripten_date_now","nowIsMonotonic","checkWasiClock","clock_id","INT53_MAX","INT53_MIN","bigintToI53Checked","num","_clock_time_get","clk_id","ignored_precision","ptime","nsec","round","_emscripten_check_blocking_allowed","_emscripten_exit_with_live_runtime","getHeapMax","_emscripten_get_heap_max","_emscripten_num_logical_cores","alignMemory","ceil","growMemory","pages","byteLength","grow","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","cutDown","overGrownHeapSize","replacement","_emscripten_runtime_keepalive_check","ENV","getExecutableName","getEnvStrings","strings","lang","languages","env","_environ_get","__environ","environ_buf","bufSize","envp","string","Infinity","_environ_sizes_get","penviron_count","penviron_buf_size","PATH","isAbs","charAt","splitPath","splitPathRe","exec","normalizeArray","parts","allowAboveRoot","up","last","unshift","isAbsolute","trailingSlash","split","filter","p","dirname","root","basename","match","paths","join2","l","r","initRandomFill","view","crypto","getRandomValues","randomFill","PATH_FS","resolvedPath","resolvedAbsolute","cwd","relative","from","to","arr","start","fromParts","toParts","samePartsLength","outputParts","FS_stdin_getChar_buffer","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","FS_stdin_getChar","prompt","ttys","shutdown","dev","ops","input","output","registerDevice","stream_ops","stream","tty","rdev","ErrnoError","seekable","close","fsync","offset","pos","get_char","bytesRead","atime","put_char","mtime","ctime","default_tty_ops","ioctl_tcgets","c_iflag","c_oflag","c_cflag","c_lflag","c_cc","ioctl_tcsets","optional_actions","ioctl_tiocgwinsz","default_tty1_ops","mmapAlloc","MEMFS","ops_table","createNode","parent","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","CAPACITY_DOUBLING_MAX","oldContents","resizeFileStorage","ino","nlink","uid","gid","blksize","blocks","old_node","new_dir","new_name","new_node","lookupNode","hashRemoveNode","newname","oldpath","canOwn","whence","prot","flags","allocated","byteOffset","mmapFlags","asyncLoad","FS_createDataFile","createDataFile","preloadPlugins","FS_handledByPreloadPlugin","byteArray","fullname","Browser","handled","plugin","FS_createPreloadedFile","canRead","canWrite","onload","dontCreateFile","preFinish","processData","FS_modeStringToFlags","flagModes","FS_getMode","strError","errno","_strerror","ERRNO_CODES","mounts","devices","streams","nextInode","nameTable","currentPath","filesystems","syncFSRequests","FSStream","shared","object","isRead","isWrite","isAppend","FSNode","readMode","writeMode","mounted","isFolder","isDevice","lookupPath","opts","follow_mount","linkloop","nlinks","current","current_path","islast","noent_okay","isMountpoint","follow","isRoot","getPath","mountpoint","hashName","parentid","hash","hashAddNode","name_next","errCode","mayLookup","nodeName","destroyNode","isSocket","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","mayOpen","checkOpExists","op","MAX_OPEN_FDS","nextfd","fd","getStreamChecked","getStream","createStream","closeStream","dupStream","origStream","dup","doSetAttr","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","m","syncfs","populate","completed","doCallback","done","errored","pseudo","mountRoot","unmount","next","statfs","statfsNode","statfsStream","bsize","frsize","bfree","bavail","files","ffree","fsid","namelen","mkdir","mkdirTree","dirs","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","stat","dontFollow","fstat","lstat","doChmod","chmod","lchmod","fchmod","doChown","timestamp","chown","lchown","fchown","doTruncate","truncate","ftruncate","utime","isDirPath","created","ungotten","isClosed","getdents","seeking","bytesWritten","ioctl","readFile","encoding","buf","writeFile","actualNumBytes","chdir","createDefaultDirectories","createDefaultDevices","randomBuffer","randomLeft","randomByte","createDevice","createSpecialDirectories","proc_self","entries","k","createStandardStreams","stdin","stdout","stderr","staticInit","quit","_fflush","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","reverse","part","createFile","properties","forceLoadFile","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","setDataGetter","cacheLength","header","datalength","getResponseHeader","hasByteServing","usesGzip","doXHR","setRequestHeader","overrideMimeType","responseText","lazyArray","_length","_chunkSize","defineProperties","writeChunks","absolutePath","createFolder","createLink","joinPath","standardizePath","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","dirstream","getStreamFromFD","writeStat","getTime","writeStatFs","doMsync","addr","varargs","getStr","_fd_close","doReadv","iov","iovcnt","curr","_fd_read","pnum","_fd_seek","newOffset","isNaN","doWritev","_fd_write","_random_get","getCFunc","ident","writeArrayToMemory","stringToUTF8OnStack","ccall","toC","convertReturnValue","Boolean","cArgs","converter","onDone","incrementExceptionRefcount","decrementExceptionRefcount","getExceptionMessageCommon","type_addr_addr","message_addr_addr","___get_exception_message","type_addr","message_addr","createPreloadedFile","checkIncomingModuleAPI","missingLibrarySymbols","unexportedSymbols","__assert_fail","__cxa_begin_catch","__cxa_end_catch","__cxa_find_matching_catch_2","__cxa_find_matching_catch_3","__cxa_rethrow","__cxa_rethrow_primary_exception","__cxa_throw","__cxa_uncaught_exceptions","__pthread_create_js","__resumeException","_abort_js","_embind_finalize_value_object","_embind_register_bigint","_embind_register_bool","_embind_register_class","_embind_register_class_constructor","_embind_register_class_function","_embind_register_class_property","_embind_register_emval","_embind_register_float","_embind_register_function","_embind_register_integer","_embind_register_memory_view","_embind_register_optional","_embind_register_std_string","_embind_register_std_wstring","_embind_register_value_object","_embind_register_value_object_field","_embind_register_void","_emscripten_init_main_thread_js","_emscripten_notify_mailbox_postmessage","_emscripten_receive_on_main_thread_js","_emscripten_thread_cleanup","_emscripten_thread_mailbox_await","_emscripten_thread_set_strongref","_emval_as","_emval_decref","_emval_get_property","_emval_new_cstring","_emval_run_destructors","_emval_take_value","_tzset_js","clock_time_get","emscripten_check_blocking_allowed","emscripten_exit_with_live_runtime","emscripten_get_heap_max","emscripten_get_now","emscripten_num_logical_cores","emscripten_resize_heap","emscripten_runtime_keepalive_check","environ_get","environ_sizes_get","exit","fd_close","fd_read","fd_seek","fd_write","invoke_diii","invoke_fiii","invoke_i","invoke_ii","invoke_iii","invoke_iiii","invoke_iiiii","invoke_iiiiid","invoke_iiiiii","invoke_iiiiiii","invoke_iiiiiiii","invoke_iiiiiiiiiii","invoke_iiiiiiiiiiii","invoke_iiiiiiiiiiiii","invoke_jiiii","invoke_v","invoke_vi","invoke_vii","invoke_viii","invoke_viiii","invoke_viiiiiii","invoke_viiiiiiiiii","invoke_viiiiiiiiiiiiiii","memory","random_get","calledRun","__emscripten_proxy_main","_emscripten_stack_init","a0","a1","index","a2","a3","a4","a5","a6","a7","a8","a9","a10","a11","a12","a13","a14","a15","callMain","entryFunction","argc","argv","stackCheckInit","run","doRun","noInitialRun","oldOut","oldErr","has","preInit","isPthread","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","deferred","O","chunkIds","priority","notFulfilled","fulfilled","j","every","definition","chunkId","g","baseURI","location","installedChunks","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}