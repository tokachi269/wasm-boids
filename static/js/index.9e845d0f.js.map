{"version":3,"file":"static/js/index.9e845d0f.js","mappings":"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","sources":["webpack://wasm-boids/./src/components/Settings.vue","webpack://wasm-boids/./src/components/Settings.vue?b3ff","webpack://wasm-boids/./src/App.vue","webpack://wasm-boids/./src/App.vue?7ccd","webpack://wasm-boids/./src/main.js","webpack://wasm-boids/webpack/bootstrap","webpack://wasm-boids/webpack/runtime/chunk loaded","webpack://wasm-boids/webpack/runtime/define property getters","webpack://wasm-boids/webpack/runtime/global","webpack://wasm-boids/webpack/runtime/hasOwnProperty shorthand","webpack://wasm-boids/webpack/runtime/jsonp chunk loading","webpack://wasm-boids/webpack/startup"],"sourcesContent":["// filepath: d:\\GitHub\\wasm-boids\\src\\components\\Settings.vue\r\n<template>\r\n  <div class=\"settings\">\r\n    <details class=\"species-section\" :open=\"false\">\r\n      <summary class=\"species-header\">\r\n        {{ settings.species }} ({{ settings.count }}匹)\r\n      </summary>\r\n      <div class=\"species-content\">\r\n        <div class=\"setting-row\">\r\n          <label>種族名<br>(Species):</label>\r\n          <span>{{ settings.species }}</span>\r\n        </div>\r\n        <div class=\"setting-row\">\r\n          <label>群れの数(要更新)<br>(Count):</label>\r\n          <input type=\"range\" v-model.number=\"settings.count\" min=\"0\" max=\"50000\" step=\"1\" />\r\n          <span \r\n            v-if=\"!editingCount\" \r\n            class=\"editable-value\" \r\n            @click=\"startEditCount\"\r\n            title=\"クリックして編集\"\r\n          >{{ settings.count }}</span>\r\n          <input \r\n            v-if=\"editingCount\"\r\n            type=\"number\" \r\n            v-model.number=\"settings.count\" \r\n            min=\"0\" \r\n            max=\"20000\"\r\n            class=\"value-input\"\r\n            @blur=\"stopEditCount\"\r\n            @keyup.enter=\"stopEditCount\"\r\n            ref=\"countInput\"\r\n          />\r\n        </div><div class=\"setting-row\">\r\n      <label>凝集<br>(Cohesion):</label>\r\n      <input type=\"range\" v-model.number=\"settings.cohesion\" min=\"0\" max=\"40\" step=\"0.01\" />\r\n      <span \r\n        v-if=\"!editingCohesion\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditCohesion\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.cohesion }}</span>\r\n      <input \r\n        v-if=\"editingCohesion\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.cohesion\" \r\n        min=\"0\" \r\n        max=\"40\"\r\n        step=\"0.01\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditCohesion\"\r\n        @keyup.enter=\"stopEditCohesion\"\r\n        ref=\"cohesionInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>凝集範囲<br>(Cohesion Range):</label>\r\n      <input type=\"range\" v-model.number=\"settings.cohesionRange\" min=\"1\" max=\"300\" step=\"1\" />\r\n      <span \r\n        v-if=\"!editingCohesionRange\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditCohesionRange\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.cohesionRange }}</span>\r\n      <input \r\n        v-if=\"editingCohesionRange\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.cohesionRange\" \r\n        min=\"1\" \r\n        max=\"300\"\r\n        step=\"1\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditCohesionRange\"\r\n        @keyup.enter=\"stopEditCohesionRange\"\r\n        ref=\"cohesionRangeInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>分離<br>(Separation):</label>\r\n      <input type=\"range\" v-model.number=\"settings.separation\" min=\"0\" max=\"10\" step=\"0.01\" />\r\n      <span \r\n        v-if=\"!editingSeparation\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditSeparation\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.separation }}</span>\r\n      <input \r\n        v-if=\"editingSeparation\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.separation\" \r\n        min=\"0\" \r\n        max=\"10\"\r\n        step=\"0.01\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditSeparation\"\r\n        @keyup.enter=\"stopEditSeparation\"\r\n        ref=\"separationInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>分離範囲<br>(Separation Range):</label>\r\n      <input type=\"range\" v-model.number=\"settings.separationRange\" min=\"0.1\" max=\"10\" step=\"0.1\" />\r\n      <span \r\n        v-if=\"!editingSeparationRange\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditSeparationRange\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.separationRange }}</span>\r\n      <input \r\n        v-if=\"editingSeparationRange\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.separationRange\" \r\n        min=\"0.1\" \r\n        max=\"10\"\r\n        step=\"0.1\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditSeparationRange\"\r\n        @keyup.enter=\"stopEditSeparationRange\"\r\n        ref=\"separationRangeInput\"\r\n      />\r\n    </div>    <div class=\"setting-row\">\r\n      <label>整列<br>(Alignment):</label>\r\n      <input type=\"range\" v-model.number=\"settings.alignment\" min=\"0\" max=\"20\" step=\"0.01\" />\r\n      <span \r\n        v-if=\"!editingAlignment\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditAlignment\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.alignment }}</span>\r\n      <input \r\n        v-if=\"editingAlignment\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.alignment\" \r\n        min=\"0\" \r\n        max=\"20\"\r\n        step=\"0.01\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditAlignment\"\r\n        @keyup.enter=\"stopEditAlignment\"\r\n        ref=\"alignmentInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>整列範囲<br>(Alignment Range):</label>\r\n      <input type=\"range\" v-model.number=\"settings.alignmentRange\" min=\"1\" max=\"100\" step=\"1\" />\r\n      <span \r\n        v-if=\"!editingAlignmentRange\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditAlignmentRange\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.alignmentRange }}</span>\r\n      <input \r\n        v-if=\"editingAlignmentRange\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.alignmentRange\" \r\n        min=\"1\" \r\n        max=\"100\"\r\n        step=\"1\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditAlignmentRange\"\r\n        @keyup.enter=\"stopEditAlignmentRange\"\r\n        ref=\"alignmentRangeInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>最大速度<br>(Max Speed):</label>\r\n      <input type=\"range\" v-model.number=\"settings.maxSpeed\" min=\"0.1\" max=\"2\" step=\"0.01\" />\r\n      <span \r\n        v-if=\"!editingMaxSpeed\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditMaxSpeed\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.maxSpeed }}</span>\r\n      <input \r\n        v-if=\"editingMaxSpeed\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.maxSpeed\" \r\n        min=\"0.1\" \r\n        max=\"2\"\r\n        step=\"0.01\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditMaxSpeed\"\r\n        @keyup.enter=\"stopEditMaxSpeed\"\r\n        ref=\"maxSpeedInput\"\r\n      />\r\n    </div>    <div class=\"setting-row\">\r\n      <label>最大旋回角<br>(Max Turn Angle):</label>\r\n      <input type=\"range\" v-model.number=\"settings.maxTurnAngle\" min=\"0.001\" max=\"0.3\" step=\"0.001\" />\r\n      <span \r\n        v-if=\"!editingMaxTurnAngle\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditMaxTurnAngle\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.maxTurnAngle }}</span>\r\n      <input \r\n        v-if=\"editingMaxTurnAngle\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.maxTurnAngle\" \r\n        min=\"0.001\" \r\n        max=\"0.3\"\r\n        step=\"0.001\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditMaxTurnAngle\"\r\n        @keyup.enter=\"stopEditMaxTurnAngle\"\r\n        ref=\"maxTurnAngleInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>最大近傍数<br>(Max Neighbors):</label>\r\n      <input type=\"range\" v-model.number=\"settings.maxNeighbors\" min=\"0\" max=\"32\" step=\"1\" />\r\n      <span \r\n        v-if=\"!editingMaxNeighbors\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditMaxNeighbors\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.maxNeighbors }}</span>\r\n      <input \r\n        v-if=\"editingMaxNeighbors\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.maxNeighbors\" \r\n        min=\"0\" \r\n        max=\"32\"\r\n        step=\"1\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditMaxNeighbors\"\r\n        @keyup.enter=\"stopEditMaxNeighbors\"\r\n        ref=\"maxNeighborsInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>水平化トルク<br>(Horizontal Torque):</label>\r\n      <input type=\"range\" v-model.number=\"settings.horizontalTorque\" min=\"0.0\" max=\"0.2\" step=\"0.001\" />\r\n      <span \r\n        v-if=\"!editingHorizontalTorque\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditHorizontalTorque\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.horizontalTorque }}</span>\r\n      <input \r\n        v-if=\"editingHorizontalTorque\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.horizontalTorque\" \r\n        min=\"0.0\" \r\n        max=\"0.2\"\r\n        step=\"0.001\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditHorizontalTorque\"\r\n        @keyup.enter=\"stopEditHorizontalTorque\"\r\n        ref=\"horizontalTorqueInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>回転トルク強度<br>(Torque Strength):</label>\r\n      <input type=\"range\" v-model.number=\"settings.torqueStrength\" min=\"0.0\" max=\"20\" step=\"0.001\" />\r\n      <span \r\n        v-if=\"!editingTorqueStrength\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditTorqueStrength\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.torqueStrength }}</span>\r\n      <input \r\n        v-if=\"editingTorqueStrength\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.torqueStrength\" \r\n        min=\"0.0\" \r\n        max=\"5\"\r\n        step=\"0.001\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditTorqueStrength\"\r\n        @keyup.enter=\"stopEditTorqueStrength\"\r\n        ref=\"torqueStrengthInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>減衰係数<br>(Damping Coefficient):</label>\r\n      <input type=\"range\" v-model.number=\"settings.lambda\" min=\"0\" max=\"1\" step=\"0.001\" />\r\n      <span \r\n        v-if=\"!editingLambda\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditLambda\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.lambda }}</span>\r\n      <input \r\n        v-if=\"editingLambda\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.lambda\" \r\n        min=\"0\" \r\n        max=\"1\"\r\n        step=\"0.001\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditLambda\"\r\n        @keyup.enter=\"stopEditLambda\"\r\n        ref=\"lambdaInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>記憶時間<br>(Memory Time):</label>\r\n      <input type=\"range\" v-model.number=\"settings.tau\" min=\"0\" max=\"5\" step=\"0.01\" />\r\n      <span \r\n        v-if=\"!editingTau\" \r\n        class=\"editable-value\" \r\n        @click=\"startEditTau\"\r\n        title=\"クリックして編集\"\r\n      >{{ settings.tau }}</span>\r\n      <input \r\n        v-if=\"editingTau\"\r\n        type=\"number\" \r\n        v-model.number=\"settings.tau\" \r\n        min=\"0\" \r\n        max=\"5\"\r\n        step=\"0.01\"\r\n        class=\"value-input\"\r\n        @blur=\"stopEditTau\"\r\n        @keyup.enter=\"stopEditTau\"\r\n        ref=\"tauInput\"\r\n      />\r\n    </div>\r\n    <div class=\"setting-row\">\r\n      <label>捕食者フラグ<br>(Is Predator):</label>\r\n      <input type=\"checkbox\" v-model=\"settings.isPredator\" />\r\n      <span>{{ settings.isPredator }}</span>\r\n    </div>\r\n      </div>\r\n    </details>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, nextTick } from 'vue';\r\n\r\ndefineProps({\r\n  settings: {\r\n    type: Object,\r\n    required: true\r\n  }\r\n});\r\n\r\n// 編集状態のref\r\nconst editingCount = ref(false);\r\nconst editingCohesion = ref(false);\r\nconst editingCohesionRange = ref(false);\r\nconst editingSeparation = ref(false);\r\nconst editingSeparationRange = ref(false);\r\nconst editingAlignment = ref(false);\r\nconst editingAlignmentRange = ref(false);\r\nconst editingMaxSpeed = ref(false);\r\nconst editingMaxTurnAngle = ref(false);\r\nconst editingMaxNeighbors = ref(false);\r\nconst editingHorizontalTorque = ref(false);\r\nconst editingTorqueStrength = ref(false);\r\nconst editingLambda = ref(false);\r\nconst editingTau = ref(false);\r\n\r\n// 入力フィールドのref\r\nconst countInput = ref(null);\r\nconst cohesionInput = ref(null);\r\nconst cohesionRangeInput = ref(null);\r\nconst separationInput = ref(null);\r\nconst separationRangeInput = ref(null);\r\nconst alignmentInput = ref(null);\r\nconst alignmentRangeInput = ref(null);\r\nconst maxSpeedInput = ref(null);\r\nconst maxTurnAngleInput = ref(null);\r\nconst maxNeighborsInput = ref(null);\r\nconst horizontalTorqueInput = ref(null);\r\nconst torqueStrengthInput = ref(null);\r\nconst lambdaInput = ref(null);\r\nconst tauInput = ref(null);\r\n\r\n// 編集開始関数\r\nasync function startEditCount() {\r\n  editingCount.value = true;\r\n  await nextTick();\r\n  if (countInput.value) {\r\n    countInput.value.focus();\r\n    countInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditCohesion() {\r\n  editingCohesion.value = true;\r\n  await nextTick();\r\n  if (cohesionInput.value) {\r\n    cohesionInput.value.focus();\r\n    cohesionInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditCohesionRange() {\r\n  editingCohesionRange.value = true;\r\n  await nextTick();\r\n  if (cohesionRangeInput.value) {\r\n    cohesionRangeInput.value.focus();\r\n    cohesionRangeInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditSeparation() {\r\n  editingSeparation.value = true;\r\n  await nextTick();\r\n  if (separationInput.value) {\r\n    separationInput.value.focus();\r\n    separationInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditSeparationRange() {\r\n  editingSeparationRange.value = true;\r\n  await nextTick();\r\n  if (separationRangeInput.value) {\r\n    separationRangeInput.value.focus();\r\n    separationRangeInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditAlignment() {\r\n  editingAlignment.value = true;\r\n  await nextTick();\r\n  if (alignmentInput.value) {\r\n    alignmentInput.value.focus();\r\n    alignmentInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditAlignmentRange() {\r\n  editingAlignmentRange.value = true;\r\n  await nextTick();\r\n  if (alignmentRangeInput.value) {\r\n    alignmentRangeInput.value.focus();\r\n    alignmentRangeInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditMaxSpeed() {\r\n  editingMaxSpeed.value = true;\r\n  await nextTick();\r\n  if (maxSpeedInput.value) {\r\n    maxSpeedInput.value.focus();\r\n    maxSpeedInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditMaxTurnAngle() {\r\n  editingMaxTurnAngle.value = true;\r\n  await nextTick();\r\n  if (maxTurnAngleInput.value) {\r\n    maxTurnAngleInput.value.focus();\r\n    maxTurnAngleInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditMaxNeighbors() {\r\n  editingMaxNeighbors.value = true;\r\n  await nextTick();\r\n  if (maxNeighborsInput.value) {\r\n    maxNeighborsInput.value.focus();\r\n    maxNeighborsInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditHorizontalTorque() {\r\n  editingHorizontalTorque.value = true;\r\n  await nextTick();\r\n  if (horizontalTorqueInput.value) {\r\n    horizontalTorqueInput.value.focus();\r\n    horizontalTorqueInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditTorqueStrength() {\r\n  editingTorqueStrength.value = true;\r\n  await nextTick();\r\n  if (torqueStrengthInput.value) {\r\n    torqueStrengthInput.value.focus();\r\n    torqueStrengthInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditLambda() {\r\n  editingLambda.value = true;\r\n  await nextTick();\r\n  if (lambdaInput.value) {\r\n    lambdaInput.value.focus();\r\n    lambdaInput.value.select();\r\n  }\r\n}\r\n\r\nasync function startEditTau() {\r\n  editingTau.value = true;\r\n  await nextTick();\r\n  if (tauInput.value) {\r\n    tauInput.value.focus();\r\n    tauInput.value.select();\r\n  }\r\n}\r\n\r\n// 編集終了関数\r\nfunction stopEditCount() {\r\n  editingCount.value = false;\r\n}\r\n\r\nfunction stopEditCohesion() {\r\n  editingCohesion.value = false;\r\n}\r\n\r\nfunction stopEditCohesionRange() {\r\n  editingCohesionRange.value = false;\r\n}\r\n\r\nfunction stopEditSeparation() {\r\n  editingSeparation.value = false;\r\n}\r\n\r\nfunction stopEditSeparationRange() {\r\n  editingSeparationRange.value = false;\r\n}\r\n\r\nfunction stopEditAlignment() {\r\n  editingAlignment.value = false;\r\n}\r\n\r\nfunction stopEditAlignmentRange() {\r\n  editingAlignmentRange.value = false;\r\n}\r\n\r\nfunction stopEditMaxSpeed() {\r\n  editingMaxSpeed.value = false;\r\n}\r\n\r\nfunction stopEditMaxTurnAngle() {\r\n  editingMaxTurnAngle.value = false;\r\n}\r\n\r\nfunction stopEditMaxNeighbors() {\r\n  editingMaxNeighbors.value = false;\r\n}\r\n\r\nfunction stopEditHorizontalTorque() {\r\n  editingHorizontalTorque.value = false;\r\n}\r\n\r\nfunction stopEditTorqueStrength() {\r\n  editingTorqueStrength.value = false;\r\n}\r\n\r\nfunction stopEditLambda() {\r\n  editingLambda.value = false;\r\n}\r\n\r\nfunction stopEditTau() {\r\n  editingTau.value = false;\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.settings {\r\n  margin-bottom: 20px;\r\n  width: 100%;\r\n  min-width: 260px;\r\n  max-width: 520px;\r\n  box-sizing: border-box;\r\n  pointer-events: auto;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n.setting-row {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 8px;\r\n  width: 100%;\r\n}\r\n.setting-row label {\r\n  width: 130px;\r\n  text-align: left;\r\n  margin-right: 10px;\r\n  flex-shrink: 0;\r\n  display: inline-block;\r\n}\r\n.setting-row input[type=\"range\"] {\r\n  width: 120px;\r\n  min-width: 80px;\r\n  max-width: 200px;\r\n  margin: 0 10px;\r\n  flex: none;\r\n  display: inline-block;\r\n}\r\n.setting-row span {\r\n  width: 60px;\r\n  text-align: left;\r\n  display: inline-block;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.editable-value {\r\n  cursor: pointer;\r\n  padding: 2px 4px;\r\n  border-radius: 3px;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.editable-value:hover {\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  text-decoration: underline;\r\n}\r\n\r\n.value-input {\r\n  width: 60px;\r\n  padding: 2px 4px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 3px;\r\n  background: transparent;\r\n  color: inherit;\r\n  font-size: inherit;\r\n  text-align: left;\r\n}\r\n\r\n.value-input:focus {\r\n  outline: none;\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 3px rgba(0, 123, 255, 0.3);\r\n}\r\n\r\n.species-section {\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n  background-color: rgba(255, 255, 255, 0.05);\r\n  pointer-events: auto;\r\n  position: relative;\r\n  overflow: visible;\r\n  max-width: 100%;\r\n  width: fit-content;\r\n  min-width: 260px;\r\n}\r\n\r\n.species-header {\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  border-radius: 5px 5px 0 0;\r\n  user-select: none;\r\n  pointer-events: auto;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.species-header:hover {\r\n  background-color: rgba(255, 255, 255, 0.15);\r\n}\r\n\r\n.species-content {\r\n  padding: 10px;\r\n  pointer-events: auto;\r\n  position: relative;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n}\r\n</style>","import script from \"./Settings.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Settings.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Settings.vue?vue&type=style&index=0&id=e35dcab8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e35dcab8\"]])\n\nexport default __exports__","<template>\r\n  <div id=\"app\">\r\n    <div class=\"ui-overlay\">\r\n      <h1>Boids Simulation</h1>\r\n      <details>\r\n        <summary>Settings</summary>\r\n        <div v-for=\"(s, i) in settings\" :key=\"i\">\r\n          <Settings :settings=\"s\" />\r\n        </div>\r\n        <button @click=\"resetSettings\" style=\"margin-bottom:1em;\">リセット</button>\r\n        <div>\r\n          <label>\r\n            <input type=\"checkbox\" v-model=\"showUnits\" />\r\n            Unit可視化\r\n          </label>\r\n          <label style=\"margin-left:1em;\">\r\n            <input type=\"checkbox\" v-model=\"showUnitSpheres\" />\r\n            スフィアのみ表示\r\n          </label> <label style=\"margin-left:1em;\">\r\n            <input type=\"checkbox\" v-model=\"showUnitLines\" />\r\n            線のみ表示\r\n          </label>\r\n          <label style=\"margin-left:1em;\">\r\n            <input type=\"checkbox\" v-model=\"showUnitColors\" />\r\n            Unit色分け\r\n          </label>\r\n          <label style=\"margin-left:1em;\">\r\n            表示レイヤ下限: <input type=\"range\" min=\"1\" max=\"20\" v-model=\"unitLayer\" />\r\n            {{ unitLayer }}\r\n          </label>\r\n        </div>\r\n      </details>\r\n      <div class=\"info\">\r\n        <p>Boids Count: {{ totalBoids }}</p>\r\n      </div>\r\n    </div>\r\n    <div ref=\"threeContainer\" class=\"three-container\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, inject, onMounted, reactive, ref, watch, toRaw } from 'vue';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport Settings from './components/Settings.vue';\r\nimport Stats from 'three/examples/jsm/libs/stats.module'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\r\nimport { SSAOPass } from 'three/examples/jsm/postprocessing/SSAOPass.js';\r\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js';\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\nconst wasmModule = inject('wasmModule');\r\nif (!wasmModule) {\r\n  console.error('wasmModule not provided');\r\n}\r\n\r\nconst stepSimulation = wasmModule.cwrap('stepSimulation', 'number', ['number'])\r\nconst build = wasmModule.cwrap('build', 'void', ['number', 'number'])\r\nconst setFlockSize = wasmModule.cwrap('setFlockSize', 'void', ['number', 'number', 'number'])\r\nconst exportTreeStructure = wasmModule.cwrap('exportTreeStructure', 'object', [])\r\nconst boidUnitMappingPtr = wasmModule.cwrap('boidUnitMappingPtr', 'number', []);\r\nconst currentFirstBoidX = wasmModule.cwrap('currentFirstBoidX', 'number', []);\r\n// const getUnitCount = wasmModule.cwrap('getUnitCount', 'number', []);\r\n// const getUnitCentersPtr = wasmModule.cwrap('getUnitCentersPtr', 'number', []);\r\n// const getUnitParentIndicesPtr = wasmModule.cwrap('getUnitParentIndicesPtr', 'number', []);\r\n\r\nfunction fetchTreeStructure() {\r\n  const treeData = exportTreeStructure();\r\n  return treeData;\r\n}\r\nconst mobileBoidCount = isMobileDevice() ? 6000 : 10000;\r\n\r\nconst DEFAULT_SETTINGS = [{\r\n  species: 'Boids',         // 種族名\r\n  count: mobileBoidCount,   // 群れの数（スマホなら6000、PCなら10000）\r\n  cohesion: 32,             // 凝集\r\n  cohesionRange: 30,        // 凝集範囲\r\n  separation: 8,            // 分離\r\n  separationRange: 0.6,     // 分離範囲\r\n  alignment: 17,            // 整列\r\n  alignmentRange: 6,        // 整列範囲\r\n  maxSpeed: 0.26,           // 最大速度\r\n  maxTurnAngle: 0.25,       // 最大旋回角\r\n  maxNeighbors: 6,          // 最大近傍数\r\n  horizontalTorque: 0.019,  // 水平化トルク\r\n  torqueStrength: 10,       // 回転トルク強度\r\n  lambda: 0.62,             // 速度調整係数\r\n  tau: 1.5                  // 記憶時間スケール\r\n}, {\r\n  species: 'Predator',\r\n  count: 1,\r\n  cohesion: 5.58,                     // 捕食者には使わない\r\n  separation: 0.0,\r\n  alignment: 0.0,\r\n  maxSpeed: 1.37,                     // 速く逃げられるよう速度は大きめ\r\n  minSpeed: 0.4,\r\n  maxTurnAngle: 0.2,\r\n  separationRange: 14.0,\r\n  alignmentRange: 11.0,\r\n  cohesionRange: 77.0,\r\n  maxNeighbors: 0,\r\n  lambda: 0.05,\r\n  tau: 1.0, // 捕食者は常に追いかける\r\n  horizontalTorque: 0.022,\r\n  torqueStrength: 0.0,\r\n  isPredator: true                // ← 捕食者フラグ\r\n}];\r\n\r\nfunction loadSettings() {\r\n  try {\r\n    const saved = localStorage.getItem('boids_settings');\r\n    if (saved) {\r\n      const parsed = JSON.parse(saved);\r\n      if (Array.isArray(parsed)) {\r\n        return parsed; // 配列として保存されている場合のみ返す\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to load settings from localStorage:', error);\r\n  }\r\n  return DEFAULT_SETTINGS; // デフォルト値を返す\r\n}\r\n\r\nconst settings = reactive(loadSettings());\r\n\r\nlet cachedTotalBoidCount = getTotalBoidCount();\r\nconst totalBoids = computed(() => getTotalBoidCount());\r\n\r\nconst threeContainer = ref(null);\r\nlet scene, camera, renderer, controls, composer;\r\n\r\nconst paused = ref(false);\r\n\r\nconst showUnits = ref(true);\r\nconst showUnitSpheres = ref(false);\r\nconst showUnitLines = ref(false);\r\nconst showUnitColors = ref(false);\r\nconst unitLayer = ref(1);\r\n\r\nlet unitSpheres = [];\r\nlet unitLines = [];\r\n\r\nlet maxDepth = 1;\r\nlet stats = null;\r\nlet gpuStatsPanel = null;\r\nlet glContext = null;\r\nlet gpuTimerExt = null;\r\nlet gpuQueryInFlight = null;\r\nlet gpuPendingQuery = null;\r\nlet lastGpuTimeMs = 0;\r\nlet latestStatePtr = 0;\r\nlet latestStateHeaderPtr = 0;\r\nlet latestStateHeaderView = null;\r\nlet latestPositionsPtr = 0;\r\nlet latestVelocitiesPtr = 0;\r\nlet latestOrientationsPtr = 0;\r\nlet latestBoidCountFromWasm = 0;\r\nlet frameCounter = 0;\r\nlet debugTimer = 0;\r\n\r\nlet animationTimer = null;\r\nconst FRAME_INTERVAL = 1000 / 1000;//1000 / 60; // 60FPS\r\n\r\n// ツリーの最大深さを計算\r\nfunction calcMaxDepth(unit, depth = 0) {\r\n  if (!unit || !unit.children || typeof unit.children.size !== 'function' || unit.children.size() === 0) {\r\n    return depth;\r\n  }\r\n  let max = depth;\r\n  for (let i = 0; i < unit.children.size(); i++) {\r\n    const child = unit.children.get(i);\r\n    max = Math.max(max, calcMaxDepth(child, depth + 1));\r\n  }\r\n  return max;\r\n}\r\n\r\nfunction handleKeydown(e) {\r\n  if (e.code === 'Space') {\r\n    paused.value = !paused.value;\r\n  }\r\n}\r\n\r\nfunction initThreeJS() {\r\n  const width = window.innerWidth;\r\n  const height = window.innerHeight;\r\n\r\n  scene = new THREE.Scene();\r\n  scene.background = new THREE.Color(OCEAN_COLORS.DEEP_BLUE);\r\n  scene.fog = new THREE.Fog(toHex(OCEAN_COLORS.FOG), 0, 28);\r\n  createOceanSphere();\r\n\r\n  camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\r\n  camera.position.set(4, 7, 7);\r\n  camera.lookAt(0, 0, 0);\r\n\r\n  renderer = new THREE.WebGLRenderer({\r\n    antialias: true,\r\n    depth: true, // 深度バッファを有効化\r\n\r\n  });\r\n  renderer.setPixelRatio(window.devicePixelRatio); // 高DPI対応\r\n  renderer.setSize(width, height);\r\n  renderer.shadowMap.enabled = true;\r\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap; // 影を柔らかく\r\n\r\n  glContext = renderer.getContext();\r\n  if (typeof WebGL2RenderingContext !== 'undefined' && glContext instanceof WebGL2RenderingContext) {\r\n    gpuTimerExt = glContext.getExtension('EXT_disjoint_timer_query_webgl2');\r\n    if (!gpuTimerExt) {\r\n      console.warn('EXT_disjoint_timer_query_webgl2 is not available; GPU timing disabled.');\r\n    }\r\n  } else {\r\n    gpuTimerExt = null;\r\n  }\r\n\r\n  threeContainer.value.appendChild(renderer.domElement);\r\n\r\n  camera.aspect = width / height;\r\n  camera.updateProjectionMatrix();\r\n\r\n  controls = new OrbitControls(camera, renderer.domElement);\r\n  controls.enableDamping = true; // なめらかな操作\r\n  controls.dampingFactor = 0.1;\r\n\r\n  // 地面メッシュ追加\r\n  const groundGeo = new THREE.PlaneGeometry(1000, 1000);\r\n  const groundMat = createFadeOutGroundMaterial();\r\n  groundMat.depthTest = true;\r\n  const ground = new THREE.Mesh(groundGeo, groundMat);\r\n  ground.rotation.x = -Math.PI / 2;\r\n  ground.position.y = -10;\r\n  ground.receiveShadow = true; // 影を受ける\r\n  scene.add(ground);\r\n\r\n  // ライト\r\n  const ambientLight = new THREE.AmbientLight(toHex(OCEAN_COLORS.AMBIENT_LIGHT), 1);\r\n  scene.add(ambientLight);\r\n\r\n  // 太陽光（やや暖色のDirectionalLight）\r\n  const dirLight = new THREE.DirectionalLight(toHex(OCEAN_COLORS.SUN_LIGHT), 15); // 暖色＆強め\r\n  dirLight.position.set(300, 500, 200); // 高い位置から照らす\r\n  dirLight.castShadow = true;\r\n\r\n  // 影カメラの範囲を広げる\r\n  dirLight.shadow.camera.left = -100;\r\n  dirLight.shadow.camera.right = 100;\r\n  dirLight.shadow.camera.top = 100;\r\n  dirLight.shadow.camera.bottom = -100;\r\n  dirLight.shadow.camera.near = 1;\r\n  dirLight.shadow.camera.far = 1000;\r\n\r\n  dirLight.shadow.mapSize.width = 2048;\r\n  dirLight.shadow.mapSize.height = 2048;\r\n  dirLight.shadow.bias = -0.001;\r\n  dirLight.shadow.normalBias = 0.01;\r\n\r\n  scene.add(dirLight);\r\n  // EffectComposer の初期化（スマホ以外の場合のみ）\r\n  if (!isMobileDevice()) {\r\n    // EffectComposer の初期化\r\n    composer = new EffectComposer(renderer);\r\n\r\n    // RenderPass を追加\r\n    const renderPass = new RenderPass(scene, camera);\r\n    composer.addPass(renderPass);\r\n\r\n    const ssaoPass = new SSAOPass(scene, camera, width, height);\r\n    ssaoPass.kernelRadius = 8; // サンプル半径（大きくすると効果が広がる）\r\n    ssaoPass.minDistance = 0.001; // 最小距離（小さくすると近距離の効果が強調される）\r\n    ssaoPass.maxDistance = 0.01; // 最大距離（大きくすると遠距離の効果が強調される）\r\n    composer.addPass(ssaoPass);\r\n\r\n    // UnrealBloomPass を追加（任意）\r\n    const bloomPass = new UnrealBloomPass(new THREE.Vector2(width, height), 1.5, 0.4, 0.85);\r\n    composer.addPass(bloomPass);\r\n  }\r\n  // ウィンドウリサイズ対応\r\n  window.addEventListener('resize', onWindowResize);\r\n}\r\n\r\nfunction onWindowResize() {\r\n  const width = window.innerWidth;\r\n  const height = window.innerHeight;\r\n  camera.aspect = width / height;\r\n  camera.updateProjectionMatrix();\r\n  renderer.setSize(width, height);\r\n}\r\n\r\n// 一時的に従来方式に戻す - instancedMeshを単一で使用\r\nlet instancedMeshHigh = null; // 高ポリゴン用\r\nlet instancedMeshLow = null;  // 低ポリゴン用\r\nconst instancingMaterials = new Set();\r\n\r\nconst TRIPLE_BUFFER_SIZE = 3;\r\nconst HIDDEN_POSITION = 1e6;\r\nconst IDENTITY_QUATERNION = [0, 0, 0, 1];\r\n// LOD距離閾値（平方距離）: 近距離はハイポリ、中距離はLOD+アニメ、遠距離はLOD静止\r\nconst LOD_NEAR_DISTANCE_SQ = 4; // 2m以内はメインモデル\r\nconst LOD_MID_DISTANCE_SQ = 25; // 5m以内はLODモデル＋アニメ\r\nconst STREAM_USAGE = THREE.StreamDrawUsage ?? THREE.DynamicDrawUsage;\r\nconst tailAnimation = {\r\n  uniforms: {\r\n    uTailTime: { value: 0 },            // 時間（波形生成用）\r\n    uTailAmplitude: { value: 0.14 },    // 振幅（全身の揺れ幅）\r\n    uTailFrequency: { value: 10.0 },    // 周波数（くねり速度）\r\n    uTailPhaseStride: { value: 5.0 },   // 体の長さ方向の位相差（波長に相当）\r\n    uTailTurnStrength: { value: 0.1 },  // 旋回時の強度\r\n    uTailSpeedScale: { value: 1 },      // 速度による影響度\r\n    uTailRight: { value: new THREE.Vector3(1, 0, 0) },     // 尾アニメの右方向ベクトル\r\n    uTailForward: { value: new THREE.Vector3(0, 0, 1) },   // 尾アニメの進行方向ベクトル\r\n    uTailUp: { value: new THREE.Vector3(0, 1, 0) },        // 尾アニメの上方向ベクトル\r\n    uTailEnable: { value: 1 }           // アニメーション有効/無効\r\n  },\r\n};\r\n\r\n// 海中シーンの色味をまとめて管理する定数群\r\nconst OCEAN_COLORS = {\r\n  SKY_HIGHLIGHT: '#4fbaff',\r\n  SKY_BLUE: '#15a1ff',\r\n  DEEP_BLUE: '#002968',\r\n  SEAFLOOR: '#777465',\r\n  FOG: '#153a6c',\r\n  AMBIENT_LIGHT: '#2c9aff',\r\n  SUN_LIGHT: '#5389b7',\r\n  SIDE_LIGHT1: '#6ba3d0',\r\n  SIDE_LIGHT2: '#2d5f7a',\r\n  BOTTOM_LIGHT: '#0f2635',\r\n};\r\n\r\n// '#rrggbb' 形式の色を three.js の整数表現に変換\r\nconst toHex = (colorStr) => parseInt(colorStr.replace('#', '0x'), 16);\r\n\r\nfunction createOceanSphere() {\r\n  if (!scene) return null;\r\n\r\n  // 上層→深層のグラデーションで海中の空気感を演出\r\n  const canvas = document.createElement('canvas');\r\n  const context = canvas.getContext('2d');\r\n  canvas.width = 512;\r\n  canvas.height = 512;\r\n\r\n  const gradient = context.createLinearGradient(0, 0, 0, canvas.height);\r\n  gradient.addColorStop(0, OCEAN_COLORS.SKY_HIGHLIGHT);\r\n  gradient.addColorStop(0.2, OCEAN_COLORS.SKY_BLUE);\r\n  gradient.addColorStop(0.6, OCEAN_COLORS.DEEP_BLUE);\r\n  gradient.addColorStop(1, OCEAN_COLORS.DEEP_BLUE);\r\n\r\n  context.fillStyle = gradient;\r\n  context.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n  const texture = new THREE.CanvasTexture(canvas);\r\n  texture.colorSpace = THREE.SRGBColorSpace;\r\n  texture.generateMipmaps = false;\r\n  texture.minFilter = THREE.LinearFilter;\r\n  texture.magFilter = THREE.LinearFilter;\r\n\r\n  const sphereGeo = new THREE.SphereGeometry(300, 32, 32);\r\n  const sphereMat = new THREE.MeshBasicMaterial({\r\n    map: texture,\r\n    side: THREE.BackSide,\r\n    fog: false,\r\n  });\r\n\r\n  const oceanSphere = new THREE.Mesh(sphereGeo, sphereMat);\r\n  scene.add(oceanSphere);\r\n  return oceanSphere;\r\n}\r\n\r\nfunction createFadeOutGroundMaterial() {\r\n  const textureLoader = new THREE.TextureLoader();\r\n  const alphaMap = textureLoader.load('./models/groundAlfa.png');\r\n\r\n  alphaMap.minFilter = THREE.LinearFilter;\r\n  alphaMap.magFilter = THREE.LinearFilter;\r\n  alphaMap.wrapS = THREE.ClampToEdgeWrapping;\r\n  alphaMap.wrapT = THREE.ClampToEdgeWrapping;\r\n\r\n  const material = new THREE.MeshStandardMaterial({\r\n    color: toHex(OCEAN_COLORS.SEAFLOOR),\r\n    transparent: true,\r\n    alphaMap,\r\n    depthWrite: false,\r\n  });\r\n\r\n  material.roughness = 0.85;\r\n  material.metalness = 0.0;\r\n  return material;\r\n}\r\n\r\nfunction updateInstancingMaterialUniforms(time) {\r\n  tailAnimation.uniforms.uTailTime.value = time;\r\n}\r\n\r\nlet bufferCursor = 0;\r\nlet bufferSetHigh = null;\r\nlet bufferSetLow = null;\r\nlet cachedHeapBuffer = null;\r\nlet cachedPositionsPtr = 0;\r\nlet cachedOrientationsPtr = 0;\r\nlet cachedPositionsView = null;\r\nlet cachedOrientationsView = null;\r\nlet cachedPositionsCount = 0;\r\nlet cachedOrientationsCount = 0;\r\nlet shaderTime = 0;\r\nlet cachedVelocitiesPtr = 0;\r\nlet cachedVelocitiesView = null;\r\nlet cachedVelocitiesCount = 0;\r\nlet tailPhaseSeeds = null;\r\nlet previousVelocities = null;\r\nfunction createAttributeSet(count, itemSize) {\r\n  const length = count * itemSize;\r\n  const attributes = [];\r\n  for (let i = 0; i < TRIPLE_BUFFER_SIZE; i++) {\r\n    const attr = new THREE.InstancedBufferAttribute(new Float32Array(length), itemSize);\r\n    attr.setUsage(STREAM_USAGE);\r\n    attributes.push(attr);\r\n  }\r\n  return attributes;\r\n}\r\n\r\nfunction createBufferSet(count) {\r\n  // トリプルバッファ用の属性セットを作成（位置・姿勢・尾アニメ制御用）\r\n  return {\r\n    pos: createAttributeSet(count, 3),\r\n    quat: createAttributeSet(count, 4),\r\n    tailPhase: createAttributeSet(count, 1),\r\n    tailSpeed: createAttributeSet(count, 1),\r\n    tailTurn: createAttributeSet(count, 1),\r\n    tailDrive: createAttributeSet(count, 1), // 尾アニメの有効/無効制御（遠距離で0にして負荷削減）\r\n  };\r\n}\r\n\r\nfunction resetBufferSetToHidden(bufferSet) {\r\n  for (const attr of bufferSet.pos) {\r\n    const array = attr.array;\r\n    for (let i = 0; i < array.length; i += 3) {\r\n      array[i] = HIDDEN_POSITION;\r\n      array[i + 1] = HIDDEN_POSITION;\r\n      array[i + 2] = HIDDEN_POSITION;\r\n    }\r\n  }\r\n  for (const attr of bufferSet.quat) {\r\n    const array = attr.array;\r\n    for (let i = 0; i < array.length; i += 4) {\r\n      array[i] = 0;\r\n      array[i + 1] = 0;\r\n      array[i + 2] = 0;\r\n      array[i + 3] = 1;\r\n    }\r\n  }\r\n  for (const attr of bufferSet.tailPhase) {\r\n    attr.array.fill(0);\r\n  }\r\n  for (const attr of bufferSet.tailSpeed) {\r\n    attr.array.fill(0);\r\n  }\r\n  for (const attr of bufferSet.tailTurn) {\r\n    attr.array.fill(0);\r\n  }\r\n  for (const attr of bufferSet.tailDrive) {\r\n    attr.array.fill(0);\r\n  }\r\n}\r\n\r\nfunction applyBufferSet(mesh, bufferSet, index) {\r\n  // トリプルバッファの指定インデックスから属性をジオメトリに設定\r\n  mesh.geometry.setAttribute('instancePos', bufferSet.pos[index]);\r\n  mesh.geometry.setAttribute('instanceQuat', bufferSet.quat[index]);\r\n  mesh.geometry.setAttribute('instanceTailPhase', bufferSet.tailPhase[index]);\r\n  mesh.geometry.setAttribute('instanceTailSpeed', bufferSet.tailSpeed[index]);\r\n  mesh.geometry.setAttribute('instanceTailTurn', bufferSet.tailTurn[index]);\r\n  mesh.geometry.setAttribute('instanceTailDrive', bufferSet.tailDrive[index]);\r\n}\r\n\r\nfunction patchQuaternionInstancing(material) {\r\n  if (material.userData?.quaternionInstancingPatched) return;\r\n\r\n  material.onBeforeCompile = (shader) => {\r\n    Object.entries(tailAnimation.uniforms).forEach(([key, uniform]) => {\r\n      shader.uniforms[key] = uniform;\r\n    });\r\n\r\n    shader.vertexShader = shader.vertexShader\r\n      .replace(\r\n        '#include <common>',\r\n        `#include <common>\\nattribute vec3 instancePos;\\nattribute vec4 instanceQuat;\\nattribute float aBodyCoord;\\nattribute float instanceTailPhase;\\nattribute float instanceTailSpeed;\\nattribute float instanceTailTurn;\\nattribute float instanceTailDrive;\\nuniform float uTailTime;\\nuniform float uTailAmplitude;\\nuniform float uTailFrequency;\\nuniform float uTailPhaseStride;\\nuniform float uTailTurnStrength;\\nuniform float uTailSpeedScale;\\nuniform vec3 uTailRight;\\nuniform vec3 uTailForward;\\nuniform vec3 uTailUp;\\nuniform float uTailEnable;\\nvec3 quatTransform(vec3 v, vec4 q) {\\n  vec3 t = 2.0 * cross(q.xyz, v);\\n  return v + q.w * t + cross(q.xyz, t);\\n}`\r\n      )\r\n      .replace('#include <instancing_vertex>', `#ifdef USE_INSTANCING\\n#endif`)\r\n      .replace(\r\n        '#include <begin_vertex>',\r\n  `#include <begin_vertex>\\nif (uTailEnable > 0.5) {\\n  float driveRaw = instanceTailDrive;\\n  if (driveRaw > 0.01) {\\n    float drive = clamp(driveRaw, 0.0, 1.0);\\n    vec3 originalPos = transformed;\\n    vec3 right = normalize(uTailRight);\\n    vec3 forward = normalize(uTailForward);\\n    vec3 up = normalize(uTailUp);\\n\\n    float localX = dot(originalPos, right);\\n    float localY = dot(originalPos, forward);\\n    float localZ = dot(originalPos, up);\\n\\n    float bodyCoord = clamp(aBodyCoord, 0.0, 1.0);\\n    float tailWeight = smoothstep(0.0, 0.35, bodyCoord);\\n    float speedFactor = clamp(instanceTailSpeed * uTailSpeedScale, 0.0, 2.0);\\n\\n    float phase = instanceTailPhase + uTailTime * uTailFrequency;\\n    float wavePhase = phase + bodyCoord * uTailPhaseStride;\\n    float wag = sin(wavePhase) * uTailAmplitude * drive;\\n    float turnOffset = instanceTailTurn * uTailTurnStrength * drive;\\n    float motion = wag * (0.4 + 0.6 * speedFactor) + turnOffset;\\n\\n    float tipDamping = 1.0 - smoothstep(0.7, 1.0, bodyCoord) * 0.3;\\n    float bendStrength = mix(0.02, 1.0, tailWeight) * tipDamping;\\n\\n    float bendAngle = motion * bendStrength;\\n    float s = sin(bendAngle);\\n    float c = cos(bendAngle);\\n    float rotX = localX * c - localY * s;\\n    float rotY = localX * s + localY * c;\\n\\n    float sway = motion * 0.4 * tipDamping;\\n    rotX += sway * (0.05 + 0.95 * bodyCoord);\\n\\n    vec3 rotated = right * rotX + forward * rotY + up * localZ;\\n    transformed = rotated;\\n  }\\n}\\ntransformed = quatTransform(transformed, instanceQuat) + instancePos;`\r\n      )\r\n      .replace(\r\n        '#include <beginnormal_vertex>',\r\n        '#include <beginnormal_vertex>\\nobjectNormal = quatTransform(objectNormal, instanceQuat);'\r\n      )\r\n      .replace(\r\n        '#include <project_vertex>',\r\n        `#include <project_vertex>\\n#ifdef DEPTH_PACKING\\nif (uTailEnable > 0.5) {\\n  float driveRaw = instanceTailDrive;\\n  if (driveRaw > 0.01) {\\n    float drive = clamp(driveRaw, 0.0, 1.0);\\n    vec3 viewPos = mvPosition.xyz;\\n    mat3 normalMatrix3 = mat3(normalMatrix);\\n    vec3 right = normalize(normalMatrix3 * uTailRight);\\n    vec3 forward = normalize(normalMatrix3 * uTailForward);\\n    vec3 up = normalize(normalMatrix3 * uTailUp);\\n\\n    float localX = dot(viewPos, right);\\n    float localY = dot(viewPos, forward);\\n    float localZ = dot(viewPos, up);\\n\\n    float bodyCoord = clamp(aBodyCoord, 0.0, 1.0);\\n    float tailWeight = smoothstep(0.0, 0.35, bodyCoord);\\n    float speedFactor = clamp(instanceTailSpeed * uTailSpeedScale, 0.0, 2.0);\\n\\n    float phase = instanceTailPhase + uTailTime * uTailFrequency;\\n    float wavePhase = phase + bodyCoord * uTailPhaseStride;\\n    float wag = sin(wavePhase) * uTailAmplitude * drive;\\n    float turnOffset = instanceTailTurn * uTailTurnStrength * drive;\\n    float motion = wag * (0.4 + 0.6 * speedFactor) + turnOffset;\\n\\n    float tipDamping = 1.0 - smoothstep(0.7, 1.0, bodyCoord) * 0.3;\\n    float bendStrength = mix(0.02, 1.0, tailWeight) * tipDamping;\\n\\n    float bendAngle = motion * bendStrength;\\n    float s = sin(bendAngle);\\n    float c = cos(bendAngle);\\n    float rotX = localX * c - localY * s;\\n    float rotY = localX * s + localY * c;\\n\\n    float sway = motion * 0.4 * tipDamping;\\n    rotX += sway * (0.05 + 0.95 * bodyCoord);\\n\\n    vec3 rotated = right * rotX + forward * rotY + up * localZ;\\n    mvPosition.xyz = rotated;\\n    gl_Position = projectionMatrix * mvPosition;\\n  }\\n}\\n#endif`\r\n      );\r\n\r\n    material.userData = {\r\n      ...(material.userData || {}),\r\n      quaternionInstancingPatched: true,\r\n    };\r\n  };\r\n\r\n  material.needsUpdate = true;\r\n  instancingMaterials.add(material);\r\n}\r\n\r\n// シャドウレンダリングでもインスタンス属性を適用する深度マテリアル\r\nfunction createInstancedDepthMaterial(sourceMaterial) {\r\n  const depthMaterial = new THREE.MeshDepthMaterial({\r\n    depthPacking: THREE.RGBADepthPacking,\r\n    alphaTest: sourceMaterial.alphaTest ?? 0,\r\n  });\r\n  depthMaterial.map = sourceMaterial.map ?? null;\r\n  depthMaterial.alphaMap = sourceMaterial.alphaMap ?? null;\r\n  depthMaterial.transparent = sourceMaterial.transparent ?? false;\r\n  patchQuaternionInstancing(depthMaterial);\r\n  return depthMaterial;\r\n}\r\n\r\n// ポイントライト用の距離マテリアルもインスタンス挙動に合わせる\r\nfunction createInstancedDistanceMaterial(sourceMaterial) {\r\n  const distanceMaterial = new THREE.MeshDistanceMaterial({\r\n    alphaTest: sourceMaterial.alphaTest ?? 0,\r\n  });\r\n  distanceMaterial.map = sourceMaterial.map ?? null;\r\n  distanceMaterial.alphaMap = sourceMaterial.alphaMap ?? null;\r\n  distanceMaterial.transparent = sourceMaterial.transparent ?? false;\r\n  patchQuaternionInstancing(distanceMaterial);\r\n  return distanceMaterial;\r\n}\r\n\r\nfunction stepSimulationAndUpdateState(deltaTime) {\r\n  const statePtr = stepSimulation(deltaTime);\r\n  if (!statePtr) {\r\n    return latestBoidCountFromWasm;\r\n  }\r\n\r\n  latestStatePtr = statePtr;\r\n\r\n  const heapU8Buffer = wasmModule.HEAPU8.buffer;\r\n  if (\r\n    !latestStateHeaderView ||\r\n    latestStateHeaderPtr !== statePtr ||\r\n    latestStateHeaderView.buffer !== heapU8Buffer\r\n  ) {\r\n    latestStateHeaderView = new DataView(heapU8Buffer, statePtr, 16);\r\n    latestStateHeaderPtr = statePtr;\r\n  }\r\n\r\n  latestPositionsPtr = latestStateHeaderView.getUint32(0, true);\r\n  latestVelocitiesPtr = latestStateHeaderView.getUint32(4, true);\r\n  latestOrientationsPtr = latestStateHeaderView.getUint32(8, true);\r\n  latestBoidCountFromWasm = latestStateHeaderView.getInt32(12, true);\r\n\r\n  return latestBoidCountFromWasm;\r\n}\r\n\r\nfunction getWasmViews(count) {\r\n  const heapBuffer = wasmModule.HEAPF32.buffer;\r\n\r\n  if (cachedHeapBuffer !== heapBuffer) {\r\n    cachedHeapBuffer = heapBuffer;\r\n    cachedPositionsPtr = 0;\r\n    cachedOrientationsPtr = 0;\r\n    cachedVelocitiesPtr = 0;\r\n    cachedPositionsView = null;\r\n    cachedOrientationsView = null;\r\n    cachedVelocitiesView = null;\r\n    cachedPositionsCount = 0;\r\n    cachedOrientationsCount = 0;\r\n    cachedVelocitiesCount = 0;\r\n  }\r\n\r\n  const posPointer = latestPositionsPtr;\r\n  const oriPointer = latestOrientationsPtr;\r\n  const velPointer = latestVelocitiesPtr;\r\n\r\n  if (!posPointer || !oriPointer || !velPointer || count <= 0) {\r\n    return {\r\n      positions: cachedPositionsView ?? new Float32Array(0),\r\n      orientations: cachedOrientationsView ?? new Float32Array(0),\r\n      velocities: cachedVelocitiesView ?? new Float32Array(0),\r\n    };\r\n  }\r\n\r\n  if (\r\n    cachedPositionsView === null ||\r\n    cachedPositionsCount !== count ||\r\n    cachedPositionsPtr !== posPointer\r\n  ) {\r\n    cachedPositionsPtr = posPointer;\r\n    cachedPositionsView = new Float32Array(heapBuffer, cachedPositionsPtr, count * 3);\r\n    cachedPositionsCount = count;\r\n  }\r\n\r\n  if (\r\n    cachedOrientationsView === null ||\r\n    cachedOrientationsCount !== count ||\r\n    cachedOrientationsPtr !== oriPointer\r\n  ) {\r\n    cachedOrientationsPtr = oriPointer;\r\n    cachedOrientationsView = new Float32Array(heapBuffer, cachedOrientationsPtr, count * 4);\r\n    cachedOrientationsCount = count;\r\n  }\r\n\r\n  if (\r\n    cachedVelocitiesView === null ||\r\n    cachedVelocitiesCount !== count ||\r\n    cachedVelocitiesPtr !== velPointer\r\n  ) {\r\n    cachedVelocitiesPtr = velPointer;\r\n    cachedVelocitiesView = new Float32Array(heapBuffer, cachedVelocitiesPtr, count * 3);\r\n    cachedVelocitiesCount = count;\r\n  }\r\n\r\n  return {\r\n    positions: cachedPositionsView,\r\n    orientations: cachedOrientationsView,\r\n    velocities: cachedVelocitiesView,\r\n  };\r\n}\r\n\r\n// LOD用ジオメトリ・マテリアルを使い回す\r\nconst boidGeometryHigh = new THREE.SphereGeometry(1, 8, 8);\r\nconst boidGeometryLow = new THREE.SphereGeometry(1, 3, 2);\r\nboidGeometryHigh.scale(0.5, 0.5, 2.0); // 少し小さくする\r\nboidGeometryLow.scale(0.5, 0.5, 2.0); // 少し小さくする\r\nlet boidModel = null; // 読み込んだモデルを保持\r\nlet boidModelLod = null; // 読み込んだモデルを保持\r\nlet originalMaterial = null; // 元のマテリアルを保持\r\nlet originalMaterialLod = null; // 元のLODマテリアルを保持\r\nlet predatorModel = null;\r\nlet predatorMaterial = null;\r\nlet predatorMeshes = [];\r\nlet predatorMeshCountCache = -1;\r\n\r\n// 起動時の正しいテクスチャマテリアルを保持\r\nlet originalHighMat = null;\r\nlet originalLowMat = null;\r\n\r\n// 前回のshowUnitColorsの状態を保持（OFF→ONの検知用）\r\nlet lastShowUnitColors = false;\r\n\r\nfunction getPredatorCount() {\r\n  return settings.reduce((sum, s) => sum + ((s.isPredator && s.count) ? s.count : 0), 0);\r\n}\r\n\r\nfunction ensurePredatorMeshes(count) {\r\n  if (!predatorModel) return false;\r\n\r\n  while (predatorMeshes.length > count) {\r\n    const mesh = predatorMeshes.pop();\r\n    if (mesh) {\r\n      scene.remove(mesh);\r\n    }\r\n  }\r\n\r\n  while (predatorMeshes.length < count) {\r\n    const clone = predatorModel.clone(true);\r\n    clone.traverse((child) => {\r\n      if (child.isMesh) {\r\n        child.castShadow = true;\r\n        child.receiveShadow = true;\r\n      }\r\n    });\r\n    clone.visible = false;\r\n    scene.add(clone);\r\n    predatorMeshes.push(clone);\r\n  }\r\n\r\n  return predatorMeshes.length === count;\r\n}\r\n\r\nfunction createTailPhaseArray(count) {\r\n  const array = new Float32Array(count);\r\n  for (let i = 0; i < count; i++) {\r\n    array[i] = Math.random() * Math.PI * 2;\r\n  }\r\n  return array;\r\n}\r\n\r\nfunction applyTailPhaseSeeds(bufferSet, seeds) {\r\n  if (!bufferSet || !bufferSet.tailPhase) return;\r\n  for (const attr of bufferSet.tailPhase) {\r\n    attr.array.set(seeds);\r\n    attr.needsUpdate = true;\r\n  }\r\n}\r\n\r\nfunction ensureTailRuntimeBuffers(count) {\r\n  if (!previousVelocities || previousVelocities.length !== count * 3) {\r\n    previousVelocities = new Float32Array(count * 3);\r\n  }\r\n}\r\n\r\nfunction ensureBodyCoordAttribute(geometry) {\r\n  if (geometry.getAttribute('aBodyCoord')) return;\r\n  const position = geometry.getAttribute('position');\r\n  if (!position) return;\r\n\r\n  const count = position.count;\r\n  const array = position.array;\r\n  let minX = Infinity, minY = Infinity, minZ = Infinity;\r\n  let maxX = -Infinity, maxY = -Infinity, maxZ = -Infinity;\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    const ix = i * 3;\r\n    const x = array[ix];\r\n    const y = array[ix + 1];\r\n    const z = array[ix + 2];\r\n    if (x < minX) minX = x;\r\n    if (x > maxX) maxX = x;\r\n    if (y < minY) minY = y;\r\n    if (y > maxY) maxY = y;\r\n    if (z < minZ) minZ = z;\r\n    if (z > maxZ) maxZ = z;\r\n  }\r\n\r\n  const rangeX = maxX - minX;\r\n  const rangeY = maxY - minY;\r\n  const rangeZ = maxZ - minZ;\r\n  let axis = 'z';\r\n  let min = minZ;\r\n  let range = rangeZ;\r\n\r\n  if (rangeX > rangeY && rangeX > rangeZ) {\r\n    axis = 'x';\r\n    min = minX;\r\n    range = rangeX;\r\n  } else if (rangeY > rangeZ) {\r\n    axis = 'y';\r\n    min = minY;\r\n    range = rangeY;\r\n  }\r\n\r\n  const bodyCoord = new Float32Array(count);\r\n  const denom = range > 0 ? range : 1;\r\n  for (let i = 0; i < count; i++) {\r\n    const ix = i * 3;\r\n    const value = axis === 'x' ? array[ix] : axis === 'y' ? array[ix + 1] : array[ix + 2];\r\n    bodyCoord[i] = (value - min) / denom;\r\n  }\r\n\r\n  geometry.setAttribute('aBodyCoord', new THREE.BufferAttribute(bodyCoord, 1));\r\n}\r\n\r\nfunction getTotalBoidCount() {\r\n  return settings.reduce((sum, s) => sum + (s.count || 0), 0);\r\n}\r\n\r\nfunction initInstancedBoids(count) {\r\n  if (!boidModel.children || !boidModel.children[0]) {\r\n    console.error('Boid model does not have valid children.');\r\n    return;\r\n  }\r\n\r\n  // 既存のメッシュを削除\r\n  if (instancedMeshHigh) {\r\n    scene.remove(instancedMeshHigh);\r\n    instancingMaterials.delete(instancedMeshHigh.material);\r\n  }\r\n  if (instancedMeshLow) {\r\n    scene.remove(instancedMeshLow);\r\n    instancingMaterials.delete(instancedMeshLow.material);\r\n  }\r\n  instancingMaterials.clear();\r\n  // InstancedMeshを作成（最初はvertexColors無効でテクスチャ表示）\r\n  const highMaterial = originalMaterial.clone();\r\n  highMaterial.vertexColors = false; // 最初はテクスチャ表示\r\n\r\n  const lowMaterial = originalMaterialLod.clone();\r\n  lowMaterial.vertexColors = false; // 最初はテクスチャ表示\r\n\r\n  patchQuaternionInstancing(highMaterial);\r\n  patchQuaternionInstancing(lowMaterial);\r\n\r\n  const highGeometry = boidModel.children[0].geometry;\r\n  const lowGeometry = boidModelLod.children[0].geometry;\r\n  ensureBodyCoordAttribute(highGeometry);\r\n  ensureBodyCoordAttribute(lowGeometry);\r\n\r\n  instancedMeshHigh = new THREE.InstancedMesh(\r\n    highGeometry,\r\n    highMaterial,\r\n    count\r\n  );\r\n  instancedMeshHigh.castShadow = true;\r\n  instancedMeshHigh.receiveShadow = true;\r\n  instancedMeshHigh.frustumCulled = false;\r\n  instancedMeshHigh.customDepthMaterial = createInstancedDepthMaterial(highMaterial);\r\n  instancedMeshHigh.customDistanceMaterial = createInstancedDistanceMaterial(highMaterial);\r\n\r\n  instancedMeshLow = new THREE.InstancedMesh(\r\n    lowGeometry,\r\n    lowMaterial,\r\n    count\r\n  );\r\n  instancedMeshLow.castShadow = true;\r\n  instancedMeshLow.receiveShadow = true;\r\n  instancedMeshLow.frustumCulled = false;\r\n  instancedMeshLow.customDepthMaterial = createInstancedDepthMaterial(lowMaterial);\r\n  instancedMeshLow.customDistanceMaterial = createInstancedDistanceMaterial(lowMaterial);\r\n\r\n  // インスタンスカラーを白で初期化\r\n  const whiteColor = new THREE.Color(1, 1, 1);\r\n  for (let i = 0; i < count; i++) {\r\n    instancedMeshHigh.setColorAt(i, whiteColor);\r\n    instancedMeshLow.setColorAt(i, whiteColor);\r\n  }\r\n  instancedMeshHigh.instanceColor.needsUpdate = true;\r\n  instancedMeshLow.instanceColor.needsUpdate = true;\r\n\r\n  // シーンに追加\r\n  scene.add(instancedMeshHigh);\r\n  scene.add(instancedMeshLow);\r\n\r\n  bufferSetHigh = createBufferSet(count);\r\n  bufferSetLow = createBufferSet(count);\r\n  resetBufferSetToHidden(bufferSetHigh);\r\n  resetBufferSetToHidden(bufferSetLow);\r\n  tailPhaseSeeds = createTailPhaseArray(count);\r\n  applyTailPhaseSeeds(bufferSetHigh, tailPhaseSeeds);\r\n  applyTailPhaseSeeds(bufferSetLow, tailPhaseSeeds);\r\n  bufferCursor = 0;\r\n  applyBufferSet(instancedMeshHigh, bufferSetHigh, bufferCursor);\r\n  applyBufferSet(instancedMeshLow, bufferSetLow, bufferCursor);\r\n\r\n  instancedMeshHigh.instanceMatrix.setUsage(THREE.StaticDrawUsage);\r\n  instancedMeshLow.instanceMatrix.setUsage(THREE.StaticDrawUsage);\r\n  instancedMeshHigh.count = count;\r\n  instancedMeshLow.count = count;\r\n\r\n  cachedPositionsView = null;\r\n  cachedOrientationsView = null;\r\n  cachedPositionsCount = 0;\r\n  cachedOrientationsCount = 0;\r\n  cachedPositionsPtr = 0;\r\n  cachedOrientationsPtr = 0;\r\n  cachedVelocitiesView = null;\r\n  cachedVelocitiesCount = 0;\r\n  cachedVelocitiesPtr = 0;\r\n  previousVelocities = null;\r\n  shaderTime = 0;\r\n  ensureTailRuntimeBuffers(count);\r\n\r\n  const predators = getPredatorCount();\r\n  if (ensurePredatorMeshes(predators)) {\r\n    predatorMeshCountCache = predators;\r\n  }\r\n  for (const mesh of predatorMeshes) {\r\n    mesh.visible = false;\r\n  }\r\n\r\n  console.log('InstancedMeshes created with vertex colors enabled');\r\n}\r\n\r\n\r\n\r\nfunction loadBoidModel(callback) {\r\n  const loader = new GLTFLoader();\r\n  const basePath = process.env.BASE_URL || '/'; // publicPath を取得\r\n  const textureLoader = new THREE.TextureLoader();\r\n  let pendingAssets = 3;\r\n  const notifyReady = () => {\r\n    pendingAssets = Math.max(0, pendingAssets - 1);\r\n    if (pendingAssets === 0) {\r\n      callback();\r\n    }\r\n  };\r\n  const texture = textureLoader.load(\r\n    './models/fish.png', // テクスチャのパス\r\n    () => {\r\n      console.log('Texture loaded successfully.');\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the texture:', error);\r\n    }\r\n  );\r\n  const textureLod = textureLoader.load(\r\n    './models/fish_lod.png', // テクスチャのパス\r\n    () => {\r\n      console.log('Texture loaded successfully.');\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the texture:', error);\r\n    }\r\n  );\r\n  texture.flipY = false;\r\n  texture.colorSpace = THREE.SRGBColorSpace; // sRGBカラー空間を使用\r\n  textureLod.flipY = false;\r\n  textureLod.colorSpace = THREE.SRGBColorSpace;\r\n\r\n  const predatorTexture = textureLoader.load(\r\n    './models/fishPredetor.png',\r\n    () => {\r\n      console.log('Predator texture loaded successfully.');\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the predator texture:', error);\r\n    }\r\n  );\r\n  predatorTexture.flipY = false;\r\n  predatorTexture.colorSpace = THREE.SRGBColorSpace;\r\n\r\n  let boidMaterial = new THREE.MeshStandardMaterial({\r\n    color: 0xffffff, // 白色\r\n    roughness: 0.5,\r\n    metalness: 0,\r\n    transparent: false, // 半透明を有効化\r\n    alphaTest: 0.5,    // アルファテストを設定\r\n    map: texture,      // テクスチャを設定\r\n    vertexColors: true, // 通常時は無効\r\n    vertexColor: 0xffffff\r\n  });\r\n\r\n  let boidLodMaterial = new THREE.MeshStandardMaterial({\r\n    color: 0xffffff, // 白色\r\n    roughness: 0.5,\r\n    metalness: 0,\r\n    transparent: false, // 半透明を有効化\r\n    alphaTest: 0.5,    // アルファテストを設定\r\n    map: textureLod,      // テクスチャを設定\r\n    vertexColors: false, // 通常時は無効\r\n    vertexColor: 0xffffff\r\n\r\n  });\r\n\r\n  originalMaterial = boidMaterial;\r\n  originalMaterialLod = boidLodMaterial;\r\n  predatorMaterial = new THREE.MeshStandardMaterial({\r\n    color: 0xffffff,\r\n    roughness: 0.5,\r\n    metalness: 0,\r\n    transparent: false,\r\n    alphaTest: 0.5,\r\n    map: predatorTexture,\r\n    vertexColors: false,\r\n    vertexColor: 0xffffff,\r\n  });\r\n  loader.load(\r\n    `./models/boidModel.glb`, // モデルのパス\r\n    (gltf) => {\r\n      boidModel = gltf.scene;\r\n\r\n      // マテリアルの transparent と alphaTest を変更\r\n      boidModel.traverse((child) => {\r\n        if (child.isMesh) {\r\n          child.material = boidMaterial; // 半透明を有効化\r\n        }\r\n      });\r\n\r\n      notifyReady();\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the model:', error);\r\n      notifyReady();\r\n    }\r\n  );\r\n\r\n  loader.load(\r\n    `./models/boidModel_lod.glb`, // LODモデルのパス\r\n    (gltf) => {\r\n      boidModelLod = gltf.scene;\r\n\r\n      // マテリアルの transparent と alphaTest を変更\r\n      boidModelLod.traverse((child) => {\r\n        if (child.isMesh) {\r\n          child.material = boidLodMaterial; // 半透明を有効化\r\n        }\r\n      });\r\n\r\n      notifyReady();\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the LOD model:', error);\r\n      notifyReady();\r\n    }\r\n  );\r\n\r\n  loader.load(\r\n    `./models/boidPredetorModel.glb`,\r\n    (gltf) => {\r\n      predatorModel = gltf.scene;\r\n      predatorModel.traverse((child) => {\r\n        if (child.isMesh) {\r\n          child.material = predatorMaterial;\r\n          child.castShadow = true;\r\n          child.receiveShadow = true;\r\n        }\r\n      });\r\n      predatorMeshCountCache = -1;\r\n      notifyReady();\r\n    },\r\n    undefined,\r\n    (error) => {\r\n      console.error('An error occurred while loading the predator model:', error);\r\n      notifyReady();\r\n    }\r\n  );\r\n}\r\n\r\nfunction clearUnitVisuals() {\r\n  for (const mesh of unitSpheres) scene.remove(mesh);\r\n  for (const line of unitLines) scene.remove(line);\r\n  unitSpheres = [];\r\n  unitLines = [];\r\n}\r\n\r\n// レイヤ制限付き再帰描画\r\nfunction drawUnitTree(unit, layer = 0) {\r\n  // スフィア: スライダで制御\r\n  if (\r\n    layer >= (maxDepth - unitLayer.value + 1) &&\r\n    (unit.children == null || unit.children.size() === 0 || layer === maxDepth)\r\n  ) {\r\n    let sphere;\r\n    if (unitSpheres.length > 0) {\r\n      sphere = unitSpheres.pop(); // 再利用\r\n      sphere.visible = true;\r\n    } else {\r\n      const geometry = new THREE.SphereGeometry(unit.radius, 16, 16);\r\n      const material = new THREE.MeshBasicMaterial({\r\n        color: new THREE.Color().setHSL(0.1, 1, 0.7 - 0.4 * (layer / maxDepth)),\r\n        wireframe: true,\r\n        opacity: 0.3,\r\n        transparent: true,\r\n      });\r\n      sphere = new THREE.Mesh(geometry, material);\r\n      scene.add(sphere);\r\n    }\r\n    sphere.position.set(unit.center.x, unit.center.y, unit.center.z);\r\n    unitSpheres.push(sphere);\r\n  }\r\n\r\n  // 線: チェックボックスで全て表示、色は深さでグラデ\r\n  if (showUnitLines.value && unit.children && typeof unit.children.size === 'function' && unit.children.size() > 0) {\r\n    for (let i = 0; i < unit.children.size(); i++) {\r\n      const child = unit.children.get(i);\r\n      let line;\r\n      if (unitLines.length > 0) {\r\n        line = unitLines.pop(); // 再利用\r\n        line.visible = true;\r\n      } else {\r\n        const lineGeometry = new THREE.BufferGeometry();\r\n        const lineMaterial = new THREE.LineBasicMaterial({\r\n          color: new THREE.Color().setHSL(0.35, 1, 0.7 - 0.4 * (layer / maxDepth)),\r\n        });\r\n        line = new THREE.Line(lineGeometry, lineMaterial);\r\n        scene.add(line);\r\n      }\r\n      const points = [\r\n        new THREE.Vector3(unit.center.x, unit.center.y, unit.center.z),\r\n        new THREE.Vector3(child.center.x, child.center.y, child.center.z),\r\n      ];\r\n      line.geometry.setFromPoints(points);\r\n      unitLines.push(line);\r\n    }\r\n  }\r\n\r\n  // 再帰\r\n  if (unit.children && typeof unit.children.size === 'function' && unit.children.size() > 0) {\r\n    for (let i = 0; i < unit.children.size(); i++) {\r\n      const child = unit.children.get(i);\r\n      drawUnitTree(child, layer + 1);\r\n    }\r\n  }\r\n}\r\nlet lastTime = performance.now(); // 前回のフレームのタイムスタンプ\r\n\r\nfunction animate() {\r\n  stats?.begin();\r\n\r\n  const currentTime = performance.now();\r\n  const deltaTime = (currentTime - lastTime) / 1000;\r\n  lastTime = currentTime;\r\n\r\n  if (!paused.value) {\r\n    shaderTime += deltaTime;\r\n  }\r\n  updateInstancingMaterialUniforms(shaderTime);\r\n\r\n  const count = stepSimulationAndUpdateState(paused.value ? 0 : deltaTime);\r\n  if (!instancedMeshHigh || !instancedMeshLow || !bufferSetHigh || !bufferSetLow) {\r\n    controls.update();\r\n    (isMobileDevice() ? renderer : composer).render(scene, camera);\r\n    stats?.end();\r\n    animationTimer = setTimeout(animate, FRAME_INTERVAL);\r\n    return;\r\n  }\r\n  if (gpuTimerExt && glContext && !gpuQueryInFlight && !gpuPendingQuery) {\r\n    const query = glContext.createQuery();\r\n    if (query) {\r\n      glContext.beginQuery(gpuTimerExt.TIME_ELAPSED_EXT, query);\r\n      gpuQueryInFlight = query;\r\n    }\r\n  }\r\n  const { positions, orientations, velocities } = getWasmViews(count);\r\n  if ((frameCounter++ & 63) === 0) {\r\n    currentFirstBoidX();\r\n  }\r\n  ensureTailRuntimeBuffers(count);\r\n\r\n  const currentIndex = bufferCursor;\r\n  const nextIndex = (currentIndex + 1) % TRIPLE_BUFFER_SIZE;\r\n  const highPosAttr = bufferSetHigh.pos[currentIndex];\r\n  const highQuatAttr = bufferSetHigh.quat[currentIndex];\r\n  const lowPosAttr = bufferSetLow.pos[currentIndex];\r\n  const lowQuatAttr = bufferSetLow.quat[currentIndex];\r\n  const highTailPhaseAttr = bufferSetHigh.tailPhase[currentIndex];\r\n  const highTailSpeedAttr = bufferSetHigh.tailSpeed[currentIndex];\r\n  const highTailTurnAttr = bufferSetHigh.tailTurn[currentIndex];\r\n  const highTailDriveAttr = bufferSetHigh.tailDrive[currentIndex];\r\n  const lowTailPhaseAttr = bufferSetLow.tailPhase[currentIndex];\r\n  const lowTailSpeedAttr = bufferSetLow.tailSpeed[currentIndex];\r\n  const lowTailTurnAttr = bufferSetLow.tailTurn[currentIndex];\r\n  const lowTailDriveAttr = bufferSetLow.tailDrive[currentIndex];\r\n  const highPosArray = highPosAttr.array;\r\n  const highQuatArray = highQuatAttr.array;\r\n  const lowPosArray = lowPosAttr.array;\r\n  const lowQuatArray = lowQuatAttr.array;\r\n  const highTailSpeedArray = highTailSpeedAttr.array;\r\n  const highTailTurnArray = highTailTurnAttr.array;\r\n  const highTailDriveArray = highTailDriveAttr.array;\r\n  const lowTailSpeedArray = lowTailSpeedAttr.array;\r\n  const lowTailTurnArray = lowTailTurnAttr.array;\r\n  const lowTailDriveArray = lowTailDriveAttr.array;\r\n\r\n  const camPos = camera.position;\r\n  const camX = camPos.x;\r\n  const camY = camPos.y;\r\n  const camZ = camPos.z;\r\n  // 捕食者の個体数と開始インデックスを計算（配列の末尾から捕食者を配置）\r\n  const predatorCount = getPredatorCount();\r\n  const predatorStartIndex = predatorCount > 0 ? Math.max(0, count - predatorCount) : count;\r\n  if (predatorMeshCountCache !== predatorCount) {\r\n    if (ensurePredatorMeshes(predatorCount)) {\r\n      predatorMeshCountCache = predatorCount;\r\n    }\r\n  }\r\n  for (const mesh of predatorMeshes) {\r\n    mesh.visible = false;\r\n  }\r\n\r\n  const hiddenPos = HIDDEN_POSITION;\r\n  const [identityX, identityY, identityZ, identityW] = IDENTITY_QUATERNION;\r\n\r\n  // 各Boidの位置と姿勢を更新\r\n  for (let i = 0; i < count; ++i) {\r\n    const basePos = i * 3;\r\n    const px = positions[basePos];\r\n    const py = positions[basePos + 1];\r\n    const pz = positions[basePos + 2];\r\n    const vx = velocities ? velocities[basePos] : 0;\r\n    const vy = velocities ? velocities[basePos + 1] : 0;\r\n    const vz = velocities ? velocities[basePos + 2] : 0;\r\n    const dx = px - camX;\r\n    const dy = py - camY;\r\n    const dz = pz - camZ;\r\n  const distSq = dx * dx + dy * dy + dz * dz;\r\n  // 3段階LOD: 近距離/中距離/遠距離を距離の平方で判定\r\n  const isNear = distSq < LOD_NEAR_DISTANCE_SQ;\r\n  const isMid = !isNear && distSq < LOD_MID_DISTANCE_SQ;\r\n  const animateTail = isNear || isMid; // 遠距離では尾アニメを停止してGPU負荷削減\r\n\r\n    const baseQuat = i * 4;\r\n    const qx = orientations[baseQuat];\r\n    const qy = orientations[baseQuat + 1];\r\n    const qz = orientations[baseQuat + 2];\r\n    const qw = orientations[baseQuat + 3];\r\n\r\n    // 捕食者は専用メッシュで描画し、インスタンシングからは除外\r\n    const isPredator = i >= predatorStartIndex && predatorCount > 0;\r\n    if (isPredator) {\r\n      const meshIndex = i - predatorStartIndex;\r\n      const predatorMesh = predatorMeshes[meshIndex];\r\n      if (predatorMesh) {\r\n        predatorMesh.visible = true;\r\n        predatorMesh.position.set(px, py, pz);\r\n        predatorMesh.quaternion.set(qx, qy, qz, qw);\r\n      }\r\n\r\n      highPosArray[basePos] = hiddenPos;\r\n      highPosArray[basePos + 1] = hiddenPos;\r\n      highPosArray[basePos + 2] = hiddenPos;\r\n      highQuatArray[baseQuat] = identityX;\r\n      highQuatArray[baseQuat + 1] = identityY;\r\n      highQuatArray[baseQuat + 2] = identityZ;\r\n      highQuatArray[baseQuat + 3] = identityW;\r\n\r\n      lowPosArray[basePos] = hiddenPos;\r\n      lowPosArray[basePos + 1] = hiddenPos;\r\n      lowPosArray[basePos + 2] = hiddenPos;\r\n      lowQuatArray[baseQuat] = identityX;\r\n      lowQuatArray[baseQuat + 1] = identityY;\r\n      lowQuatArray[baseQuat + 2] = identityZ;\r\n      lowQuatArray[baseQuat + 3] = identityW;\r\n      highTailSpeedArray[i] = 0;\r\n      lowTailSpeedArray[i] = 0;\r\n      highTailTurnArray[i] = 0;\r\n      lowTailTurnArray[i] = 0;\r\n      highTailDriveArray[i] = 0;\r\n      lowTailDriveArray[i] = 0;\r\n      if (previousVelocities) {\r\n        previousVelocities[basePos] = 0;\r\n        previousVelocities[basePos + 1] = 0;\r\n        previousVelocities[basePos + 2] = 0;\r\n      }\r\n      continue;\r\n    }\r\n\r\n    // 尾アニメーション用の速度と旋回量を計算\r\n    const speed = Math.hypot(vx, vy, vz);\r\n    const prevVx = previousVelocities ? previousVelocities[basePos] : 0;\r\n    const prevVy = previousVelocities ? previousVelocities[basePos + 1] : 0;\r\n    const prevVz = previousVelocities ? previousVelocities[basePos + 2] : 0;\r\n    const prevLen = Math.hypot(prevVx, prevVy, prevVz);\r\n    let turnAmount = 0;\r\n    if (prevLen > 1e-5 && speed > 1e-5) {\r\n      const crossY = prevVz * vx - prevVx * vz;\r\n      const dot = prevVx * vx + prevVy * vy + prevVz * vz;\r\n      turnAmount = Math.atan2(crossY, dot);\r\n    }\r\n    const tailSpeed = speed;\r\n    const tailTurn = turnAmount;\r\n\r\n    // LOD制御: 近距離ならハイポリ、中距離以降はLODモデル\r\n    if (isNear) {\r\n      highPosArray[basePos] = px;\r\n      highPosArray[basePos + 1] = py;\r\n      highPosArray[basePos + 2] = pz;\r\n      highQuatArray[baseQuat] = qx;\r\n      highQuatArray[baseQuat + 1] = qy;\r\n      highQuatArray[baseQuat + 2] = qz;\r\n      highQuatArray[baseQuat + 3] = qw;\r\n\r\n      lowPosArray[basePos] = hiddenPos;\r\n      lowPosArray[basePos + 1] = hiddenPos;\r\n      lowPosArray[basePos + 2] = hiddenPos;\r\n      lowQuatArray[baseQuat] = identityX;\r\n      lowQuatArray[baseQuat + 1] = identityY;\r\n      lowQuatArray[baseQuat + 2] = identityZ;\r\n      lowQuatArray[baseQuat + 3] = identityW;\r\n    } else {\r\n      lowPosArray[basePos] = px;\r\n      lowPosArray[basePos + 1] = py;\r\n      lowPosArray[basePos + 2] = pz;\r\n      lowQuatArray[baseQuat] = qx;\r\n      lowQuatArray[baseQuat + 1] = qy;\r\n      lowQuatArray[baseQuat + 2] = qz;\r\n      lowQuatArray[baseQuat + 3] = qw;\r\n\r\n      highPosArray[basePos] = hiddenPos;\r\n      highPosArray[basePos + 1] = hiddenPos;\r\n      highPosArray[basePos + 2] = hiddenPos;\r\n      highQuatArray[baseQuat] = identityX;\r\n      highQuatArray[baseQuat + 1] = identityY;\r\n      highQuatArray[baseQuat + 2] = identityZ;\r\n      highQuatArray[baseQuat + 3] = identityW;\r\n    }\r\n\r\n    // 尾アニメのパラメータ設定（遠距離ではdrive=0でシェーダ側で計算をスキップ）\r\n    const tailSpeedValue = animateTail ? tailSpeed : 0;\r\n    const tailTurnValue = animateTail ? tailTurn : 0;\r\n    const driveValue = animateTail ? 1 : 0; // シェーダ側で尾アニメON/OFFを制御\r\n    if (isNear) {\r\n      // 近距離: ハイポリモデルにアニメ適用\r\n      highTailSpeedArray[i] = tailSpeedValue;\r\n      highTailTurnArray[i] = tailTurnValue;\r\n      lowTailSpeedArray[i] = 0;\r\n      lowTailTurnArray[i] = 0;\r\n      highTailDriveArray[i] = driveValue;\r\n      lowTailDriveArray[i] = 0;\r\n    } else {\r\n      // 中距離/遠距離: LODモデルに切替、遠距離ではdriveValue=0で静止\r\n      highTailSpeedArray[i] = 0;\r\n      highTailTurnArray[i] = 0;\r\n      lowTailSpeedArray[i] = tailSpeedValue;\r\n      lowTailTurnArray[i] = tailTurnValue;\r\n      highTailDriveArray[i] = 0;\r\n      lowTailDriveArray[i] = driveValue;\r\n    }\r\n\r\n    if (previousVelocities) {\r\n      previousVelocities[basePos] = vx;\r\n      previousVelocities[basePos + 1] = vy;\r\n      previousVelocities[basePos + 2] = vz;\r\n    }\r\n  }\r\n  // インスタンシングメッシュの表示個体数を設定（捕食者を除く）\r\n  const visibleCount = predatorCount > 0 ? Math.max(0, count - predatorCount) : count;\r\n  instancedMeshHigh.count = visibleCount;\r\n  instancedMeshLow.count = visibleCount;\r\n\r\n  applyBufferSet(instancedMeshHigh, bufferSetHigh, currentIndex);\r\n  applyBufferSet(instancedMeshLow, bufferSetLow, currentIndex);\r\n  // トリプルバッファの更新フラグを立てる\r\n  highPosAttr.needsUpdate = true;\r\n  highQuatAttr.needsUpdate = true;\r\n  lowPosAttr.needsUpdate = true;\r\n  lowQuatAttr.needsUpdate = true;\r\n  highTailSpeedAttr.needsUpdate = true;\r\n  highTailTurnAttr.needsUpdate = true;\r\n  highTailDriveAttr.needsUpdate = true;\r\n  lowTailSpeedAttr.needsUpdate = true;\r\n  lowTailTurnAttr.needsUpdate = true;\r\n  lowTailDriveAttr.needsUpdate = true;\r\n\r\n  bufferCursor = nextIndex;\r\n\r\n  // 頂点カラーの更新（デバッグ用のUnit色分け表示）\r\n  if (showUnitColors.value) {\r\n    const mappingPtrValue = boidUnitMappingPtr();\r\n    const heapI32 = wasmModule.HEAP32.buffer;\r\n    const unitMappings = new Int32Array(heapI32, mappingPtrValue, count * 2);\r\n\r\n    for (let i = 0; i < visibleCount; i++) {\r\n      let unitId = -1;\r\n      for (let j = 0; j < unitMappings.length; j += 2) {\r\n        if (unitMappings[j] === i) {\r\n          unitId = unitMappings[j + 1];\r\n          break;\r\n        }\r\n      }\r\n\r\n      const color = unitId >= 0 ?\r\n        new THREE.Color().setHSL((unitId % 100) / 100, 0.8, 0.6) :\r\n        new THREE.Color(1, 0, 0);\r\n\r\n      instancedMeshHigh.setColorAt(i, color);\r\n      instancedMeshLow.setColorAt(i, color);\r\n    }\r\n    instancedMeshHigh.instanceColor.needsUpdate = true;\r\n    instancedMeshLow.instanceColor.needsUpdate = true;\r\n  } else if (lastShowUnitColors) {\r\n    // Unit色分けOFF: ON→OFFになった時のみ頂点カラーを白にリセット\r\n    const whiteColor = new THREE.Color(1, 1, 1);\r\n    for (let i = 0; i < visibleCount; i++) {\r\n      instancedMeshHigh.setColorAt(i, whiteColor);\r\n      instancedMeshLow.setColorAt(i, whiteColor);\r\n    }\r\n    instancedMeshHigh.instanceColor.needsUpdate = true;\r\n    instancedMeshLow.instanceColor.needsUpdate = true;\r\n    console.log('✓ Reset vertex colors to white (OFF mode)');\r\n  }\r\n\r\n  // 前回の状態を保存\r\n  lastShowUnitColors = showUnitColors.value;// マトリクスの更新\r\n\r\n  controls.update();\r\n\r\n  const renderTarget = isMobileDevice() ? renderer : composer;\r\n  renderTarget.render(scene, camera);\r\n\r\n  if (gpuTimerExt && glContext && gpuQueryInFlight) {\r\n    glContext.endQuery(gpuTimerExt.TIME_ELAPSED_EXT);\r\n    gpuPendingQuery = gpuQueryInFlight;\r\n    gpuQueryInFlight = null;\r\n  }\r\n\r\n  if (gpuTimerExt && glContext && gpuPendingQuery) {\r\n    const available = glContext.getQueryParameter(gpuPendingQuery, glContext.QUERY_RESULT_AVAILABLE);\r\n    const disjoint = glContext.getParameter(gpuTimerExt.GPU_DISJOINT_EXT);\r\n    if (available) {\r\n      if (!disjoint) {\r\n        const nanoseconds = glContext.getQueryParameter(gpuPendingQuery, glContext.QUERY_RESULT);\r\n        lastGpuTimeMs = nanoseconds / 1e6;\r\n        if (!gpuStatsPanel && stats && typeof Stats.Panel === 'function') {\r\n          gpuStatsPanel = stats.addPanel(new Stats.Panel('GPU (ms)', '#ff8', '#221'));\r\n          stats.showPanel(0);\r\n        }\r\n        gpuStatsPanel?.update(lastGpuTimeMs, 33);\r\n      }\r\n      glContext.deleteQuery(gpuPendingQuery);\r\n      gpuPendingQuery = null;\r\n    }\r\n  }\r\n\r\n  stats?.end();\r\n\r\n  animationTimer = setTimeout(animate, FRAME_INTERVAL);\r\n}\r\n\r\nfunction drawTreeStructure(treeData) {\r\n  const drawNode = (node, parentPosition = null) => {\r\n    const position = new THREE.Vector3(\r\n      node.center[0],\r\n      node.center[1],\r\n      node.center[2]\r\n    );\r\n\r\n    if (parentPosition) {\r\n      const geometry = new THREE.BufferGeometry().setFromPoints([\r\n        parentPosition,\r\n        position,\r\n      ]);\r\n      const material = new THREE.LineBasicMaterial({ color: 0xffffff });\r\n      const line = new THREE.Line(geometry, material);\r\n      scene.add(line);\r\n    }\r\n\r\n    if (node.children) {\r\n      node.children.forEach((child) => drawNode(child, position));\r\n    }\r\n  };\r\n\r\n  treeData.forEach((rootNode) => drawNode(rootNode));\r\n}\r\nfunction startSimulation() {\r\n  // WebAssembly モジュール用に SpeciesParams を初期化\r\n  const vector = new wasmModule.VectorSpeciesParams();\r\n  settings.forEach((s) => {\r\n    const tau = typeof s.tau === 'number' ? s.tau : 0.0;\r\n    vector.push_back({\r\n      species: s.species || \"default\",\r\n      count: s.count || 0,\r\n      cohesion: s.cohesion || 0.0,\r\n      separation: s.separation || 0.0,\r\n      alignment: s.alignment || 0.0,\r\n      maxSpeed: s.maxSpeed || 1.0,\r\n      minSpeed: s.minSpeed || 0.0, // デフォルト値を補完\r\n      maxTurnAngle: s.maxTurnAngle || 0.0,\r\n      separationRange: s.separationRange || 0.0,\r\n      alignmentRange: s.alignmentRange || 0.0,\r\n      cohesionRange: s.cohesionRange || 0.0,\r\n      maxNeighbors: s.maxNeighbors || 0,\r\n      lambda: s.lambda || 0.0,\r\n      horizontalTorque: s.horizontalTorque || 0.0,\r\n      velocityEpsilon: s.velocityEpsilon || 0.0,\r\n      torqueStrength: s.torqueStrength || 0.0,\r\n      tau,\r\n      isPredator: s.isPredator || false,\r\n    });\r\n  });\r\n  // callInitBoids に渡す（この vector は C++ 側で vector<SpeciesParams> になる）\r\n  wasmModule.callInitBoids(vector, 1, 6, 0.25);\r\n  build(16, 0);\r\n  const total = getTotalBoidCount();\r\n  if (setFlockSize) {\r\n    setFlockSize(total, 40, 0.25);\r\n  }\r\n  cachedTotalBoidCount = total;\r\n  initInstancedBoids(total);\r\n  animate();\r\n}\r\n\r\nonMounted(() => {\r\n  initThreeJS();\r\n  loadBoidModel(() => {\r\n    console.log('Boid model loaded successfully.');\r\n    // stats.jsの初期化とDOM追加\r\n    stats = new Stats();\r\n    stats.showPanel(0);\r\n    document.body.appendChild(stats.dom);\r\n    // 右上に移動させる\r\n    stats.dom.style.position = 'fixed';\r\n    stats.dom.style.right = '0px';\r\n    stats.dom.style.top = '0px';\r\n    stats.dom.style.left = 'auto';\r\n    stats.dom.style.zIndex = 1000;\r\n    if (gpuTimerExt && typeof Stats.Panel === 'function' && !gpuStatsPanel) {\r\n      gpuStatsPanel = stats.addPanel(new Stats.Panel('GPU (ms)', '#ff8', '#221'));\r\n      stats.showPanel(0);\r\n    }\r\n\r\n    startSimulation();\r\n  });\r\n\r\n\r\n  window.addEventListener('keydown', handleKeydown);\r\n\r\n});\r\n\r\nfunction isMobileDevice() {\r\n  return /Mobi|Android/i.test(navigator.userAgent);\r\n}\r\n// settingsの変更をwasmModuleに反映\r\nwatch(\r\n  settings,\r\n  () => {\r\n    if (wasmModule && wasmModule.setGlobalSpeciesParamsFromJS) {\r\n      const vector = new wasmModule.VectorSpeciesParams();\r\n\r\n      settings.forEach((s) => {\r\n        const tau = typeof s.tau === 'number' ? s.tau : 0.0;\r\n        vector.push_back({\r\n          species: s.species || \"default\",\r\n          count: s.count || 0,\r\n          cohesion: s.cohesion || 0.0,\r\n          separation: s.separation || 0.0,\r\n          alignment: s.alignment || 0.0,\r\n          maxSpeed: s.maxSpeed || 1.0,\r\n          minSpeed: s.minSpeed || 0.0, // デフォルト値を補完\r\n          maxTurnAngle: s.maxTurnAngle || 0.0,\r\n          separationRange: s.separationRange || 0.0,\r\n          alignmentRange: s.alignmentRange || 0.0,\r\n          cohesionRange: s.cohesionRange || 0.0,\r\n          maxNeighbors: s.maxNeighbors || 0,\r\n          lambda: s.lambda || 0.0,\r\n          horizontalTorque: s.horizontalTorque || 0.0,\r\n          velocityEpsilon: s.velocityEpsilon || 0.0,\r\n          torqueStrength: s.torqueStrength || 0.0,\r\n          tau,\r\n          isPredator: s.isPredator || false,\r\n        });\r\n      });\r\n      wasmModule.setGlobalSpeciesParamsFromJS(vector, 1);\r\n      try {\r\n        const plainSettings = settings.map((s) => ({ ...toRaw(s) }));\r\n        localStorage.setItem('boids_settings', JSON.stringify(plainSettings));\r\n      } catch (error) {\r\n        console.error('Failed to save settings to localStorage:', error);\r\n      }\r\n    }\r\n\r\n    const total = getTotalBoidCount();\r\n    if (total !== cachedTotalBoidCount) {\r\n      cachedTotalBoidCount = total;\r\n      if (setFlockSize) {\r\n        setFlockSize(total, 40, 0.25);\r\n      }\r\n      initInstancedBoids(total);\r\n    }\r\n\r\n    const predators = getPredatorCount();\r\n    if (ensurePredatorMeshes(predators)) {\r\n      predatorMeshCountCache = predators;\r\n    }\r\n    for (const mesh of predatorMeshes) mesh.visible = false;\r\n  },\r\n  { deep: true } // 深い変更も監視\r\n);\r\n\r\nfunction resetSettings() {\r\n  settings.length = 0;\r\n  DEFAULT_SETTINGS.forEach(s => settings.push({ ...s }));\r\n}\r\n\r\n// Unit可視化の変更を監視\r\nwatch(showUnits, (newValue) => {\r\n  console.log('showUnits changed to:', newValue);\r\n  if (!newValue) {\r\n    // Unit可視化をオフにした場合、既存の可視化要素をクリア\r\n    clearUnitVisuals();\r\n  }\r\n});\r\n\r\n// Unit表示モードの変更を監視\r\nwatch([showUnitSpheres, showUnitLines], ([newSpheres, newLines]) => {\r\n  console.log('Unit display mode changed - Spheres:', newSpheres, 'Lines:', newLines);\r\n  // 表示モードが変更されたら既存の表示をクリアして再描画\r\n  if (showUnits.value) {\r\n    clearUnitVisuals();\r\n  }\r\n});\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Arial, sans-serif;\r\n  padding: 0;\r\n  margin: 0;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.settings {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.info {\r\n  margin-top: 20px;\r\n}\r\n\r\n.three-container {\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 0;\r\n  display: block;\r\n  border: none;\r\n  overflow: hidden;\r\n  background: #0a1e3a;\r\n}\r\n\r\n.ui-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  color: #fff;\r\n  z-index: 2;\r\n  pointer-events: none;\r\n}\r\n\r\n.ui-overlay * {\r\n  pointer-events: auto;\r\n}\r\n</style>","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=366ab07e&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from 'vue';\r\nimport App from './App.vue';\r\n\r\n// COI対応によりSharedArrayBuffer等を利用する関係で、WASMファイルは固定パスにコピーしている\r\nconst publicBase = (process.env.BASE_URL || '/').replace(/\\/*$/, '/');\r\nconst wasmPublicBase = `${publicBase}static/js`;\r\nconst wasmJsUrl = `${wasmPublicBase}/wasm_boids.js`;\r\nconst wasmBinaryUrl = `${wasmPublicBase}/wasm_boids.wasm`;\r\n\r\nimport(/* webpackIgnore: true */ wasmJsUrl)\r\n    .then((BoidsModule) => {\r\n        if (!BoidsModule?.default) {\r\n            throw new Error('WASM module loader not found at: ' + wasmJsUrl);\r\n        }\r\n            return BoidsModule.default({\r\n                locateFile: (path) => (path.endsWith('.wasm') ? wasmBinaryUrl : path),\r\n            });\r\n    })\r\n    .then((Module) => {\r\n        // デバッグ確認用にグローバルへ公開しつつ初期化ログを出力\r\n        if (typeof window !== 'undefined') {\r\n            window.wasmModule = Module;\r\n        }\r\n        console.log('Wasm module initialized:', Module);\r\n        const app = createApp(App);\r\n        app.provide('wasmModule', Module);\r\n        app.mount('#app');\r\n    })\r\n    .catch((error) => {\r\n        console.error('Failed to initialise WASM module:', error);\r\n    });","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t57: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkwasm_boids\"] = self[\"webpackChunkwasm_boids\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], () => (__webpack_require__(68)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["editingCount","editingCohesion","editingCohesionRange","editingSeparation","editingSeparationRange","editingAlignment","editingAlignmentRange","editingMaxSpeed","editingMaxTurnAngle","editingMaxNeighbors","editingHorizontalTorque","editingTorqueStrength","editingLambda","editingTau","countInput","cohesionInput","cohesionRangeInput","separationInput","separationRangeInput","alignmentInput","alignmentRangeInput","maxSpeedInput","maxTurnAngleInput","maxNeighborsInput","horizontalTorqueInput","torqueStrengthInput","lambdaInput","tauInput","async","startEditCount","value","focus","select","startEditCohesion","startEditCohesionRange","startEditSeparation","startEditSeparationRange","startEditAlignment","startEditAlignmentRange","startEditMaxSpeed","startEditMaxTurnAngle","startEditMaxNeighbors","startEditHorizontalTorque","startEditTorqueStrength","startEditLambda","startEditTau","stopEditCount","stopEditCohesion","stopEditCohesionRange","stopEditSeparation","stopEditSeparationRange","stopEditAlignment","stopEditAlignmentRange","stopEditMaxSpeed","stopEditMaxTurnAngle","stopEditMaxNeighbors","stopEditHorizontalTorque","stopEditTorqueStrength","stopEditLambda","stopEditTau","__exports__","FRAME_INTERVAL","TRIPLE_BUFFER_SIZE","HIDDEN_POSITION","LOD_NEAR_DISTANCE_SQ","LOD_MID_DISTANCE_SQ","wasmModule","console","error","stepSimulation","cwrap","build","setFlockSize","boidUnitMappingPtr","currentFirstBoidX","mobileBoidCount","isMobileDevice","DEFAULT_SETTINGS","species","count","cohesion","cohesionRange","separation","separationRange","alignment","alignmentRange","maxSpeed","maxTurnAngle","maxNeighbors","horizontalTorque","torqueStrength","lambda","tau","minSpeed","isPredator","loadSettings","saved","localStorage","getItem","parsed","JSON","parse","Array","isArray","settings","cachedTotalBoidCount","getTotalBoidCount","totalBoids","threeContainer","scene","camera","renderer","controls","composer","paused","showUnits","showUnitSpheres","showUnitLines","showUnitColors","unitLayer","unitSpheres","unitLines","stats","gpuStatsPanel","glContext","gpuTimerExt","gpuQueryInFlight","gpuPendingQuery","lastGpuTimeMs","latestStatePtr","latestStateHeaderPtr","latestStateHeaderView","latestPositionsPtr","latestVelocitiesPtr","latestOrientationsPtr","latestBoidCountFromWasm","frameCounter","animationTimer","handleKeydown","e","code","initThreeJS","width","window","innerWidth","height","innerHeight","background","OCEAN_COLORS","DEEP_BLUE","fog","toHex","FOG","createOceanSphere","position","set","lookAt","antialias","depth","setPixelRatio","devicePixelRatio","setSize","shadowMap","enabled","type","getContext","WebGL2RenderingContext","getExtension","warn","appendChild","domElement","aspect","updateProjectionMatrix","OrbitControls","enableDamping","dampingFactor","groundGeo","groundMat","createFadeOutGroundMaterial","depthTest","ground","rotation","x","Math","PI","y","receiveShadow","add","ambientLight","AMBIENT_LIGHT","dirLight","SUN_LIGHT","castShadow","shadow","left","right","top","bottom","near","far","mapSize","bias","normalBias","EffectComposer","renderPass","RenderPass","addPass","ssaoPass","SSAOPass","kernelRadius","minDistance","maxDistance","bloomPass","UnrealBloomPass","addEventListener","onWindowResize","instancedMeshHigh","instancedMeshLow","instancingMaterials","Set","IDENTITY_QUATERNION","STREAM_USAGE","tailAnimation","uniforms","uTailTime","uTailAmplitude","uTailFrequency","uTailPhaseStride","uTailTurnStrength","uTailSpeedScale","uTailRight","uTailForward","uTailUp","uTailEnable","SKY_HIGHLIGHT","SKY_BLUE","SEAFLOOR","SIDE_LIGHT1","SIDE_LIGHT2","BOTTOM_LIGHT","colorStr","parseInt","replace","canvas","document","createElement","context","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","texture","colorSpace","generateMipmaps","minFilter","magFilter","sphereGeo","sphereMat","map","side","oceanSphere","textureLoader","alphaMap","load","wrapS","wrapT","material","color","transparent","depthWrite","roughness","metalness","updateInstancingMaterialUniforms","time","bufferCursor","bufferSetHigh","bufferSetLow","cachedHeapBuffer","cachedPositionsPtr","cachedOrientationsPtr","cachedPositionsView","cachedOrientationsView","cachedPositionsCount","cachedOrientationsCount","shaderTime","cachedVelocitiesPtr","cachedVelocitiesView","cachedVelocitiesCount","tailPhaseSeeds","previousVelocities","createAttributeSet","itemSize","length","attributes","i","attr","Float32Array","setUsage","push","createBufferSet","pos","quat","tailPhase","tailSpeed","tailTurn","tailDrive","resetBufferSetToHidden","bufferSet","array","fill","applyBufferSet","mesh","index","geometry","setAttribute","patchQuaternionInstancing","userData","quaternionInstancingPatched","onBeforeCompile","shader","Object","entries","forEach","key","uniform","vertexShader","needsUpdate","createInstancedDepthMaterial","sourceMaterial","depthMaterial","depthPacking","alphaTest","createInstancedDistanceMaterial","distanceMaterial","stepSimulationAndUpdateState","deltaTime","statePtr","heapU8Buffer","HEAPU8","buffer","DataView","getUint32","getInt32","getWasmViews","heapBuffer","HEAPF32","posPointer","oriPointer","velPointer","positions","orientations","velocities","boidGeometryHigh","boidGeometryLow","scale","boidModel","boidModelLod","originalMaterial","originalMaterialLod","predatorModel","predatorMaterial","predatorMeshes","predatorMeshCountCache","lastShowUnitColors","getPredatorCount","reduce","sum","s","ensurePredatorMeshes","pop","remove","clone","traverse","child","isMesh","visible","createTailPhaseArray","random","applyTailPhaseSeeds","seeds","ensureTailRuntimeBuffers","ensureBodyCoordAttribute","getAttribute","minX","Infinity","minY","minZ","maxX","maxY","maxZ","ix","z","rangeX","rangeY","rangeZ","axis","min","range","bodyCoord","denom","initInstancedBoids","children","delete","clear","highMaterial","vertexColors","lowMaterial","highGeometry","lowGeometry","frustumCulled","customDepthMaterial","customDistanceMaterial","whiteColor","setColorAt","instanceColor","instanceMatrix","predators","log","loadBoidModel","callback","loader","GLTFLoader","pendingAssets","notifyReady","max","undefined","textureLod","flipY","predatorTexture","boidMaterial","vertexColor","boidLodMaterial","gltf","clearUnitVisuals","line","lastTime","performance","now","animate","begin","currentTime","update","render","end","setTimeout","query","createQuery","beginQuery","TIME_ELAPSED_EXT","currentIndex","nextIndex","highPosAttr","highQuatAttr","lowPosAttr","lowQuatAttr","highTailSpeedAttr","highTailTurnAttr","highTailDriveAttr","lowTailSpeedAttr","lowTailTurnAttr","lowTailDriveAttr","highPosArray","highQuatArray","lowPosArray","lowQuatArray","highTailSpeedArray","highTailTurnArray","highTailDriveArray","lowTailSpeedArray","lowTailTurnArray","lowTailDriveArray","camPos","camX","camY","camZ","predatorCount","predatorStartIndex","hiddenPos","identityX","identityY","identityZ","identityW","basePos","px","py","pz","vx","vy","vz","dx","dy","dz","distSq","isNear","isMid","animateTail","baseQuat","qx","qy","qz","qw","meshIndex","predatorMesh","quaternion","speed","hypot","prevVx","prevVy","prevVz","prevLen","turnAmount","crossY","dot","atan2","tailSpeedValue","tailTurnValue","driveValue","visibleCount","mappingPtrValue","heapI32","HEAP32","unitMappings","Int32Array","unitId","j","setHSL","renderTarget","endQuery","available","getQueryParameter","QUERY_RESULT_AVAILABLE","disjoint","getParameter","GPU_DISJOINT_EXT","nanoseconds","QUERY_RESULT","Panel","addPanel","showPanel","deleteQuery","startSimulation","vector","VectorSpeciesParams","push_back","velocityEpsilon","callInitBoids","total","test","navigator","userAgent","resetSettings","body","dom","style","zIndex","setGlobalSpeciesParamsFromJS","plainSettings","setItem","stringify","deep","newValue","newSpheres","newLines","publicBase","wasmPublicBase","wasmJsUrl","wasmBinaryUrl","import","then","BoidsModule","default","Error","locateFile","path","endsWith","Module","app","App","provide","mount","catch","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","fulfilled","keys","every","splice","r","d","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}