{
    "name": "wasm-boids",
    "version": "1.0.0",
    "description": "Boids simulation using WebAssembly and Vue.js",
    "main": "index.js",
    "scripts": {
        "build-wasm:dev": " emcc -s WASM=1 -s EXPORTED_FUNCTIONS=_main,_setSpeciesParams,_setFlockSize,_update,_build,_initBoids,_posPtr,_velPtr,_boidCount,_malloc,_free src/wasm/main.cpp src/wasm/boid_factory.cpp src/wasm/entry.cpp src/wasm/boid_unit.cpp src/wasm/boids_tree.cpp src/wasm/wasm_bindings.cpp -I D:/GitHub/vcpkg/installed/x64-windows/include -o src/wasm/build/wasm_boids.js -s MODULARIZE=1 -s EXPORT_NAME=createBoidsModule -s ENVIRONMENT=web,worker -s ALLOW_MEMORY_GROWTH=1 -O0 -g -gsource-map --profiling-funcs --source-map-base=/static/js/   -s ASSERTIONS=2  -s EXPORTED_RUNTIME_METHODS=ccall,cwrap,HEAPF32 --bind -sSTACK_OVERFLOW_CHECK=2",
        "build-wasm:prod": "emcc -s WASM=1 -s EXPORTED_FUNCTIONS=_main,_setSpeciesParams,_setFlockSize,_update,_build,_initBoids,_posPtr,_velPtr,_boidCount,_malloc,_free src/wasm/main.cpp src/wasm/boid_factory.cpp src/wasm/entry.cpp src/wasm/boid_unit.cpp src/wasm/boids_tree.cpp src/wasm/wasm_bindings.cpp -o src/wasm/build/wasm_boids.js -I D:/GitHub/vcpkg/installed/x64-windows/include -s MODULARIZE=1 -s EXPORT_NAME=createBoidsModule -s ENVIRONMENT=web,worker -s ALLOW_MEMORY_GROWTH=1 -O3 -s EXPORT_ES6=1 -s EXPORTED_RUNTIME_METHODS=ccall,cwrap,HEAPF32 -s --bind",
        "serve": "concurrently \"nodemon --watch src/wasm --ext cpp,h --exec \\\"npm run build-wasm:dev\\\"\" \"wait-on src/wasm/build/wasm_boids.js && vue-cli-service serve\"",
        "build": "npm run build-wasm:dev && vue-cli-service build",
        "deploy": "npm run build && gh-pages -d dist"
    },
    "dependencies": {
        "three": "^0.176.0",
        "vue": "^3.3.0"
    },
    "devDependencies": {
        "@vue/cli-service": "^5.0.0",
        "copy-webpack-plugin": "^13.0.0",
        "gh-pages": "^6.3.0",
        "nodemon": "^3.1.10",
        "npm-run-all": "^4.1.5",
        "wait-on": "^8.0.3"
    }
}